[{"path":"data/DavinciBot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"todo/eat/1","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"todo/go school/0","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"event/have dinner/now/later/0","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"todo/homework/1","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tayponghee":4}},{"path":"src/main/java/DavinciBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":" * DavinciBot is a simple bot that allows the user to manage a to-do list.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":" * The bot echoes commands entered by the user, adds tasks to the list,","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":" * marks tasks as done, and unmarks tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"public class DavinciBot {","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public static final int SPLIT_INTO_TWO_PARTS \u003d 2;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    private static final String DATA_FILE_PATH \u003d \"C:\\\\cs2113 individual project\\\\ip\\\\data\\\\DavinciBot.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public static Task[] taskArray \u003d new Task[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"     * Selects the icon corresponding to the type of task inputted by the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"    private static void selectIcon(Task[] taskArray) {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"        for (int i \u003d 0; i \u003c taskArray.length; i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"            String taskType;","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"            if (taskArray[i] instanceof Deadline) {","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"                taskType \u003d \"[D]\";","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"            } else if (taskArray[i] instanceof Todo) {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"                taskType \u003d \"[T]\";","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"                taskType \u003d \"[E]\";","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"            System.out.println((i + 1) + \". \" + taskType +","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"                    \" [\" + taskArray[i].getStatusIcon() + \"] \" +","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"                    taskArray[i].getDescription());","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"     * Displays the tasks in the user\u0027s to-do list.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"    private static void displayTaskList(Task[] taskArray) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"        if (taskArray.length \u003d\u003d 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"No tasks entered yet.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"            selectIcon(taskArray);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"     * Marks a specified task as completed.","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"     * @param userInput User input specifying the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"    private static void completeTask(String userInput, Task[] taskArray) {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"            checkIfTaskCanBeCompleted(taskArray, parts);","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: Invalid task index format.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"tayponghee"},"content":"    private static void checkIfTaskCanBeCompleted(Task[] taskArray, String[] parts) throws DavinciException {","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskArray.length) {","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"tayponghee"},"content":"                taskArray[taskIndex].markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"tayponghee"},"content":"                System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"Nice job! I\u0027ve marked this task as done :D\");","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"[\" + taskArray[taskIndex].getStatusIcon() + \"] \" +","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"tayponghee"},"content":"                        taskArray[taskIndex].getDescription());","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"tayponghee"},"content":"                System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tayponghee"},"content":"                writeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Invalid task index.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Please specify the task index to complete.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"tayponghee"},"content":"     * Marks a specified task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"tayponghee"},"content":"     * @param userInput User input specifying the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"tayponghee"},"content":"    private static void unmarkTask(String userInput, Task[] taskArray) {","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"tayponghee"},"content":"            checkIfTaskCanBeUnmarked(taskArray, parts);","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: Invalid task index format.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"tayponghee"},"content":"    private static void checkIfTaskCanBeUnmarked(Task[] taskArray, String[] parts) throws DavinciException {","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskArray.length) {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"tayponghee"},"content":"                taskArray[taskIndex].markAsNotDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"tayponghee"},"content":"                System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done, but stop being lazy!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"[\" + taskArray[taskIndex].getStatusIcon() + \"] \" +","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"tayponghee"},"content":"                        taskArray[taskIndex].getDescription());","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"tayponghee"},"content":"                System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"tayponghee"},"content":"                writeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Invalid task index.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Please specify the task index to unmark.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"tayponghee"},"content":"     * Adds an event task to the list, handling the specified description format.","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"tayponghee"},"content":"     * @return Updated array of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If the event format is invalid.","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"tayponghee"},"content":"    private static Task[] executeEventTask(Task[] taskArray, String description) throws DavinciException {","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"tayponghee"},"content":"        String[] eventParts \u003d description.split(\"/from\", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"tayponghee"},"content":"        if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"tayponghee"},"content":"            String[] eventTimeParts \u003d eventParts[1].split(\"/to\", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"tayponghee"},"content":"            if (eventTimeParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"tayponghee"},"content":"                taskArray \u003d Arrays.copyOf(taskArray, taskArray.length + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"tayponghee"},"content":"                taskArray[taskArray.length - 1] \u003d new Event(eventParts[0].trim(), eventTimeParts[0].trim(), eventTimeParts[1].trim());","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"tayponghee"},"content":"                echoTask(taskArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Come on man. Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Whatcha\u0027 doing bruh, listen. Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"tayponghee"},"content":"        return taskArray;","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"tayponghee"},"content":"     * Adds a deadline task to the list, handling the specified description format.","lastModifiedDate":"2024-02-11"},{"lineNumber":165,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":166,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"tayponghee"},"content":"     * @return Updated array of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If the deadline format is invalid.","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"tayponghee"},"content":"    private static Task[] executeDeadlineTask(Task[] taskArray, String description) throws DavinciException {","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"tayponghee"},"content":"        String[] deadlineParts \u003d description.split(\"/by\", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"tayponghee"},"content":"        if (deadlineParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"tayponghee"},"content":"            taskArray \u003d Arrays.copyOf(taskArray, taskArray.length + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"tayponghee"},"content":"            taskArray[taskArray.length - 1] \u003d new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim());","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"tayponghee"},"content":"            echoTask(taskArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Crappy formatting. Please use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"tayponghee"},"content":"        return taskArray;","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"tayponghee"},"content":"     * Adds a todo task to the list, handling the specified description format.","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"tayponghee"},"content":"     * @return Updated array of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":189,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"tayponghee"},"content":"    private static Task[] executeTodoTask(Task[] taskArray, String description) {","lastModifiedDate":"2024-02-11"},{"lineNumber":191,"author":{"gitId":"tayponghee"},"content":"        taskArray \u003d Arrays.copyOf(taskArray, taskArray.length + 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":192,"author":{"gitId":"tayponghee"},"content":"        taskArray[taskArray.length - 1] \u003d new Todo(description);","lastModifiedDate":"2024-02-11"},{"lineNumber":193,"author":{"gitId":"tayponghee"},"content":"        echoTask(taskArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":194,"author":{"gitId":"tayponghee"},"content":"        return taskArray;","lastModifiedDate":"2024-02-11"},{"lineNumber":195,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"tayponghee"},"content":"     * Adds a task to the list in a sequential order, and handles the 3 types of commands,","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"tayponghee"},"content":"     * todo, deadline, and event.","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"tayponghee"},"content":"     * @param userInput User input specifying the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"tayponghee"},"content":"    private static Task[] getTasks(String userInput, Task[] taskArray) {","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":206,"author":{"gitId":"tayponghee"},"content":"            Scanner taskScanner \u003d new Scanner(userInput);","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"tayponghee"},"content":"            String taskType \u003d taskScanner.next().toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":209,"author":{"gitId":"tayponghee"},"content":"            if (!taskScanner.hasNext()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":210,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Come on man, specify the \" + taskType + \" task.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":211,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":212,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":213,"author":{"gitId":"tayponghee"},"content":"            String description \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"tayponghee"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"tayponghee"},"content":"            case TODO:","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"tayponghee"},"content":"                taskArray \u003d executeTodoTask(taskArray, description);","lastModifiedDate":"2024-02-11"},{"lineNumber":217,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":218,"author":{"gitId":"tayponghee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"tayponghee"},"content":"                taskArray \u003d executeDeadlineTask(taskArray, description);","lastModifiedDate":"2024-02-11"},{"lineNumber":220,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"tayponghee"},"content":"            case EVENT:","lastModifiedDate":"2024-02-20"},{"lineNumber":222,"author":{"gitId":"tayponghee"},"content":"                taskArray \u003d executeEventTask(taskArray, description);","lastModifiedDate":"2024-02-11"},{"lineNumber":223,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"tayponghee"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Unknown task type. Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":226,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":227,"author":{"gitId":"tayponghee"},"content":"            return taskArray;","lastModifiedDate":"2024-02-04"},{"lineNumber":228,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":229,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":230,"author":{"gitId":"tayponghee"},"content":"            return taskArray;","lastModifiedDate":"2024-02-11"},{"lineNumber":231,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":232,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":233,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":234,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":235,"author":{"gitId":"tayponghee"},"content":"     * Prints and echos back the newly added task.","lastModifiedDate":"2024-02-04"},{"lineNumber":236,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":237,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":238,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":239,"author":{"gitId":"tayponghee"},"content":"    private static void echoTask(Task[] taskArray) {","lastModifiedDate":"2024-02-04"},{"lineNumber":240,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":241,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":242,"author":{"gitId":"tayponghee"},"content":"        System.out.println(taskArray[taskArray.length - 1].toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":243,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Now you have \" + taskArray.length + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":244,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":245,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":246,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":247,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":248,"author":{"gitId":"tayponghee"},"content":"     * Deletes a specified task from the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":249,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":250,"author":{"gitId":"tayponghee"},"content":"     * @param userInput User input specifying the task to delete.","lastModifiedDate":"2024-02-17"},{"lineNumber":251,"author":{"gitId":"tayponghee"},"content":"     * @param taskArray Array of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":252,"author":{"gitId":"tayponghee"},"content":"     * @return Updated array of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":253,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":254,"author":{"gitId":"tayponghee"},"content":"    private static Task[] deleteTask(String userInput, Task[] taskArray) {","lastModifiedDate":"2024-02-17"},{"lineNumber":255,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":256,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-17"},{"lineNumber":257,"author":{"gitId":"tayponghee"},"content":"            return ableToDelete(taskArray, parts);","lastModifiedDate":"2024-02-20"},{"lineNumber":258,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":259,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":260,"author":{"gitId":"tayponghee"},"content":"            return taskArray;","lastModifiedDate":"2024-02-20"},{"lineNumber":261,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":262,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: Invalid task index format.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":263,"author":{"gitId":"tayponghee"},"content":"            return taskArray;","lastModifiedDate":"2024-02-20"},{"lineNumber":264,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":265,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":266,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":267,"author":{"gitId":"tayponghee"},"content":"    private static Task[] ableToDelete(Task[] taskArray, String[] parts) throws DavinciException {","lastModifiedDate":"2024-02-20"},{"lineNumber":268,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-17"},{"lineNumber":269,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":270,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskArray.length) {","lastModifiedDate":"2024-02-17"},{"lineNumber":271,"author":{"gitId":"tayponghee"},"content":"                writeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":272,"author":{"gitId":"tayponghee"},"content":"                return successfulDeletion(taskArray, taskIndex);","lastModifiedDate":"2024-02-17"},{"lineNumber":273,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":274,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Invalid task index.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":275,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":276,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":277,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Please specify the task index to delete.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":278,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":279,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":280,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":281,"author":{"gitId":"tayponghee"},"content":"    private static Task[] successfulDeletion(Task[] taskArray, int taskIndex) {","lastModifiedDate":"2024-02-17"},{"lineNumber":282,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-17"},{"lineNumber":283,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":284,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"  \" + taskArray[taskIndex].toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":285,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Now you have \" + (taskArray.length - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":286,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-17"},{"lineNumber":287,"author":{"gitId":"tayponghee"},"content":"        Task[] newArray \u003d new Task[taskArray.length - 1];","lastModifiedDate":"2024-02-17"},{"lineNumber":288,"author":{"gitId":"tayponghee"},"content":"        System.arraycopy(taskArray, 0, newArray, 0, taskIndex);","lastModifiedDate":"2024-02-17"},{"lineNumber":289,"author":{"gitId":"tayponghee"},"content":"        System.arraycopy(taskArray, taskIndex + 1, newArray, taskIndex, taskArray.length - taskIndex - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":290,"author":{"gitId":"tayponghee"},"content":"        return newArray;","lastModifiedDate":"2024-02-17"},{"lineNumber":291,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":292,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":293,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":294,"author":{"gitId":"tayponghee"},"content":"     * Prints the starting message.","lastModifiedDate":"2024-02-04"},{"lineNumber":295,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":296,"author":{"gitId":"tayponghee"},"content":"    private static void printStartingMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":297,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":298,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Sup! I\u0027m DavinciBot! I was the smartest man alive, but now I am just a list maker.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":299,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Enter commands, and I will echo them back to you, as well as add them to your list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":300,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"If there were things in your list that you previously had,\" +","lastModifiedDate":"2024-02-20"},{"lineNumber":301,"author":{"gitId":"tayponghee"},"content":"                \" I will show what you have told me previously.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":302,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027bye\u0027 to end the conversation.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":303,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027list\u0027 to see your to-do list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":304,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027mark\u0027 to mark a task as done.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":305,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027unmark\u0027 to mark a task as not done.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":306,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027todo \u003cwork\u003e\u0027 to add a task to the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":307,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027deadline \u003cdescription\u003e /by \u003cdeadline\u003e\u0027 to add a task with a deadline to the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":308,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027 to add an event to the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":309,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027delete \u003cindex\u003e\u0027 to delete a task from your list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":310,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"See ya bucko!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":311,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":312,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":313,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":314,"author":{"gitId":"tayponghee"},"content":"     * Reads in the user input and returns a command that corresponds to the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":315,"author":{"gitId":"tayponghee"},"content":"     * Warns the user if the input is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":316,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":317,"author":{"gitId":"tayponghee"},"content":"     * @param scanner Reads in the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":318,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":319,"author":{"gitId":"tayponghee"},"content":"    private static void userCommand(Scanner scanner){","lastModifiedDate":"2024-02-20"},{"lineNumber":320,"author":{"gitId":"tayponghee"},"content":"        while (true) {","lastModifiedDate":"2024-01-27"},{"lineNumber":321,"author":{"gitId":"tayponghee"},"content":"            System.out.print(\"What do you want me to do? \");","lastModifiedDate":"2024-02-11"},{"lineNumber":322,"author":{"gitId":"tayponghee"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":323,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":324,"author":{"gitId":"tayponghee"},"content":"            if (userInput.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":325,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"... are you mute?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":326,"author":{"gitId":"tayponghee"},"content":"                continue;","lastModifiedDate":"2024-01-27"},{"lineNumber":327,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":328,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":329,"author":{"gitId":"tayponghee"},"content":"            if (userInput.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":330,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"Goodbye... It may be a mere few seconds for you but an eternity for me.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":331,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":332,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.equalsIgnoreCase(LIST)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":333,"author":{"gitId":"tayponghee"},"content":"                displayTaskList(taskArray);","lastModifiedDate":"2024-01-27"},{"lineNumber":334,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.toLowerCase().startsWith(MARK)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":335,"author":{"gitId":"tayponghee"},"content":"                completeTask(userInput, taskArray);","lastModifiedDate":"2024-01-27"},{"lineNumber":336,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.toLowerCase().startsWith(UNMARK)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":337,"author":{"gitId":"tayponghee"},"content":"                unmarkTask(userInput, taskArray);","lastModifiedDate":"2024-01-27"},{"lineNumber":338,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.toLowerCase().startsWith(DELETE)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":339,"author":{"gitId":"tayponghee"},"content":"                taskArray \u003d deleteTask(userInput, taskArray);","lastModifiedDate":"2024-02-17"},{"lineNumber":340,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.toLowerCase().startsWith(TODO) ||","lastModifiedDate":"2024-02-20"},{"lineNumber":341,"author":{"gitId":"tayponghee"},"content":"                    userInput.toLowerCase().startsWith(DEADLINE) ||","lastModifiedDate":"2024-02-20"},{"lineNumber":342,"author":{"gitId":"tayponghee"},"content":"                    userInput.toLowerCase().startsWith(EVENT)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":343,"author":{"gitId":"tayponghee"},"content":"                taskArray \u003d getTasks(userInput, taskArray);","lastModifiedDate":"2024-02-04"},{"lineNumber":344,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":345,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"Bro, say something that I can understand.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":346,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":347,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":348,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":349,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":350,"author":{"gitId":"tayponghee"},"content":"    private static void startDavinici() {","lastModifiedDate":"2024-02-20"},{"lineNumber":351,"author":{"gitId":"tayponghee"},"content":"        readFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":352,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":353,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":354,"author":{"gitId":"tayponghee"},"content":"    private static void readFile() {","lastModifiedDate":"2024-02-20"},{"lineNumber":355,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":356,"author":{"gitId":"tayponghee"},"content":"            List\u003cString\u003e lines \u003d DavinciFileHandler.readFile(DATA_FILE_PATH);","lastModifiedDate":"2024-02-20"},{"lineNumber":357,"author":{"gitId":"tayponghee"},"content":"            taskArray \u003d new Task[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":358,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":359,"author":{"gitId":"tayponghee"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-20"},{"lineNumber":360,"author":{"gitId":"tayponghee"},"content":"                Task task \u003d readLine(line);","lastModifiedDate":"2024-02-20"},{"lineNumber":361,"author":{"gitId":"tayponghee"},"content":"                if (task !\u003d null \u0026\u0026 !containsTask(taskArray, task)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":362,"author":{"gitId":"tayponghee"},"content":"                    taskArray \u003d Arrays.copyOf(taskArray, taskArray.length + 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":363,"author":{"gitId":"tayponghee"},"content":"                    taskArray[taskArray.length - 1] \u003d task;","lastModifiedDate":"2024-02-20"},{"lineNumber":364,"author":{"gitId":"tayponghee"},"content":"                    echoTask(taskArray);","lastModifiedDate":"2024-02-20"},{"lineNumber":365,"author":{"gitId":"tayponghee"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":366,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":367,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":368,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":369,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":370,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":371,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":372,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":373,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":374,"author":{"gitId":"tayponghee"},"content":"    private static void writeFile() {","lastModifiedDate":"2024-02-20"},{"lineNumber":375,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":376,"author":{"gitId":"tayponghee"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":377,"author":{"gitId":"tayponghee"},"content":"            for (Task task : taskArray) {","lastModifiedDate":"2024-02-20"},{"lineNumber":378,"author":{"gitId":"tayponghee"},"content":"                lines.add(task.toFileString());","lastModifiedDate":"2024-02-20"},{"lineNumber":379,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":380,"author":{"gitId":"tayponghee"},"content":"            DavinciFileHandler.writeFile(DATA_FILE_PATH, lines);","lastModifiedDate":"2024-02-20"},{"lineNumber":381,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":382,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error writing file: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":383,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":384,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":385,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":386,"author":{"gitId":"tayponghee"},"content":"    private static boolean containsTask(Task[] tasks, Task task) {","lastModifiedDate":"2024-02-20"},{"lineNumber":387,"author":{"gitId":"tayponghee"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":388,"author":{"gitId":"tayponghee"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":389,"author":{"gitId":"tayponghee"},"content":"                return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":390,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":391,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":392,"author":{"gitId":"tayponghee"},"content":"        return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":393,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":394,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":395,"author":{"gitId":"tayponghee"},"content":"    private static Task readLine(String line) throws DavinciException {","lastModifiedDate":"2024-02-20"},{"lineNumber":396,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":397,"author":{"gitId":"tayponghee"},"content":"            String[] tokens \u003d line.split(\"/\");","lastModifiedDate":"2024-02-20"},{"lineNumber":398,"author":{"gitId":"tayponghee"},"content":"            String command \u003d tokens[0].toUpperCase();","lastModifiedDate":"2024-02-20"},{"lineNumber":399,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":400,"author":{"gitId":"tayponghee"},"content":"            boolean isDone \u003d tokens[tokens.length - 1].equals(\"1\");","lastModifiedDate":"2024-02-20"},{"lineNumber":401,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":402,"author":{"gitId":"tayponghee"},"content":"            Task newTask;","lastModifiedDate":"2024-02-20"},{"lineNumber":403,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":404,"author":{"gitId":"tayponghee"},"content":"            switch (command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":405,"author":{"gitId":"tayponghee"},"content":"            case \"TODO\":","lastModifiedDate":"2024-02-20"},{"lineNumber":406,"author":{"gitId":"tayponghee"},"content":"                newTask \u003d new Todo(tokens[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":407,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":408,"author":{"gitId":"tayponghee"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2024-02-20"},{"lineNumber":409,"author":{"gitId":"tayponghee"},"content":"                newTask \u003d new Deadline(tokens[1], tokens[2]);","lastModifiedDate":"2024-02-20"},{"lineNumber":410,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":411,"author":{"gitId":"tayponghee"},"content":"            case \"EVENT\":","lastModifiedDate":"2024-02-20"},{"lineNumber":412,"author":{"gitId":"tayponghee"},"content":"                newTask \u003d new Event(tokens[1], tokens[2], tokens[3]);","lastModifiedDate":"2024-02-20"},{"lineNumber":413,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":414,"author":{"gitId":"tayponghee"},"content":"            default:","lastModifiedDate":"2024-02-20"},{"lineNumber":415,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"Unknown task type: \" + command);","lastModifiedDate":"2024-02-20"},{"lineNumber":416,"author":{"gitId":"tayponghee"},"content":"                return null;","lastModifiedDate":"2024-02-20"},{"lineNumber":417,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":418,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":419,"author":{"gitId":"tayponghee"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-20"},{"lineNumber":420,"author":{"gitId":"tayponghee"},"content":"                newTask.markAsDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":421,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":422,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":423,"author":{"gitId":"tayponghee"},"content":"            if (!taskExists(newTask)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":424,"author":{"gitId":"tayponghee"},"content":"                return newTask;","lastModifiedDate":"2024-02-20"},{"lineNumber":425,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":426,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":427,"author":{"gitId":"tayponghee"},"content":"            return null;","lastModifiedDate":"2024-02-20"},{"lineNumber":428,"author":{"gitId":"tayponghee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":429,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Corrupted file\");","lastModifiedDate":"2024-02-20"},{"lineNumber":430,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":431,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":432,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":433,"author":{"gitId":"tayponghee"},"content":"    private static boolean taskExists(Task newTask) {","lastModifiedDate":"2024-02-20"},{"lineNumber":434,"author":{"gitId":"tayponghee"},"content":"        for (Task existingTask : taskArray) {","lastModifiedDate":"2024-02-20"},{"lineNumber":435,"author":{"gitId":"tayponghee"},"content":"            if (existingTask.equals(newTask)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":436,"author":{"gitId":"tayponghee"},"content":"                return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":437,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":438,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":439,"author":{"gitId":"tayponghee"},"content":"        return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":440,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":441,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":442,"author":{"gitId":"tayponghee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":443,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":444,"author":{"gitId":"tayponghee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":445,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":446,"author":{"gitId":"tayponghee"},"content":"        startDavinici();","lastModifiedDate":"2024-02-20"},{"lineNumber":447,"author":{"gitId":"tayponghee"},"content":"        printStartingMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":448,"author":{"gitId":"tayponghee"},"content":"        userCommand(scanner);","lastModifiedDate":"2024-02-20"},{"lineNumber":449,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":450,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":451,"author":{"gitId":"tayponghee"},"content":"        scanner.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":452,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":453,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":454,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"tayponghee":454}},{"path":"src/main/java/DavinciException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"class DavinciException extends Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    public DavinciException(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"        super(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"tayponghee":5}},{"path":"src/main/java/DavinciFileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"import java.io.File;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"public class DavinciFileHandler {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    public static List\u003cString\u003e readFile(String filePath) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"        Path myPath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        if (!Files.exists(myPath)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"            new File(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"        return Files.readAllLines(myPath);","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public static void appendLine(String filePath, String line) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"        fw.write(line + \"\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        fw.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static void writeFile(String filePath, List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"                fw.write(line + \"\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error writing file: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"            throw e;","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tayponghee":35}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    protected String by;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"        return description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"deadline/%s/%s/%s\", description, by, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    private String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    private String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        return description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"event/%s/%s/%s/%s\", description, from, to, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"        return description;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"        return isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"%s/%s\", getDescription(), isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":42}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"todo/%s/%s\", description, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":15}}]
