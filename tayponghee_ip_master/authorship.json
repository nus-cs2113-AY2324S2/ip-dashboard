[{"path":"data/davinci.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"event/Attend banquet dinner in Marina Bay Sands/6pm/11pm/1","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"tayponghee":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"# DavinciBot","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"## Overview ","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"The DavinciBot is a simple to-do list application made in Java that allows users to manage tasks, including adding, marking as done, deleting, listing tasks and finding tasks. The DaviniciBot will also display tasks from the past if the user had interacted with the chatbot before.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"### Classes","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"- **DavinciBot (Main class)**","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"- **DaviniciException (Custom exceptions for task management)**","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"- **DavinciFileHandler (Handles file operations such as reading and writing)**","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"- **Deadline (Handles Deadline task specific outputs)**","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"- **Event (Handles Event task specific outputs)**","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"- **Todo (Handles Todo task specific outputs)**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"- **Parser (Parses user input and performs actions based on pre-set commands)**","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"- **Task (Represents a general task with a description and completion status)**","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"- **TaskList (Represents a collection of tasks and provides methods to manipulate the task list.)**","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"- **Ui (Handles interactions with the user and gives displays messages based on the user\u0027s input)**","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"- Add, delete, mark and unmark tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"- Add tasks based on 3 types; ToDo, Deadline and Event.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"- Find tasks based through searching for keywords associated with each task.","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"- Save and load past tasks from the text file.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"- Creation of directory and text file if the file/path is missing.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"### Feature-Mark","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"Mark a task as done by specifying the index within the list, and returns a \u0027X\u0027, which denotes as a completed task.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"### Feature-Saving","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"All the tasks in the list would be updated to the textfile whenever a change is made to the list, i.e. deletion, addition or marking/unmarking of a task. This ensures that the items that a user has input into their list would be saved should the programme crash.","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"## Commands","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"- **todo (description)**: Add a to-do task.","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"- **deadline (description) /by (deadline)**: Add a task with a deadline.","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"- **event (description) /from (start time) /to (end time)**: Add an event with start and end dates.","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"- **list**: List all tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"- **delete (index in list)**: Delete tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"- **mark (index)**: Mark tasks as completed.","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"- **unmark (index)**: Mark tasks as not completed.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"- **find (word)**: Returns all tasks in the list which contains that specified word.","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"- **bye**: Exit the application.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"### Example input/output","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"- What do you want me to do? `Event Attend banquet dinner in Marina Bay Sands /from 6pm /to 11pm`","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"  - Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"  - `[E][ ] Attend banquet dinner in Marina Bay Sands (from: 6pm to: 11pm)`","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"  - Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"- What do you want me to do? `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"  - Here are the tasks in your list:","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"  - `1. [E] [ ] Attend banquet dinner in Marina Bay Sands (from: 6pm to: 11pm)`","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"- What do you want me to do? `mark 1`","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"  - Nice job! I\u0027ve marked this task as done :D","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"  - Here are the tasks in your list:","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"  - `1. [E] [X] Attend banquet dinner in Marina Bay Sands (from: 6pm to: 11pm)`","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"## Usage","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"1. Download the latest Jar releasse.","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"2. Move the Jar file into an empty folder.","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"3. In terminal, cd to the directory that the Jar file is in.","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"4. Run the command java -jar {filename}.jar (i.e., run the command in the same folder as the jar file).","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"5. To exit the application, type the keyword \u0027bye\u0027. To restart the application, repeat steps 3 and 4.","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"This User Guide serves as an overview of how DavinciBot works, as well as a description of all the features that it gives to the user.","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"tayponghee":52,"-":14}},{"path":"src/main/java/DavinciBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":" * The DavinciBot class is a simple to-do list application that allows users","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":" * to manage tasks, including adding, marking as done, deleting, listing tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":" * and finding tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":" * The DaviniciBot will also display tasks from the past if the user had interacted","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":" * with the chatbot before.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"public class DavinciBot {","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    public static void readFile() {","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"        TaskList.readFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    private static void printStartingMessage() {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"        Ui.printStartingMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    private static void userCommand() {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"       Ui.userCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public static void writeFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        TaskList.writeFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"        readFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"        printStartingMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"        userCommand();","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"tayponghee":31}},{"path":"src/main/java/DavinciException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class DavinciException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    public DavinciException(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"        super(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"tayponghee":5}},{"path":"src/main/java/DavinciFileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":" * Handles file operations such as reading and writing tasks to a file, and creating directories.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"public class DavinciFileHandler {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_CREATING_DIRECTORIES \u003d \"Error creating directories: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_WRITING_FILE \u003d \"Error writing file: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    public static final String WRITING_TO_FILE \u003d \"Writing to file: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_CREATING_FILE \u003d \"Error creating file: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public static final String CREATING_FILE \u003d \"Creating file: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public static final String LOADING_PAST_TASKS_FROM \u003d \"Loading past tasks from \";","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"     * Reads the contents of a file and returns them as a list of strings.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"     * @param filePath The path to the file to be read.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"     * @return A list of strings representing the lines of the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"    public static List\u003cString\u003e readFile(String filePath) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"        Path myPath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"        Ui.printMessage(LOADING_PAST_TASKS_FROM + filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"        createDirectories(myPath.getParent());","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"        if (!Files.exists(myPath)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"                System.out.println(CREATING_FILE + filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"                Files.createFile(myPath);","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"                System.out.println(ERROR_CREATING_FILE + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"                throw e;","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"        return Files.readAllLines(myPath);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"     * Writes a list of strings to a file.","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"     * @param filePath The path to the file to be written.","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"     * @param lines The list of strings to be written to the file.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"    public static void writeFile(String filePath, List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"        Path myPath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"        createDirectories(myPath.getParent());","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"            System.out.println(WRITING_TO_FILE + filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"            Files.write(myPath, lines);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"            System.out.println(ERROR_WRITING_FILE + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"            throw e;","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"     * Creates directories for a given path if they do not exist.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"     * @param directory The path to the directory to be created.","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"    public static void createDirectories(Path directory) throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"            Files.createDirectories(directory);","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"        } catch (FileAlreadyExistsException ignored) { // ignore if the file exists","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"            System.out.println(ERROR_CREATING_DIRECTORIES + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"            throw e;","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tayponghee":79}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    protected String by;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"        return description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"deadline/%s/%s/%s\", description, by, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":24}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    private final String from;","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    private final String to;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        return description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"event/%s/%s/%s/%s\", description, from, to, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":27}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":" * Parses user input and performs actions based on pre-set commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"public class Parser {","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    public static final String ARE_YOU_MUTE \u003d \"... are you mute?\";","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    public static final String GOODBYE \u003d \"Goodbye... It may be a mere few seconds for you but an eternity for me.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public static final String BRO_SAY_SOMETHING_THAT_I_CAN_UNDERSTAND \u003d \"Bro, say something that I can understand.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    public static final String INVALID_TASK_INDEX \u003d \"Invalid task index\";","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public static final String GOOD_JOB \u003d \"Nice job! I\u0027ve marked this task as done :D\";","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    public static final String SPECIFY_INDEX \u003d \"Please specify the task index\";","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public static final String MARKED_AS_NOT_DONE \u003d \"OK, I\u0027ve marked this task as not done, but stop being lazy!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    public static final int SPLIT_INTO_TWO_PARTS \u003d 2;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public static final String AIN_T_NO_DAMN_TASK_THAT_CONTAINS_THIS_KEYWORD_BUDDY \u003d \"Ain\u0027t no damn task that \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"            \"contains this keyword buddy.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    public static final String HELLO_ITS_ME_WHAT_ARE_YOU_TRYING_TO_SEARCH_FOR_BUDDY \u003d \"Hello, its me.\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"            \" What are you trying to search for buddy?\";","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"     * Parses user input and performs actions based on pre-set commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to be changed based on the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"    public static void parseUserInput(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ARE_YOU_MUTE);","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"            return;","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"        if (userInput.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(GOODBYE);","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.equalsIgnoreCase(LIST)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"            Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.toLowerCase().startsWith(MARK)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"            completeTask(userInput, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.toLowerCase().startsWith(UNMARK)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"            unmarkTask(userInput, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.toLowerCase().startsWith(FIND)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"            findTask(userInput, taskList);","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(BRO_SAY_SOMETHING_THAT_I_CAN_UNDERSTAND);","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"     * Finds tasks in the task list that match the given keyword and displays them.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"     * @param userInput The user input containing the \"find\" keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to search for matching tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"    private static void findTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"        String keyword \u003d userInput.substring(FIND.length()).trim().toLowerCase();","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"        if (!keyword.isEmpty()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"            List\u003cTask\u003e matchingTasks \u003d taskList.stream()","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"                    .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword))","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"            if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"                Ui.displayFindTask(matchingTasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(AIN_T_NO_DAMN_TASK_THAT_CONTAINS_THIS_KEYWORD_BUDDY);","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(HELLO_ITS_ME_WHAT_ARE_YOU_TRYING_TO_SEARCH_FOR_BUDDY);","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"     * @param userInput The user input containing the \"mark\" command and task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to update based on the completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"tayponghee"},"content":"    private static void completeTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"tayponghee"},"content":"            checkIfTaskCanBeCompleted(parts, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + INVALID_TASK_INDEX + \" format.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"tayponghee"},"content":"     * Checks if a task can be marked as completed and updates the task list accordingly.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"tayponghee"},"content":"     * @param parts The split parts of the user input containing the task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to update based on the completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If the task index is invalid.","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"tayponghee"},"content":"    private static void checkIfTaskCanBeCompleted(String[] parts, List\u003cTask\u003e taskList) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"tayponghee"},"content":"                taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(GOOD_JOB);","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"tayponghee"},"content":"                Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"tayponghee"},"content":"                DavinciBot.writeFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(INVALID_TASK_INDEX + \".\");","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(SPECIFY_INDEX + \" to complete.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"tayponghee"},"content":"     * Unmarks a completed task.","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"tayponghee"},"content":"     * @param userInput The user input containing the \"unmark\" command and task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to update based on the completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"tayponghee"},"content":"    private static void unmarkTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"tayponghee"},"content":"            checkIfTaskCanBeUnmarked(parts, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + INVALID_TASK_INDEX + \" format.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"tayponghee"},"content":"     * Checks if a completed task can be unmarked and updates the task list accordingly.","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"tayponghee"},"content":"     * @param parts The split parts of the user input containing the task index.","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to update based on the completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If the task index is invalid.","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"tayponghee"},"content":"    private static void checkIfTaskCanBeUnmarked(String[] parts, List\u003cTask\u003e taskList) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"tayponghee"},"content":"                taskList.get(taskIndex).markAsNotDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(MARKED_AS_NOT_DONE);","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"tayponghee"},"content":"                Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"tayponghee"},"content":"                DavinciBot.writeFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(INVALID_TASK_INDEX + \".\");","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(SPECIFY_INDEX + \" to unmark.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tayponghee":156}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":" * Represents a general task with a description and completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"        return description;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        return isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"%s/%s\", getDescription(), isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":44}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":" * Represents a collection of tasks and provides methods to manipulate the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"public class TaskList {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public static final String DATA_DIRECTORY \u003d \"./ip/data\";","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    public static final String DATA_FILE_PATH \u003d DATA_DIRECTORY + \"/davinci.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public static final int SPLIT_INTO_TWO_PARTS \u003d 2;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public static final String UNKNOWN_TASK_TYPE \u003d \"Unknown task type. Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public static final String NOTED_I_VE_REMOVED_THIS_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    public static final String INVALID_TASK_INDEX \u003d \"Invalid task index.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_WRITING_FILE \u003d \"Error writing file: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public static final String GOT_IT_I_VE_ADDED_A_TASK_FROM_THE_FILE \u003d \"Got it. I\u0027ve added a task from the file:\";","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_READING_FILE \u003d \"Error reading file: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR \u003d \"Error: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_CREATING_DATA_DIRECTORY \u003d \"Error creating data directory: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public static final String ONE \u003d \"1\";","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"    public static final String CORRUPTED_FILE \u003d \"Corrupted file\";","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"    public static final String UNKNOWN_TASK_TYPE1 \u003d \"Unknown task type: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"    public static final String COME_ON_MAN_SPECIFY_THE \u003d \"Come on man, specify the \";","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"    public static final String TASK \u003d \" task.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"    public static final String COME_ON_MAN_PLEASE_USE_EVENT_DESCRIPTION_FROM_START_TO_END \u003d \"Come on man. Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\";","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"    public static final String FROM \u003d \"/from\";","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"    public static final String TO \u003d \"/to\";","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"    public static final String WHATCHA_DOING_BRUH_LISTEN \u003d \"Whatcha\u0027 doing bruh, listen. \";","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"    public static final String PLEASE_USE_EVENT_DESCRIPTION_FROM_START_TO_END \u003d \"Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\";","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"    public static final String BY \u003d \"/by\";","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"    public static final String CRAPPY_FORMATTING_PLEASE_USE_DEADLINE_DESCRIPTION_BY_DEADLINE \u003d \"Crappy formatting. Please use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"    public static final String PLEASE_SPECIFY_THE_TASK_INDEX_TO_DELETE \u003d \"Please specify the task index to delete.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"    public static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"     * Adds a task to the task list and writes the updated list to the file.","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"     * Deletes a task from the task list based on the specified index.","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"     * Throws an exception if the index is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If the task index is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"    public static void deleteTask(int taskIndex) throws DavinciException {","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"            Task deletedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"            System.out.println(NOTED_I_VE_REMOVED_THIS_TASK);","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"            Ui.displaySingleTask(deletedTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"            Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"            writeFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(INVALID_TASK_INDEX);","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"     * Gets the current tasklist.","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"    public static List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"        return taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"tayponghee"},"content":"     * Writes the current task list to a file.","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"tayponghee"},"content":"    public static void writeFile() {","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"tayponghee"},"content":"            createDataDirectory();","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"tayponghee"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"tayponghee"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"tayponghee"},"content":"                lines.add(task.toFileString());","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"tayponghee"},"content":"            DavinciFileHandler.writeFile(DATA_FILE_PATH, lines);","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ERROR_WRITING_FILE + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"tayponghee"},"content":"     * Reads tasks from a file and adds them to the tasklist.","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"tayponghee"},"content":"    public static void readFile() {","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"tayponghee"},"content":"            createDataDirectory();","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"tayponghee"},"content":"            List\u003cString\u003e lines \u003d DavinciFileHandler.readFile(DATA_FILE_PATH);","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"tayponghee"},"content":"            taskList.clear();","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"tayponghee"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"tayponghee"},"content":"                Task task \u003d readLine(line);","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"tayponghee"},"content":"                if (task !\u003d null \u0026\u0026 !containsTask(taskList, task)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"tayponghee"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"tayponghee"},"content":"                    Ui.printMessage(GOT_IT_I_VE_ADDED_A_TASK_FROM_THE_FILE);","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"tayponghee"},"content":"                    System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"tayponghee"},"content":"                    Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"tayponghee"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ERROR_READING_FILE + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ERROR + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"tayponghee"},"content":"     * Creates the data directory if it does not exist.","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"tayponghee"},"content":"    private static void createDataDirectory() {","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"tayponghee"},"content":"            DavinciFileHandler.createDirectories(Paths.get(DATA_DIRECTORY));","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ERROR_CREATING_DATA_DIRECTORY + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"tayponghee"},"content":"     * Reads a line from the file and converts it to a Task object.","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"tayponghee"},"content":"     * @param line The line read from the text file.","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"tayponghee"},"content":"     * @return The Task object created from the line.","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with the file format.","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"tayponghee"},"content":"    private static Task readLine(String line) throws DavinciException {","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"tayponghee"},"content":"            String[] tokens \u003d line.split(\"/\");","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"tayponghee"},"content":"            String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"tayponghee"},"content":"            boolean isDone \u003d tokens[tokens.length - 1].equals(ONE);","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"tayponghee"},"content":"            Task newTask \u003d commandCases(command, tokens);","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"tayponghee"},"content":"            if (newTask \u003d\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"tayponghee"},"content":"                return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"tayponghee"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"tayponghee"},"content":"                newTask.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"tayponghee"},"content":"            if (!taskExists(newTask)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"tayponghee"},"content":"                return newTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"tayponghee"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"tayponghee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(CORRUPTED_FILE);","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"tayponghee"},"content":"     * Checks if a task already exists in the tasklist.","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"tayponghee"},"content":"     * @param newTask The task to check for existence.","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"tayponghee"},"content":"     * @return True if the task already exists, false otherwise.","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"tayponghee"},"content":"    private static boolean taskExists(Task newTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"tayponghee"},"content":"        for (Task existingTask : taskList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"tayponghee"},"content":"            if (existingTask.equals(newTask)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"tayponghee"},"content":"                return true;","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"tayponghee"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"tayponghee"},"content":"     * Creates a Task object based on the command and tokens.","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"tayponghee"},"content":"     * @param command The command specifying the type of task.","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"tayponghee"},"content":"     * @param tokens The tokens representing task details.","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"tayponghee"},"content":"     * @return The Task object created based on the command and tokens.","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"tayponghee"},"content":"    private static Task commandCases(String command, String[] tokens) {","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"tayponghee"},"content":"        Task newTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"tayponghee"},"content":"        switch (command) {","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"tayponghee"},"content":"        case TODO:","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"tayponghee"},"content":"            newTask \u003d new Todo(tokens[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"tayponghee"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"tayponghee"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"tayponghee"},"content":"            newTask \u003d new Deadline(tokens[1], tokens[2]);","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"tayponghee"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"tayponghee"},"content":"        case EVENT:","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"tayponghee"},"content":"            newTask \u003d new Event(tokens[1], tokens[2], tokens[3]);","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"tayponghee"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"tayponghee"},"content":"        default:","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"tayponghee"},"content":"            System.out.println(UNKNOWN_TASK_TYPE1 + command);","lastModifiedDate":"2024-02-25"},{"lineNumber":196,"author":{"gitId":"tayponghee"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"tayponghee"},"content":"        return newTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"tayponghee"},"content":"     * Checks if a task already exists in the provided list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"tayponghee"},"content":"     * @param tasks The list of tasks to check.","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"tayponghee"},"content":"     * @param task The task to check for existence.","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"tayponghee"},"content":"     * @return True if the task already exists, false otherwise.","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"tayponghee"},"content":"    private static boolean containsTask(List\u003cTask\u003e tasks, Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"tayponghee"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"tayponghee"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"tayponghee"},"content":"                return true;","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"tayponghee"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":217,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":218,"author":{"gitId":"tayponghee"},"content":"     * Handles user input by selecting the appropriate task type.","lastModifiedDate":"2024-02-23"},{"lineNumber":219,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":220,"author":{"gitId":"tayponghee"},"content":"     * @param userInput The user input containing the task type and details.","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"tayponghee"},"content":"    public static void handleUserInput(String userInput) {","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"tayponghee"},"content":"        taskSelector(userInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":225,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"tayponghee"},"content":"     * Selects the appropriate task type based on user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":229,"author":{"gitId":"tayponghee"},"content":"     * @param userInput User input containing the task type and details.","lastModifiedDate":"2024-02-23"},{"lineNumber":230,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":231,"author":{"gitId":"tayponghee"},"content":"    public static void taskSelector(String userInput) {","lastModifiedDate":"2024-02-23"},{"lineNumber":232,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":233,"author":{"gitId":"tayponghee"},"content":"            Scanner taskScanner \u003d new Scanner(userInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":234,"author":{"gitId":"tayponghee"},"content":"            String taskType \u003d taskScanner.next().toLowerCase();","lastModifiedDate":"2024-02-23"},{"lineNumber":235,"author":{"gitId":"tayponghee"},"content":"            if (!taskScanner.hasNext()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":236,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(COME_ON_MAN_SPECIFY_THE + taskType + TASK);","lastModifiedDate":"2024-02-25"},{"lineNumber":237,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":238,"author":{"gitId":"tayponghee"},"content":"            String description \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"tayponghee"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-23"},{"lineNumber":240,"author":{"gitId":"tayponghee"},"content":"            case TODO:","lastModifiedDate":"2024-02-23"},{"lineNumber":241,"author":{"gitId":"tayponghee"},"content":"                executeTodoTask(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":242,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":243,"author":{"gitId":"tayponghee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-23"},{"lineNumber":244,"author":{"gitId":"tayponghee"},"content":"                executeDeadlineTask(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":245,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"tayponghee"},"content":"            case EVENT:","lastModifiedDate":"2024-02-23"},{"lineNumber":247,"author":{"gitId":"tayponghee"},"content":"                executeEventTask(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":248,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"tayponghee"},"content":"            default:","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(UNKNOWN_TASK_TYPE);","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":252,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":253,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ERROR + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":254,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":255,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":256,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":257,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":258,"author":{"gitId":"tayponghee"},"content":"     * Adds an event task to the task list based on user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":259,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":260,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the event task with start and end times.","lastModifiedDate":"2024-02-23"},{"lineNumber":261,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with the event task format.","lastModifiedDate":"2024-02-23"},{"lineNumber":262,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":263,"author":{"gitId":"tayponghee"},"content":"    private static void executeEventTask(String description) throws DavinciException {","lastModifiedDate":"2024-02-23"},{"lineNumber":264,"author":{"gitId":"tayponghee"},"content":"        String[] eventParts \u003d description.split(FROM, SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":265,"author":{"gitId":"tayponghee"},"content":"        if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":266,"author":{"gitId":"tayponghee"},"content":"            String[] eventTimeParts \u003d eventParts[1].split(TO, SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":267,"author":{"gitId":"tayponghee"},"content":"            if (eventTimeParts.length \u003d\u003d 2 \u0026\u0026 !eventTimeParts[0].trim().isEmpty() \u0026\u0026 !eventTimeParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":268,"author":{"gitId":"tayponghee"},"content":"                addTask(new Event(eventParts[0].trim(), eventTimeParts[0].trim(), eventTimeParts[1].trim()));","lastModifiedDate":"2024-02-23"},{"lineNumber":269,"author":{"gitId":"tayponghee"},"content":"                Ui.echoTask(getTaskList());","lastModifiedDate":"2024-02-23"},{"lineNumber":270,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":271,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(COME_ON_MAN_PLEASE_USE_EVENT_DESCRIPTION_FROM_START_TO_END);","lastModifiedDate":"2024-02-25"},{"lineNumber":272,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":273,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":274,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(WHATCHA_DOING_BRUH_LISTEN +","lastModifiedDate":"2024-02-25"},{"lineNumber":275,"author":{"gitId":"tayponghee"},"content":"                    PLEASE_USE_EVENT_DESCRIPTION_FROM_START_TO_END);","lastModifiedDate":"2024-02-25"},{"lineNumber":276,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":277,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":278,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":279,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":280,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":281,"author":{"gitId":"tayponghee"},"content":"     * Adds a deadline task to the task list based on user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":282,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":283,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the deadline task with the deadline.","lastModifiedDate":"2024-02-23"},{"lineNumber":284,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with the deadline task format.","lastModifiedDate":"2024-02-23"},{"lineNumber":285,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":286,"author":{"gitId":"tayponghee"},"content":"    private static void executeDeadlineTask(String description) throws DavinciException {","lastModifiedDate":"2024-02-23"},{"lineNumber":287,"author":{"gitId":"tayponghee"},"content":"        String[] deadlineParts \u003d description.split(BY, SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-25"},{"lineNumber":288,"author":{"gitId":"tayponghee"},"content":"        if (deadlineParts.length \u003d\u003d 2 \u0026\u0026 !deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":289,"author":{"gitId":"tayponghee"},"content":"            addTask(new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"tayponghee"},"content":"            Ui.echoTask(getTaskList());","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":292,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(CRAPPY_FORMATTING_PLEASE_USE_DEADLINE_DESCRIPTION_BY_DEADLINE);","lastModifiedDate":"2024-02-25"},{"lineNumber":293,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":294,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":295,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":297,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":298,"author":{"gitId":"tayponghee"},"content":"     * Adds a todo task to the task list based on user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":299,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":300,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-23"},{"lineNumber":301,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":302,"author":{"gitId":"tayponghee"},"content":"    private static void executeTodoTask(String description) {","lastModifiedDate":"2024-02-23"},{"lineNumber":303,"author":{"gitId":"tayponghee"},"content":"        addTask(new Todo(description));","lastModifiedDate":"2024-02-23"},{"lineNumber":304,"author":{"gitId":"tayponghee"},"content":"        Ui.echoTask(getTaskList());","lastModifiedDate":"2024-02-23"},{"lineNumber":305,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":306,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":307,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":308,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":309,"author":{"gitId":"tayponghee"},"content":"     * Deletes a task based on the user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":310,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":311,"author":{"gitId":"tayponghee"},"content":"     * @param parts User input containing the command and task index.","lastModifiedDate":"2024-02-23"},{"lineNumber":312,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with deleting the task.","lastModifiedDate":"2024-02-23"},{"lineNumber":313,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":314,"author":{"gitId":"tayponghee"},"content":"    public static void ableToDelete(String[] parts) throws DavinciException {","lastModifiedDate":"2024-02-23"},{"lineNumber":315,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":316,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":317,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c TaskList.getTaskList().size()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":318,"author":{"gitId":"tayponghee"},"content":"                deleteTask(taskIndex);","lastModifiedDate":"2024-02-23"},{"lineNumber":319,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":320,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(INVALID_TASK_INDEX);","lastModifiedDate":"2024-02-25"},{"lineNumber":321,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":322,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":323,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(PLEASE_SPECIFY_THE_TASK_INDEX_TO_DELETE);","lastModifiedDate":"2024-02-25"},{"lineNumber":324,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":325,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":326,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tayponghee":326}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"todo/%s/%s\", description, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":" * The Ui class handles user interactions and provides methods for printing messages,","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":" * displaying task lists, and processing user commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"public class Ui {","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public static final int SPLIT_INTO_TWO_PARTS \u003d 2;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public static final String GOODBYE \u003d \"Goodbye... It may be a mere few seconds for you but an eternity for me.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public static final String SUP \u003d \"Sup! I\u0027m DavinciBot! I was the smartest man alive,\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"            \" but now I am just a list maker.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public static final String ENTER_COMMANDS \u003d \"Enter commands, and I will echo them back to you, \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"            \"as well as add them to your list.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public static final String ITEMS_IN_PREVIOUS_LIST \u003d \"If there were things in your list that you previously had, \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"            \"I will show what you have told me previously.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_BYE_TO_END_THE_CONVERSATION \u003d \"Type \u0027bye\u0027 to end the conversation.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_LIST_TO_SEE_YOUR_TO_DO_LIST \u003d \"Type \u0027list\u0027 to see your to-do list.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_MARK_TO_MARK_A_TASK_AS_DONE \u003d \"Type \u0027mark\u0027 to mark a task as done.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_UNMARK_TO_MARK_A_TASK_AS_NOT_DONE \u003d \"Type \u0027unmark\u0027 to mark a task as not done.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_TODO_WORK_TO_ADD_A_TASK_TO_THE_LIST \u003d \"Type \u0027todo \u003cwork\u003e\u0027 \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"            \"to add a task to the list.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"    public static final String BYE_BYE \u003d \"See ya bucko!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_FIND_KEYWORD_TO_LIST_ALL_THE_TASKS_THAT_HAVE_THOSE_KEYWORDS \u003d","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"            \"Type \u0027find \u003ckeyword\u003e\u0027 to list all the tasks that have those keywords.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_DELETE_INDEX_TO_DELETE_A_TASK_FROM_YOUR_LIST \u003d \"Type \u0027delete \u003cindex\u003e\u0027 to\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"            \" delete a task from your list.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_EVENT_DESCRIPTION_FROM_START_TO_END_TO_ADD_AN_EVENT_TO_THE_LIST \u003d","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"            \"Type \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027 to add an event to the list.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"    public static final String TYPE_DEADLINE_DESCRIPTION_BY_DEADLINE_TO_ADD_A_TASK_WITH_A_DEADLINE_TO_THE_LIST \u003d","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"            \"Type \u0027deadline \u003cdescription\u003e /by \u003cdeadline\u003e\u0027 to add a task with a deadline to the list.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR \u003d \"Error: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"    public static final String ERROR_INVALID_TASK_INDEX_FORMAT \u003d \"Error: Invalid task index format.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"    public static final String WHAT_DO_YOU_WANT_ME_TO_DO \u003d \"What do you want me to do? \";","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"    public static final String NO_TASKS_ENTERED_YET \u003d \"No tasks entered yet.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"    public static final String HERE_ARE_THE_TASKS_IN_YOUR_LIST \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"    public static final String THESE_ARE_THE_TASKS_THAT_MATCH_YOUR_SEARCH \u003d \"These are the tasks that match your search: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"    public static final String D \u003d \"[D]\";","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"    public static final String T \u003d \"[T]\";","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"    public static final String E \u003d \"[E]\";","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"    public static final String GOT_IT_I_VE_ADDED_THIS_TASK \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"    public static final String NOW_YOU_HAVE \u003d \"Now you have \";","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"    public static final String TASKS_IN_THE_LIST \u003d \" tasks in the list.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"     * Prints the starting message and instructions for using DavinciBot.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"    public static void printStartingMessage() {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"        System.out.println(SUP);","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"        System.out.println(ENTER_COMMANDS);","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"        System.out.println(ITEMS_IN_PREVIOUS_LIST);","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_BYE_TO_END_THE_CONVERSATION);","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_LIST_TO_SEE_YOUR_TO_DO_LIST);","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_MARK_TO_MARK_A_TASK_AS_DONE);","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_UNMARK_TO_MARK_A_TASK_AS_NOT_DONE);","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_TODO_WORK_TO_ADD_A_TASK_TO_THE_LIST);","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_DEADLINE_DESCRIPTION_BY_DEADLINE_TO_ADD_A_TASK_WITH_A_DEADLINE_TO_THE_LIST);","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_EVENT_DESCRIPTION_FROM_START_TO_END_TO_ADD_AN_EVENT_TO_THE_LIST);","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_DELETE_INDEX_TO_DELETE_A_TASK_FROM_YOUR_LIST);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"        System.out.println(TYPE_FIND_KEYWORD_TO_LIST_ALL_THE_TASKS_THAT_HAVE_THOSE_KEYWORDS);","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"        System.out.println(BYE_BYE);","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"     * Handles user commands and performs corresponding actions based on the input.","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"    public static void userCommand() {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"        while (true) {","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"            String userInput \u003d Ui.getUserInput();","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"tayponghee"},"content":"            if (userInput.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(GOODBYE);","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"tayponghee"},"content":"            if (userInput.toLowerCase().startsWith(TODO) ||","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"tayponghee"},"content":"                    userInput.toLowerCase().startsWith(DEADLINE) ||","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"tayponghee"},"content":"                    userInput.toLowerCase().startsWith(EVENT)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"tayponghee"},"content":"                TaskList.handleUserInput(userInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.toLowerCase().startsWith(DELETE)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"tayponghee"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"tayponghee"},"content":"                    String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"tayponghee"},"content":"                    TaskList.ableToDelete(parts);","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"tayponghee"},"content":"                } catch (DavinciException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"tayponghee"},"content":"                    Ui.printMessage(ERROR + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"tayponghee"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"tayponghee"},"content":"                    Ui.printMessage(ERROR_INVALID_TASK_INDEX_FORMAT);","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"tayponghee"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"tayponghee"},"content":"                Parser.parseUserInput(userInput, TaskList.getTaskList());","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"tayponghee"},"content":"        scanner.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"tayponghee"},"content":"     * Gets user input from the console.","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"tayponghee"},"content":"     * @return User input as a trimmed string.","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"tayponghee"},"content":"    public static String getUserInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"tayponghee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"tayponghee"},"content":"        System.out.print(WHAT_DO_YOU_WANT_ME_TO_DO);","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"tayponghee"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"tayponghee"},"content":"     * Displays the current task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"tayponghee"},"content":"    public static void displayTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"tayponghee"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"tayponghee"},"content":"            System.out.println(NO_TASKS_ENTERED_YET);","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"tayponghee"},"content":"            System.out.println(HERE_ARE_THE_TASKS_IN_YOUR_LIST);","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"tayponghee"},"content":"            checkForTask(taskList);","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"tayponghee"},"content":"     * Displays the tasks that match the user\u0027s search keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"tayponghee"},"content":"    public static void displayFindTask(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"tayponghee"},"content":"        System.out.println(THESE_ARE_THE_TASKS_THAT_MATCH_YOUR_SEARCH);","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"tayponghee"},"content":"        checkForTask(taskList);","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"tayponghee"},"content":"     * Displays a single task with the correct task icon.","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":146,"author":{"gitId":"tayponghee"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"tayponghee"},"content":"    public static void displaySingleTask(Task task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"tayponghee"},"content":"        String taskType;","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"tayponghee"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"tayponghee"},"content":"            taskType \u003d D;","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"tayponghee"},"content":"        } else if (task instanceof Todo) {","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"tayponghee"},"content":"            taskType \u003d T;","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"tayponghee"},"content":"            taskType \u003d E;","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"tayponghee"},"content":"        System.out.println(taskType +","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"tayponghee"},"content":"                \" [\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"tayponghee"},"content":"                task.getDescription());","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":163,"author":{"gitId":"tayponghee"},"content":"     * Displays tasks in the given task list with their corresponding task types and status icons.","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":167,"author":{"gitId":"tayponghee"},"content":"    private static void checkForTask(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-24"},{"lineNumber":168,"author":{"gitId":"tayponghee"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"tayponghee"},"content":"            String taskType;","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"tayponghee"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-21"},{"lineNumber":171,"author":{"gitId":"tayponghee"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"tayponghee"},"content":"                taskType \u003d D;","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"tayponghee"},"content":"            } else if (task instanceof Todo) {","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"tayponghee"},"content":"                taskType \u003d T;","lastModifiedDate":"2024-02-25"},{"lineNumber":175,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"tayponghee"},"content":"                taskType \u003d E;","lastModifiedDate":"2024-02-25"},{"lineNumber":177,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"tayponghee"},"content":"            System.out.println((i + 1) + \". \" + taskType +","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"tayponghee"},"content":"                    \" [\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"tayponghee"},"content":"                    task.getDescription());","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":184,"author":{"gitId":"tayponghee"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"tayponghee"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":191,"author":{"gitId":"tayponghee"},"content":"     * Echoes the last added task.","lastModifiedDate":"2024-02-24"},{"lineNumber":192,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":193,"author":{"gitId":"tayponghee"},"content":"     * @param taskList The list of tasks to get the last added task.","lastModifiedDate":"2024-02-24"},{"lineNumber":194,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":195,"author":{"gitId":"tayponghee"},"content":"    public static void echoTask(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"tayponghee"},"content":"        Task addedTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2024-02-21"},{"lineNumber":198,"author":{"gitId":"tayponghee"},"content":"        System.out.println(GOT_IT_I_VE_ADDED_THIS_TASK);","lastModifiedDate":"2024-02-25"},{"lineNumber":199,"author":{"gitId":"tayponghee"},"content":"        System.out.println(addedTask.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":200,"author":{"gitId":"tayponghee"},"content":"        System.out.println(NOW_YOU_HAVE + taskList.size() + TASKS_IN_THE_LIST);","lastModifiedDate":"2024-02-25"},{"lineNumber":201,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":202,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tayponghee":203}}]
