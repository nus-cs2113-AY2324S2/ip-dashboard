[{"path":"data/davinci.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"todo/eat/1","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tayponghee":1}},{"path":"src/main/java/DavinciBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":" * The DavinciBot class is a simple to-do list application that allows users","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":" * to manage tasks, including adding, marking as done, deleting, and listing tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"public class DavinciBot {","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    //specify the text file directory","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"    public static final String DATA_DIRECTORY \u003d \"./ip/data\";","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    public static final String DATA_FILE_PATH \u003d DATA_DIRECTORY + \"/davinci.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public static final int SPLIT_INTO_TWO_PARTS \u003d 2;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"    public static final String GOODBYE \u003d \"Goodbye... It may be a mere few seconds for you but an eternity for me.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"    public static final String UNKNOWN_TASK_TYPE \u003d \"Unknown task type. Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"    public static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"     * Handles user commands and performs corresponding actions based on the input.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"    private static void userCommand() {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"        while (true) {","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"            String userInput \u003d Ui.getUserInput();","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"            if (userInput.equalsIgnoreCase(BYE)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(GOODBYE);","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"            if (userInput.toLowerCase().startsWith(TODO) ||","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"                    userInput.toLowerCase().startsWith(DEADLINE) ||","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"                    userInput.toLowerCase().startsWith(EVENT)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"                taskSelector(userInput);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"            } else if (userInput.toLowerCase().startsWith(DELETE)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"                try {","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"                    String[] parts \u003d userInput.split(\" \", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"                    ableToDelete(parts);","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"                } catch (DavinciException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"                    Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"                    Ui.printMessage(\"Error: Invalid task index format.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"                Parser.parseUserInput(userInput, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"        scanner.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"     * Selects the appropriate task type based on user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"     * @param userInput User input containing the task type and details.","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"    private static void taskSelector(String userInput) {","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"            Scanner taskScanner \u003d new Scanner(userInput);","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"            String taskType \u003d taskScanner.next().toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"            if (!taskScanner.hasNext()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Come on man, specify the \" + taskType + \" task.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"            String description \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"            case TODO:","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"                executeTodoTask(description);","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"tayponghee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tayponghee"},"content":"                executeDeadlineTask(description);","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"tayponghee"},"content":"            case EVENT:","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tayponghee"},"content":"                executeEventTask(description);","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"tayponghee"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"tayponghee"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(UNKNOWN_TASK_TYPE);","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"tayponghee"},"content":"     * Adds an event task to the task list based on user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the event task with start and end times.","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with the event task format.","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"tayponghee"},"content":"    private static void executeEventTask(String description) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"tayponghee"},"content":"        String[] eventParts \u003d description.split(\"/from\", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"tayponghee"},"content":"        if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"tayponghee"},"content":"            String[] eventTimeParts \u003d eventParts[1].split(\"/to\", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"tayponghee"},"content":"            if (eventTimeParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"tayponghee"},"content":"                taskList.add(new Event(eventParts[0].trim(), eventTimeParts[0].trim(), eventTimeParts[1].trim()));","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"tayponghee"},"content":"                Ui.echoTask(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Come on man. Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Whatcha\u0027 doing bruh, listen. \" +","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"tayponghee"},"content":"                    \"Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"tayponghee"},"content":"        taskList.toArray(new Task[0]);","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"tayponghee"},"content":"     * Adds a deadline task to the task list based on user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the deadline task with the deadline.","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with the deadline task format.","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"tayponghee"},"content":"    private static void executeDeadlineTask(String description) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"tayponghee"},"content":"        String[] deadlineParts \u003d description.split(\"/by\", SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"tayponghee"},"content":"        if (deadlineParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"tayponghee"},"content":"            taskList.add(new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"tayponghee"},"content":"            Ui.echoTask(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Crappy formatting. Please use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"tayponghee"},"content":"        taskList.toArray(new Task[0]);","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"tayponghee"},"content":"     * Adds a todo task to the task list based on user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"tayponghee"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"tayponghee"},"content":"    private static void executeTodoTask(String description) {","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"tayponghee"},"content":"        taskList.add(new Todo(description));","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"tayponghee"},"content":"        Ui.echoTask(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"tayponghee"},"content":"        taskList.toArray(new Task[0]);","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"tayponghee"},"content":"     * Deletes a task based on the user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"tayponghee"},"content":"     * @param parts User input containing the command and task index.","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with deleting the task.","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"tayponghee"},"content":"    private static void ableToDelete(String[] parts) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"tayponghee"},"content":"                taskList.remove(taskIndex);","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"tayponghee"},"content":"                Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"tayponghee"},"content":"                writeFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(\"Invalid task index.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Please specify the task index to delete.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"tayponghee"},"content":"     * Writes the current task list to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":171,"author":{"gitId":"tayponghee"},"content":"    public static void writeFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"tayponghee"},"content":"            createDataDirectory();","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"tayponghee"},"content":"            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"tayponghee"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"tayponghee"},"content":"                lines.add(task.toFileString());","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"tayponghee"},"content":"            DavinciFileHandler.writeFile(DATA_FILE_PATH, lines);","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error writing file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"tayponghee"},"content":"     * Checks if a task already exists in the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"tayponghee"},"content":"     * @param tasks The list of tasks to check.","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"tayponghee"},"content":"     * @param task  The task to check for existence.","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"tayponghee"},"content":"     * @return True if the task exists, false otherwise.","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":191,"author":{"gitId":"tayponghee"},"content":"    private static boolean containsTask(List\u003cTask\u003e tasks, Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"tayponghee"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"tayponghee"},"content":"            if (t.equals(task)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"tayponghee"},"content":"                return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"tayponghee"},"content":"        return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":198,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":201,"author":{"gitId":"tayponghee"},"content":"     * Reads tasks from a file and adds them to the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":202,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"tayponghee"},"content":"    private static void readFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":204,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":205,"author":{"gitId":"tayponghee"},"content":"            createDataDirectory();","lastModifiedDate":"2024-02-21"},{"lineNumber":206,"author":{"gitId":"tayponghee"},"content":"            List\u003cString\u003e lines \u003d DavinciFileHandler.readFile(DATA_FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":207,"author":{"gitId":"tayponghee"},"content":"            taskList.clear();","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"tayponghee"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"tayponghee"},"content":"                Task task \u003d readLine(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":211,"author":{"gitId":"tayponghee"},"content":"                if (task !\u003d null \u0026\u0026 !containsTask(taskList, task)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":212,"author":{"gitId":"tayponghee"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":213,"author":{"gitId":"tayponghee"},"content":"                    Ui.printMessage(\"Got it. I\u0027ve added a task from the file:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":214,"author":{"gitId":"tayponghee"},"content":"                    System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":215,"author":{"gitId":"tayponghee"},"content":"                    Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":216,"author":{"gitId":"tayponghee"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":217,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":218,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":220,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":221,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":223,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":224,"author":{"gitId":"tayponghee"},"content":"    private static void createDataDirectory() {","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"tayponghee"},"content":"            DavinciFileHandler.createDirectories(Paths.get(DATA_DIRECTORY));","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":228,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error creating data directory: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":230,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":231,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":233,"author":{"gitId":"tayponghee"},"content":"     * Reads a line from the file and converts it into a Task object.","lastModifiedDate":"2024-02-21"},{"lineNumber":234,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"tayponghee"},"content":"     * @param line The line read from the file.","lastModifiedDate":"2024-02-21"},{"lineNumber":236,"author":{"gitId":"tayponghee"},"content":"     * @return A Task object representing the line.","lastModifiedDate":"2024-02-21"},{"lineNumber":237,"author":{"gitId":"tayponghee"},"content":"     * @throws DavinciException If there is an issue with the file format.","lastModifiedDate":"2024-02-21"},{"lineNumber":238,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":239,"author":{"gitId":"tayponghee"},"content":"    private static Task readLine(String line) throws DavinciException {","lastModifiedDate":"2024-02-20"},{"lineNumber":240,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":241,"author":{"gitId":"tayponghee"},"content":"            String[] tokens \u003d line.split(\"/\");","lastModifiedDate":"2024-02-20"},{"lineNumber":242,"author":{"gitId":"tayponghee"},"content":"            String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-02-21"},{"lineNumber":243,"author":{"gitId":"tayponghee"},"content":"            boolean isDone \u003d tokens[tokens.length - 1].equals(\"1\");","lastModifiedDate":"2024-02-20"},{"lineNumber":244,"author":{"gitId":"tayponghee"},"content":"            Task newTask \u003d commandCases(command, tokens);","lastModifiedDate":"2024-02-21"},{"lineNumber":245,"author":{"gitId":"tayponghee"},"content":"            if (newTask \u003d\u003d null) {","lastModifiedDate":"2024-02-21"},{"lineNumber":246,"author":{"gitId":"tayponghee"},"content":"                return null;","lastModifiedDate":"2024-02-21"},{"lineNumber":247,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":248,"author":{"gitId":"tayponghee"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-21"},{"lineNumber":249,"author":{"gitId":"tayponghee"},"content":"                newTask.markAsDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":250,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":251,"author":{"gitId":"tayponghee"},"content":"            if (!taskExists(newTask)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":252,"author":{"gitId":"tayponghee"},"content":"                return newTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":253,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":254,"author":{"gitId":"tayponghee"},"content":"            return null;","lastModifiedDate":"2024-02-21"},{"lineNumber":255,"author":{"gitId":"tayponghee"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":256,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(\"Corrupted file\");","lastModifiedDate":"2024-02-21"},{"lineNumber":257,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":258,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":259,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":260,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":261,"author":{"gitId":"tayponghee"},"content":"     * Processes the command and creates a corresponding Task object.","lastModifiedDate":"2024-02-21"},{"lineNumber":262,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":263,"author":{"gitId":"tayponghee"},"content":"     * @param command The command representing the type of task.","lastModifiedDate":"2024-02-21"},{"lineNumber":264,"author":{"gitId":"tayponghee"},"content":"     * @param tokens  An array of tokens from the line.","lastModifiedDate":"2024-02-21"},{"lineNumber":265,"author":{"gitId":"tayponghee"},"content":"     * @return A Task object based on the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":266,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":267,"author":{"gitId":"tayponghee"},"content":"    private static Task commandCases(String command, String[] tokens) {","lastModifiedDate":"2024-02-21"},{"lineNumber":268,"author":{"gitId":"tayponghee"},"content":"        Task newTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":269,"author":{"gitId":"tayponghee"},"content":"        switch (command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":270,"author":{"gitId":"tayponghee"},"content":"        case TODO:","lastModifiedDate":"2024-02-21"},{"lineNumber":271,"author":{"gitId":"tayponghee"},"content":"            newTask \u003d new Todo(tokens[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":272,"author":{"gitId":"tayponghee"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":273,"author":{"gitId":"tayponghee"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-21"},{"lineNumber":274,"author":{"gitId":"tayponghee"},"content":"            newTask \u003d new Deadline(tokens[1], tokens[2]);","lastModifiedDate":"2024-02-20"},{"lineNumber":275,"author":{"gitId":"tayponghee"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":276,"author":{"gitId":"tayponghee"},"content":"        case EVENT:","lastModifiedDate":"2024-02-21"},{"lineNumber":277,"author":{"gitId":"tayponghee"},"content":"            newTask \u003d new Event(tokens[1], tokens[2], tokens[3]);","lastModifiedDate":"2024-02-20"},{"lineNumber":278,"author":{"gitId":"tayponghee"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":279,"author":{"gitId":"tayponghee"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":280,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Unknown task type: \" + command);","lastModifiedDate":"2024-02-20"},{"lineNumber":281,"author":{"gitId":"tayponghee"},"content":"            return null;","lastModifiedDate":"2024-02-20"},{"lineNumber":282,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":283,"author":{"gitId":"tayponghee"},"content":"        return newTask;","lastModifiedDate":"2024-02-20"},{"lineNumber":284,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":285,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":286,"author":{"gitId":"tayponghee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":287,"author":{"gitId":"tayponghee"},"content":"     * Checks if a task already exists in the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":288,"author":{"gitId":"tayponghee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":289,"author":{"gitId":"tayponghee"},"content":"     * @param newTask The task to check for existence.","lastModifiedDate":"2024-02-21"},{"lineNumber":290,"author":{"gitId":"tayponghee"},"content":"     * @return True if the task exists, false otherwise.","lastModifiedDate":"2024-02-21"},{"lineNumber":291,"author":{"gitId":"tayponghee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":292,"author":{"gitId":"tayponghee"},"content":"    private static boolean taskExists(Task newTask) {","lastModifiedDate":"2024-02-20"},{"lineNumber":293,"author":{"gitId":"tayponghee"},"content":"        for (Task existingTask : taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":294,"author":{"gitId":"tayponghee"},"content":"            if (existingTask.equals(newTask)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":295,"author":{"gitId":"tayponghee"},"content":"                return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":296,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":297,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":298,"author":{"gitId":"tayponghee"},"content":"        return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":299,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":300,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":301,"author":{"gitId":"tayponghee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":302,"author":{"gitId":"tayponghee"},"content":"        readFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":303,"author":{"gitId":"tayponghee"},"content":"        Ui.printStartingMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":304,"author":{"gitId":"tayponghee"},"content":"        userCommand();","lastModifiedDate":"2024-02-21"},{"lineNumber":305,"author":{"gitId":"tayponghee"},"content":"        writeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":306,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":307,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"tayponghee":307}},{"path":"src/main/java/DavinciException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"class DavinciException extends Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    public DavinciException(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"        super(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"tayponghee":5}},{"path":"src/main/java/DavinciFileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"public class DavinciFileHandler {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public static List\u003cString\u003e readFile(String filePath) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"        Path myPath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"        createDirectories(myPath.getParent());","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"        if (!Files.exists(myPath)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"Creating file: \" + filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"                Files.createFile(myPath);","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"                throw e;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"        return Files.readAllLines(myPath);","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public static void writeFile(String filePath, List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"        Path myPath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"        createDirectories(myPath.getParent());","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Writing to file: \" + filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"            Files.write(myPath, lines);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error writing file: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"            throw e;","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"    public static void createDirectories(Path directory) throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"            Files.createDirectories(directory);","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"        } catch (FileAlreadyExistsException ignored) {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Error creating directories: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"            throw e;","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tayponghee":48}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    protected String by;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"        return description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"deadline/%s/%s/%s\", description, by, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    private String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    private String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        return description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"event/%s/%s/%s/%s\", description, from, to, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":27}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"public class Parser {","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public static final String ARE_YOU_MUTE \u003d \"... are you mute?\";","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"    public static final String GOODBYE \u003d \"Goodbye... It may be a mere few seconds for you but an eternity for me.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"    public static final String BRO_SAY_SOMETHING_THAT_I_CAN_UNDERSTAND \u003d \"Bro, say something that I can understand.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    public static final String INVALID_TASK_INDEX \u003d \"Invalid task index\";","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    public static final String GOOD_JOB \u003d \"Nice job! I\u0027ve marked this task as done :D\";","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public static final String SPECIFY_INDEX \u003d \"Please specify the task index\";","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    public static final String MARKED_AS_NOT_DONE \u003d \"OK, I\u0027ve marked this task as not done, but stop being lazy!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"    public static void parseUserInput(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(ARE_YOU_MUTE);","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"            return;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"        if (userInput.equalsIgnoreCase(DavinciBot.BYE)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(GOODBYE);","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.equalsIgnoreCase(DavinciBot.LIST)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"            Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.toLowerCase().startsWith(DavinciBot.MARK)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"            completeTask(userInput, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"        } else if (userInput.toLowerCase().startsWith(DavinciBot.UNMARK)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"            unmarkTask(userInput, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(BRO_SAY_SOMETHING_THAT_I_CAN_UNDERSTAND);","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"    private static void completeTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", DavinciBot.SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"            checkIfTaskCanBeCompleted(parts, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + INVALID_TASK_INDEX + \" format.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"    private static void checkIfTaskCanBeCompleted(String[] parts, List\u003cTask\u003e taskList) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"                taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(GOOD_JOB);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"                Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"                DavinciBot.writeFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(INVALID_TASK_INDEX + \".\");","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(SPECIFY_INDEX + \" to complete.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"    private static void unmarkTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"            String[] parts \u003d userInput.split(\" \", DavinciBot.SPLIT_INTO_TWO_PARTS);","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"            checkIfTaskCanBeUnmarked(parts, taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"        } catch (DavinciException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"            Ui.printMessage(\"Error: \" + INVALID_TASK_INDEX + \" format.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"    private static void checkIfTaskCanBeUnmarked(String[] parts, List\u003cTask\u003e taskList) throws DavinciException {","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"tayponghee"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"tayponghee"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"tayponghee"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"tayponghee"},"content":"                taskList.get(taskIndex).markAsNotDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"tayponghee"},"content":"                Ui.printMessage(MARKED_AS_NOT_DONE);","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"tayponghee"},"content":"                Ui.displayTaskList(taskList);","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"tayponghee"},"content":"                DavinciBot.writeFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"tayponghee"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"tayponghee"},"content":"                throw new DavinciException(INVALID_TASK_INDEX + \".\");","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"tayponghee"},"content":"            throw new DavinciException(SPECIFY_INDEX + \" to unmark.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tayponghee":84}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"        return description;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"        return isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"%s/%s\", getDescription(), isDone() ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        return String.format(\"todo/%s/%s\", description, isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"tayponghee":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayponghee"},"content":"import java.util.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tayponghee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tayponghee"},"content":"public class Ui {","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tayponghee"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tayponghee"},"content":"    public static void printStartingMessage() {","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Sup! I\u0027m DavinciBot! I was the smartest man alive, but now I am just a list maker.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Enter commands, and I will echo them back to you, as well as add them to your list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"If there were things in your list that you previously had,\" +","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tayponghee"},"content":"                \" I will show what you have told me previously.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027bye\u0027 to end the conversation.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027list\u0027 to see your to-do list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027mark\u0027 to mark a task as done.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027unmark\u0027 to mark a task as not done.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027todo \u003cwork\u003e\u0027 to add a task to the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027deadline \u003cdescription\u003e /by \u003cdeadline\u003e\u0027 to add a task with a deadline to the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027 to add an event to the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Type \u0027delete \u003cindex\u003e\u0027 to delete a task from your list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"See ya bucko!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"tayponghee"},"content":"    public static String getUserInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tayponghee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"tayponghee"},"content":"        System.out.print(\"What do you want me to do? \");","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tayponghee"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tayponghee"},"content":"    public static void displayTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tayponghee"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"No tasks entered yet.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"tayponghee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tayponghee"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tayponghee"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tayponghee"},"content":"                String taskType;","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tayponghee"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tayponghee"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tayponghee"},"content":"                    taskType \u003d \"[D]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tayponghee"},"content":"                } else if (task instanceof Todo) {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tayponghee"},"content":"                    taskType \u003d \"[T]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tayponghee"},"content":"                } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tayponghee"},"content":"                    taskType \u003d \"[E]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tayponghee"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tayponghee"},"content":"                System.out.println((i + 1) + \". \" + taskType +","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tayponghee"},"content":"                        \" [\" + task.getStatusIcon() + \"] \" +","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"tayponghee"},"content":"                        task.getDescription());","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tayponghee"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tayponghee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tayponghee"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tayponghee"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tayponghee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"tayponghee"},"content":"    public static void echoTask(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"tayponghee"},"content":"        Task addedTask \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"tayponghee"},"content":"        System.out.println(addedTask.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"tayponghee"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"tayponghee"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"tayponghee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"tayponghee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tayponghee":69}}]
