[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"# JigaChat, a task tracking chatbot!","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"## A CLI based chatbot that helps you keep track of your tasks","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"* Remembers your previous session so you dont have to keep it running","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"* Quickly list all your tasks for a quick overview","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"* Find tasks by name","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"* Delete tasks once they are done","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"* Three different types of tasks, To Dos, Deadlines and Events to suit your needs","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"## How to run","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"\u003e ### If you move the jar file to a different folder, remember to navigate to that folder before running any commands","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"1. Download the [latest release](https://github.com/alalal47/ip/releases/tag/A-Release) of JigaChat","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"2. Make sure you have java installed","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"3. Open a terminal of your choice and navigate to the folder where the jar file is downloaded","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"4. Run the chatbot by typing ```java -jar JigaChatIP.jar```","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"5. Type \"help\" to open the help menu and learn how to use the various functions of the chatbot","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"6. Type bye to exit and close the chatbot","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"alalal47":16,"-":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"# JigaChat, a task tracking chatbot!","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"## A CLI based chatbot that helps you keep track of your tasks","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"* Remembers your previous session so you dont have to keep it running","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"* Quickly list all your tasks for a quick overview","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"* Find tasks by name","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"* Delete tasks once they are done","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"* Three different types of tasks, To Dos, Deadlines and Events to suit your needs","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"## How to run","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"\u003e ### If you move the jar file to a different folder, remember to navigate to that folder before running any commands","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"1. Download the [latest release](https://github.com/alalal47/ip/releases/tag/A-Release) of JigaChat","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"2. Make sure you have java installed","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"3. Open a terminal of your choice and navigate to the folder where the jar file is downloaded","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"4. Run the chatbot by typing ```java -jar JigaChatIP.jar```","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"5. Type \"help\" to open the help menu and learn how to use the various functions of the chatbot","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"6. Type bye to exit and close the chatbot","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"alalal47":18}},{"path":"src/main/java/DataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"public class DataFile {","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"    File data \u003d new File(\"tasks.txt\");","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"     * Writes a String to the data File","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"     * @param textToAdd text to be written","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"     * @throws IOException exception in case writing fails","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"    protected void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"        FileWriter fw \u003d new FileWriter(this.data);","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"        fw.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"     * Appends text to the end of the data file","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"alalal47"},"content":"     * @param textToAdd text to be appended","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"alalal47"},"content":"     * @throws IOException exception in case appending fails","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"alalal47"},"content":"    protected void appendToFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"alalal47"},"content":"        FileWriter fw \u003d new FileWriter(this.data, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"alalal47"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"alalal47"},"content":"        fw.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"alalal47"},"content":"     * Appends text at the start of the data file","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"alalal47"},"content":"     * @param textToAdd text to be appended","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"alalal47"},"content":"     * @throws IOException exception in case appending fails","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"alalal47"},"content":"    protected void appendAtFirstLine(String textToAdd) throws IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"alalal47"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"alalal47"},"content":"        Scanner scanner \u003d new Scanner(data);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"alalal47"},"content":"        scanner.nextLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"alalal47"},"content":"        if (scanner.hasNext()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"alalal47"},"content":"            temp \u003d scanner.useDelimiter(\"\\\\A\").next();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"alalal47"},"content":"        writeToFile(textToAdd);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"alalal47"},"content":"        appendToFile(temp);","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"alalal47":45}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"    protected String by;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"        System.out.println (getTypeIcon() + getStatusIcon() + \" \" +  this.description + \" (by: \" + this.by + \")\");","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"        return \"[D]\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"alalal47":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"        protected String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"    protected String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"        System.out.println (getTypeIcon() + getStatusIcon()+ \" \" + this.description + \" (from: \" + this.from + \" to: \"+ this.to + \")\");","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"        return \"[E]\";","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"alalal47":20}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"alalal47":3}},{"path":"src/main/java/JigaChat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"public class JigaChat {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"    static protected DataFile previousData \u003d new DataFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"    static protected Parser Parser \u003d new Parser();","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"     * Initialises the user\u0027s previous data from the previousData text file","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"    private void initialisePreviousData() {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"            String input;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"            Scanner readPreviousData \u003d new Scanner(previousData.data);","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"            input \u003d readPreviousData.nextLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"            TaskHandler.taskCounter \u003d Integer.parseInt(input);","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"            while (readPreviousData.hasNext()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"alalal47"},"content":"                input \u003d readPreviousData.nextLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"alalal47"},"content":"                Parser.readCommandWithoutPrints(input);","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"alalal47"},"content":"        catch(FileNotFoundException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"alalal47"},"content":"     * Starts the chatbot, initialises the previous data as well as handles certain prints that are only used on","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"alalal47"},"content":"     * startup","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"alalal47"},"content":"     * @param args not expected","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"alalal47"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"Hello! I\u0027m JigaChat\");","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"What can I do for you? Type [help] to learn how to use JigaChat!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"alalal47"},"content":"        JigaChat chat \u003d new JigaChat();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"alalal47"},"content":"        if (!chat.previousData.data.exists()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"No existing data was found!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"alalal47"},"content":"                if (chat.previousData.data.createNewFile()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"alalal47"},"content":"                    System.out.println(\"New data file created\");","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"alalal47"},"content":"                    chat.previousData.writeToFile(\"0\");","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"alalal47"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"alalal47"},"content":"                else {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"alalal47"},"content":"                    System.out.println(\"File creation failed\");","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"alalal47"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"alalal47"},"content":"            catch(IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"alalal47"},"content":"        else {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"alalal47"},"content":"                chat.initialisePreviousData();","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"Data from your previous session was loaded\");","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"alalal47"},"content":"            catch(NoSuchElementException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"alalal47"},"content":"                try {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"Previous Data corrupted and will be deleted!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"alalal47"},"content":"                    chat.previousData.writeToFile(\"0\");","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"alalal47"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"alalal47"},"content":"                catch(IOException ex) {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"alalal47"},"content":"                    System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"alalal47"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"alalal47"},"content":"        while (1 \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"alalal47"},"content":"            String input;","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"alalal47"},"content":"            Scanner in \u003d new Scanner(System.in, StandardCharsets.UTF_8);","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"alalal47"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"alalal47"},"content":"            Parser.readCommand(input);","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"alalal47":76}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"public class Parser {","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"     * Parses the command that the user passes in, based on what command the user inputs.","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"     * If the command is invalid, handles the exception thrown.","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"     * Returns at the end of each case, to restart without entering other cases.","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"     * @param input input from the user","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"    protected static void readCommand(String input) {","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"        String[] commands \u003d new String[2];","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"        commands \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"        switch(commands[0]) {","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"        case \"help\":","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"            Printer.printCommandList();","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"alalal47"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"alalal47"},"content":"                JigaChat.previousData.appendToFile(input + \"\\n\");","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"alalal47"},"content":"                TaskHandler.removeFromList(Integer.parseInt(commands[1]) - 1);","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"alalal47"},"content":"            catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"alalal47"},"content":"                Printer.printDeleteCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"alalal47"},"content":"            catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"alalal47"},"content":"        case \"list\":","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"alalal47"},"content":"            Printer.printList();","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"alalal47"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"alalal47"},"content":"                TaskHandler.taskList.get(Integer.parseInt(commands[1]) - 1).markAsDone();","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"JigaChat has marked task \" + (Integer.parseInt(commands[1])) + \" as done!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"alalal47"},"content":"                JigaChat.previousData.appendToFile(input + \"\\n\");","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"alalal47"},"content":"            catch (NullPointerException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"alalal47"},"content":"                System.out.println(commands[1] + \" is not in your list!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"alalal47"},"content":"            catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"alalal47"},"content":"                Printer.printMarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"alalal47"},"content":"            catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"alalal47"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"alalal47"},"content":"                TaskHandler.taskList.get(Integer.parseInt(commands[1]) - 1).markAsUndone();","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"JigaChat has marked task \" + (Integer.parseInt(commands[1])) + \" as not done!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"alalal47"},"content":"                JigaChat.previousData.appendToFile(input + \"\\n\");","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"alalal47"},"content":"            catch (NullPointerException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"alalal47"},"content":"                System.out.println(commands[1] + \" is not in your list!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"alalal47"},"content":"            catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"alalal47"},"content":"                Printer.printUnmarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"alalal47"},"content":"            catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"alalal47"},"content":"        case \"find\":","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"alalal47"},"content":"                TaskHandler.findInTaskList(commands[1]);","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"alalal47"},"content":"            catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"alalal47"},"content":"                Printer.printFindCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"alalal47"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"alalal47"},"content":"            TaskHandler.addToList(commands);","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"alalal47"},"content":"            JigaChat.previousData.appendToFile(input + \"\\n\");","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"alalal47"},"content":"        catch(InvalidCommandException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Command \" + input + \" is not recognised!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"alalal47"},"content":"        catch(ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Type [help] to learn how to add tasks\");","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"alalal47"},"content":"        catch(IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"alalal47"},"content":"     * Parses the command that the user passes in, based on what command the user inputs.","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"alalal47"},"content":"     * If the command is invalid, handles the exception thrown.","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"alalal47"},"content":"     * Returns at the end of each case, to restart without entering other cases.","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"alalal47"},"content":"     * Same as readCommand, but does not print any text, used in initialisation of previous user data","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"alalal47"},"content":"     * @param input input from the previous data text file","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"alalal47"},"content":"    protected static void readCommandWithoutPrints(String input) {","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"alalal47"},"content":"        String[] commands \u003d new String[2];","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"alalal47"},"content":"        commands \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"alalal47"},"content":"        switch(commands[0]) {","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"alalal47"},"content":"        case \"help\":","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"alalal47"},"content":"            Printer.printCommandList();","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"alalal47"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"alalal47"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"alalal47"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"alalal47"},"content":"            TaskHandler.removeFromListWithoutPrints(Integer.parseInt(commands[1]) - 1);","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"alalal47"},"content":"        case \"list\":","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"alalal47"},"content":"            Printer.printList();","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"alalal47"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"alalal47"},"content":"                TaskHandler.taskList.get(Integer.parseInt(commands[1]) - 1).markAsDoneWithoutPrints();","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"alalal47"},"content":"            catch (NullPointerException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"alalal47"},"content":"                System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"alalal47"},"content":"            catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"alalal47"},"content":"                Printer.printMarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"alalal47"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"alalal47"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"alalal47"},"content":"                TaskHandler.taskList.get(Integer.parseInt(commands[1]) - 1).markAsUndoneWithoutPrints();","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"alalal47"},"content":"            catch (NullPointerException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"alalal47"},"content":"                System.out.println(commands[1] + \" is not in your list!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"alalal47"},"content":"            catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"alalal47"},"content":"                Printer.printUnmarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"alalal47"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"alalal47"},"content":"            TaskHandler.addToListWithoutPrints(commands);","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"alalal47"},"content":"        catch(InvalidCommandException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"alalal47"},"content":"        catch(ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Type [help] to learn how to add tasks\");","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"alalal47":150}},{"path":"src/main/java/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"public class Printer {","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"     * Prints all the functions that the chatbot has, as well as the commands to use them and how to use them","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"    protected static void printCommandList() {","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"        printTodoCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"        printDeadlineCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"        printEventCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"        printListCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"        printDeleteCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"        printMarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"        printUnmarkCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"        printFindCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"    protected static void printUnmarkCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"unmark [task index]                         Marks a task in your list as not done\");","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"    protected static void printMarkCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"mark [task index]                           Marks a task in your list as done\");","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"alalal47"},"content":"    private static void printListCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"list                                        Displays a list of all tasks and their statuses as well as types\");","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"alalal47"},"content":"    private static void printEventCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"event [description] /from [from] /to [to]   Adds a new event to your list\");","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"alalal47"},"content":"    private static void printDeadlineCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"deadline [description] /by [by]             Adds a new deadline to your list\");","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"alalal47"},"content":"    private static void printTodoCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"todo [description]                          Adds a new todo to your list\");","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"alalal47"},"content":"    static void printDeleteCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"delete [task index]                         Removes a task from your list\");","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"alalal47"},"content":"    protected static void printFindCommand() {","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"find [description]                          Finds matching tasks in your list\");","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"alalal47"},"content":"     * Prints all the tasks in the task list","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"alalal47"},"content":"    protected static void printList() {","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"alalal47"},"content":"        if (TaskHandler.taskCounter \u003d\u003d 0) {","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"alalal47"},"content":"            System.out.println (\"Your list is empty!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"alalal47"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"alalal47"},"content":"        if (TaskHandler.taskCounter !\u003d 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"alalal47"},"content":"            System.out.print(\"Here are the tasks\");","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"alalal47"},"content":"        else {","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"alalal47"},"content":"            System.out.print(\"Here is the task\");","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"alalal47"},"content":"        System.out.println(\" in your list:\");","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"alalal47"},"content":"        for (int i \u003d 0; i \u003c TaskHandler.taskCounter; i ++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"alalal47"},"content":"            System.out.print((i + 1) + \". \");","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"alalal47"},"content":"            TaskHandler.taskList.get(i).printTask();","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"alalal47":69}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"     * Sets the status of a task to \"Done\"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"     * Prints out the type icon of the task as well as its \"Done\" status and description.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"        System.out.println(getTypeIcon() + getStatusIcon() + this.description);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"    public void markAsDoneWithoutPrints() {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"alalal47"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"alalal47"},"content":"     * Sets the status of a task to \"Not Done\"","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"alalal47"},"content":"     * Prints out the type icon of the task as well as its \"Done\" status and description.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"alalal47"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"alalal47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"alalal47"},"content":"        System.out.println(getTypeIcon() + getStatusIcon() + this.description);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"alalal47"},"content":"    public void markAsUndoneWithoutPrints() {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"alalal47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"alalal47"},"content":"     * Returns an icon based on the \"Done\" status of the task, [X} if done and [ ] if not done","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"alalal47"},"content":"     * @return status icon of the task","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"alalal47"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"alalal47"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"alalal47"},"content":"     * Prints all relevant info relating to a task, such as its type, \"Done\" status and description","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"alalal47"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"alalal47"},"content":"        return;","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"alalal47"},"content":"     * Returns the type icon of the task, \"[T]\" if ToDo, \"[E]\" if Event, \"[D]\" if Deadline","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"alalal47"},"content":"     * @return type icon of the task","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"alalal47"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"alalal47"},"content":"        return \"?\";","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"alalal47":59}},{"path":"src/main/java/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"public class TaskHandler {","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"    static protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"    static protected int taskCounter \u003d 0;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"     * Adds a new task to the list, its type based on the input from the user, handles the various variables that","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"     * different task types have, such as by for deadlines and to and from for events, it handles these differently","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"     * based on the task type.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"     * Also handles the writing or appending to the data file for addition of new tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"     * @param taskToAdd description and relevant info for the variables of the task","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"     * @throws InvalidCommandException if the user uses the command incorrectly, throw this exception","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"alalal47"},"content":"    protected static void addToList(String[] taskToAdd) throws InvalidCommandException {","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"alalal47"},"content":"        if (taskToAdd[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"alalal47"},"content":"            ToDo todoToAdd \u003d new ToDo(taskToAdd[1]);","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"alalal47"},"content":"            taskList.add(todoToAdd);","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"alalal47"},"content":"        } else if (taskToAdd[0].equals(\"deadline\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"alalal47"},"content":"            String[] deadline \u003d taskToAdd[1].split(\"/\", 2);","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"alalal47"},"content":"            String by \u003d deadline[1].substring(3);","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"alalal47"},"content":"            String description \u003d deadline[0].substring(0, deadline[0].length() - 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"alalal47"},"content":"            Deadline deadlineToAdd \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"alalal47"},"content":"            taskList.add(deadlineToAdd);","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"alalal47"},"content":"        } else if (taskToAdd[0].equals(\"event\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"alalal47"},"content":"            String[] event \u003d taskToAdd[1].split(\"/\", 3);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"alalal47"},"content":"            String description \u003d event[0].substring(0, event[0].length() - 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"alalal47"},"content":"            String from \u003d event[1].substring(5, event[1].length() - 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"alalal47"},"content":"            String to \u003d event[2].substring(3);","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"alalal47"},"content":"            Event eventToAdd \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"alalal47"},"content":"            taskList.add(eventToAdd);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"alalal47"},"content":"        } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"alalal47"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"The following task has been added: \");","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"alalal47"},"content":"        taskList.get(taskCounter).printTask();","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"alalal47"},"content":"        taskCounter++;","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"alalal47"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"alalal47"},"content":"            String taskCounterString \u003d taskCounter + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"alalal47"},"content":"            JigaChat.previousData.appendAtFirstLine(taskCounterString);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"alalal47"},"content":"        catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"alalal47"},"content":"        System.out.print(\"You have \" + taskCounter + \" task\");","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"alalal47"},"content":"        if (taskCounter !\u003d 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"alalal47"},"content":"            System.out.print(\"s\");","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"alalal47"},"content":"        System.out.println(\" in your list.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"alalal47"},"content":"     * Adds a new task to the list, its type based on the input from the user, handles the various variables that","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"alalal47"},"content":"     * different task types have, such as by for deadlines and to and from for events, it handles these differently","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"alalal47"},"content":"     * based on the task type.","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"alalal47"},"content":"     * Same as addToList, except that does not print any text, used for the initialisation of previous data, also does","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"alalal47"},"content":"     * not make changes to the user file.","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"alalal47"},"content":"     * @param taskToAdd description and relevant info for the variables of the task","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"alalal47"},"content":"     * @throws InvalidCommandException if the user uses the command incorrectly, throw this exception","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"alalal47"},"content":"    protected static void addToListWithoutPrints(String[] taskToAdd) throws InvalidCommandException {","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"alalal47"},"content":"        if (taskToAdd[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"alalal47"},"content":"            ToDo todoToAdd \u003d new ToDo(taskToAdd[1]);","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"alalal47"},"content":"            taskList.add(todoToAdd);","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"alalal47"},"content":"        } else if (taskToAdd[0].equals(\"deadline\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"alalal47"},"content":"            String[] deadline \u003d taskToAdd[1].split(\"/\", 2);","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"alalal47"},"content":"            String by \u003d deadline[1].substring(3);","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"alalal47"},"content":"            String description \u003d deadline[0].substring(0, deadline[0].length() - 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"alalal47"},"content":"            Deadline deadlineToAdd \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"alalal47"},"content":"            taskList.add(deadlineToAdd);","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"alalal47"},"content":"        } else if (taskToAdd[0].equals(\"event\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"alalal47"},"content":"            String[] event \u003d taskToAdd[1].split(\"/\", 3);","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"alalal47"},"content":"            String description \u003d event[0].substring(0, event[0].length() - 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"alalal47"},"content":"            String from \u003d event[1].substring(5, event[1].length() - 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"alalal47"},"content":"            String to \u003d event[2].substring(3);","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"alalal47"},"content":"            Event eventToAdd \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"alalal47"},"content":"            taskList.add(eventToAdd);","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"alalal47"},"content":"        } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"alalal47"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"alalal47"},"content":"     * Removes a task from the task list, based on its index in the task list, as well as prints text specific to the","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"alalal47"},"content":"     * removeFromList method. Also handles the writing of the deletion to the data file.","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"alalal47"},"content":"     * Performs minor optimisation by emptying the data file if the tasks in the task list ever reach 0. If the index","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"alalal47"},"content":"     * input is not in the list, prints out text to inform the user.","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"alalal47"},"content":"     * @param taskIndex index in the task list of the task to be removed","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"alalal47"},"content":"    protected static void removeFromList(int taskIndex) {","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"alalal47"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"alalal47"},"content":"            taskList.get(taskIndex).printTask();","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Has been removed from your list\");","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"alalal47"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"alalal47"},"content":"            taskCounter--;","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"alalal47"},"content":"            String taskCounterString \u003d taskCounter + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"alalal47"},"content":"            if (taskCounter \u003d\u003d 0) {","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"alalal47"},"content":"                JigaChat.previousData.writeToFile(\"0\");","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"alalal47"},"content":"            } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"alalal47"},"content":"                JigaChat.previousData.appendAtFirstLine(taskCounterString);","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"You have \" + taskCounter + \" tasks in your list\");","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"alalal47"},"content":"        catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"File writing/reading failed!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"alalal47"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"alalal47"},"content":"            System.out.println(\"Task \" + taskIndex + \" is not in your list!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"alalal47"},"content":"     * Removes a task from the task list, based on its index in the task list, as well as prints text specific to the","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"alalal47"},"content":"     * removeFromList method. Except it does not print any text, or make any changes to the data file.","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"alalal47"},"content":"     * @param taskIndex index in the task list of the task to be removed","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"alalal47"},"content":"    protected static void removeFromListWithoutPrints(int taskIndex) {","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"alalal47"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"alalal47"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"alalal47"},"content":"     * Finds if a task in the task list has a description that matches the text input by the user and prints it out,","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"alalal47"},"content":"     * the index printed out is just formatting for the print and not the actual index of the task, can print more than","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"alalal47"},"content":"     * 1 task if multiple tasks contain matches for the text input. If a match is not found, prints out text to inform","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"alalal47"},"content":"     * the user.","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"alalal47"},"content":"     * @param text text to find matches for in task descriptions","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"alalal47"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"alalal47"},"content":"    protected static void findInTaskList(String text) {","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"alalal47"},"content":"        boolean exists \u003d false;","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"alalal47"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"alalal47"},"content":"        System.out.println(\"JigaChat has found the following matching task(s)\");","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"alalal47"},"content":"        for (int i \u003d 0; i \u003c taskCounter; i++) {","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"alalal47"},"content":"            if (taskList.get(i).description.contains(text)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"alalal47"},"content":"                counter ++;","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"alalal47"},"content":"                System.out.print(counter + \". \");","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"alalal47"},"content":"                taskList.get(i).printTask();","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"alalal47"},"content":"                exists \u003d true;","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"alalal47"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"alalal47"},"content":"        if (!exists) {","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"alalal47"},"content":"            System.out.println(text + \" is not in your list!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"alalal47"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"alalal47":149}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alalal47"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"alalal47"},"content":"        public ToDo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"alalal47"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"alalal47"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"alalal47"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"alalal47"},"content":"        System.out.println (getTypeIcon() + getStatusIcon() + \" \" +  this.description);","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"alalal47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"alalal47"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"alalal47"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"alalal47"},"content":"        return \"[T]\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"alalal47"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"alalal47"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"alalal47":15}}]
