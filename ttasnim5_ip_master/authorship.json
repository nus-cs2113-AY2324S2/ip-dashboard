[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"# src.main.java.referenceFiles.Duke project template","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ttasnim5"},"content":"3. After that, locate the `src/main/java/src.main.java.referenceFiles.Duke.java` file, right-click it, and choose `Run src.main.java.referenceFiles.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ttasnim5":2,"-":22}},{"path":"src/main/java/Nanami.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.task.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.task.ToDo;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.DeadlineMismatchedParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.EmptyTaskException;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.EventMismatchedParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.ToDoMismatchedParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ttasnim5"},"content":"import java.io.*;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ttasnim5"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ttasnim5"},"content":"public class Nanami {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ttasnim5"},"content":"    private static Task[] tasklist \u003d new Task[100];","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ttasnim5"},"content":"    private static int taskcount;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ttasnim5"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ttasnim5"},"content":"    private static boolean applicationOpen \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ttasnim5"},"content":"    private static String filepath \u003d \"taskDrive.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ttasnim5"},"content":"    private static File outfile \u003d new File(filepath);","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ttasnim5"},"content":"    private static FileWriter overwriter, appender;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ttasnim5"},"content":"    public static void main(String args[]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ttasnim5"},"content":"        // driver code to begin the application","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ttasnim5"},"content":"        loadData();","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ttasnim5"},"content":"        // clear the screen of loading data","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ttasnim5"},"content":"        System.out.print(\"\\033[H\\033[2J\");","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ttasnim5"},"content":"        System.out.flush();","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ttasnim5"},"content":"        giveIntroduction();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ttasnim5"},"content":"        while (applicationOpen) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ttasnim5"},"content":"            String input \u003d readUserInput().trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ttasnim5"},"content":"            String [] commandWords \u003d input.split(\"\\\\s+\"); // cuts phrases at spaces into an array","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ttasnim5"},"content":"            if (input.equals(\"\")) { // check for empty string","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"You gotta give me something to work with here.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ttasnim5"},"content":"            // one-word commands","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ttasnim5"},"content":"            if (input.equals(\"bye\") || input.equals(\"Bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ttasnim5"},"content":"                // if the command is exactly \u0027bye\u0027 or \u0027Bye\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ttasnim5"},"content":"                giveFarewell();","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ttasnim5"},"content":"                applicationOpen \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ttasnim5"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ttasnim5"},"content":"                    updateFile(0);","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ttasnim5"},"content":"                    appender \u003d new FileWriter(outfile, true);","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ttasnim5"},"content":"                    appender.write(\"xx\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ttasnim5"},"content":"                    appender.flush();","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ttasnim5"},"content":"                    appender.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ttasnim5"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ttasnim5"},"content":"                    System.out.println(\"proper file closing failed lol\");","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ttasnim5"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ttasnim5"},"content":"            } else if (input.equals(\"list\") || input.equals(\"List\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ttasnim5"},"content":"                // if the command is exactly \u0027list\u0027 or \u0027List\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ttasnim5"},"content":"                displayTaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ttasnim5"},"content":"            else if (commandWords[0].equals(\"mark\") || commandWords[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ttasnim5"},"content":"                if (commandWords.length !\u003d 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ttasnim5"},"content":"                    System.out.println(\"You just need a task number with that order.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ttasnim5"},"content":"                } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ttasnim5"},"content":"                    changeTaskMarker(commandWords);","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ttasnim5"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ttasnim5"},"content":"            } else if (commandWords[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ttasnim5"},"content":"                deleteTask(commandWords[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"ttasnim5"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ttasnim5"},"content":"                addToList(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"ttasnim5"},"content":"    private static void deleteTask(String word) {","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"ttasnim5"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"ttasnim5"},"content":"            int taskNumber \u003d Integer.parseInt(word);","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"ttasnim5"},"content":"            if (taskNumber \u003e taskcount || taskNumber \u003c 0) { // if the task does not exist in the tasklist","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"That task isn\u0027t on record. Look at it again.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"ttasnim5"},"content":"                return;","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ttasnim5"},"content":"            for (int i \u003d taskNumber; i \u003c taskcount; i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ttasnim5"},"content":"                tasklist[i] \u003d tasklist[i + 1];","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"ttasnim5"},"content":"            Task currTask \u003d tasklist[taskNumber];","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ttasnim5"},"content":"            taskcount--;","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"ttasnim5"},"content":"            updateFile(0);","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"Okay, I\u0027ve scrapped \" + currTask.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"ttasnim5"},"content":"            displayTaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"ttasnim5"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"If you want me to delete a task, I need a task number with it.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"ttasnim5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"no save file :(\");","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"ttasnim5"},"content":"    private static void changeTaskMarker(String[] commandWords) {","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"ttasnim5"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"ttasnim5"},"content":"            int taskNumber \u003d Integer.parseInt(commandWords[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"ttasnim5"},"content":"            if (taskNumber \u003e\u003d taskcount || taskNumber \u003c 0) { // if the task does not exist in the tasklist","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"That task isn\u0027t on record. Look at it again.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"ttasnim5"},"content":"                return;","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"ttasnim5"},"content":"            if (commandWords[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"ttasnim5"},"content":"                tasklist[taskNumber].markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"I\u0027ve marked [\" + taskNumber + \"] as completed.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"ttasnim5"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"ttasnim5"},"content":"                tasklist[taskNumber].markAsUndone();","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"I\u0027ve marked [\" + taskNumber + \"] as uncompleted.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"ttasnim5"},"content":"            updateFile(0);","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"ttasnim5"},"content":"            displayTaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"ttasnim5"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"If you need me to mark or unmark a task, I need a task number right after the command word.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"ttasnim5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"no save file :(\");","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ttasnim5"},"content":"    private static void giveIntroduction() {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ttasnim5"},"content":"        // print a visual introduction when application is open","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"\\n\\t» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «»\");","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"\\t|\\\\    |   /\\\\     |\\\\    |   /\\\\     | \\\\     /|  |\");","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"\\t|  \\\\  |  /---\\\\   |  \\\\  |  /---\\\\   |   \\\\  / |  |\");","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"\\t|    \\\\| /     \\\\  |    \\\\| /     \\\\  |    \\\\/  |  |\");","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"\\t» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «»\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"» Hello. I am Nanami, your task-manager.\\n» What can I do for you?\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"ttasnim5"},"content":"    private static void giveFarewell() {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"ttasnim5"},"content":"        // print a farewell to user","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"» Until next time. Goodbye.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"ttasnim5"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"ttasnim5"},"content":"            appender \u003d new FileWriter(outfile, true);","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"ttasnim5"},"content":"            appender.write(\"xx\");","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"ttasnim5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"could not end the file properly\");","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"ttasnim5"},"content":"    private static void addToList(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"ttasnim5"},"content":"        // add user\u0027s input to an array of tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ttasnim5"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"ttasnim5"},"content":"            return;","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"ttasnim5"},"content":"        String[] inputArray \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"ttasnim5"},"content":"        if (inputArray[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"ttasnim5"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"ttasnim5"},"content":"                ToDo newTask \u003d new ToDo(input.split(\"/\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"ttasnim5"},"content":"                tasklist[taskcount++] \u003d newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"ttasnim5"},"content":"                updateFile(1);","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"ttasnim5"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"I can\u0027t store a todo like that. It only needs a description, no attachments using /.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"ttasnim5"},"content":"            } catch (ToDoMismatchedParameterException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"A todo task does not have any attachments using /. I can\u0027t store it like this.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"ttasnim5"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"no save file :(\");","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"ttasnim5"},"content":"        } else if (inputArray[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"ttasnim5"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"ttasnim5"},"content":"                Deadline newTask \u003d new Deadline(input.split(\"/\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"ttasnim5"},"content":"                tasklist[taskcount++] \u003d newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"ttasnim5"},"content":"                updateFile(1);","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"ttasnim5"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"The deadline is missing something. I need the task type, description, and /by attachment. Try again.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"ttasnim5"},"content":"            } catch (DeadlineMismatchedParameterException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"A deadline has a /by attachment only. I can\u0027t store it like this.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"ttasnim5"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"no save file :(\");","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"ttasnim5"},"content":"        } else if (inputArray[0].equals(\"event\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"ttasnim5"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"ttasnim5"},"content":"                Event newTask \u003d new Event(input.split(\"/\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"ttasnim5"},"content":"                tasklist[taskcount++] \u003d newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"ttasnim5"},"content":"                updateFile(1);","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"ttasnim5"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"The event is missing information. I need the task type, description, and /to and /from attachments. Try again.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"ttasnim5"},"content":"            } catch (EventMismatchedParameterException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"An event has a /to attachment and a /from attachment only. I can\u0027t store it like this.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"ttasnim5"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":183,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"no save file :(\");","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"I\u0027m sorry, can you repeat that with the corresponding task type?\\nYou can do a todo task, a deadline task, or an event.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"ttasnim5"},"content":"    private static String readUserInputUnwrapped() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"ttasnim5"},"content":"        // internal function to read a user\u0027s input, process the meaning, and call functions accordingly","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"ttasnim5"},"content":"        BufferedReader in \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"ttasnim5"},"content":"        String input \u003d in.readLine().trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"ttasnim5"},"content":"        return input;","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"ttasnim5"},"content":"    private static String readUserInput() {// wrapper function for reading user input","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"ttasnim5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"ttasnim5"},"content":"            String input \u003d readUserInputUnwrapped();","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"ttasnim5"},"content":"            return input;","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"ttasnim5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"» Sorry, something went wrong.\\n» Try again.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"ttasnim5"},"content":"            return null;","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"ttasnim5"},"content":"    private static void displayTaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"ttasnim5"},"content":"        if (taskcount \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"» You have no tasks in your list currently.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":210,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"» This is your most recently updated tasklist: \");","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"ttasnim5"},"content":"            for (int i \u003d 0; i \u003c taskcount; i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"ttasnim5"},"content":"                System.out.println(\"\\t\" + i + \" \" + tasklist[i].toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":214,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"ttasnim5"},"content":"    private static void updateFile(int mode) throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"ttasnim5"},"content":"        if (mode \u003d\u003d 1) { // just adding to the list","lastModifiedDate":"2024-02-22"},{"lineNumber":220,"author":{"gitId":"ttasnim5"},"content":"            appender \u003d new FileWriter(outfile, true);","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"ttasnim5"},"content":"            appender.write(tasklist[taskcount - 1].sendToFile() + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":222,"author":{"gitId":"ttasnim5"},"content":"            appender.flush();","lastModifiedDate":"2024-02-22"},{"lineNumber":223,"author":{"gitId":"ttasnim5"},"content":"            appender.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"ttasnim5"},"content":"        } else { // in the case of deleting a task, marking a task as done/undone","lastModifiedDate":"2024-02-23"},{"lineNumber":225,"author":{"gitId":"ttasnim5"},"content":"            overwriter \u003d new FileWriter(outfile, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"ttasnim5"},"content":"            for (int i \u003d 0; i \u003c taskcount; i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"ttasnim5"},"content":"                overwriter.write(tasklist[i].sendToFile() + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":228,"author":{"gitId":"ttasnim5"},"content":"                overwriter.flush();","lastModifiedDate":"2024-02-22"},{"lineNumber":229,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":230,"author":{"gitId":"ttasnim5"},"content":"            overwriter.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":231,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":233,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":234,"author":{"gitId":"ttasnim5"},"content":"    private static void loadData() {","lastModifiedDate":"2024-02-22"},{"lineNumber":235,"author":{"gitId":"ttasnim5"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":236,"author":{"gitId":"ttasnim5"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"taskDrive.txt\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":237,"author":{"gitId":"ttasnim5"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":238,"author":{"gitId":"ttasnim5"},"content":"            int count \u003d 0, doneIndex \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":240,"author":{"gitId":"ttasnim5"},"content":"            while ( line !\u003d null \u0026\u0026 ! line.equals(\"xx\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":241,"author":{"gitId":"ttasnim5"},"content":"                String[] pastData \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-23"},{"lineNumber":242,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":243,"author":{"gitId":"ttasnim5"},"content":"                String tasktype \u003d pastData[0].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":244,"author":{"gitId":"ttasnim5"},"content":"                if (tasktype.equals(\"T\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":245,"author":{"gitId":"ttasnim5"},"content":"                    addToList(\"todo \" + pastData[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":246,"author":{"gitId":"ttasnim5"},"content":"                    doneIndex \u003d 2;","lastModifiedDate":"2024-02-22"},{"lineNumber":247,"author":{"gitId":"ttasnim5"},"content":"                } else if (tasktype.equals(\"D\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":248,"author":{"gitId":"ttasnim5"},"content":"                    addToList(\"deadline \" + pastData[1] + \" /by \" + pastData[2]);","lastModifiedDate":"2024-02-22"},{"lineNumber":249,"author":{"gitId":"ttasnim5"},"content":"                    doneIndex \u003d 3;","lastModifiedDate":"2024-02-22"},{"lineNumber":250,"author":{"gitId":"ttasnim5"},"content":"                } else if (tasktype.equals(\"E\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"ttasnim5"},"content":"                    addToList(\"event \" + pastData[1] + \" /from \" + pastData[2] + \" /to \" + pastData[3]);","lastModifiedDate":"2024-02-22"},{"lineNumber":252,"author":{"gitId":"ttasnim5"},"content":"                    doneIndex \u003d 4;","lastModifiedDate":"2024-02-22"},{"lineNumber":253,"author":{"gitId":"ttasnim5"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":254,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":255,"author":{"gitId":"ttasnim5"},"content":"                if (pastData[doneIndex].trim().equals(\"true\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":256,"author":{"gitId":"ttasnim5"},"content":"                    String [] commandWords \u003d new String[2];","lastModifiedDate":"2024-02-22"},{"lineNumber":257,"author":{"gitId":"ttasnim5"},"content":"                    commandWords[0] \u003d \"mark\"; commandWords[1] \u003d Integer.toString(count);","lastModifiedDate":"2024-02-22"},{"lineNumber":258,"author":{"gitId":"ttasnim5"},"content":"                    changeTaskMarker(commandWords);","lastModifiedDate":"2024-02-22"},{"lineNumber":259,"author":{"gitId":"ttasnim5"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":260,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":261,"author":{"gitId":"ttasnim5"},"content":"                count++;","lastModifiedDate":"2024-02-23"},{"lineNumber":262,"author":{"gitId":"ttasnim5"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":263,"author":{"gitId":"ttasnim5"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":264,"author":{"gitId":"ttasnim5"},"content":"            reader.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":265,"author":{"gitId":"ttasnim5"},"content":"            // clear out the file to get rid of the old data and prevent repeats","lastModifiedDate":"2024-02-23"},{"lineNumber":266,"author":{"gitId":"ttasnim5"},"content":"            overwriter \u003d new FileWriter(outfile, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":267,"author":{"gitId":"ttasnim5"},"content":"            overwriter.write(\"\");","lastModifiedDate":"2024-02-23"},{"lineNumber":268,"author":{"gitId":"ttasnim5"},"content":"            overwriter.flush();","lastModifiedDate":"2024-02-23"},{"lineNumber":269,"author":{"gitId":"ttasnim5"},"content":"            overwriter.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":270,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":271,"author":{"gitId":"ttasnim5"},"content":"            // rewrite the present list into taskDrive.txt","lastModifiedDate":"2024-02-23"},{"lineNumber":272,"author":{"gitId":"ttasnim5"},"content":"            updateFile(0);","lastModifiedDate":"2024-02-23"},{"lineNumber":273,"author":{"gitId":"ttasnim5"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":274,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"\\tfile not found\\t\");","lastModifiedDate":"2024-02-22"},{"lineNumber":275,"author":{"gitId":"ttasnim5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":276,"author":{"gitId":"ttasnim5"},"content":"            System.out.println(\"\\tio exception\\t\");","lastModifiedDate":"2024-02-22"},{"lineNumber":277,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":278,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":279,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":280,"author":{"gitId":"ttasnim5"},"content":"    private static int checkIfNumber(String input) throws EmptyTaskException {","lastModifiedDate":"2024-02-21"},{"lineNumber":281,"author":{"gitId":"ttasnim5"},"content":"        int taskNumber \u003d taskcount + 1; // default it to not be a valid task number by the tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":282,"author":{"gitId":"ttasnim5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":283,"author":{"gitId":"ttasnim5"},"content":"            taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":284,"author":{"gitId":"ttasnim5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":285,"author":{"gitId":"ttasnim5"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-02-21"},{"lineNumber":286,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"ttasnim5"},"content":"        return taskNumber;","lastModifiedDate":"2024-01-29"},{"lineNumber":288,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ttasnim5":289}},{"path":"src/main/java/referenceFiles/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.referenceFiles;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ttasnim5":2,"-":10}},{"path":"src/main/java/referenceFiles/Nanami_L0.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.referenceFiles;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"public class Nanami_L0 {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"    public static void main(String args[]) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «» ¤ «\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"» Hello. I am src.main.java.Nanami, your taskmaster.\\n» What can I do for you?\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"        System.out.println(\"» Until next time. Goodbye.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ttasnim5":9}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.DeadlineMismatchedParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.EmptyTaskException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ttasnim5"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ttasnim5"},"content":"    protected String by \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ttasnim5"},"content":"    public Deadline(String[] userInputSeparatedBySlash) throws DeadlineMismatchedParameterException, EmptyTaskException {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ttasnim5"},"content":"        super(userInputSeparatedBySlash[0].replace(\"deadline\", \"\").trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ttasnim5"},"content":"        if (this.getDescription().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ttasnim5"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ttasnim5"},"content":"        } else if (userInputSeparatedBySlash.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"ttasnim5"},"content":"            // no parameters given","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"ttasnim5"},"content":"            throw new DeadlineMismatchedParameterException();","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"ttasnim5"},"content":"        } else if (userInputSeparatedBySlash.length \u003e 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ttasnim5"},"content":"            // there\u0027s multiple parameters, /by or otherwise","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ttasnim5"},"content":"            throw new DeadlineMismatchedParameterException();","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ttasnim5"},"content":"        } else if (!userInputSeparatedBySlash[1].contains(\"by\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ttasnim5"},"content":"            // if the singular parameter is not by","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ttasnim5"},"content":"            throw new DeadlineMismatchedParameterException();","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ttasnim5"},"content":"        this.by \u003d userInputSeparatedBySlash[1].replace(\"by\", \"\").trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ttasnim5"},"content":"   @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ttasnim5"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ttasnim5"},"content":"        if (isDone){","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ttasnim5"},"content":"            return (\"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getDescription() + \" by: \" + this.by);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ttasnim5"},"content":"            return (\"[D]\" + \"[ ] \" + super.getDescription() + \" by: \" + this.by);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"ttasnim5"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"ttasnim5"},"content":"    public String sendToFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"ttasnim5"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"ttasnim5"},"content":"        if (this.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ttasnim5"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ttasnim5"},"content":"        return \"D | \" + this.getDescription() + \" | \" + this.by + \" | \" + isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ttasnim5":48}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.EmptyTaskException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.EventMismatchedParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ttasnim5"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ttasnim5"},"content":"    protected String from, to \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"ttasnim5"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"ttasnim5"},"content":"        // tasks that start at a specific date/time and ends at a specific date/time","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ttasnim5"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ttasnim5"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ttasnim5"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ttasnim5"},"content":"    public Event(String[] userInputSeparatedBySlash) throws EventMismatchedParameterException, EmptyTaskException {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"ttasnim5"},"content":"        super(userInputSeparatedBySlash[0].replace(\"event\", \"\").trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ttasnim5"},"content":"        if(this.getDescription().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ttasnim5"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ttasnim5"},"content":"        } else if (userInputSeparatedBySlash.length \u003e 3 || userInputSeparatedBySlash.length \u003c 3) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ttasnim5"},"content":"            // there\u0027s too many or not enough parameters, to/from or otherwise","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ttasnim5"},"content":"            throw new EventMismatchedParameterException();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ttasnim5"},"content":"        } else if (userInputSeparatedBySlash[1].contains(\"from\") \u0026\u0026 userInputSeparatedBySlash[2].contains(\"to\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ttasnim5"},"content":"            // from \u003d\u003e to","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ttasnim5"},"content":"            this.from \u003d userInputSeparatedBySlash[1].replace(\"from\", \"\").trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ttasnim5"},"content":"            this.to \u003d userInputSeparatedBySlash[2].replace(\"to\", \"\").trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ttasnim5"},"content":"        } else if (userInputSeparatedBySlash[1].contains(\"to\") \u0026\u0026 userInputSeparatedBySlash[2].contains(\"from\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ttasnim5"},"content":"            this.to \u003d userInputSeparatedBySlash[1].replace(\"to\", \"\").trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"ttasnim5"},"content":"            this.from \u003d userInputSeparatedBySlash[2].replace(\"from\", \"\").trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ttasnim5"},"content":"            throw new EventMismatchedParameterException();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ttasnim5"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ttasnim5"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ttasnim5"},"content":"        if (isDone){","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"ttasnim5"},"content":"            return (\"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getDescription() + \" from:\" + this.from + \" to: \" + this.to);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ttasnim5"},"content":"            return (\"[E]\" + \"[ ] \" + super.getDescription() + \" from: \" + this.from + \" to: \" + this.to);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"ttasnim5"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"ttasnim5"},"content":"    public String sendToFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"ttasnim5"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"ttasnim5"},"content":"        if (this.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ttasnim5"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ttasnim5"},"content":"        return \"E | \" + this.getDescription() + \" | \" + this.from + \" | \" + this.to + \" | \" + isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ttasnim5":56}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ttasnim5"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ttasnim5"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ttasnim5"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ttasnim5"},"content":"        return (isDone ? \"¤\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ttasnim5"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ttasnim5"},"content":"        return this.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ttasnim5"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ttasnim5"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ttasnim5"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ttasnim5"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ttasnim5"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ttasnim5"},"content":"        if (isDone){","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ttasnim5"},"content":"            return (\"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ttasnim5"},"content":"            return (\"[T]\" + \"[ ] \" + this.description);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"ttasnim5"},"content":"    public String sendToFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"ttasnim5"},"content":"        return description + \" | \" + isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ttasnim5":39}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.EmptyTaskException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"import src.main.java.taskExceptions.ToDoMismatchedParameterException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ttasnim5"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ttasnim5"},"content":"    public ToDo(String[] userInputSeparatedBySlash) throws ToDoMismatchedParameterException, EmptyTaskException {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ttasnim5"},"content":"        super(userInputSeparatedBySlash[0].replace(\"todo\", \"\").trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ttasnim5"},"content":"        if (this.getDescription().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ttasnim5"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"ttasnim5"},"content":"        } else if (userInputSeparatedBySlash.length \u003e 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ttasnim5"},"content":"            throw new ToDoMismatchedParameterException();","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ttasnim5"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ttasnim5"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ttasnim5"},"content":"        if (isDone){","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ttasnim5"},"content":"            return (\"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ttasnim5"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ttasnim5"},"content":"            return (\"[T]\" + \"[ ] \" + super.getDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"ttasnim5"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"ttasnim5"},"content":"    public String sendToFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"ttasnim5"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"ttasnim5"},"content":"        if (this.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ttasnim5"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ttasnim5"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ttasnim5"},"content":"        return \"T | \" + this.getDescription() + \" | \" + isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ttasnim5":36}},{"path":"src/main/java/taskExceptions/DeadlineMismatchedParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.taskExceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"public class DeadlineMismatchedParameterException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"    public DeadlineMismatchedParameterException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"        super();","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ttasnim5":7}},{"path":"src/main/java/taskExceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.taskExceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"    public EmptyTaskException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"        super();","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ttasnim5":7}},{"path":"src/main/java/taskExceptions/EventMismatchedParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.taskExceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"public class EventMismatchedParameterException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"    public EventMismatchedParameterException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"        super();","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ttasnim5":7}},{"path":"src/main/java/taskExceptions/ToDoMismatchedParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ttasnim5"},"content":"package src.main.java.taskExceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"ttasnim5"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"ttasnim5"},"content":"public class ToDoMismatchedParameterException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ttasnim5"},"content":"    public ToDoMismatchedParameterException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ttasnim5"},"content":"        super();","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ttasnim5"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ttasnim5"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ttasnim5":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ttasnim5"},"content":"java -classpath ..\\bin src.main.java.referenceFiles.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ttasnim5":1,"-":20}}]
