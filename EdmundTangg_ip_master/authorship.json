[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdmundTangg"},"content":"// Subclass of Task","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"EdmundTangg"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"EdmundTangg"},"content":"    public Deadline(String description, int index) throws DukeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"EdmundTangg"},"content":"        super(description, index); // Automatically invokes the constructor of Task","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"EdmundTangg"},"content":"        toPrint();","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"EdmundTangg"},"content":"    public String getBy() throws DukeException{","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"EdmundTangg"},"content":"        String[] splitLine \u003d description.split(\"/by\");","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"EdmundTangg"},"content":"        if (splitLine.length !\u003d 2) {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"EdmundTangg"},"content":"            throw new DukeException(\"Invalid Syntax! Please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"EdmundTangg"},"content":"        return splitLine[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"EdmundTangg"},"content":"    // Override task\u0027s toString() to add [D] and the deadline timing","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"EdmundTangg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"EdmundTangg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"EdmundTangg"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"EdmundTangg"},"content":"            return \"[D]\" + super.toString() + \" (by:\" + getBy() + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"EdmundTangg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(\"error!, please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"EdmundTangg"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"EdmundTangg"},"content":"    public void toPrint() throws DukeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"EdmundTangg"},"content":"        if (getBy() !\u003d null) {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"EdmundTangg"},"content":"            printHeaders();","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"EdmundTangg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"EdmundTangg":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdmundTangg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"EdmundTangg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"EdmundTangg"},"content":"    // Function to mark or unmark tasks","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"EdmundTangg"},"content":"    public static void userMarkOrUnmark(String command, String line, ArrayList\u003cTask\u003e list, int index, Task t) {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"EdmundTangg"},"content":"        // User enters Mark, proceed to check if index is valid. If valid, then mark the task number","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"EdmundTangg"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"EdmundTangg"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"EdmundTangg"},"content":"                index \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"EdmundTangg"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"EdmundTangg"},"content":"                System.out.println(\"Task number is not a valid number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"EdmundTangg"},"content":"                return;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"EdmundTangg"},"content":"            t \u003d list.get(index - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"EdmundTangg"},"content":"            t.isDone \u003d  true;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"EdmundTangg"},"content":"        // User enters unmark, proceed to check if index is valid. If valid, then unmark the task number","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"EdmundTangg"},"content":"        else {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"EdmundTangg"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"EdmundTangg"},"content":"                index \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"EdmundTangg"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"EdmundTangg"},"content":"                System.out.println(\"Task number is not a valid number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"EdmundTangg"},"content":"                return;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"EdmundTangg"},"content":"            t \u003d list.get(index - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"EdmundTangg"},"content":"            t.isDone \u003d  false;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"EdmundTangg"},"content":"    // Function to print the list of tasks","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"EdmundTangg"},"content":"    public static void userList(String line, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"EdmundTangg"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"EdmundTangg"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"EdmundTangg"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"EdmundTangg"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"EdmundTangg"},"content":"                System.out.println(task.index + \". \" + task);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"EdmundTangg"},"content":"    // Function to say bye","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"EdmundTangg"},"content":"    public static void userBye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"Bye human. Come back soon !\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"EdmundTangg"},"content":"    // Function to print an unknown command from user","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"EdmundTangg"},"content":"    public static void userWrongCommand() {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"No suitable command found. Please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"EdmundTangg"},"content":"    // Function to check the minimum arguments supplied for each task","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"EdmundTangg"},"content":"    public static boolean checkMinimumArguments(String[] splitLine, int number) {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"EdmundTangg"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"EdmundTangg"},"content":"            if (splitLine.length \u003c number) {","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"EdmundTangg"},"content":"                throw new DukeException(\"Invalid Syntax! Please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"EdmundTangg"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(\"Minimally \" + number + \" arguments, please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"EdmundTangg"},"content":"            return true;","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"EdmundTangg"},"content":"        return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"EdmundTangg"},"content":"    // Start of user input","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"EdmundTangg"},"content":"    public static void userInput() throws DukeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"EdmundTangg"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Declared a scanner object","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"EdmundTangg"},"content":"        String line; // Declared a string object to take in user input","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"EdmundTangg"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(); // Declared a dynamic list with Task data type","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"EdmundTangg"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"EdmundTangg"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"EdmundTangg"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"EdmundTangg"},"content":"        // Start of user input","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"EdmundTangg"},"content":"        while (true) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"EdmundTangg"},"content":"            line \u003d scanner.nextLine().toLowerCase(); // Takes in user input","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"EdmundTangg"},"content":"            String[] splitLine \u003d line.split(\"\\\\s+\"); // split by whitespaces","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"EdmundTangg"},"content":"            String command \u003d splitLine[0]; //obtain the main command from user, which is the first command","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"EdmundTangg"},"content":"            switch (command) {","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"EdmundTangg"},"content":"                // User wants to exit","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"EdmundTangg"},"content":"                case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"EdmundTangg"},"content":"                    userBye();","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"EdmundTangg"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"EdmundTangg"},"content":"                // User wants to display the list of tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"EdmundTangg"},"content":"                case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"EdmundTangg"},"content":"                    if (splitLine.length !\u003d 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"EdmundTangg"},"content":"                        userWrongCommand();","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"EdmundTangg"},"content":"                        break;","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"EdmundTangg"},"content":"                    userList(line, list);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"EdmundTangg"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"EdmundTangg"},"content":"                // User wants to mark or unmark tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"EdmundTangg"},"content":"                case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"EdmundTangg"},"content":"                case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"EdmundTangg"},"content":"                    userMarkOrUnmark(splitLine[0], line, list, index, t);","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"EdmundTangg"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"EdmundTangg"},"content":"                // User wants a todo task","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"EdmundTangg"},"content":"                case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"EdmundTangg"},"content":"                    //Check if there is a minimum argument of 2","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"EdmundTangg"},"content":"                    if (checkMinimumArguments(splitLine, 2)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"EdmundTangg"},"content":"                        continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"EdmundTangg"},"content":"                    try {","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"EdmundTangg"},"content":"                        t \u003d new Todo(line, counter + 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"EdmundTangg"},"content":"                    } catch (RuntimeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"EdmundTangg"},"content":"                        System.out.println(\"Invalid Syntax, please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"EdmundTangg"},"content":"                        continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"EdmundTangg"},"content":"                    //t \u003d new Todo(line, counter + 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"EdmundTangg"},"content":"                    list.add(counter, t);","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"EdmundTangg"},"content":"                    counter +\u003d 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"EdmundTangg"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"EdmundTangg"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"EdmundTangg"},"content":"                // User wants a deadline task","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"EdmundTangg"},"content":"                case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"EdmundTangg"},"content":"                    if (checkMinimumArguments(splitLine, 4)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"EdmundTangg"},"content":"                        continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"EdmundTangg"},"content":"                   try {","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"EdmundTangg"},"content":"                        t \u003d new Deadline(line, counter + 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"EdmundTangg"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"EdmundTangg"},"content":"                        System.out.println(\"Invalid Syntax, please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"EdmundTangg"},"content":"                        continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"EdmundTangg"},"content":"                    //t \u003d new Deadline(line, counter + 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"EdmundTangg"},"content":"                    list.add(counter, t);","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"EdmundTangg"},"content":"                    counter +\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"EdmundTangg"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"EdmundTangg"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"EdmundTangg"},"content":"                // User wants an event task","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"EdmundTangg"},"content":"                case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"EdmundTangg"},"content":"                    if (checkMinimumArguments(splitLine, 8)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"EdmundTangg"},"content":"                        continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"EdmundTangg"},"content":"                    try {","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"EdmundTangg"},"content":"                        t \u003d new Event(line, counter + 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"EdmundTangg"},"content":"                    } catch (RuntimeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"EdmundTangg"},"content":"                        System.out.println(\"Invalid Syntax, please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"EdmundTangg"},"content":"                        continue;","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"EdmundTangg"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"EdmundTangg"},"content":"                    //t \u003d new Event(line, counter + 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"EdmundTangg"},"content":"                    list.add(counter, t);","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"EdmundTangg"},"content":"                    counter +\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"EdmundTangg"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"EdmundTangg"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"EdmundTangg"},"content":"                default:","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"EdmundTangg"},"content":"                    System.out.println(\"No suitable command found. Please try again!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"EdmundTangg"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"EdmundTangg"},"content":"            scanner.close(); // Close scanner after usage","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"EdmundTangg"},"content":"            return;","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"EdmundTangg"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":177,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"Hello! I\u0027m Bob\");","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":180,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"EdmundTangg"},"content":"        userInput();","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EdmundTangg":180,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdmundTangg"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"EdmundTangg"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"EdmundTangg"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"EdmundTangg"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"EdmundTangg":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdmundTangg"},"content":"// subclass of Task","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"EdmundTangg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"EdmundTangg"},"content":"    protected String from;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"EdmundTangg"},"content":"    protected String to;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"EdmundTangg"},"content":"    public Event(String description, int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"EdmundTangg"},"content":"        super(description, index);","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"EdmundTangg"},"content":"        //printHeaders();","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"EdmundTangg"},"content":"        toPrint();","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"EdmundTangg"},"content":"        //System.out.println(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"EdmundTangg"},"content":" /*   public String getFrom() throws DukeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"EdmundTangg"},"content":"        String[] splitLine \u003d description.split(\"/\"); // Split input from / onwards","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"EdmundTangg"},"content":"        String getfrom \u003d null;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"EdmundTangg"},"content":"        for (String s : splitLine) {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"EdmundTangg"},"content":"            if (s.startsWith(\"from\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"EdmundTangg"},"content":"                getfrom \u003d s.substring(5);","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"EdmundTangg"},"content":"                return getfrom;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"EdmundTangg"},"content":"        throw new DukeException(\"Invalid Syntax! Please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"EdmundTangg"},"content":"    public String getTo() throws DukeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"EdmundTangg"},"content":"        String[] splitLine \u003d description.split(\"/from\");","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"EdmundTangg"},"content":"        String[] durationLine \u003d splitLine[1].split(\"/to\");","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"EdmundTangg"},"content":"        if (splitLine.length !\u003d 2 || durationLine.length !\u003d 2) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"EdmundTangg"},"content":"            throw new DukeException(\"Invalid Syntax! Please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"EdmundTangg"},"content":"        return splitLine[1].substring(3);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"EdmundTangg"},"content":"    }*/","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"EdmundTangg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"EdmundTangg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"EdmundTangg"},"content":"        String date;","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"EdmundTangg"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"EdmundTangg"},"content":"            String[] splitLine \u003d description.split(\"/from\");","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"EdmundTangg"},"content":"            String[] durationLine \u003d splitLine[1].split(\"/to\");","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"EdmundTangg"},"content":"            if (splitLine.length !\u003d 2 || durationLine.length !\u003d 2) {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"EdmundTangg"},"content":"                throw new DukeException(\"Invalid Syntax! Please try again!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"EdmundTangg"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"EdmundTangg"},"content":"            date \u003d \" (from:\" + durationLine[0]  + \"to:\" + durationLine[1] + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"EdmundTangg"},"content":"        return \"[E]\" + super.toString() + date;","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"EdmundTangg"},"content":"    } catch (DukeException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"EdmundTangg"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"EdmundTangg"},"content":"    public void toPrint() {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"EdmundTangg"},"content":"        if (toString() !\u003d null) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"EdmundTangg"},"content":"            printHeaders();","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"EdmundTangg"},"content":"            System.out.println(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"EdmundTangg"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"EdmundTangg":58}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdmundTangg"},"content":"// Superclass of 3 subclasses: Todo, Deadline and Event","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"EdmundTangg"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"EdmundTangg"},"content":"    // 3 class attributes","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"EdmundTangg"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"EdmundTangg"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"EdmundTangg"},"content":"    protected int index;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"EdmundTangg"},"content":"    // constructor","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"EdmundTangg"},"content":"    public Task(String description, int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"EdmundTangg"},"content":"        setDescription(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"EdmundTangg"},"content":"        setDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"EdmundTangg"},"content":"        setCounter(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"EdmundTangg"},"content":"    // Set for description attribute","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"EdmundTangg"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"EdmundTangg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"EdmundTangg"},"content":"    // Set if task attribute is done/undone","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"EdmundTangg"},"content":"    public void setDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"EdmundTangg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"EdmundTangg"},"content":"    // Set index attribute of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"EdmundTangg"},"content":"    public void setCounter(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"EdmundTangg"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"EdmundTangg"},"content":"    // Get status icon","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"EdmundTangg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"EdmundTangg"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"EdmundTangg"},"content":"    // Standard 2 lines that will always get printed out","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"EdmundTangg"},"content":"    public void printHeaders() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"EdmundTangg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"EdmundTangg"},"content":"        String[] original \u003d description.split(\"/\"); // split the original input by /","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"EdmundTangg"},"content":"        String value \u003d String.valueOf(original[0]); //obtain the task and action","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"EdmundTangg"},"content":"        String[] splitLine \u003d value.split(\"\\\\s+\"); //split the words by whitespace","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"EdmundTangg"},"content":"        StringBuilder action \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"EdmundTangg"},"content":"        //obtain the action of the task","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"EdmundTangg"},"content":"        for (int i \u003d 1; i \u003c splitLine.length; i +\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"EdmundTangg"},"content":"            action.append(splitLine[i]).append(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"EdmundTangg"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + action;","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"EdmundTangg"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"EdmundTangg":56}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdmundTangg"},"content":"// Subclass of Task","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"EdmundTangg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"EdmundTangg"},"content":"    // Constructor","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"EdmundTangg"},"content":"    public Todo(String description, int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"EdmundTangg"},"content":"        super(description, index);","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"EdmundTangg"},"content":"        toPrint();","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"EdmundTangg"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"EdmundTangg"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"EdmundTangg"},"content":"        String[] splitLine \u003d description.split(\"\\\\s+\");","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"EdmundTangg"},"content":"        StringBuilder action \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"EdmundTangg"},"content":"        //obtain the action of the task","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"EdmundTangg"},"content":"        for (int i \u003d 1; i \u003c splitLine.length; i +\u003d 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"EdmundTangg"},"content":"            action.append(splitLine[i]).append(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"EdmundTangg"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"EdmundTangg"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + action;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"EdmundTangg"},"content":"    public void toPrint() {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"EdmundTangg"},"content":"        printHeaders();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"EdmundTangg"},"content":"        System.out.println(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"EdmundTangg"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"EdmundTangg"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"EdmundTangg"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"EdmundTangg":28}}]
