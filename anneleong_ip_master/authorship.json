[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"# N.chatbot - User Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":"## Overview","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":"Want to keep track of the tasks that you have to do? ","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":"N.chatbot allows users to interact with and create ","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":"their task list directly from the command line, making ","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":"task management straightforward and accessible.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"### Adding a Task","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"\u003e There are 3 types of tasks:","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"\u003e - `todo` specifies a basic task","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"\u003e - `deadline` specifies a task that has to be completed ","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"\u003e by a certain deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"\u003e - `event` specifies a task with a specified duration","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"\u003e ","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"\u003e each task has a specific input format and display format ","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"\u003e in the tasklist.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"#### Adding a Basic Task: `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"Adds a basic task to the tasklist.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"Format: `todo [task description]`","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"todo wash dishes","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"    Got it, ToDo task has been added:","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"    1. [T] [ ] wash dishes","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"    Now you have 1 task in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"#### Adding a Task with a Deadline: `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"Adds a task with a deadline to the tasklist.","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"Format: `deadline [task description] /by [deadline]`","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"deadline wash dishes /by 12am","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"    Got it, Deadline task has been added:","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"    2. [D] [ ] wash dishes(by: 12am)","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"    Now you have 2 tasks in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"#### Adding a Task with a Time Period: `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"Adds a task with a specified duration to the tasklist.","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"Format: `event [task description] /from [start time] /to [endtime]`","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"event wash dishes /from 2pm /to 4pm","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"anneleong"},"content":"    Got it, Event task has been added:","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"anneleong"},"content":"    3. [E] [ ] wash dishes (from: 2pm to: 4pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"anneleong"},"content":"    Now you have 3 tasks in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"anneleong"},"content":"### Viewing the Current Task List: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"anneleong"},"content":"Allows the user to view the tasks that are currently in ","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"anneleong"},"content":"the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"anneleong"},"content":"Format: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"anneleong"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"anneleong"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"anneleong"},"content":"    1. [T] [ ] wash dishes","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"anneleong"},"content":"    2. [D] [ ] wash dishes(by: 12am)","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"anneleong"},"content":"    3. [E] [ ] wash dishes (from: 2pm to: 4pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"anneleong"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"anneleong"},"content":"Deletes a task that is currently in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"anneleong"},"content":"The CLI output message will also inform the user on the number of","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"anneleong"},"content":"tasks remaining.","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"anneleong"},"content":"Format: `delete [task index]`","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"anneleong"},"content":"delete 2","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"anneleong"},"content":"    Noted, I have removed the following task:","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"anneleong"},"content":"    2. [D] [ ] wash dishes(by: 12am)","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"anneleong"},"content":"    Number of Tasks Remaining: 2","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"anneleong"},"content":"### Marking / Unmarking Tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"anneleong"},"content":"#### Marking a Task as Done: `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"anneleong"},"content":"Marks a task as done in the task list. ","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"anneleong"},"content":"Format: `mark [task index]`","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"anneleong"},"content":"mark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"anneleong"},"content":"    Task 1 marked done, yay! :)","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"anneleong"},"content":"#### Unmarking a Task to Undone: `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"anneleong"},"content":"Unmarks a task that has been marked as done previously.","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"anneleong"},"content":"Format: `unmark [task index]`","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"anneleong"},"content":"unmark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"anneleong"},"content":"    Okay, task 1 unmarked, let\u0027s complete it soon ~.o.~","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"anneleong"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"anneleong"},"content":"\u003e For `delete`, `mark`, `unmark`:","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"anneleong"},"content":"\u003e - The task index provided **must be a positive integer**","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"anneleong"},"content":"\u003e    1, 2, 3, ...","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"anneleong"},"content":"\u003e - The task index provided **must exist**! (i.e. if there","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"anneleong"},"content":"\u003e  are only 3 tasks in the list, the task index provided","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"anneleong"},"content":"\u003e  should not go beyond 3)","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"anneleong"},"content":"### Finding a Task: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"anneleong"},"content":"Searches through the task list to find tasks that contain ","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"anneleong"},"content":"the keyword specified by the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"anneleong"},"content":"Format: `find [keyword]`","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"anneleong"},"content":"- Keyword **must** be provided by the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":150,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"anneleong"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"anneleong"},"content":"find dishes","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"anneleong"},"content":"    Here are the tasks I found in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"anneleong"},"content":"    1. [T] [ ] wash dishes","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"anneleong"},"content":"    2. [E] [ ] wash dishes (from: 2pm to: 4pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"anneleong"},"content":"### Saving the Current Task List: `save`","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"anneleong"},"content":"Saves the current task list to a text file _n.txt_.","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"anneleong"},"content":"Format: `save`","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"anneleong"},"content":"Expected output:","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"anneleong"},"content":"    Your Task List has been saved, find it at .\\data\\n.txt","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"anneleong"},"content":"### Exiting the Program: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"anneleong"},"content":"Exits the program.","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":178,"author":{"gitId":"anneleong"},"content":"Format: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"anneleong"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":182,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":183,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"anneleong"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-08"},{"lineNumber":185,"author":{"gitId":"anneleong"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":186,"author":{"gitId":"anneleong"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":187,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":188,"author":{"gitId":"anneleong"},"content":"## Command Summary","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":190,"author":{"gitId":"anneleong"},"content":"| Command    | Format                                                       |","lastModifiedDate":"2024-03-08"},{"lineNumber":191,"author":{"gitId":"anneleong"},"content":"|------------|--------------------------------------------------------------|","lastModifiedDate":"2024-03-08"},{"lineNumber":192,"author":{"gitId":"anneleong"},"content":"| `todo`     | `todo [task description]`                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"anneleong"},"content":"| `deadline` | `deadline [task description] /by [deadline]`                 |","lastModifiedDate":"2024-03-08"},{"lineNumber":194,"author":{"gitId":"anneleong"},"content":"| `event`    | `event [task description] /from [start time] /to [end time]` |","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"anneleong"},"content":"| `list`     | `list`                                                       |","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"anneleong"},"content":"| `delete`   | `delete [task index]`                                        |","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"anneleong"},"content":"| `mark`     | `mark [task index]`                                          |","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"anneleong"},"content":"| `unmark`   | `unmark [task index]`                                        |","lastModifiedDate":"2024-03-08"},{"lineNumber":199,"author":{"gitId":"anneleong"},"content":"| `find`     | `find`                                                       |","lastModifiedDate":"2024-03-08"},{"lineNumber":200,"author":{"gitId":"anneleong"},"content":"| `save`     | `save`                                                       |","lastModifiedDate":"2024-03-08"},{"lineNumber":201,"author":{"gitId":"anneleong"},"content":"| `bye`       | `bye`                                                         |","lastModifiedDate":"2024-03-08"},{"lineNumber":202,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"anneleong":186,"-":16}},{"path":"src/main/java/n/N.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * \u003ch1\u003eN\u003c/h1\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" * The N program is a CLI-based chatbot that can help to","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * keep track of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"package n;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"import n.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"public class N {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"    public static Storage storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"     * Constructs a new object of N.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"     * Creates a new instance of Ui which will handle interactions with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"    public N() {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"     * @throws FileNotFoundException If filepath does not exist.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"     * @throws EmptyTaskDescriptionException If task in input message is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"    public void run() throws IOException, EmptyTaskDescriptionException {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"        ui.printWelcome();","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"        storage.loadTaskList();","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"        ui.handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"        storage.saveTaskList();","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"    public static void main(String[] args) throws IOException, EmptyTaskDescriptionException {","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"        new N().run();","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"anneleong":46}},{"path":"src/main/java/n/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * Parser takes in user inputs/inputs from the .txt file","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" * and makes sense of it so that the corresponding action","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * can be taken.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"package n;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"import n.exceptions.NoTaskTypeException;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"import n.task.Type;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"    public static final int BEGIN_INDEX \u003d 11;","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"    public static final int FROM_LENGTH \u003d 6;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"    public static final int TO_LENGTH \u003d 3;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"    public static final int BY_LENGTH \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"     * Determines the type of task based on the provided task description.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"     * @return The Type of task (Event, Deadline, ToDo).","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"     * @throws NoTaskTypeException If the task type is not specified correctly.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"    public static Type filterTask(String taskDescription) throws NoTaskTypeException {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"        Type taskType;","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"        switch (taskDescription.split(\" \")[0]) {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"            case \"event\":","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"                taskType \u003d Type.Event;","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"            case \"deadline\":","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"                taskType \u003d Type.Deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"            case \"todo\":","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"                taskType \u003d Type.ToDo;","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"                throw new NoTaskTypeException();","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"        return taskType;","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"     * Gets the Type of task based on its task description","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"     * as text in the .txt saved file.","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"     * @return The Type of the task (ToDo, Deadline, Event)","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"     * @see Storage#loadTaskList()","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"    public static Type getTaskType(String taskDescription) {","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"        char taskTypeSymbol \u003d taskDescription.charAt(BY_LENGTH);","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"anneleong"},"content":"        Type taskType \u003d Type.ToDo;","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"        switch (taskTypeSymbol) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"anneleong"},"content":"            case (\u0027T\u0027):","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"                taskType \u003d Type.ToDo;","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"            case (\u0027D\u0027):","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"anneleong"},"content":"                taskType \u003d Type.Deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"anneleong"},"content":"            case(\u0027E\u0027):","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"anneleong"},"content":"                taskType \u003d Type.Event;","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"anneleong"},"content":"        return taskType;","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"anneleong"},"content":"     * Converts a given task as a text from the .txt saved","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"anneleong"},"content":"     * file into a formatted task description based on the","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"anneleong"},"content":"     * specified Type of task.","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"anneleong"},"content":"     * @param text      The input text containing task-related information.","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"anneleong"},"content":"     * @param taskType  The type of the task (ToDo, Deadline, Event).","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"anneleong"},"content":"     * @return The formatted task description.","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"anneleong"},"content":"     * @see Storage#loadTaskList()","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"anneleong"},"content":"    public static String textToTaskDescription(String text, Type taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"anneleong"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"anneleong"},"content":"        String task;","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"anneleong"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"anneleong"},"content":"            case ToDo:","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"anneleong"},"content":"                taskDescription \u003d text.substring(BEGIN_INDEX);","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"anneleong"},"content":"            case Deadline:","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"anneleong"},"content":"                int deadlineIndex \u003d taskDescription.indexOf(\"(by\");","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"anneleong"},"content":"                task \u003d taskDescription.substring(BEGIN_INDEX, deadlineIndex);","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"anneleong"},"content":"                String deadline \u003d taskDescription.substring(deadlineIndex + BY_LENGTH, taskDescription.length() - 1).trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"anneleong"},"content":"                taskDescription \u003d task + \" /by \" + deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"anneleong"},"content":"            case Event:","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"anneleong"},"content":"                int fromIndex \u003d text.indexOf(\"(from:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"anneleong"},"content":"                int toIndex \u003d text.indexOf(\"to:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"anneleong"},"content":"                task \u003d text.substring(BEGIN_INDEX, fromIndex).trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"anneleong"},"content":"                String fromTime \u003d text.substring(fromIndex + FROM_LENGTH, toIndex);","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"anneleong"},"content":"                String toTime \u003d text.substring(toIndex + TO_LENGTH, text.length() - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"anneleong"},"content":"                taskDescription \u003d task + \" /from \" + fromTime + \" /to \" +toTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"anneleong"},"content":"        return taskDescription;","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"anneleong":103}},{"path":"src/main/java/n/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * Storage helps to handle the saving of the Task List to","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" * the .txt text file as well as the loading of saved data","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * from the .txt text file into a Task List.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"package n;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"import n.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"import n.task.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"import java.io.File;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"import java.nio.file.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"import static n.TaskList.taskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"    /** The file path where the task list is stored. */","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"    private static final String FILEPATH \u003d \"./data/n.txt\";","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"    private static String filePath;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"    public Storage() {","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"        filePath \u003d FILEPATH;","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"     * Loads saved data from the .txt text file into the","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"     * Task List.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"     * @throws FileNotFoundException        If the file is not found.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"     * @throws EmptyTaskDescriptionException If a task has an empty description.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"    public void loadTaskList() throws EmptyTaskDescriptionException, IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"        Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"        if (Files.exists(Path.of(filePath), LinkOption.NOFOLLOW_LINKS)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"            File initialTaskList \u003d new File(filePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"            Scanner s \u003d new Scanner(initialTaskList);","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"            while (s.hasNextLine()){","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"                String taskDescription \u003d s.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"                // Skip header and footer lines","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"                if (taskDescription.equals(\"Task List:\") || taskDescription.startsWith(\"Number of Tasks\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"                    continue;","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"                // Determine task type and description","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"                Type taskType \u003d Parser.getTaskType(taskDescription);","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"                String task \u003d Parser.textToTaskDescription(taskDescription, taskType);","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"                // Create task object based on type and add to the task list","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"anneleong"},"content":"                switch (taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"                    case ToDo:","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"                        taskList.add(new ToDo(task, taskList.size()));","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"anneleong"},"content":"                        break;","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"                    case Event:","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"anneleong"},"content":"                        taskList.add(new Event(task, taskList.size()));","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"                        break;","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"                    case Deadline:","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"                        taskList.add(new Deadline(task, taskList.size()));","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"anneleong"},"content":"                        break;","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"anneleong"},"content":"                //mark task if task is completed","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"anneleong"},"content":"                if (taskDescription.charAt(8) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"anneleong"},"content":"                    taskList.get(taskList.size() - 1).setDone(true);","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"anneleong"},"content":"            s.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"anneleong"},"content":"     * Saves the current task list to the file.","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"anneleong"},"content":"    public void saveTaskList() {","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"anneleong"},"content":"        Path filePath \u003d Path.of(Storage.filePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"anneleong"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"anneleong"},"content":"            // Delete existing file and create a new one","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"anneleong"},"content":"            Files.deleteIfExists(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"anneleong"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"anneleong"},"content":"            Files.write(filePath, (\"Task List:\\n\").getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"anneleong"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"anneleong"},"content":"                // Write each task list information to the file","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"anneleong"},"content":"                Files.write(filePath, (task.toString()+\"\\n\").getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"anneleong"},"content":"            Files.write(filePath, (\"Number of Tasks: \" +taskList.size()).getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"anneleong"},"content":"            Ui.printTaskListSavedMessage(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"anneleong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.SAVE_AS_FILE_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"anneleong":91}},{"path":"src/main/java/n/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * The TaskList class manages the task list and provides","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" * methods for adding, deleting, and modifying tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"package n;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"import n.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"import n.exceptions.NoTaskTypeException;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"import n.task.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"    public static final int BEGIN_INDEX_OF_KEYWORD \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"     * Adds a task to the task list based on the provided user input message.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"     * @param message The user input message containing task information.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"    public static void addTask(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"            Type taskType \u003d Parser.filterTask(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"            TaskList.addToTaskList(taskType, message);","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"        } catch (NoTaskTypeException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.NO_TASK_TYPE_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"        } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"    public static void addToTaskList(Type taskType, String message)","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"            throws EmptyTaskDescriptionException {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"        switch(taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"            case Event:","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"                    taskDescription \u003d message.substring(5);","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"                    taskList.add(new Event(taskDescription, taskList.size()));","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"                    Ui.printFormatErrorMessage(taskType);","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"                    return;","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"            case Deadline:","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"                    taskDescription \u003d message.substring(8);","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"anneleong"},"content":"                    taskList.add(new Deadline(taskDescription, taskList.size()));","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"                    Ui.printFormatErrorMessage(taskType);","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"anneleong"},"content":"                    return;","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"                } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"anneleong"},"content":"                    Ui.printFormatErrorMessage(taskType);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"                    return;","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"anneleong"},"content":"            case ToDo:","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"anneleong"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"anneleong"},"content":"                    taskDescription \u003d message.substring(BEGIN_INDEX_OF_KEYWORD);","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"anneleong"},"content":"                    taskList.add(new ToDo(taskDescription, taskList.size()));","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"anneleong"},"content":"                } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"anneleong"},"content":"                    Ui.printFormatErrorMessage(taskType);","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"anneleong"},"content":"                    return;","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"anneleong"},"content":"        Ui.printTaskAddedMessage();","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"anneleong"},"content":"     * Deletes a task from the task list as specified by the message.","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"anneleong"},"content":"     * @param message The user input message.","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"anneleong"},"content":"     * @see Ui#printTaskDeletedMessage(int)","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"anneleong"},"content":"     * @throws NumberFormatException    If the task index is not a valid number.","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"anneleong"},"content":"     * @throws IndexOutOfBoundsException If the task index is out of bounds.","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"anneleong"},"content":"    public static void deleteTask(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"anneleong"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"anneleong"},"content":"            int indexToDelete \u003d Integer.parseInt(message.split(\" \")[1]) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"anneleong"},"content":"            if (indexToDelete \u003c taskList.size()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"anneleong"},"content":"                Ui.printTaskDeletedMessage(indexToDelete);","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"anneleong"},"content":"                //updates the task index of tasks that come after the task to be deleted","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"anneleong"},"content":"                for (Task task:taskList) {","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"anneleong"},"content":"                    if(task.getIndex() \u003e indexToDelete) {","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"anneleong"},"content":"                        task.setIndex(task.getIndex() - 1) ;","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"anneleong"},"content":"                    }","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"anneleong"},"content":"                }","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"anneleong"},"content":"                taskList.remove(indexToDelete);","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"anneleong"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"anneleong"},"content":"                Ui.printMessage(Ui.TASK_INDEX_OUT_OF_BOUNDS_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"anneleong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"anneleong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.NO_TASK_INDEX_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"anneleong"},"content":"     * Changes the status of a task","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"anneleong"},"content":"     * selects the task based on the task index given and","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"anneleong"},"content":"     * (marks/unmarks) based on the new status given.","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"anneleong"},"content":"     * @param taskIndex The index of the task in the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"anneleong"},"content":"     * @param newStatus The new status of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"anneleong"},"content":"     * @see Ui#printChangeTaskStatusNotNeededMessage(int, boolean)","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"anneleong"},"content":"     * @see Ui#printTaskStatusChangedMessage(int, boolean)","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"anneleong"},"content":"    public static void changeTaskStatus(int taskIndex, boolean newStatus) {","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"anneleong"},"content":"        //check to ensure that task to be marked/unmarked exists in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"anneleong"},"content":"        if (taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"anneleong"},"content":"            if (taskList.get(taskIndex).isDone() \u003d\u003d newStatus) {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"anneleong"},"content":"                Ui.printChangeTaskStatusNotNeededMessage(taskIndex, newStatus);","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"anneleong"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"anneleong"},"content":"                taskList.get(taskIndex).setDone(newStatus);","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"anneleong"},"content":"                Ui.printTaskStatusChangedMessage(taskIndex, newStatus);","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"anneleong"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.TASK_INDEX_OUT_OF_BOUNDS_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"anneleong"},"content":"     * Unmarks a task based on the provided message.","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"anneleong"},"content":"     * @param message The user input message in the format","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"anneleong"},"content":"     *                \"unmark [task index]\".","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"anneleong"},"content":"     * @see TaskList#changeTaskStatus(int, boolean)","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"anneleong"},"content":"    public static void unmarkTask(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"anneleong"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"anneleong"},"content":"            int indexToUnmark \u003d Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"anneleong"},"content":"            changeTaskStatus(indexToUnmark - 1, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"anneleong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"anneleong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.NO_TASK_INDEX_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"anneleong"},"content":"     * Marks a task based on the provided message.","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"anneleong"},"content":"     * @param message The user input message in the format","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"anneleong"},"content":"     *                \"mark [task index]\".","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"anneleong"},"content":"     * @see TaskList#changeTaskStatus(int, boolean)","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"anneleong"},"content":"    public static void markTask(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"anneleong"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"anneleong"},"content":"            int indexToMark \u003d Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"anneleong"},"content":"            changeTaskStatus(indexToMark - 1, true);","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"anneleong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.INVALID_TASK_INDEX_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"anneleong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"anneleong"},"content":"            Ui.printMessage(Ui.NO_TASK_INDEX_ERROR);","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"anneleong"},"content":"     * Finds tasks in a task list based on a given keyword in the command message.","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"anneleong"},"content":"     * @param message The search message containing the keyword in the format","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"anneleong"},"content":"     *                \"find [keyword]\".","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"anneleong"},"content":"     * @return An ArrayList of String representations of tasks that match the search criteria.","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"anneleong"},"content":"    public static ArrayList\u003cString\u003e findTask(String message) {","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"anneleong"},"content":"        String keyword \u003d message.trim().substring(BEGIN_INDEX_OF_KEYWORD).trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"anneleong"},"content":"        ArrayList\u003cString\u003e searchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"anneleong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"anneleong"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"anneleong"},"content":"                searchResult.add(task.toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"anneleong"},"content":"        return searchResult;","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"anneleong":176}},{"path":"src/main/java/n/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * The Ui class handles user interactions and displays","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" * messages to the console.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"package n;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"import n.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"import n.task.Type;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"import static n.TaskList.taskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"public class Ui {","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"    // Constants for messages and formatting","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"    public static final String EMPTY_TASKLIST_MESSAGE \u003d \"no tasks added, wake up pleasee!\";","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"    public static final String NO_SEARCH_RESULT_MESSAGE \u003d \"no matching tasks\";","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"    public static final String NO_TASK_TYPE_ERROR \u003d \"oHno, you did not specify your task type :O\";","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"    public static final String NO_TASK_INDEX_ERROR \u003d \"Task number not provided, please try again ...\";","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"    public static final String INVALID_TASK_INDEX_ERROR \u003d \"invalid task!\";","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"    public static final String INPUT_INSTRUCTION \u003d \"    Please input in this format:\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"    public static final String TODO_INPUT_FORMAT \u003d \"    todo [task]\";","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"    public static final String EVENT_INPUT_FORMAT \u003d \"    event [task] /from [start time] /to [end time]\";","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"    public static final String DEADLINE_INPUT_FORMAT \u003d \"    deadline [task] /by [deadline]\";","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"    public static final String TASK_INDEX_OUT_OF_BOUNDS_ERROR \u003d \"Task not found :p\";","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"    public static final String SAVE_AS_FILE_ERROR \u003d \"Ohno, error occurred when saving file :/\";","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"    public static final String LOGO \u003d \" ____   ___\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"            + \"|    \\\\ |   |\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"            + \"|     \\\\|   |\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"            + \"|          |\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"            + \"|   |\\\\     |\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"            + \"|___| \\\\____| .chatbot :)\";","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"    public static final String LINE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"    public static final String INDENT \u003d \"    \";","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"    private final Scanner input;","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"     * Constructs a Ui object with a Scanner for user input.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"    public Ui() {","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"     * Prints a line of underscores for formatting.","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"anneleong"},"content":"    public static void printLine() {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"     * Prints a formatted message surrounded by lines.","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"anneleong"},"content":"        printLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"anneleong"},"content":"        System.out.println(INDENT+message);","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"anneleong"},"content":"        printLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"anneleong"},"content":"     * Prints a welcome message.","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"anneleong"},"content":"    public void printWelcome(){","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"anneleong"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"anneleong"},"content":"        printMessage(\"Hello! I\u0027m N :) \\n\" +INDENT+ \"What can I do for you?\");","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"anneleong"},"content":"     * Prints the task list or an empty message if the list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"anneleong"},"content":"    public void printTaskList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"anneleong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"anneleong"},"content":"            printMessage(EMPTY_TASKLIST_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"anneleong"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"anneleong"},"content":"            printLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"anneleong"},"content":"            System.out.println(INDENT+\"Here are the tasks in your list:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"anneleong"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"anneleong"},"content":"                System.out.println(INDENT+ task);","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"anneleong"},"content":"            printLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"anneleong"},"content":"     * Prints a message to indicate that a task has been added.","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"anneleong"},"content":"    public static void printTaskAddedMessage() {","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"anneleong"},"content":"        if (taskList.size() \u003c\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"anneleong"},"content":"            printMessage(\"Got it, \" +taskList.get(taskList.size() - 1).getTaskType()+ \" task has been added:\\n\" + \"    \"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"anneleong"},"content":"                    +taskList.get(taskList.size() - 1).toString()+","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"anneleong"},"content":"                    \"\\n    Now you have 1 task in the list\");","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"anneleong"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"anneleong"},"content":"            printMessage(\"Got it, \" +taskList.get(taskList.size() - 1).getTaskType()+ \" task has been added:\\n\" + \"    \"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"anneleong"},"content":"                    +taskList.get(taskList.size() - 1).toString()+","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"anneleong"},"content":"                    \"\\n    Now you have \"+taskList.size()+\" tasks in the list\");","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"anneleong"},"content":"     * Prints a message to indicate that a task has been deleted.","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"anneleong"},"content":"     * @param indexToDelete The index of the deleted task.","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"anneleong"},"content":"    public static void printTaskDeletedMessage(int indexToDelete) {","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"anneleong"},"content":"        printMessage(\"Noted, I have removed the following task:\\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"anneleong"},"content":"                \"    \" +taskList.get(indexToDelete).toString()+ \"\\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"anneleong"},"content":"                \"    Number of Tasks Remaining: \" +(taskList.size() - 1));","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"anneleong"},"content":"     * Prints a message indicating that the task list has been saved.","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"anneleong"},"content":"     * @param filePath The path where the task list is saved.","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"anneleong"},"content":"    public static void printTaskListSavedMessage(Path filePath) {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"anneleong"},"content":"        printMessage(\"Your Task List has been saved, find it at \"+filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"anneleong"},"content":"     * Prints a message indicating that changing the task status is not needed.","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"anneleong"},"content":"     * @param taskIndex The index of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"anneleong"},"content":"     * @param taskStatus The status of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"anneleong"},"content":"    public static void printChangeTaskStatusNotNeededMessage(int taskIndex, boolean taskStatus) {","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"anneleong"},"content":"        String outputMessage \u003d (taskStatus) ?","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"anneleong"},"content":"                //output message if task has already been marked done","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"anneleong"},"content":"                \"Task \" +taskList.get(taskIndex).getIndex()+ \" is already completed!\" :","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"anneleong"},"content":"                //output message if task has not been marked done","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"anneleong"},"content":"                \"Task \" +taskList.get(taskIndex).getIndex()+ \" is already unmarked, complete other tasks!\";","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"anneleong"},"content":"        printMessage(outputMessage);","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"anneleong"},"content":"     * Prints a message indicating that the task status has changed.","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"anneleong"},"content":"     * @param taskIndex The index of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"anneleong"},"content":"     * @param newStatus The new status of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"anneleong"},"content":"    public static void printTaskStatusChangedMessage(int taskIndex, boolean newStatus) {","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"anneleong"},"content":"        String outputMessage \u003d (newStatus) ?","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"anneleong"},"content":"                //output message when task is marked done","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"anneleong"},"content":"                \"Task \" +(taskIndex + 1)+ \" marked done, yay! :)\" :","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"anneleong"},"content":"                //output message when task is unmarked","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"anneleong"},"content":"                \"Okay, task \" +(taskIndex + 1)+ \" unmarked, let\u0027s complete it soon ~.o.~\";","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"anneleong"},"content":"        printMessage(outputMessage);","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"anneleong"},"content":"     * Prints an error message for an incorrect task format.","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"anneleong"},"content":"     * @param taskType The type of the task (Event, Deadline, ToDo).","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"anneleong"},"content":"    public static void printFormatErrorMessage(Type taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"anneleong"},"content":"        String type;","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"anneleong"},"content":"        String format;","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"anneleong"},"content":"        switch(taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"anneleong"},"content":"            case Event:","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"anneleong"},"content":"                type \u003d \"event\";","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"anneleong"},"content":"                format \u003d EVENT_INPUT_FORMAT;","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"anneleong"},"content":"            case Deadline:","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"anneleong"},"content":"                type \u003d \"deadline\";","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"anneleong"},"content":"                format \u003d DEADLINE_INPUT_FORMAT;","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"anneleong"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"anneleong"},"content":"                type \u003d \"todo\";","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"anneleong"},"content":"                format \u003d TODO_INPUT_FORMAT;","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"anneleong"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"anneleong"},"content":"        printMessage(\"Wrong format for \" +type+ \" task! \\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"anneleong"},"content":"                INPUT_INSTRUCTION+","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"anneleong"},"content":"                format);","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"anneleong"},"content":"     * Prints the search results to the console.","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"anneleong"},"content":"     * @param searchResult An ArrayList of String representations of tasks to be printed.","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"anneleong"},"content":"    public void printSearchResult(ArrayList\u003cString\u003e searchResult) {","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"anneleong"},"content":"        if (searchResult.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"anneleong"},"content":"            printMessage(NO_SEARCH_RESULT_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"anneleong"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"anneleong"},"content":"            printLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"anneleong"},"content":"            System.out.println(INDENT+\"Here are the tasks I found in your list:\");","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"anneleong"},"content":"            for (String task : searchResult) {","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"anneleong"},"content":"                System.out.println(INDENT+ task);","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"anneleong"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"anneleong"},"content":"            printLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"anneleong"},"content":"     * Handles user input messages and performs corresponding actions.","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":193,"author":{"gitId":"anneleong"},"content":"    public void handleMessages() {","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"anneleong"},"content":"        String message \u003d input.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"anneleong"},"content":"        if (message.startsWith(\"bye\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"anneleong"},"content":"            printMessage(BYE);","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"anneleong"},"content":"            input.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"anneleong"},"content":"        } else if (message.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":199,"author":{"gitId":"anneleong"},"content":"            printTaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"anneleong"},"content":"        } else if (message.trim().startsWith(\"unmark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"anneleong"},"content":"            TaskList.unmarkTask(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"anneleong"},"content":"        } else if (message.trim().startsWith(\"mark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"anneleong"},"content":"            TaskList.markTask(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"anneleong"},"content":"        } else if (message.trim().startsWith(\"delete\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"anneleong"},"content":"            TaskList.deleteTask(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"anneleong"},"content":"        } else if (message.trim().equalsIgnoreCase(\"save\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"anneleong"},"content":"            N.storage.saveTaskList();","lastModifiedDate":"2024-03-07"},{"lineNumber":212,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-07"},{"lineNumber":213,"author":{"gitId":"anneleong"},"content":"        } else if (message.trim().startsWith(\"find\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":214,"author":{"gitId":"anneleong"},"content":"            ArrayList\u003cString\u003e searchResult \u003d TaskList.findTask(message);","lastModifiedDate":"2024-03-07"},{"lineNumber":215,"author":{"gitId":"anneleong"},"content":"            printSearchResult(searchResult);","lastModifiedDate":"2024-03-07"},{"lineNumber":216,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":217,"author":{"gitId":"anneleong"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"anneleong"},"content":"            TaskList.addTask(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"anneleong"},"content":"            handleMessages();","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":222,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"anneleong":222}},{"path":"src/main/java/n/exceptions/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"package n.exceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":"public class EmptyTaskDescriptionException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"anneleong":4}},{"path":"src/main/java/n/exceptions/NoTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"package n.exceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":"public class NoTaskTypeException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"anneleong":4}},{"path":"src/main/java/n/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * Represents a deadline task, a specific type of Task.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":"package n.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"import n.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"    private String deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"     * Constructor to initialize a Deadline object.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"     * @param arrayIndex  The index of the task in the array.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"     * @throws EmptyTaskDescriptionException If the task description or deadline is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"    public Deadline(String description, int arrayIndex) throws EmptyTaskDescriptionException {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"        // Call the constructor of the base class (Task) to initialize common fields","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"        super(description, arrayIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"        int deadlineIndex \u003d description.indexOf(\"/by\");","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"        // Extract the task description and deadline from the input","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"        this.description \u003d description.substring(0,deadlineIndex).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"        this.deadline \u003d description.substring(deadlineIndex + 3).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"        // Check if the description or deadline is empty, throw an exception if so","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"        if (this.description.isEmpty() || this.deadline.isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"            throw new EmptyTaskDescriptionException();","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"        this.taskType \u003d Type.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"     * Getter method to retrieve the deadline of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"        return deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"     * Setter method to update the deadline of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"     * @param deadline The new deadline for the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"     * Overrides the default toString method in Task to represent the deadline task as a string.","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"     * @return A formatted string representation of the deadline task.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"anneleong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"anneleong"},"content":"        return this.getIndex()+ \". [D] [\"+ this.getCheckMark()+\"] \"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"                +this.getDescription()+ \"(by: \" +this.deadline+ \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"anneleong":60}},{"path":"src/main/java/n/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * Represents an event task, a specific type of Task.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":"package n.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"    private final String fromTime;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"    private final String toTime;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"     * Constructor to initialize an Event object.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"     * @param arrayIndex  The index of the task in the array.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"    public Event(String description, int arrayIndex) {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"        // Call the constructor of the base class (Task) to initialize common fields","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"        super(description, arrayIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"        int fromIndex \u003d description.indexOf(\"/from\");","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"        int toIndex \u003d description.indexOf(\"/to\");","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"        // Extract the task description, start time, and end time from the input","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"        this.description \u003d description.substring(0,fromIndex).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"        this.fromTime \u003d description.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"        this.toTime \u003d description.substring(toIndex+3).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"        this.taskType \u003d Type.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"     * Overrides the default toString method to represent the event task as a string.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"     * @return A formatted string representation of the event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"        return this.getIndex()+ \". [E] [\"+ this.getCheckMark()+\"] \"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"                +this.getDescription()+ \" (from: \" +fromTime+ \" to: \" +toTime+ \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"anneleong":39}},{"path":"src/main/java/n/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * The base class representing a Task.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":"package n.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"    // Fields to store task information","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"    protected String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"    protected int index;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"    protected Type taskType;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"     * Constructor to initialize a Task object.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"     * @param arrayIndex  The index of the task in the array.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"    public Task(String description, int arrayIndex) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"        this.index \u003d arrayIndex + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"     * @return The task description.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"        return description;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"     * Sets the description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"anneleong"},"content":"     * @param description The new task description.","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"anneleong"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"anneleong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"anneleong"},"content":"     * Gets the index of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"anneleong"},"content":"     * @return The task index.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"anneleong"},"content":"    public int getIndex() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"anneleong"},"content":"        return index;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"anneleong"},"content":"     * Sets the index of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"anneleong"},"content":"     * @param index The new task index.","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"anneleong"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"anneleong"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"anneleong"},"content":"     * Checks if the task is done.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"anneleong"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"anneleong"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"anneleong"},"content":"        return isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"anneleong"},"content":"     * Sets the task as done or not done.","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"anneleong"},"content":"     * @param done True if the task is done, false otherwise.","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"anneleong"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"anneleong"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"anneleong"},"content":"     * Gets the checkmark symbol (\u0027X\u0027 if done, \u0027 \u0027 if not done).","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"anneleong"},"content":"     * @return The checkmark symbol.","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"anneleong"},"content":"    public String getCheckMark() {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"anneleong"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"anneleong"},"content":"            return \"X\";","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"anneleong"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"anneleong"},"content":"            return \" \";","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"anneleong"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"anneleong"},"content":"     * @return The task type (Event, Deadline, ToDo).","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"anneleong"},"content":"    public Type getTaskType() {","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"anneleong"},"content":"        return taskType;","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"anneleong"},"content":"     * Overrides the default toString method to represent the task as a string.","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"anneleong"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"anneleong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"anneleong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"anneleong"},"content":"        return this.getIndex()+ \". [\"+ this.getCheckMark()+\"] \" +this.getDescription();","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"anneleong":104}},{"path":"src/main/java/n/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":" * Represents a to-do task, a specific type of Task.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":" * @author  anneleong","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":" * @version 1.0","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":" * @since   2024-03-07","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":"package n.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"import n.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"     * Constructor to initialize a ToDo object.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"     * @param arrayIndex  The index of the task in the array.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"     * @throws EmptyTaskDescriptionException If the task description is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"    public ToDo(String description, int arrayIndex) throws EmptyTaskDescriptionException {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"        // Call the constructor of the base class (Task) to initialize common fields","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"        super(description, arrayIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"        if (this.description.isEmpty()){","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"            throw new EmptyTaskDescriptionException();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"        this.taskType \u003d Type.ToDo;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"anneleong"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"anneleong"},"content":"     * Overrides the toString method in Task to represent the to-do task as a string.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"anneleong"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"anneleong"},"content":"     * @return A formatted string representation of the to-do task.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"anneleong"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"anneleong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"anneleong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"anneleong"},"content":"        return this.getIndex()+ \". [T] [\"+ this.getCheckMark()+\"] \" +this.getDescription();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"anneleong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"anneleong":37}},{"path":"src/main/java/n/task/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"package n.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":"public enum Type {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":"    ToDo, Deadline, Event","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"anneleong":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anneleong"},"content":"mark","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"anneleong"},"content":"mark a","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"anneleong"},"content":"mark 1","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"anneleong"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"anneleong"},"content":"unmark","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"anneleong"},"content":"unmark a","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"anneleong"},"content":"unmark 1","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"anneleong"},"content":"todo","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"anneleong"},"content":"todo wash dishes","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"event","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"anneleong"},"content":"event wash dishes","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"anneleong"},"content":"event wash dishes /from 2pm /to 4pm","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"anneleong"},"content":"deadline wash dishes","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"anneleong"},"content":"deadline wash dishes /by 2pm","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"anneleong"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"anneleong"},"content":"mark 1","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"anneleong"},"content":"mark 2","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"anneleong"},"content":"unmark 2","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"anneleong"},"content":"unmark 3","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"anneleong"},"content":"mark 1","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"anneleong"},"content":"todo shower","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"anneleong"},"content":"find shower","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"anneleong"},"content":"save","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"anneleong"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"anneleong"},"content":"bye","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"anneleong":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"anneleong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\n\\*.java","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"anneleong"},"content":"java -classpath ..\\bin N \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anneleong":2,"-":19}}]
