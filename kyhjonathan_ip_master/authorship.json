[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"import Exceptions.DuckInvalidDeadlineDescriptionException;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    protected String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    public static int addDeadline(Task[] tasks, String userInput, int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"            String[] split \u003d userInput.split(\"/\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"            if (split.length !\u003d 2 || !split[1].startsWith(\"by \")) { //throws exception if the inputs are not to program specifications","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"                throw new DuckInvalidDeadlineDescriptionException();","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"            tasks[index] \u003d new Deadline(split[0].substring(9), split[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(ADDED_MESSAGE + tasks[index]);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"            index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Now you have \" + index + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"        } catch (DuckInvalidDeadlineDescriptionException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Invalid Event input. Please type in format: deadline [string] /by [string]\");","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        return index;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.substring(3) + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"kyhjonathan":36}},{"path":"src/main/java/Duck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class Duck {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"                \"Hello! I\u0027m Duck\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"                \"  _____  _    _  _____ _  __\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"                \" |  __ \\\\| |  | |/ ____| |/ /\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"                \" | |  | | |  | | |    | \u0027 / \\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"                \" | |  | | |  | | |    |  \u003c  \\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"                \" | |__| | |__| | |____| . \\\\ \\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"                \" |_____/ \\\\____/ \\\\_____|_|\\\\_\\\\\");","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"        Task[] tasks \u003d new Task[MAX_TASKS]; //stores Tasks in array called tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"        int index \u003d 0; //index of where the userInput is stored in texts","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"        handleUserInput(tasks, index);","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"    private static void handleUserInput(Task[] tasks, int index) {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"        boolean isFinished \u003d false; //isFinished will be true if user types in bye and the program is finished and terminates","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"        while (!isFinished) {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"                Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"                String userInput \u003d in.nextLine();","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"                    Task.listTasks(tasks, index);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"                    System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"                } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"                    Task.markTask(tasks, userInput, index);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"                } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"                    Task.unmarkTask(tasks, userInput, index);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"                } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"                    index \u003d ToDo.addToDo(tasks, userInput, index);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"                } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"                    index \u003d Deadline.addDeadline(tasks, userInput, index);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"                } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"                    index \u003d Event.addEvent(tasks, userInput, index);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"                } else if (userInput.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"                    System.out.println(LINE_SEPARATOR + \"\\n\" + \"Bye. Hope to see you again soon!\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"                    isFinished \u003d true;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"                } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"                    throw new IllegalArgumentException();","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"                System.out.println(\"Sorry, that is not a valid command. Please try again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"kyhjonathan":52}},{"path":"src/main/java/DuckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"public class DuckException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"    public DuckException (String errorMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"kyhjonathan":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"import Exceptions.DuckInvalidEventDescriptionException;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    protected String from;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"    protected String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"    public Event(String description, String from, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    public static int addEvent(Task[] tasks, String userInput, int index){","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"            String[] split \u003d userInput.split(\"/\");","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"            if (split.length !\u003d 3 || !split[1].startsWith(\"from \") || !split[2].startsWith(\"by \")) { //throws exception if the inputs are not to program specifications","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"                throw new DuckInvalidEventDescriptionException();","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"            tasks[index] \u003d new Event(split[0].substring(6), split[1].substring(5), split[2].substring(3));","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(ADDED_MESSAGE + tasks[index]);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"            index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Now you have \" + index + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"        } catch (DuckInvalidEventDescriptionException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Invalid Event input. Please type in format: event [string] /from [string] /by [string]\");","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"        return index;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + this.by + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"kyhjonathan":38}},{"path":"src/main/java/Exceptions/DuckEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package Exceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class DuckEmptyDescriptionException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/main/java/Exceptions/DuckInvalidDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package Exceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class DuckInvalidDeadlineDescriptionException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/main/java/Exceptions/DuckInvalidEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package Exceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class DuckInvalidEventDescriptionException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/main/java/Exceptions/DuckInvalidToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package Exceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class DuckInvalidToDoDescriptionException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"        return description;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"        String done \u003d \"[ ] \";","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"            done \u003d \"[X] \";","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"        return done + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"    public static void markTask(Task[] tasks, String userInput, int index){","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"        String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"        int number \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"        if (number \u003c\u003d index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"            tasks[number - 1].setDone(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"[X] \" + tasks[number-1].getDescription());","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Task does not exist yet!\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"    public static void unmarkTask(Task[] tasks, String userInput, int index){","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"        String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"        int number \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"        if (number \u003c\u003d index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"            tasks[number - 1].setDone(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"[ ] \" + tasks[number-1].getDescription());","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR + \"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Task does not exist yet!\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"    public static void listTasks(Task[] tasks, int index){","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"            System.out.print(i+1 + \".\");","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(tasks[i]);","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kyhjonathan":66}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"import Exceptions.DuckInvalidToDoDescriptionException;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"    public static int addToDo(Task[] tasks, String userInput, int index) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"            String split \u003d userInput.substring(4);","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"            if (split.trim().isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"                throw new DuckInvalidToDoDescriptionException();","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"            tasks[index] \u003d new ToDo(split);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(ADDED_MESSAGE + tasks[index]);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"            index++;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Now you have \" + index + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Too many items! Max 100 items\");","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        } catch (DuckInvalidToDoDescriptionException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"Invalid ToDo input. Please type in format: todo [string]\");","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"        return index;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"kyhjonathan":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"todo borrow book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"list","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"kyhjonathan":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"kyhjonathan":1}}]
