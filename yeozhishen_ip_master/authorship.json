[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"# Fido User Guide","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"Fido is a CLI tasks tracking application designed for people to keep track of their upcoming","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"todos, events and deadlines. For experienced CLI users, they can enter their","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"tasks faster compared to GUI applications","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"* [Features](#features)","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"  * [list](#1-listing-all-the-tasks-list-)","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"  * [todo](#2-add-a-todo-todo)","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"  * [deadline](#3-add-a-deadline-deadline)","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"  * [event](#4-add-a-event-event)","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"  * [mark](#5-mark-a-task-mark)","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"  * [unmark](#6-unmark-a-task-unmark)","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"  * [delete](#7-delete-a-task-delete)","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"  * [find](#8-find-tasks-find-)","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"  * [bye](#9-exit-the-program-bye)","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"* [Saving the data](#saving-the-data)","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"* [Editing the data](#editing-the-data)","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"* [Known issues](#known-issues)","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"## Quick Start","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"* Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"* Download the latest fido.jar from the github release.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"* Open a command terminal, create a new folder to put the jar file inside,\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"  change directory to the created new folder using `cd` or `dir` and use \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"  `java -jar fido.jar` to run the application","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"* Refer to the features below for details of each command","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"### 1. Listing all the tasks: list ","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"list","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"Lists the tasks tracked by the application","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"list","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"1. [T][ ] task1","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"2. [E][ ] add more tasks (from: 6pm, to: 89)","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"### 2. Add a ToDo: todo","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"```dtd    ","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"todo [description_of_task]","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"yeozhishen"},"content":"Adds a todo to the list of tasks tracked by Fido.","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"yeozhishen"},"content":"A todo should only consist of a task description.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"yeozhishen"},"content":"todo attend a concert","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"yeozhishen"},"content":"added: [T][ ] attend a concert","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"yeozhishen"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"yeozhishen"},"content":"``` ","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"yeozhishen"},"content":"### 3. Add a Deadline: deadline","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"yeozhishen"},"content":"deadline [description_of_task] /by [time]","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"yeozhishen"},"content":"Adds a deadline to the list of tasks tracked by Fido.","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003eA deadline should only consist of a task description and a time to finish the task by.","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"yeozhishen"},"content":"#### **_OPTIONS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"yeozhishen"},"content":"* `/by [time]`\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"yeozhishen"},"content":"  Specifies the time to complete the task by. The format can be in any String format.","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"yeozhishen"},"content":"deadline finish cs2113 tutorial /by 9\u0027oclock","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"yeozhishen"},"content":"added: [D][ ] finish cs2113 tutorial (by: 9\u0027oclock)","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"yeozhishen"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"yeozhishen"},"content":"### 4. Add a Event: event","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"yeozhishen"},"content":"```dtd    ","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"yeozhishen"},"content":"event [description_of_task] /from [start_time] /to [end_time]","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"yeozhishen"},"content":"Adds an event to the list of tasks tracked by Fido.","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003eA event should only consist of a task description, the start time of a task and the end time of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"yeozhishen"},"content":"#### **_OPTIONS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"yeozhishen"},"content":"* `/from [start_time]`\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"yeozhishen"},"content":"  Specifies the start time the event starts. The format can be in any String format.","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"yeozhishen"},"content":"* `/to [end_time]`\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"yeozhishen"},"content":"    Specifies the end time the event ends. The format can be in any String format.","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"yeozhishen"},"content":"event attend lecture /from 4pm /to 6pm","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"yeozhishen"},"content":"added: [E][ ] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"yeozhishen"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":129,"author":{"gitId":"yeozhishen"},"content":"### 5. Mark a task: mark","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"yeozhishen"},"content":"```dtd    ","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"yeozhishen"},"content":"mark [index_of_task]","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"yeozhishen"},"content":"Marks a tasks as completed in the list of tasks tracked by Fido. \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"yeozhishen"},"content":"The index of the task to mark should be derived from the output of the `list` command","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e and must be a positive integer.","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"yeozhishen"},"content":"Example: Original list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"yeozhishen"},"content":"1. [E][ ] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"yeozhishen"},"content":"mark 1","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"yeozhishen"},"content":"uwu  marked the task as done: [E][X] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"yeozhishen"},"content":"``` ","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"yeozhishen"},"content":"Updated list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"yeozhishen"},"content":"1. [E][X] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"yeozhishen"},"content":"### 6. Unmark a task: unmark","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"yeozhishen"},"content":"```dtd    ","lastModifiedDate":"2024-02-26"},{"lineNumber":168,"author":{"gitId":"yeozhishen"},"content":"unmark [index_of_task]","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"yeozhishen"},"content":"Marks a tasks as incomplete in the list of tasks tracked by Fido. \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"yeozhishen"},"content":"The index of the task to mark should be derived from the output of the `list` command","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e and must be a positive integer.","lastModifiedDate":"2024-02-26"},{"lineNumber":174,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":175,"author":{"gitId":"yeozhishen"},"content":"Example: Original list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":176,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":178,"author":{"gitId":"yeozhishen"},"content":"1. [E][X] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":179,"author":{"gitId":"yeozhishen"},"content":"2. [T][ ] cook food","lastModifiedDate":"2024-02-26"},{"lineNumber":180,"author":{"gitId":"yeozhishen"},"content":"3. [D][X] eat cooked food (by: 3pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":182,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"yeozhishen"},"content":"mark 3","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"yeozhishen"},"content":":( marked the task as not done yet: [D][ ] eat cooked food (by: 3pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":192,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"yeozhishen"},"content":"``` ","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"yeozhishen"},"content":"Updated list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":197,"author":{"gitId":"yeozhishen"},"content":"1. [E][X] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"yeozhishen"},"content":"2. [T][ ] cook food","lastModifiedDate":"2024-02-26"},{"lineNumber":199,"author":{"gitId":"yeozhishen"},"content":"3. [D][ ] eat cooked food (by: 3pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":201,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":203,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"yeozhishen"},"content":"### 7. Delete a task: delete","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":207,"author":{"gitId":"yeozhishen"},"content":"```dtd    ","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"yeozhishen"},"content":"delete [index_of_task]","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"yeozhishen"},"content":"Deletes a task from the list of tasks tracked by Fido. \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":212,"author":{"gitId":"yeozhishen"},"content":"The index of the task to mark should be derived from the output of the `list` command","lastModifiedDate":"2024-02-26"},{"lineNumber":213,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e and must be a positive integer.","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"yeozhishen"},"content":"Example: Original list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":217,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":218,"author":{"gitId":"yeozhishen"},"content":"1. [E][X] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":219,"author":{"gitId":"yeozhishen"},"content":"2. [T][ ] cook food","lastModifiedDate":"2024-02-26"},{"lineNumber":220,"author":{"gitId":"yeozhishen"},"content":"3. [D][ ] eat cooked food (by: 3pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":221,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":222,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":223,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":224,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":225,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":226,"author":{"gitId":"yeozhishen"},"content":"delete 2","lastModifiedDate":"2024-02-26"},{"lineNumber":227,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":228,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":229,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":230,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":231,"author":{"gitId":"yeozhishen"},"content":"I have deleted: ","lastModifiedDate":"2024-02-26"},{"lineNumber":232,"author":{"gitId":"yeozhishen"},"content":"[T][ ] cook food","lastModifiedDate":"2024-02-26"},{"lineNumber":233,"author":{"gitId":"yeozhishen"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2024-02-26"},{"lineNumber":234,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":235,"author":{"gitId":"yeozhishen"},"content":"``` ","lastModifiedDate":"2024-02-26"},{"lineNumber":236,"author":{"gitId":"yeozhishen"},"content":"Updated list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":237,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":238,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":239,"author":{"gitId":"yeozhishen"},"content":"1. [E][X] attend lecture (from: 4pm, to: 6pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":240,"author":{"gitId":"yeozhishen"},"content":"2. [D][ ] eat cooked food (by: 3pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":241,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":242,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":243,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":244,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":245,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":246,"author":{"gitId":"yeozhishen"},"content":"### 8. Find tasks: find ","lastModifiedDate":"2024-02-26"},{"lineNumber":247,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":248,"author":{"gitId":"yeozhishen"},"content":"```dtd    ","lastModifiedDate":"2024-02-26"},{"lineNumber":249,"author":{"gitId":"yeozhishen"},"content":"find [keywords_to_search_for]","lastModifiedDate":"2024-02-26"},{"lineNumber":250,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":251,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":252,"author":{"gitId":"yeozhishen"},"content":"Finds the tasks containing `[keywords_to_search_for]` **in the task description** from list of tasks tracked by Fido, \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":253,"author":{"gitId":"yeozhishen"},"content":"and outputs it to the user. \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":254,"author":{"gitId":"yeozhishen"},"content":"The index of the task to mark should be derived from the output of the `list` command","lastModifiedDate":"2024-02-26"},{"lineNumber":255,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":256,"author":{"gitId":"yeozhishen"},"content":"Example:","lastModifiedDate":"2024-02-26"},{"lineNumber":257,"author":{"gitId":"yeozhishen"},"content":"Original list of tasks using `list` command:","lastModifiedDate":"2024-02-26"},{"lineNumber":258,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":259,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":260,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":261,"author":{"gitId":"yeozhishen"},"content":"1. [T][ ] todo one","lastModifiedDate":"2024-02-26"},{"lineNumber":262,"author":{"gitId":"yeozhishen"},"content":"2. [T][X] todo 2","lastModifiedDate":"2024-02-26"},{"lineNumber":263,"author":{"gitId":"yeozhishen"},"content":"3. [D][ ] deadline 1 (by: 9pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":264,"author":{"gitId":"yeozhishen"},"content":"4. [D][X] deadline two (by: 10pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":265,"author":{"gitId":"yeozhishen"},"content":"5. [E][ ] event1 (from: 8am, to: 9pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":266,"author":{"gitId":"yeozhishen"},"content":"6. [E][ ] get two concert tickets (from: 7am, to: 9pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":267,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":268,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":269,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":270,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":271,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":272,"author":{"gitId":"yeozhishen"},"content":"find two","lastModifiedDate":"2024-02-26"},{"lineNumber":273,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":274,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":275,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":276,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":277,"author":{"gitId":"yeozhishen"},"content":"Here are the matching tasks: ","lastModifiedDate":"2024-02-26"},{"lineNumber":278,"author":{"gitId":"yeozhishen"},"content":"1. [D][X] deadline two (by: 10pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":279,"author":{"gitId":"yeozhishen"},"content":"2. [E][ ] get two concert tickets (from: 7am, to: 9pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":280,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":281,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":282,"author":{"gitId":"yeozhishen"},"content":"``` ","lastModifiedDate":"2024-02-26"},{"lineNumber":283,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":284,"author":{"gitId":"yeozhishen"},"content":"### 9. Exit the program: bye","lastModifiedDate":"2024-02-26"},{"lineNumber":285,"author":{"gitId":"yeozhishen"},"content":"#### **_SYNOPSIS_**","lastModifiedDate":"2024-02-26"},{"lineNumber":286,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-27"},{"lineNumber":287,"author":{"gitId":"yeozhishen"},"content":"bye","lastModifiedDate":"2024-02-26"},{"lineNumber":288,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":289,"author":{"gitId":"yeozhishen"},"content":"#### **_DESCRIPTION_**","lastModifiedDate":"2024-02-26"},{"lineNumber":290,"author":{"gitId":"yeozhishen"},"content":"Exits the fido application","lastModifiedDate":"2024-02-26"},{"lineNumber":291,"author":{"gitId":"yeozhishen"},"content":"#### **_USAGE_**","lastModifiedDate":"2024-02-26"},{"lineNumber":292,"author":{"gitId":"yeozhishen"},"content":"Example of usage: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":293,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":294,"author":{"gitId":"yeozhishen"},"content":"bye","lastModifiedDate":"2024-02-26"},{"lineNumber":295,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":296,"author":{"gitId":"yeozhishen"},"content":"Expected output: \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":297,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":298,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":299,"author":{"gitId":"yeozhishen"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-26"},{"lineNumber":300,"author":{"gitId":"yeozhishen"},"content":"------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":301,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":302,"author":{"gitId":"yeozhishen"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":303,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":304,"author":{"gitId":"yeozhishen"},"content":"## Saving the data","lastModifiedDate":"2024-02-26"},{"lineNumber":305,"author":{"gitId":"yeozhishen"},"content":"All task data input by the user is automatically saved by the app following any changes to \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":306,"author":{"gitId":"yeozhishen"},"content":"the data in memory in the file `./data/tasklist.txt`. Ensure that the file is not corrupted. If the program exits on start up with the \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":307,"author":{"gitId":"yeozhishen"},"content":"following line being displayed:","lastModifiedDate":"2024-02-26"},{"lineNumber":308,"author":{"gitId":"yeozhishen"},"content":"```dtd","lastModifiedDate":"2024-02-26"},{"lineNumber":309,"author":{"gitId":"yeozhishen"},"content":"error regarding file IO","lastModifiedDate":"2024-02-26"},{"lineNumber":310,"author":{"gitId":"yeozhishen"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":311,"author":{"gitId":"yeozhishen"},"content":"delete the data file and restart the application. This will remove all data stored in the data file \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":312,"author":{"gitId":"yeozhishen"},"content":"and allow for a clean start. Please also ensure that the user you are using has permission to the \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":313,"author":{"gitId":"yeozhishen"},"content":"directory that the `fido.jar` file is in.","lastModifiedDate":"2024-02-26"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":315,"author":{"gitId":"yeozhishen"},"content":"If the file is corrupted, the current data file will be discarded and a new file will be created","lastModifiedDate":"2024-02-26"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":317,"author":{"gitId":"yeozhishen"},"content":"## Editing the data","lastModifiedDate":"2024-02-26"},{"lineNumber":318,"author":{"gitId":"yeozhishen"},"content":"It is highly not recommended to edit the data file as wrongly editing the file will lead to file corruption \u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":319,"author":{"gitId":"yeozhishen"},"content":"which will result in the user having to delete the file, losing all the data","lastModifiedDate":"2024-02-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":321,"author":{"gitId":"yeozhishen"},"content":"## Known issues","lastModifiedDate":"2024-02-26"},{"lineNumber":322,"author":{"gitId":"yeozhishen"},"content":"* it is known that adding \\` in any of the task fields will lead to an error in the file parsing \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":323,"author":{"gitId":"yeozhishen"},"content":"  This is because the \\` symbol is used as a file delimiter when saving the tasks in file format \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":324,"author":{"gitId":"yeozhishen"},"content":"  As such, the user should avoid using \\` in the task fields","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"yeozhishen":304,"-":20}},{"path":"src/main/java/fido/Fido.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Todo;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"import fido.enumerators.Commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"import fido.enumerators.ErrorMessages;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"import fido.enumerators.ParserRegex;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"import fido.exceptions.FidoException;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"import fido.utilities.FileManager;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"import fido.utilities.Formatter;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"import fido.utilities.Parser;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"import fido.utilities.TaskManager;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"import fido.utilities.UserInterface;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":" * The main class that runs the Fido program","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":" * driver logic for the program","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":" * integrating functionality from parser, task manager, user interface and file manager","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"public class Fido {","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"    private static final String RECREATING_FILE_STRING \u003d \", attempting to deleting and recreating file to salvage\";","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"    TaskManager fidoTaskManager;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"    Parser inputParser;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"    UserInterface userInterface;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"    FileManager fileManager;","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"     * Constructor for Fido","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"     * Initializes the task manager, parser, user interface and file manager","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"     * and loads tasks from the file/creates the file if it does not exist","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"     * recreates the file if there are parsing issues","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"     * ends the program if there are issues with the file","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"    public Fido() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"        this.fidoTaskManager \u003d new TaskManager();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"        this.inputParser \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"        this.userInterface \u003d new UserInterface();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"        this.fileManager \u003d new FileManager();","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"            String resultOfFileCheck \u003d fileManager.ensureFileExists();","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"            loadTasksFromFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"            userInterface.printMessage(resultOfFileCheck);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"                userInterface.printMessage(e.getMessage() + RECREATING_FILE_STRING);","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"                String recreationMessage \u003d fileManager.recreateFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"                userInterface.printMessage(recreationMessage);","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"yeozhishen"},"content":"            } catch (Exception e2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"                userInterface.printMessage(e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"                Exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"        userInterface.printGreetingMessage();","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"     * Main method that runs the Fido program","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"yeozhishen"},"content":"     * continuously collects user input, processes the input and prints the output","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"yeozhishen"},"content":"    public void run() {","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"yeozhishen"},"content":"        while (true) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"yeozhishen"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"yeozhishen"},"content":"                inputParser.collectUserInput();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yeozhishen"},"content":"                String command \u003d inputParser.getUserInputCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yeozhishen"},"content":"                String outputMessage \u003d processInputCommand(command);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"yeozhishen"},"content":"                userInterface.printMessage(outputMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"yeozhishen"},"content":"            } catch (FidoException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yeozhishen"},"content":"                userInterface.printMessage(Commands.INVALID_COMMAND.string + \" \" + e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"yeozhishen"},"content":"     * Processes the user input command and returns the output message","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"yeozhishen"},"content":"     * @param String command the user input command","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"yeozhishen"},"content":"     * @return String the output message of the command executed","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException relaying erros messages from the command methods","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"yeozhishen"},"content":"    private String processInputCommand(String command) throws FidoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"yeozhishen"},"content":"        Commands CommandEnum \u003d Commands.getCommandEnumeration(command);","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"yeozhishen"},"content":"        switch (CommandEnum) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"yeozhishen"},"content":"        case EXIT:","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"yeozhishen"},"content":"            Exit();","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yeozhishen"},"content":"        case LIST:","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"yeozhishen"},"content":"            return fidoTaskManager.getTaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"yeozhishen"},"content":"        case MARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"yeozhishen"},"content":"            return handleTaskMarking();","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"yeozhishen"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"yeozhishen"},"content":"            return handleUnmarkingTask();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"yeozhishen"},"content":"        case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"yeozhishen"},"content":"            return addTodo();","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"yeozhishen"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"yeozhishen"},"content":"            return addDeadline();","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"yeozhishen"},"content":"        case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"yeozhishen"},"content":"            return addEvent();","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"yeozhishen"},"content":"        case DELETE:","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"yeozhishen"},"content":"            return deleteTask();","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"yeozhishen"},"content":"        case FIND:","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"yeozhishen"},"content":"            return findTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"yeozhishen"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"yeozhishen"},"content":"            return Commands.INVALID_COMMAND.string;","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":102,"author":{"gitId":"yeozhishen"},"content":"    private void Exit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"yeozhishen"},"content":"        userInterface.printExitMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"yeozhishen"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":106,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"yeozhishen"},"content":"     * Adds a todo to the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the todo that was added","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the todo is invalid","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"yeozhishen"},"content":"    private String addTodo() throws FidoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"yeozhishen"},"content":"        if (!inputParser.isValidTodo()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INVALID_TODO.string);","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"yeozhishen"},"content":"        String taskDescription \u003d inputParser.getTaskDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"yeozhishen"},"content":"        Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"yeozhishen"},"content":"        fileManager.save(todo);","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"yeozhishen"},"content":"        return fidoTaskManager.addTask(todo);","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"yeozhishen"},"content":"     * Adds a deadline to the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the deadline that was added","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the deadline is invalid","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"yeozhishen"},"content":"    private String addDeadline() throws FidoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"yeozhishen"},"content":"        if (!inputParser.isValidDeadline()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INVALID_DEADLINE.string);","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"yeozhishen"},"content":"        String byString \u003d inputParser.getStringAfterKeywordUntilNextKeyword(ParserRegex.BY);","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"yeozhishen"},"content":"        String taskDescription \u003d inputParser.getTaskDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"yeozhishen"},"content":"        Deadline deadline \u003d new Deadline(taskDescription, byString);","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"yeozhishen"},"content":"        fileManager.save(deadline);","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"yeozhishen"},"content":"        return fidoTaskManager.addTask(deadline);","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"yeozhishen"},"content":"     * Adds an event to the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the event that was added","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the event is invalid","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"yeozhishen"},"content":"    private String addEvent() throws FidoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"yeozhishen"},"content":"        if (!inputParser.isValidEvent()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INVALID_EVENT.string);","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"yeozhishen"},"content":"        String fromString \u003d inputParser.getStringAfterKeywordUntilNextKeyword(ParserRegex.FROM);","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"yeozhishen"},"content":"        String toString \u003d inputParser.getStringAfterKeywordUntilNextKeyword(ParserRegex.TO);","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"yeozhishen"},"content":"        String taskDescription \u003d inputParser.getTaskDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"yeozhishen"},"content":"        Event event \u003d new Event(taskDescription, fromString, toString);","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"yeozhishen"},"content":"        fileManager.save(event);","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"yeozhishen"},"content":"        return fidoTaskManager.addTask(event);","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"yeozhishen"},"content":"     * Marks a task as done in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was marked as done","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the index is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"yeozhishen"},"content":"    private String handleTaskMarking() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"yeozhishen"},"content":"            int stdoutTaskIndex \u003d inputParser.getTaskIndex();","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"yeozhishen"},"content":"            String unmarkedTask \u003d Formatter.convertToFileFormat(fidoTaskManager.getTask(stdoutTaskIndex));","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"yeozhishen"},"content":"            String message \u003d fidoTaskManager.markTaskAsDone(stdoutTaskIndex);","lastModifiedDate":"2024-02-17"},{"lineNumber":161,"author":{"gitId":"yeozhishen"},"content":"            String markedTask \u003d Formatter.convertToFileFormat(fidoTaskManager.getTask(stdoutTaskIndex));","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"yeozhishen"},"content":"            fileManager.overwriteLine(unmarkedTask, markedTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":163,"author":{"gitId":"yeozhishen"},"content":"            return message;","lastModifiedDate":"2024-02-17"},{"lineNumber":164,"author":{"gitId":"yeozhishen"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2024-02-17"},{"lineNumber":165,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INDEX_OUT_OF_BOUNDS.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":166,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"yeozhishen"},"content":"     * Marks a task as not done in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was marked as not done","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the index is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"yeozhishen"},"content":"    private String handleUnmarkingTask() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"yeozhishen"},"content":"            int stdoutTaskIndex \u003d inputParser.getTaskIndex();","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"yeozhishen"},"content":"            String markedTask \u003d Formatter.convertToFileFormat(fidoTaskManager.getTask(stdoutTaskIndex));","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"yeozhishen"},"content":"            String message \u003d fidoTaskManager.unmarkTask(stdoutTaskIndex);","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"yeozhishen"},"content":"            String unmarkedTask \u003d Formatter.convertToFileFormat(fidoTaskManager.getTask(stdoutTaskIndex));","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"yeozhishen"},"content":"            fileManager.overwriteLine(markedTask, unmarkedTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"yeozhishen"},"content":"            return message;","lastModifiedDate":"2024-02-17"},{"lineNumber":181,"author":{"gitId":"yeozhishen"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INDEX_OUT_OF_BOUNDS.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":185,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"yeozhishen"},"content":"     * Deletes a task from the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was deleted","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the index is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"yeozhishen"},"content":"    private String deleteTask() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"yeozhishen"},"content":"            int stdoutTaskIndex \u003d inputParser.getTaskIndex();","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"yeozhishen"},"content":"            String taskToDelete \u003d Formatter.convertToFileFormat(fidoTaskManager.getTask(stdoutTaskIndex));","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"yeozhishen"},"content":"            String message \u003d fidoTaskManager.deleteTask(stdoutTaskIndex);","lastModifiedDate":"2024-02-17"},{"lineNumber":195,"author":{"gitId":"yeozhishen"},"content":"            fileManager.overwriteLine(System.lineSeparator() + taskToDelete, \"\");","lastModifiedDate":"2024-02-17"},{"lineNumber":196,"author":{"gitId":"yeozhishen"},"content":"            return message;","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"yeozhishen"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INDEX_OUT_OF_BOUNDS.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"yeozhishen"},"content":"     * Finds tasks using a keyword","lastModifiedDate":"2024-02-26"},{"lineNumber":203,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the tasks that were found","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the find command does not have a keyword supplied","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"yeozhishen"},"content":"    private String findTasks() throws FidoException{","lastModifiedDate":"2024-02-25"},{"lineNumber":207,"author":{"gitId":"yeozhishen"},"content":"        String keyword \u003d inputParser.getFindKeyword();","lastModifiedDate":"2024-02-25"},{"lineNumber":208,"author":{"gitId":"yeozhishen"},"content":"        return fidoTaskManager.findTasksUsingKeyword(keyword);","lastModifiedDate":"2024-02-25"},{"lineNumber":209,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":210,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"yeozhishen"},"content":"     * Loads tasks from the file","lastModifiedDate":"2024-02-26"},{"lineNumber":212,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there are issues with the file","lastModifiedDate":"2024-02-26"},{"lineNumber":213,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"yeozhishen"},"content":"    private void loadTasksFromFile() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":215,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"yeozhishen"},"content":"            String taskFileContents \u003d fileManager.readFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":217,"author":{"gitId":"yeozhishen"},"content":"            List\u003cTask\u003e taskList \u003d Formatter.convertToTaskListFromFileFormat(taskFileContents);","lastModifiedDate":"2024-02-17"},{"lineNumber":218,"author":{"gitId":"yeozhishen"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"yeozhishen"},"content":"                fidoTaskManager.addTask(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"yeozhishen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":222,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.FILE_LOAD_ERROR.string);","lastModifiedDate":"2024-02-26"},{"lineNumber":223,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":224,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"yeozhishen":225}},{"path":"src/main/java/fido/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"public class Main {","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"    public static void main(String [] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"        Fido chatbot \u003d new Fido();","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"        chatbot.run();","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yeozhishen":7}},{"path":"src/main/java/fido/datastructures/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.datastructures;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents a task with a deadline in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"    private static final char TYPE \u003d \u0027D\u0027;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    protected String doBy;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"     * Constructor for the deadline task","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"     * @param String task the description of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"     * @param String doBy the time the task is due","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"    public Deadline(String task, String doBy) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"        super(task, TYPE);","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"        this.doBy \u003d doBy;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"     * Returns the time task is due","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"     * @return String the time task is due","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    public String getDoBy() {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"        return doBy;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"        return super.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"                + \" (\" + \"by: \" + doBy + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yeozhishen":29}},{"path":"src/main/java/fido/datastructures/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.datastructures;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents a task with a start and end time in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"    private static final char TYPE \u003d \u0027E\u0027;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    protected String startTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    protected String endTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"     * Constructor for the event task","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"     * @param String task the description of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"     * @param String startTime the start time of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"     * @param String endTime the end time of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    public Event(String task, String startTime, String endTime) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"        super(task, TYPE);","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"     * Returns the end time of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"     * @return String the end time of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"        return endTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"     * Returns the start time of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"     * @return String the start time of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"        return startTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"        return super.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"                + \" (\" + \"from: \" + startTime","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"                + \", to: \" + endTime + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yeozhishen":40}},{"path":"src/main/java/fido/datastructures/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.datastructures;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents a task in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"    protected String task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    protected char type;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"        return task;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"        return isDone;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"     * Returns the type of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"     * @return char the type of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"    public char getType() {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"        return type;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"     * Constructor for the task, sets the task description and type","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"     * and initializes the task as not done","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"     * @param String task the description of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"     * @param char type the type of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"    public Task(String task, char type) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"        setNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"        return \"[\" + type + \"]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"                + \"[\" + getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"                + task;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"     * Marks the task as done","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"    public void setDone(){","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"yeozhishen"},"content":"     * Marks the task as not done","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"    public void setNotDone(){","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yeozhishen":56}},{"path":"src/main/java/fido/datastructures/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.datastructures;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents a todo task in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"    private static final char TYPE \u003d \u0027T\u0027;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"        super(task, TYPE);","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yeozhishen":10}},{"path":"src/main/java/fido/enumerators/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.enumerators;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents the commands that Fido can understand","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" * with the string representation of the command","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"public enum Commands {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    EXIT(\"bye\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    FIND(\"find\"),","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"    INVALID_COMMAND(\"invalid command!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    public final String string;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"    private Commands(String string) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"        this.string \u003d string;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    public static Commands getCommandEnumeration(String command) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"        for (Commands enumCommand : values()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"            if (enumCommand.string.equals(command)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"                return enumCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"        return INVALID_COMMAND;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"yeozhishen":29}},{"path":"src/main/java/fido/enumerators/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.enumerators;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents the error messages that Fido can output","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" * with the string representation of the error message","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":" * will be used with the FidoException exception","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"public enum ErrorMessages {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    INVALID_DEADLINE(\"Invalid deadline. Input deadline in the form of: deadline [task] /by [time]\"),","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    INVALID_EVENT(\"Invalid event. Input event in the form of: event [task] /from [start_time] /to [end_time]\"),","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"    INVALID_TODO(\"Invalid todo. Input todo in the form of: todo [task]\"),","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    INVALID_ARGUMENTS(\"too many or too little arguments\"),","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    INVALID_INTEGER(\"not a valid integer\"),","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"    INVALID_FIND(\"Invalid find command. Too little arguments, enter a keyword/s to find\"),","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    MISSING_INPUT(\"No input detected, enter an input command\"),","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    FILE_ERROR(\"error regarding file IO\"),","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"    FILE_LOAD_ERROR(\"Error in parsing file\"),","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    INDEX_OUT_OF_BOUNDS(\"Index given is out of bounds\");","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"    public final String string;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"    private ErrorMessages(String string) {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"        this.string \u003d string;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"yeozhishen":22}},{"path":"src/main/java/fido/enumerators/ParserRegex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.enumerators;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents the keywords separating the different task fields that Fido can understand","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" * with the string representation of the keyword task fields separator","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"public enum ParserRegex {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    BY(\"/by\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    FROM(\"/from\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    TO(\"/to\"),","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"    REGEX_NOT_FOUND(\"invalid regex\");","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    public final String string;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    private ParserRegex(String string) {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"        this.string \u003d string;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"     * Returns the ParserRegex enumeration of the command","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"     * @param String command the command to get the enumeration of","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"     * @return ParserRegex the enumeration of the command, REGEX_NOT_FOUND if the command is not a valid enumeration","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"    public static ParserRegex getCommandEnumeration (String command) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"        for (ParserRegex enumCommand : values()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"            if (enumCommand.string.equals(command)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"                return enumCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"        return REGEX_NOT_FOUND;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"     * Checks if the command is a valid enumeration","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"     * @param String command the command to check","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"     * @return boolean true if the command is a valid enumeration, false otherwise","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"    public static boolean isStringEnumeration (String command) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"        return getCommandEnumeration(command) !\u003d REGEX_NOT_FOUND;","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yeozhishen":36}},{"path":"src/main/java/fido/exceptions/FidoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.exceptions;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Represents an exception in Fido","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"public class FidoException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"    public FidoException(String message)","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"        super(message);","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"yeozhishen":10}},{"path":"src/main/java/fido/utilities/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.utilities;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"import fido.exceptions.FidoException;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"import fido.enumerators.ErrorMessages;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"import java.io.File;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"public class FileManager {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"    private static final String FILE_PATH \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    private static final String FILE_CREATED_STRING \u003d \"new data file successfully created\";","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"    private static final String EXISTING_FILE_FOUND_STRING \u003d \"existing data file found\";","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    private static final String FILE_RECREATED_SUCCESSFULLY_STRING \u003d \"file recreation success\";","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    private static final String FILE_TITLE \u003d \"Tasklist\";","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"    File dataFile \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"     * Ensures that the file exists, if it does not, it creates a new file","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"     * @return String message indicating the status of the file","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there is an error creating the file","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"    public String ensureFileExists() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"            boolean fileDoesNotExist \u003d dataFile.createNewFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"            if (fileDoesNotExist) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"                FileWriter writer \u003d new FileWriter(dataFile,true);","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"                writer.append(FILE_TITLE);","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"                writer.flush();","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"                return FILE_CREATED_STRING;","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"            return EXISTING_FILE_FOUND_STRING;","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.FILE_ERROR.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"     * Overwrites a line in the file with a new line","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"     * @param String oldText the old line of text to be replaced","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"     * @param String newText the new line of text to replace the old line","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there is an error overwriting the line in the file","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"    public void overwriteLine(String oldText, String newText) throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yeozhishen"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"                buffer.append(sc.nextLine() + System.lineSeparator());","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"            String fileContent \u003d buffer.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"            sc.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"            fileContent \u003d fileContent.replaceAll(oldText, newText);","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"            FileWriter writer \u003d new FileWriter(dataFile);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"yeozhishen"},"content":"            writer.write(fileContent);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"yeozhishen"},"content":"            writer.flush();","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yeozhishen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.FILE_ERROR.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"yeozhishen"},"content":"     * Saves a new task to the file","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"yeozhishen"},"content":"     * @param Task task the task to be saved","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there is an error saving the task to the file","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"yeozhishen"},"content":"    public void save(Task task) throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yeozhishen"},"content":"            String taskInFileFormat \u003d Formatter.convertToFileFormat(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"yeozhishen"},"content":"            FileWriter writer \u003d new FileWriter(dataFile,true);","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"yeozhishen"},"content":"            writer.append(System.lineSeparator() + taskInFileFormat);","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"yeozhishen"},"content":"            writer.flush();","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"yeozhishen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.FILE_ERROR.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"yeozhishen"},"content":"     * Reads the file and returns the contents of the file with the corresponding file newlines","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"yeozhishen"},"content":"     * @return String the contents of the file","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there is an error reading the file","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"yeozhishen"},"content":"    public String readFile() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"yeozhishen"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"yeozhishen"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"yeozhishen"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"yeozhishen"},"content":"                buffer.append(sc.nextLine() + System.lineSeparator());","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"yeozhishen"},"content":"            String rawString \u003d buffer.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"yeozhishen"},"content":"            return handleFileFormatErrors(rawString);","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"yeozhishen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.FILE_ERROR.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"yeozhishen"},"content":"    private String handleFileFormatErrors(String rawString) throws FidoException {","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"yeozhishen"},"content":"        //This fixes the presence of more than 1 newline bug in between tasks in the file","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"yeozhishen"},"content":"            rawString \u003d rawString.replaceAll(System.lineSeparator() + System.lineSeparator(), System.lineSeparator());","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"yeozhishen"},"content":"            FileWriter writer \u003d new FileWriter(dataFile);","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"yeozhishen"},"content":"            writer.append(rawString);","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"yeozhishen"},"content":"            writer.flush();","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"yeozhishen"},"content":"            return rawString;","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"yeozhishen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.FILE_ERROR.string);","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"yeozhishen"},"content":"     * recreates the data file","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"yeozhishen"},"content":"     * @return String message indicating the status of the file","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there is an error recreating the file","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"yeozhishen"},"content":"    public String recreateFile() throws FidoException {","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"yeozhishen"},"content":"        File fileToDelete \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"yeozhishen"},"content":"        fileToDelete.delete();","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"yeozhishen"},"content":"        ensureFileExists();","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"yeozhishen"},"content":"        return FILE_RECREATED_SUCCESSFULLY_STRING;","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yeozhishen":119}},{"path":"src/main/java/fido/utilities/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.utilities;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Todo;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":" * Formats the output of Fido and ","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":" * converts tasks to and from file format","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"public class Formatter {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    private static final char DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    private static final char TODO \u003d \u0027T\u0027;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"    private static final char EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    private static final int TYPE \u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"    private static final int IS_DONE \u003d 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"    private static final int DESCRIPTION \u003d 2;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"    private static final int BY_OR_START \u003d 3;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    private static final int END \u003d 4;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"    private static final String FILE_DELIMITER \u003d \"`\";","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"    private static final String TASK_DELIMITER \u003d System.lineSeparator();","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"     * Prettifies a message with a top and bottom line string decoration","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"     * @param message the message to be prettified","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"     * @param String topLineDecoration the string decoration to be added to the top of the message","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"     * @param String bottomLineDecoration the string decoration to be added to the bottom of the message","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"     * @return String the prettified message","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"    public static String prettify(String message, String topLineDecoration, String bottomLineDecoration) {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"        return topLineDecoration + System.lineSeparator()","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"                + message + System.lineSeparator() + bottomLineDecoration;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"     * Converts a task to a string in file format to be handled by the file manager","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"     * @param Task task the task to be converted","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"     * @return String the task in file format","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"    public static String convertToFileFormat(Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"        String output \u003d task.getType() + FILE_DELIMITER + task.isDone() + FILE_DELIMITER + task.getTaskDescription();","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"        switch (task.getType()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"        case TODO:","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"            Deadline deadline \u003d (Deadline)task;","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"            output +\u003d FILE_DELIMITER + deadline.getDoBy();","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yeozhishen"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"        case EVENT:","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"            Event event \u003d (Event)task;","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"            output +\u003d FILE_DELIMITER + event.getStartTime() + FILE_DELIMITER + event.getEndTime();","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"        return output;","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"     * converts a single line of task in file format to a task object","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"yeozhishen"},"content":"     * @param String task the task in file format","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"yeozhishen"},"content":"     * @return Task the task object","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"yeozhishen"},"content":"    private static Task convertFromFileFormat(String task) {","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"yeozhishen"},"content":"        String[] taskFields \u003d task.split(FILE_DELIMITER);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"yeozhishen"},"content":"        Task actualTask \u003d createTaskFromFileFormat(taskFields);","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"yeozhishen"},"content":"        if (Boolean.parseBoolean(taskFields[IS_DONE])) {","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"yeozhishen"},"content":"            actualTask.setDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"yeozhishen"},"content":"        return actualTask;","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"yeozhishen"},"content":"    private static Task createTaskFromFileFormat(String[] taskFields) {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yeozhishen"},"content":"        char taskType \u003d taskFields[TYPE].charAt(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yeozhishen"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"yeozhishen"},"content":"        case TODO:","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"yeozhishen"},"content":"            return new Todo(taskFields[DESCRIPTION]);","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"yeozhishen"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"yeozhishen"},"content":"            return new Deadline(taskFields[DESCRIPTION], taskFields[BY_OR_START]);","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"yeozhishen"},"content":"            //last case is an event","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"yeozhishen"},"content":"        default:","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"yeozhishen"},"content":"            return new Event(taskFields[DESCRIPTION], taskFields[BY_OR_START], taskFields[END]);","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"yeozhishen"},"content":"     * Converts a list of tasks in file format to a List of task objects","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"yeozhishen"},"content":"     * @param String taskListString the list of tasks in file format","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"yeozhishen"},"content":"     * @return List\u003cTask\u003e the list of task objects","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"yeozhishen"},"content":"    public static List\u003cTask\u003e convertToTaskListFromFileFormat(String taskListString) {","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"yeozhishen"},"content":"        List\u003cString\u003e stringTaskList \u003d new ArrayList\u003cString\u003e(Arrays.asList(taskListString.split(TASK_DELIMITER)));","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"yeozhishen"},"content":"        //first item in the list is the file header","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"yeozhishen"},"content":"        stringTaskList.remove(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"yeozhishen"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"yeozhishen"},"content":"        for (String taskString: stringTaskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"yeozhishen"},"content":"            Task convertedTask \u003d convertFromFileFormat(taskString);","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"yeozhishen"},"content":"            taskList.add(convertedTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"yeozhishen"},"content":"        return taskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"yeozhishen":96}},{"path":"src/main/java/fido/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.utilities;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"import fido.exceptions.FidoException;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"import fido.enumerators.ErrorMessages;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"import fido.enumerators.ParserRegex;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":" * Obtains and parses user input from the command line and checks if the inputs are valid","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    private static final int FIRST_WORD_INDEX \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    private static final int DOES_NOT_EXIST \u003d -1;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"    private Scanner stdin;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    private String inputString;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    private String inputCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"    private String[] inputCommandArguments;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    public Parser() {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"        this.stdin \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"        inputString \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"        inputCommand \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"        inputCommandArguments \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"     * Collects user input from the command line and splits it into the command (inputCommand)","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"     * and its arguments (inputCommandArguments)","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there is no input","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"    public void collectUserInput() throws FidoException {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"        clearAllInputs();","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"        inputString \u003d stdin.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"        if (inputString.isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.MISSING_INPUT.string);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"        String[] individualWords \u003d inputString.trim().split(\" \");","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"        int last_word_index \u003d individualWords.length;","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"        inputCommand \u003d individualWords[FIRST_WORD_INDEX];","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"        if (last_word_index \u003e 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"            inputCommandArguments \u003d Arrays.copyOfRange(individualWords, FIRST_WORD_INDEX + 1, last_word_index);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"    private void clearAllInputs() {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"        inputCommandArguments \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"        inputCommand \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"        inputString \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"    public String getUserInputCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"        return inputCommand;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"     * Checks if the user input is a valid todo","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"     * @return boolean true if the user input is a valid todo, false otherwise","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"    public boolean isValidTodo() {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"        ParserRegex[] keywordsToLookOutFor \u003d {};","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"        if (inputCommandArguments \u003d\u003d null || !onlyContainsKeywords(keywordsToLookOutFor)){","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"            return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"yeozhishen"},"content":"        return inputCommandArguments.length \u003e\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"yeozhishen"},"content":"     * Checks if the user input is a valid deadline","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"yeozhishen"},"content":"     * @return boolean true if the user input is a valid deadline, false otherwise","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"yeozhishen"},"content":"    public boolean isValidDeadline() {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"yeozhishen"},"content":"        ParserRegex[] keywordsToLookOutFor \u003d {ParserRegex.BY};","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"yeozhishen"},"content":"        if (inputCommandArguments \u003d\u003d null || !onlyContainsKeywords(keywordsToLookOutFor)){","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"yeozhishen"},"content":"            return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"yeozhishen"},"content":"        int byKeywordIndex \u003d indexOfKeywordInCommandArguments(ParserRegex.BY.string);","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"yeozhishen"},"content":"        return byKeywordIndex !\u003d DOES_NOT_EXIST","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"yeozhishen"},"content":"                \u0026\u0026 !atEndsOfCommandArgumentList(byKeywordIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"yeozhishen"},"content":"     * Checks if the user input is a valid event","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"yeozhishen"},"content":"     * @return boolean true if the user input is a valid event, false otherwise","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"yeozhishen"},"content":"    public boolean isValidEvent() {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"yeozhishen"},"content":"        ParserRegex[] keywordsToLookOutFor \u003d {ParserRegex.TO, ParserRegex.FROM};","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"yeozhishen"},"content":"        if (inputCommandArguments \u003d\u003d null || !onlyContainsKeywords(keywordsToLookOutFor)){","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"yeozhishen"},"content":"            return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"yeozhishen"},"content":"        int fromKeywordIndex \u003d indexOfKeywordInCommandArguments(ParserRegex.FROM.string);","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"yeozhishen"},"content":"        int toKeywordIndex \u003d indexOfKeywordInCommandArguments(ParserRegex.TO.string);","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"yeozhishen"},"content":"        return fromKeywordIndex !\u003d DOES_NOT_EXIST \u0026\u0026 toKeywordIndex !\u003d DOES_NOT_EXIST","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"yeozhishen"},"content":"                \u0026\u0026 !atEndsOfCommandArgumentList(fromKeywordIndex)","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"yeozhishen"},"content":"                \u0026\u0026 !atEndsOfCommandArgumentList(toKeywordIndex)","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"yeozhishen"},"content":"                \u0026\u0026 !consecutiveInArgumentList(fromKeywordIndex, toKeywordIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"yeozhishen"},"content":"     * checks if the keywords in the keywordList are the only keywords in the inputCommandArguments","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"yeozhishen"},"content":"     * @param ParserRegex[] keywordList the list of keywords to check for","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"yeozhishen"},"content":"     * @return boolean true if the keywords in the keywordList are the ","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"yeozhishen"},"content":"     * only keywords in the inputCommandArguments, false otherwise","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"yeozhishen"},"content":"    private boolean onlyContainsKeywords(ParserRegex[] keywordList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"yeozhishen"},"content":"        for (String word: inputCommandArguments) {","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"yeozhishen"},"content":"            if (isKeyword(word) \u0026\u0026 !isWordInKeywordList(word, keywordList) ){","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"yeozhishen"},"content":"                return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"yeozhishen"},"content":"        return true;","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"yeozhishen"},"content":"    private boolean isKeyword(String word) {","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"yeozhishen"},"content":"        ParserRegex regexMapping \u003d ParserRegex.getCommandEnumeration(word);","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"yeozhishen"},"content":"        return regexMapping !\u003d ParserRegex.REGEX_NOT_FOUND;","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"yeozhishen"},"content":"    private boolean isWordInKeywordList(String word, ParserRegex[] keywordList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"yeozhishen"},"content":"        ParserRegex regexMapping \u003d ParserRegex.getCommandEnumeration(word);","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"yeozhishen"},"content":"        for (ParserRegex keyword: keywordList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"yeozhishen"},"content":"            if (regexMapping \u003d\u003d keyword) {","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"yeozhishen"},"content":"                return true;","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"yeozhishen"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"yeozhishen"},"content":"    private boolean atEndsOfCommandArgumentList(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"yeozhishen"},"content":"        return index \u003d\u003d 0 || index \u003d\u003d (inputCommandArguments.length - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"yeozhishen"},"content":"    private boolean consecutiveInArgumentList(int index1, int index2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"yeozhishen"},"content":"        return index1 \u003d\u003d (index2 - 1) || index2 \u003d\u003d (index1 - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"yeozhishen"},"content":"    private int indexOfKeywordInCommandArguments(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"yeozhishen"},"content":"        for (int i \u003d 0; i \u003c inputCommandArguments.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"yeozhishen"},"content":"            if (inputCommandArguments[i].equals(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"yeozhishen"},"content":"                return i;","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"yeozhishen"},"content":"        return DOES_NOT_EXIST;","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"yeozhishen"},"content":"     * Gets the string after a keyword in the inputCommandArguments unitl the next keyword is found","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"yeozhishen"},"content":"     * @param ParserRegex keyword the keyword whose index we want to start obtaining the string from","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string after the keyword until a next keyword is found","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"yeozhishen"},"content":"    public String getStringAfterKeywordUntilNextKeyword(ParserRegex keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"yeozhishen"},"content":"        int keywordIndex \u003d indexOfKeywordInCommandArguments(keyword.string);","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"yeozhishen"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"yeozhishen"},"content":"        for (int i \u003d keywordIndex + 1; i \u003c inputCommandArguments.length; i++){","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"yeozhishen"},"content":"            if (ParserRegex.isStringEnumeration(inputCommandArguments[i])) {","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"yeozhishen"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"yeozhishen"},"content":"            string.append(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"yeozhishen"},"content":"            string.append(inputCommandArguments[i]);","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"yeozhishen"},"content":"        return string.toString().trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"yeozhishen"},"content":"     * Gets the task description of a task from the inputCommandArguments","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"yeozhishen"},"content":"     * @return String the description of the task","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"yeozhishen"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"yeozhishen"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"yeozhishen"},"content":"        for (int i \u003d 0; i \u003c inputCommandArguments.length; i++){","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"yeozhishen"},"content":"            if (ParserRegex.isStringEnumeration(inputCommandArguments[i])) {","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"yeozhishen"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"yeozhishen"},"content":"            string.append(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"yeozhishen"},"content":"            string.append(inputCommandArguments[i]);","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"yeozhishen"},"content":"        return string.toString().trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":162,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"yeozhishen"},"content":"     * Gets the keyword that we want to find from the inputCommandArguments","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"yeozhishen"},"content":"     * when using the find command","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"yeozhishen"},"content":"     * @return String the keyword that we want to search for","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if there are no keywords to search for","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":168,"author":{"gitId":"yeozhishen"},"content":"    public String getFindKeyword() throws FidoException{","lastModifiedDate":"2024-02-25"},{"lineNumber":169,"author":{"gitId":"yeozhishen"},"content":"        if (!isValidFind()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":170,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INVALID_FIND.string);","lastModifiedDate":"2024-02-25"},{"lineNumber":171,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":172,"author":{"gitId":"yeozhishen"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"yeozhishen"},"content":"        for (String word : inputCommandArguments) {","lastModifiedDate":"2024-02-25"},{"lineNumber":174,"author":{"gitId":"yeozhishen"},"content":"            string.append(\" \");","lastModifiedDate":"2024-02-25"},{"lineNumber":175,"author":{"gitId":"yeozhishen"},"content":"            string.append(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":176,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":177,"author":{"gitId":"yeozhishen"},"content":"        return string.toString().trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":178,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":179,"author":{"gitId":"yeozhishen"},"content":"    private boolean isValidFind() {","lastModifiedDate":"2024-02-25"},{"lineNumber":180,"author":{"gitId":"yeozhishen"},"content":"        return inputCommandArguments !\u003d null \u0026\u0026 inputCommandArguments.length !\u003d 0;","lastModifiedDate":"2024-02-25"},{"lineNumber":181,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"yeozhishen"},"content":"     * Gets the index of the task that we want to mark as done from the user\u0027s mark/unmark command","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"yeozhishen"},"content":"     * @return int the index of the task that we want to mark as done","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"yeozhishen"},"content":"     * @throws FidoException if the input is invalid, when there are no arguments or more than 1 argument","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"yeozhishen"},"content":"     * after the mark command or when the argument is not an integer","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"yeozhishen"},"content":"    public int getTaskIndex() throws FidoException {","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"yeozhishen"},"content":"        int taskIndexForMarking;","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"yeozhishen"},"content":"        if (inputCommandArguments \u003d\u003d null || inputCommandArguments.length \u003e 1){","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INVALID_ARGUMENTS.string);","lastModifiedDate":"2024-02-25"},{"lineNumber":192,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"yeozhishen"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"yeozhishen"},"content":"            taskIndexForMarking \u003d Integer.parseInt(inputCommandArguments[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"yeozhishen"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"yeozhishen"},"content":"            throw new FidoException(ErrorMessages.INVALID_INTEGER.string);","lastModifiedDate":"2024-02-25"},{"lineNumber":197,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"yeozhishen"},"content":"        return taskIndexForMarking;","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yeozhishen":200}},{"path":"src/main/java/fido/utilities/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.utilities;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"import fido.datastructures.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":"import java.util.LinkedList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":" * Manages the tasks in the task list in memory","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"public class TaskManager {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    private LinkedList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"    private static final String TASK_DONE_STRING \u003d \"uwu  marked the task as done: \";","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"    private static final String TASK_NOT_DONE_STRING \u003d \":( marked the task as not done yet: \";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    private static final String TASK_ADDED_STRING \u003d \"added: \";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    private static final String TASK_DELETED_STRING \u003d \"I have deleted: \\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"    private static final String LIST_MATCHING_TASKS_STRING \u003d \"Here are the matching tasks: \\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    private static final String NO_TASKS_FOUND_STRING \u003d \"no tasks found\";","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    private int numTasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"    public TaskManager() {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"        this.numTasks \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"        this.taskList \u003d new LinkedList\u003cTask\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    public Task getTask(int stdoutTaskIndex) {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"        return taskList.get(stdoutTaskIndex - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"     * Returns a string representation of the current task list in memory","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"yeozhishen"},"content":"     * @return String representation of the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"yeozhishen"},"content":"    public String getTaskList(){","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"yeozhishen"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"yeozhishen"},"content":"            return NO_TASKS_FOUND_STRING;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"yeozhishen"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"yeozhishen"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"yeozhishen"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"yeozhishen"},"content":"            String lineOfTask \u003d Integer.toString(i + 1) +","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"yeozhishen"},"content":"                    \". \" + currentTask.toString() + System.lineSeparator();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"yeozhishen"},"content":"            listOfTasks.append(lineOfTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"yeozhishen"},"content":"        return listOfTasks.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"yeozhishen"},"content":"     * Returns a string representation of the tasks in memory that contains the keyword","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"yeozhishen"},"content":"     * @param String keyword the keyword to search for in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"yeozhishen"},"content":"     * @return String representation of the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"yeozhishen"},"content":"    public String findTasksUsingKeyword(String keyword) {","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"yeozhishen"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"yeozhishen"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"yeozhishen"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"yeozhishen"},"content":"            if (!task.getTaskDescription().contains(keyword)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"yeozhishen"},"content":"                continue;","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"yeozhishen"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"yeozhishen"},"content":"            String lineOfTask \u003d Integer.toString(counter) +","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"yeozhishen"},"content":"                    \". \" + task.toString() + System.lineSeparator();","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"yeozhishen"},"content":"            listOfTasks.append(lineOfTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"yeozhishen"},"content":"            counter++;","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"yeozhishen"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"yeozhishen"},"content":"            return NO_TASKS_FOUND_STRING;","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"yeozhishen"},"content":"        return LIST_MATCHING_TASKS_STRING + listOfTasks.toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"yeozhishen"},"content":"     * Marks a task as done in the task list in memory","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"yeozhishen"},"content":"     * @param int stdoutTaskIndex the index of the task to mark as done based on what the user sees","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"yeozhishen"},"content":"     * in the terminal, which is 1-indexed","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was marked as done","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"yeozhishen"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"yeozhishen"},"content":"    public String markTaskAsDone(int stdoutTaskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"yeozhishen"},"content":"        if (isIndexOutOfRange(stdoutTaskIndex)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"yeozhishen"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yeozhishen"},"content":"        Task taskToMark \u003d taskList.get(stdoutTaskIndex - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yeozhishen"},"content":"        taskToMark.setDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yeozhishen"},"content":"        return TASK_DONE_STRING + taskToMark.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"yeozhishen"},"content":"     * Marks a task as not done in the task list in memory","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"yeozhishen"},"content":"     * @param int stdoutTaskIndex the index of the task to mark as not done based on what the user sees","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"yeozhishen"},"content":"     * in the terminal, which is 1-indexed","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was marked as not done","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"yeozhishen"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"yeozhishen"},"content":"    public String unmarkTask(int stdoutTaskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"yeozhishen"},"content":"        if (isIndexOutOfRange(stdoutTaskIndex)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"yeozhishen"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yeozhishen"},"content":"        Task taskToMark \u003d taskList.get(stdoutTaskIndex - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yeozhishen"},"content":"        taskToMark.setNotDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"yeozhishen"},"content":"        return TASK_NOT_DONE_STRING + taskToMark.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"yeozhishen"},"content":"    private boolean isIndexOutOfRange(int index){","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"yeozhishen"},"content":"        if (index \u003c\u003d 0 || index \u003e numTasks){","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"yeozhishen"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"yeozhishen"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"yeozhishen"},"content":"     * Deletes a task from the task list in memory","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"yeozhishen"},"content":"     * @param int stdoutTaskIndex the index of the task to delete based on what the user sees","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"yeozhishen"},"content":"     * in the terminal, which is 1-indexed","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was deleted","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"yeozhishen"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"yeozhishen"},"content":"    public String deleteTask(int stdoutTaskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"yeozhishen"},"content":"        if (isIndexOutOfRange(stdoutTaskIndex)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"yeozhishen"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"yeozhishen"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"yeozhishen"},"content":"        Task taskToDelete \u003d taskList.get(stdoutTaskIndex - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"yeozhishen"},"content":"        taskList.remove(stdoutTaskIndex - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"yeozhishen"},"content":"        numTasks--;","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"yeozhishen"},"content":"        return TASK_DELETED_STRING + taskToDelete.toString() + \"\\n\" + getTasksInListString();","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"yeozhishen"},"content":"     * Adds a task to the task list in memory","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"yeozhishen"},"content":"     * @param Task task the task to add to the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"yeozhishen"},"content":"     * @return String the string representation of the task that was added ","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"yeozhishen"},"content":"     * to indicate that the task was added","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"yeozhishen"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"yeozhishen"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"yeozhishen"},"content":"        numTasks++;","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"yeozhishen"},"content":"        return TASK_ADDED_STRING + task.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"yeozhishen"},"content":"                + System.lineSeparator() + getTasksInListString();","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"yeozhishen"},"content":"    private String getTasksInListString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"yeozhishen"},"content":"        return \"Now you have \" + numTasks + \" tasks in the list\";","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yeozhishen":130}},{"path":"src/main/java/fido/utilities/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeozhishen"},"content":"package fido.utilities;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yeozhishen"},"content":"/*","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"yeozhishen"},"content":" * Manages the user interface","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"yeozhishen"},"content":" * by printing messages to the command line","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"yeozhishen"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"yeozhishen"},"content":"public class UserInterface {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"yeozhishen"},"content":"    private static final String STRING_DECORATION \u003d \"------------------------------------\";","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"yeozhishen"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Fido\"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"yeozhishen"},"content":"            + System.lineSeparator()","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"yeozhishen"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"yeozhishen"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"yeozhishen"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"yeozhishen"},"content":"        printMessage(GREETING);","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"yeozhishen"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"yeozhishen"},"content":"     * Prints the message to the command line with decorative strings","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"yeozhishen"},"content":"     * @param String message the message to be printed","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"yeozhishen"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"yeozhishen"},"content":"    public void printMessage(String message){","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"yeozhishen"},"content":"        System.out.println(Formatter.prettify(message, STRING_DECORATION, STRING_DECORATION));","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"yeozhishen"},"content":"    public void printExitMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"yeozhishen"},"content":"        printMessage(GOODBYE);","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"yeozhishen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"yeozhishen"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"yeozhishen":25}}]
