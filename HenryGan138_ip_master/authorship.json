[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Represents a deadline task in the chatbot application.","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * A deadline task includes a due date in addition to the base task properties.","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    protected String by; // The deadline date for the task","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"     * Constructs a new Deadline task with specified name, task number, and deadline date.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"     * @param name The name or description of the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"     * @param taskNo The unique number assigned to the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"     * @param by The deadline date for the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"    public Deadline(String name, int taskNo, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"        super(name, taskNo);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"     * Marks this deadline task as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the markedTask method in the Task class to include deadline-specific details in the confirmation message.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"    public void markedTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dtrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"      [D]\" + \"[X] \"+this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"     * Marks this deadline task as not completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the unmarkedTask method in the Task class to include deadline-specific details in the confirmation message.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    public void unmarkedTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dfalse;","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"      [D]\" + \"[ ] \"+this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"     * Prints the deadline task\u0027s details, including its type (D for deadline), number, completion status, name, and due date.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the printTask method in the Task class to include the due date information.","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"[D]\");","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"        if (hasDone){","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"[X] \");","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"[ ] \");","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(name + \" (by: \" + by +\")\");","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"HenryGan138":60}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Represents an event task in the chatbot application.","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * An event task includes start and end times in addition to the base task properties.","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    protected String from;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    protected String to;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"     * Constructs a new Event task with specified name, task number, start time, and end time.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"     * Inherits name and task number from the Task class and adds time-specific information.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"     * @param name The name or description of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"     * @param taskNo The unique number assigned to the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    public Event(String name, int taskNo, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"        super(name, taskNo);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"        this.from \u003d from; // The start time of the event","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        this.to \u003d to; // The end time of the event","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"     * Marks this event as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the markedTask method in the Task class to include event-specific details in the confirmation message.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"    public void markedTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dtrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"      [E]\" + \"[X] \"+this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"     * Marks this event as not completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the unmarkedTask method in the Task class to include event-specific details in the confirmation message.","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"    public void unmarkedTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dfalse;","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"      [E]\" + \"[ ] \"+this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"     * Prints the task\u0027s details, including its number, completion status, and name.","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"[E]\");","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"        if (hasDone){","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"[X] \");","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"[ ] \");","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(name + \" (from: \" + from+\" to: \"+ to+ \")\");","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"HenryGan138":63}},{"path":"src/main/java/Ruby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Main class for the chatbot named Ruby.","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * Ruby assists users in recording and organizing their daily tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" * It interacts with users through the command line, processing commands to manage tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"public class Ruby {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    private static final Scanner in  \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"    private static TaskList t1 \u003d new TaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"    private static String userInput; //User command input through the command line","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"        greet();","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"        processor();","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"        exit();","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"     * Prints a greeting message to the user.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"    private static void greet(){","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"        print(new String[]{\"Hi, I am here. Greets from Ruby.\", \"What can I do for you?\"});","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"     * Prints an exit message and terminates the chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"    private static void exit(){","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"        print(\"Bye. Always feels good work with you.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"     * Main processing loop for user commands.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"     * Continuously captures and processes user input until the \"bye\" command is issued.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    private static void processor(){","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"        String [] userInputs \u003d inputCatcher();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"        while (checkout(userInputs)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"            switch (userInputs[0].toLowerCase()){","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"            case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"                t1.showTaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"                if ((userInputs.length !\u003d 2) || (!userInputs[1].matches(\"\\\\d+\"))){","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"                    print(\"Incorrect order.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"                t1.markTask(Integer.parseInt(userInputs[1])-1);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"                if ((userInputs.length !\u003d 2) || (!userInputs[1].matches(\"\\\\d+\"))){","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"                    print(\"Incorrect order.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"                t1.unmarkTask(Integer.parseInt(userInputs[1])-1);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"                t1.addTask(userInput);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"HenryGan138"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"HenryGan138"},"content":"            userInputs \u003d inputCatcher();","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"HenryGan138"},"content":"     * Captures and splits the user\u0027s input into a command and arguments.","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"HenryGan138"},"content":"     * @return An array of strings, where the first element is the command, and subsequent elements are arguments.","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"HenryGan138"},"content":"    private static String[] inputCatcher(){","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"HenryGan138"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"HenryGan138"},"content":"        return userInput.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"HenryGan138"},"content":"     * Checks if the user\u0027s input is a command to continue or to terminate the session.","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"HenryGan138"},"content":"     * @param userInputs An array of user inputs split into command and arguments.","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"HenryGan138"},"content":"     * @return true if the session should continue, false if it should terminate.","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"HenryGan138"},"content":"    private static boolean checkout(String[] userInputs){","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"HenryGan138"},"content":"        return !userInputs[0].equalsIgnoreCase(\"bye\");","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"HenryGan138"},"content":"     * Prints a formatted message to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"HenryGan138"},"content":"     * @param thingToPrint The message to be printed.","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"HenryGan138"},"content":"    private static void print(String thingToPrint){","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + thingToPrint);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"HenryGan138"},"content":"     * Prints multiple formatted messages to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"HenryGan138"},"content":"     * @param thingsToPrint An array of messages to be printed.","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"HenryGan138"},"content":"    private static void print(String[] thingsToPrint){","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"HenryGan138"},"content":"        for (String thing: thingsToPrint){","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"    \" + thing);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HenryGan138":110,"-":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Represents a task in the chatbot application.","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * A task has a name, a completion status, and a unique task number.","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    public String name; // The name or description of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    public boolean hasDone; // The completion status of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"    public int taskNo; // The unique number assigned to the task","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"     * Constructs a new Task with the specified name and task number.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"     * Initially, the task is marked as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"     * @param name The name or description of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"     * @param taskNo The unique number assigned to the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"    public Task(String name, int taskNo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dfalse;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"     * Marks this task as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"     * Prints a confirmation message including the task\u0027s name.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"    public void markedTask(){","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dtrue;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"[X] \"+this.name);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"     * Prints a confirmation message indicating the task is not done yet.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"    public void unmarkedTask(){","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dfalse;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"[ ] \"+this.name);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"     * Prints the task\u0027s details, including its number, completion status, and name.","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"    public void printTask(){","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"    \" +taskNo);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"        if (hasDone){","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\".[X] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\".[ ] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(name);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"HenryGan138":59}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Manages a list of tasks for the chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * Supports adding tasks of different types (todo, deadline, event),","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" * marking tasks as done or undone, and displaying all tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"public class TaskList {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    public final Task [] taskList\u003d new Task[100]; // Array to store tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"    public int taskNo \u003d 0; // Counter for the number of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"     * Adds a task to the task list based on user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"     * The task can be of types: todo, deadline, event, or a general task.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"     * Parses the user input to determine the task type and details.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"     * @param userInput The full command entered by the user to add a task.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"    public void addTask(String userInput){","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"        switch (userInput.split(\" \")[0]){","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"            taskList[taskNo] \u003d new Todo(userInput.substring(5),taskNo+1);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"            String name \u003d userInput.split(\" /\")[0].substring(9);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"            String by \u003d userInput.split(\" /\")[1].substring(3);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"            taskList[taskNo] \u003d new Deadline(name, taskNo+1, by);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"        case \"event\":","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"            name \u003d userInput.split(\" /\")[0].substring(6);","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"            String from \u003d userInput.split(\" /\")[1].substring(5);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"            String to \u003d userInput.split(\" /\")[2].substring(3);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"            taskList[taskNo]\u003dnew Event(name,taskNo+1, from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"            taskList[taskNo]\u003dnew Task(userInput,taskNo+1);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"        taskAddMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"     * Displays a message confirming the addition of a task.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"     * Also shows the current number of tasks in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"    private void taskAddMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"      \");","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"        taskList[taskNo].printTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"        taskNo++;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    Now you have \" + taskNo + \" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"     * Marks a task as completed based on its position in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"     * If the task does not exist, prints an error message.","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"     * @param n The index of the task in the task list (0-based).","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"    public void markTask (int n){","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"        if (n \u003e\u003d taskNo){","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"HenryGan138"},"content":"            print(\"Sorry, task unfound.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"HenryGan138"},"content":"            taskList[n].markedTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"HenryGan138"},"content":"     * Marks a task as not completed based on its position in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"HenryGan138"},"content":"     * If the task does not exist, prints an error message.","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"HenryGan138"},"content":"     * @param n The index of the task in the task list (0-based).","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"HenryGan138"},"content":"    public void unmarkTask (int n){","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"HenryGan138"},"content":"        if (n \u003e\u003d taskNo){","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"HenryGan138"},"content":"            print(\"Sorry, task unfound.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"HenryGan138"},"content":"            taskList[n].unmarkedTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"HenryGan138"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"HenryGan138"},"content":"     * Displays a numbered list of tasks along with their completion status and details.","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"HenryGan138"},"content":"    public void showTaskList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i \u003c taskNo; i++){","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"    \" + (i+1) +\".\");","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"HenryGan138"},"content":"            taskList[i].printTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"HenryGan138"},"content":"     * Prints a formatted message to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"HenryGan138"},"content":"     * @param thingToPrint The message to be printed.","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"HenryGan138"},"content":"    private static void print(String thingToPrint){","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + thingToPrint);","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"HenryGan138":106}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Represents a todo task in the chatbot application.","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * A todo task is a basic task type without any date or time constraints.","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"     * Constructs a new Todo task with a specified name and task number.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"     * @param name The name or description of the todo task.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"     * @param taskNo The unique number assigned to the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"    public Todo(String name, int taskNo) {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"        super(name, taskNo);","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"     * Marks this todo task as completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the markedTask method in the Task class to include todo-specific details in the confirmation message.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"    public void markedTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dtrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"      [T]\" + \"[X] \"+this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"     * Marks this todo task as not completed.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the unmarkedTask method in the Task class to include todo-specific details in the confirmation message.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"    public void unmarkedTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"        this.hasDone\u003dfalse;","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"      [T]\" + \"[ ] \"+this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"    \" + \"--------------\");","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"     * Prints the todo task\u0027s details, including its type (T for todo), number, completion status, and name.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"     * Overrides the printTask method in the Task class.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"[T]\");","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"        if (hasDone){","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"[X] \");","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"            System.out.print(\"[ ] \");","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(name);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"HenryGan138":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"todo borrow book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"deadline return book /by Feb 20th","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"event MS internship /from June /to Aug","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"todo join sports club","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"mark 1","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"mark 4","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"deadline travel for business /by date depends on MD","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"list","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"HenryGan138":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"java -classpath ..\\bin Ruby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HenryGan138":1,"-":20}}]
