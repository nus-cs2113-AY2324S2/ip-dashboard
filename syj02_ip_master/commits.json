{"authorDailyContributionsMap":{"syj02":[{"date":"2024-01-30","commitResults":[{"hash":"43562a4c8a77992934aca7236d3f110e8b2b2fac","isMergeCommit":false,"messageTitle":"style: Rename chatbot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"bf9b32c2b53af8a16b624f914d044aa295b1889f","isMergeCommit":false,"messageTitle":"feat: Add greetings and exit Implement initial greeting and exiting messages","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"ddcfc2e8761e032d754870a5ad58107f87db00d2","isMergeCommit":false,"messageTitle":"feat: Add echo Chatbot Jane replies by echoing the user\u0027s input","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"e5e95dbbb0709fe63f09f3fcfc07961ab2397ac0","isMergeCommit":false,"messageTitle":"feat: Add store and list Implement arrays such that chatbot has the ability to store whatever text entered by the user and display them back to the user when requested","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}}]},{"date":"2024-01-31","commitResults":[{"hash":"8d65492c3bcaa8d2d464671166d7837f44fc0c85","isMergeCommit":false,"messageTitle":"refactor: Abstract task into another class Created a new class Task that contains the description of String type and status of Boolean type to keep the individual tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"319d4046c1c1a51c8567d05faa5b787e160a4352","isMergeCommit":false,"messageTitle":"refractor: Abstrac task list into another class Created TaskList to store all the tasks in a list and keep track of the total number of tasks added","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"efe9ff6c3697ec3a4116474c6192e2d0c6553a44","isMergeCommit":false,"messageTitle":"feat: Add mark and unmark functionalities Added mark and unmark to update whether the tasks are done.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":7}}},{"hash":"e3b543dbdba76a9c6a1eb168bf6a57cbef357c58","isMergeCommit":false,"messageTitle":"style: Modify code to fit coding standards Modifications made: *if-else statements with correct indentations *System.out.println statements with suitable length per line","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"72740868bb98970c7f9c98c483a6f3d0ef2b97b6","isMergeCommit":false,"messageTitle":"feat: Modify isDone method Modified isDone method in Task class with clearer parameters: Changed parameter from String to Boolean for shorter method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":9}}}]},{"date":"2024-02-06","commitResults":[{"hash":"7f828c4558b19205341530a0eb75b17a2cdd9c9a","isMergeCommit":false,"messageTitle":"style: Modify code to fit coding standards Align indentations for logo for better readability Rename the following to constants convention: * logo to LOGO * horizontalLine to SEPARATOR * greetMessage to GREET_MESSAGE * exitMessage to EXIT_MESSAGE Name change to SEPARATOR for better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":14}}},{"hash":"7b1a86db6c03514032fa21ac7fb32a4775a6c3b8","isMergeCommit":false,"messageTitle":"style: Rename variable in Task and TaskList Rename index to sequenceNumber as the variable represents the addition sequence of tasks.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"1a1a8b05d3202639acf0c59efbaeb1491e76fb31","isMergeCommit":false,"messageTitle":"Revert \"style: Rename variable in Task and TaskList\"","messageBody":"This reverts commit 7b1a86db6c03514032fa21ac7fb32a4775a6c3b8.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"663399b99c714c01a66862f1c71d1b1933fd47a3","isMergeCommit":false,"messageTitle":"style: Rename variable in Task Rename index to sequence as it represents the addition sequence of tasks in task list. Update methods in Jane, Task, and TaskList to match the new name: * Change all index to sequence * Change getIndex() change to getSequence() in Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":11}}},{"hash":"b2fac9ce5be59d966d90a73da750b4ae6c47fb14","isMergeCommit":false,"messageTitle":"Revert \"style: Rename variable in Task\"","messageBody":"This reverts commit 663399b99c714c01a66862f1c71d1b1933fd47a3.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":44}}},{"hash":"e3d78e9fdda8e4552292862b6b0ff05647014ac5","isMergeCommit":false,"messageTitle":"style: Rename variable in Task Rename index to sequence as it represents the addition sequence of tasks in task list. Update methods in Jane, Task, and TaskList to match the new name: * Change all index to sequence * Change getIndex() change to getSequence() in Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"b201865da4b7306f6d6b2d61f3f1670ddf63b905","isMergeCommit":false,"messageTitle":"refactor: Add method to process input Add new method processInput(String, TaskList) In new method: * Add new variable String[] inputPart to split input into two parts to know the action required (i.e. \"list\", \"mark\", \"unmark\") * Change if-else statements to switch case for better readability and shorter code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":27}}},{"hash":"c453bb03c89459f53dd32b5dd86d5d15deab637e","isMergeCommit":false,"messageTitle":"fix: Remove static final modifiers from variables Remove static final modifiers from SEPARATOR, GREET_MESSAGE, EXIT_MESSAGE","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"51d63a51ad4bdee1813dba391c897700425f30de","isMergeCommit":false,"messageTitle":"refactor: Add separator Add print SEPARATOR for output with better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c4c1fa1e6c4be1357e1611f8ca1b057c55355077","isMergeCommit":false,"messageTitle":"refactor: Abstract new classes Add new subclasses of Task class for multiple task types * Deadline class for tasks to be done before specific date/time * Event class for tasks with specific start date/time and end date/time * Todo class for tasks to be done without date/time limit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"0a6dd751d8d10c50ae8b3464234ba345cab11582","isMergeCommit":false,"messageTitle":"fix: Modify inheritance of Event Add extends Task to add inheritance from Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"87ced314b999066a2da14938f5d95145ec54f08f","isMergeCommit":false,"messageTitle":"feat: Add toString() method Override default toString() method to return status icon and description of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"2310085fce442e568dba0083f14b1a9db62dee6b","isMergeCommit":false,"messageTitle":"feat: Add constructor and toString() method * Add constructor which inherits from Task constructor * Add toString() method inherit from Task and override with addition of task type icon","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"0134c0cb362f46315e4ceca0dd66730e0584bd41","isMergeCommit":false,"messageTitle":"feat: Add constructor and toString() method * Add constructor which inherits from Task constructor and the date by which task needs to be completed * Add toString() method inherit from Task and override with addition of task type icon and the date by which task needs to be completed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"9d55a5dc76521487bd415a464ff6ef56cd0b81c6","isMergeCommit":false,"messageTitle":"feat: Add constructor and toString() method * Add constructor which inherits from Task constructor and add start and end date/time for task * Add toString() method inherit from Task and override with addition of task type icon and the start and end date/time for task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}}]},{"date":"2024-02-07","commitResults":[{"hash":"15f72e53acb60a704c5b8ec97d799a3bb91eddaf","isMergeCommit":false,"messageTitle":"refactor: Modify toString() method Modify toString() method for the printed message with better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b6e859b69b32b3f1c43c737ca6eae03109d7e109","isMergeCommit":false,"messageTitle":"refactor: Modify toString() method in Event class Modify toString() to have the print out message that follows the sample given","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e31370eb7a608189affe8eb26a744b40ce8f303d","isMergeCommit":false,"messageTitle":"feat: Add getCount() method in TaskList class Add getCount() method to access the counts for number of tasks in taskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"09592d3dcff371da1f5abf553c23fc81e51ae3a1","isMergeCommit":false,"messageTitle":"feat: Modify processInput() method in Jane class Modify the processInput() method: * Add case \"todo\" in switch case for todo task * Add case \"deadline\" in switch case for deadline task * Add case \"event\" in switch case for event task * Modify print out message in case \"mark\" and make use of toString() method * Modify print out message in case \"unmark\" and make use of toString() method * Modify default to print correct usage message that have the wrong input message","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":9}}}]},{"date":"2024-02-08","commitResults":[{"hash":"c66b06dc7404915df36830a8341a2add0263c20a","isMergeCommit":false,"messageTitle":"test: Modify scripts to test Jane * Modified the input.txt file by adding the essential calls to test the 3 task types, mark, unmark and list * Modified the EXPECTED.txt file by adding in the expected output * Modified the runtest.sh file to call Jane instead Duke due to name change of chatbot main file * Modified the runtest.bat file to call Jane instead Duke due to name change of chatbot main file * The ACTUAL.txt file is the output auto-generated by running Jane with inputs from input.txt","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"4f18214d19f16a17fc596010ac46dd7a4ade6cff","isMergeCommit":false,"messageTitle":"style: Add and Remove empty lines of code Add and Remove empty lines within and between methods for better readability and consistency of addition of empty lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}}]},{"date":"2024-02-09","commitResults":[{"hash":"78dedbbd77cf1287c61594d80f43d13b8281a98c","isMergeCommit":false,"messageTitle":"refactor: Abstract process input methods into TaskList Modify processInput() in Jane to shorten the code and call methods in TaskList to process the inputs instead * Add printList() to print full task list * Add markAsDone() to mark task as done * Add markAsUndone() to mark task as undone * Add processTodo() to add todo task and print out the number of tasks in task list * Add processDeadline() to add deadline task and print out the number of tasks in task list * Add processEvent() to add event task and print out the number of tasks in task list","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":29}}},{"hash":"5eaf5be1fed5b53681df0010875ca6b399ad2baa","isMergeCommit":false,"messageTitle":"refactor: Modify indentations to fit coding convention","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}}]},{"date":"2024-02-15","commitResults":[{"hash":"9c852c0116397b26fa241b6f7aee115bdba751e3","isMergeCommit":false,"messageTitle":"refactor: Add JaneException class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2024-02-21","commitResults":[{"hash":"3089bd9d372c19762747ea7bdf4458f289287368","isMergeCommit":false,"messageTitle":"feat: Handle exceptions in Jane","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":34}}},{"hash":"4188743046683e6962ef1cc7dbfe5a7abe5b5692","isMergeCommit":false,"messageTitle":"style: Remove empty line in Jane","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"214deb478478b3da0566adb2619447f4aec2f46e","isMergeCommit":false,"messageTitle":"Reset branch commit before merge of \u0027master\u0027 branch","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"2cbaef5dfe6725a88b329d600ddb3d31d360a114","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-5\u0027","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{}},{"hash":"d68cae463b703f89f000b73145bea44de7b0a7eb","isMergeCommit":false,"messageTitle":"feat: Add delete method using collections Modify code to use ArrayList\u003c\u003e for taskList Add delete method in taskList to remove task","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":20}}}]},{"date":"2024-02-22","commitResults":[{"hash":"4558bdc56dbc8f788a8d1c24c10f24d76e40d376","isMergeCommit":false,"messageTitle":"feat: Add storage to hard disk","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":171,"deletions":30}}},{"hash":"feea342b2139a9ebc6843954d8a159f217e790c8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-6\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"54c57f71ccfb885283bd11345493372ae04ff170","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"79141e03e4384ed8300d93287e968a0e22616baa","isMergeCommit":false,"messageTitle":"fix: Bug fix for save and load files Modify code to fit the standard save format and to read the txt file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":20}}}]},{"date":"2024-03-06","commitResults":[{"hash":"a458dd6776cbd905d1656199c32d4d65d9f8306e","isMergeCommit":false,"messageTitle":"refactor: Abstract ui methods into Ui Create new class Ui to deal with user interactions Add nextInput method to read in next line of input from user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":6}}},{"hash":"cc1307b3fca1b4d84a1708163550d6396b0fbe5d","isMergeCommit":false,"messageTitle":"refactor: Abstract process input method into Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"5f4229fa84bbaee70f2a9987020e4e6657b1f06b","isMergeCommit":false,"messageTitle":"refactor: Abstract methods into Parser Create Parser to make sense of user inputs","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":110}}},{"hash":"f3f6e12e3295ee0ce6a2f6a4bdec4193a600d761","isMergeCommit":false,"messageTitle":"style: Modify code to fit coding standards * Remove extra newlines at the end across classes * Remove magic number and add constant in Jane * Modify naming of variables in Jane","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":24}}}]}]},"authorFileTypeContributionMap":{"syj02":{"java":438,"md":0,"fxml":0,"sh":1,"bat":1,"gradle":0,"txt":10}},"authorContributionVariance":{"syj02":5282.1226},"authorDisplayNameMap":{"syj02":"CS2113T-T09-4 SOH ..JIA)"}}
