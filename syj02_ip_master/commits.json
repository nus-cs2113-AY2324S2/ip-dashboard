{"authorDailyContributionsMap":{"syj02":[{"date":"2024-01-30","commitResults":[{"hash":"43562a4c8a77992934aca7236d3f110e8b2b2fac","isMergeCommit":false,"messageTitle":"style: Rename chatbot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"bf9b32c2b53af8a16b624f914d044aa295b1889f","isMergeCommit":false,"messageTitle":"feat: Add greetings and exit Implement initial greeting and exiting messages","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"ddcfc2e8761e032d754870a5ad58107f87db00d2","isMergeCommit":false,"messageTitle":"feat: Add echo Chatbot Jane replies by echoing the user\u0027s input","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"e5e95dbbb0709fe63f09f3fcfc07961ab2397ac0","isMergeCommit":false,"messageTitle":"feat: Add store and list Implement arrays such that chatbot has the ability to store whatever text entered by the user and display them back to the user when requested","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}}]},{"date":"2024-01-31","commitResults":[{"hash":"8d65492c3bcaa8d2d464671166d7837f44fc0c85","isMergeCommit":false,"messageTitle":"refactor: Abstract task into another class Created a new class Task that contains the description of String type and status of Boolean type to keep the individual tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"319d4046c1c1a51c8567d05faa5b787e160a4352","isMergeCommit":false,"messageTitle":"refractor: Abstrac task list into another class Created TaskList to store all the tasks in a list and keep track of the total number of tasks added","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"efe9ff6c3697ec3a4116474c6192e2d0c6553a44","isMergeCommit":false,"messageTitle":"feat: Add mark and unmark functionalities Added mark and unmark to update whether the tasks are done.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":7}}},{"hash":"e3b543dbdba76a9c6a1eb168bf6a57cbef357c58","isMergeCommit":false,"messageTitle":"style: Modify code to fit coding standards Modifications made: *if-else statements with correct indentations *System.out.println statements with suitable length per line","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"72740868bb98970c7f9c98c483a6f3d0ef2b97b6","isMergeCommit":false,"messageTitle":"feat: Modify isDone method Modified isDone method in Task class with clearer parameters: Changed parameter from String to Boolean for shorter method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":9}}}]},{"date":"2024-02-06","commitResults":[{"hash":"7f828c4558b19205341530a0eb75b17a2cdd9c9a","isMergeCommit":false,"messageTitle":"style: Modify code to fit coding standards Align indentations for logo for better readability Rename the following to constants convention: * logo to LOGO * horizontalLine to SEPARATOR * greetMessage to GREET_MESSAGE * exitMessage to EXIT_MESSAGE Name change to SEPARATOR for better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":14}}},{"hash":"7b1a86db6c03514032fa21ac7fb32a4775a6c3b8","isMergeCommit":false,"messageTitle":"style: Rename variable in Task and TaskList Rename index to sequenceNumber as the variable represents the addition sequence of tasks.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"1a1a8b05d3202639acf0c59efbaeb1491e76fb31","isMergeCommit":false,"messageTitle":"Revert \"style: Rename variable in Task and TaskList\"","messageBody":"This reverts commit 7b1a86db6c03514032fa21ac7fb32a4775a6c3b8.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"663399b99c714c01a66862f1c71d1b1933fd47a3","isMergeCommit":false,"messageTitle":"style: Rename variable in Task Rename index to sequence as it represents the addition sequence of tasks in task list. Update methods in Jane, Task, and TaskList to match the new name: * Change all index to sequence * Change getIndex() change to getSequence() in Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":11}}},{"hash":"b2fac9ce5be59d966d90a73da750b4ae6c47fb14","isMergeCommit":false,"messageTitle":"Revert \"style: Rename variable in Task\"","messageBody":"This reverts commit 663399b99c714c01a66862f1c71d1b1933fd47a3.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":44}}},{"hash":"e3d78e9fdda8e4552292862b6b0ff05647014ac5","isMergeCommit":false,"messageTitle":"style: Rename variable in Task Rename index to sequence as it represents the addition sequence of tasks in task list. Update methods in Jane, Task, and TaskList to match the new name: * Change all index to sequence * Change getIndex() change to getSequence() in Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"b201865da4b7306f6d6b2d61f3f1670ddf63b905","isMergeCommit":false,"messageTitle":"refactor: Add method to process input Add new method processInput(String, TaskList) In new method: * Add new variable String[] inputPart to split input into two parts to know the action required (i.e. \"list\", \"mark\", \"unmark\") * Change if-else statements to switch case for better readability and shorter code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":27}}},{"hash":"c453bb03c89459f53dd32b5dd86d5d15deab637e","isMergeCommit":false,"messageTitle":"fix: Remove static final modifiers from variables Remove static final modifiers from SEPARATOR, GREET_MESSAGE, EXIT_MESSAGE","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"51d63a51ad4bdee1813dba391c897700425f30de","isMergeCommit":false,"messageTitle":"refactor: Add separator Add print SEPARATOR for output with better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c4c1fa1e6c4be1357e1611f8ca1b057c55355077","isMergeCommit":false,"messageTitle":"refactor: Abstract new classes Add new subclasses of Task class for multiple task types * Deadline class for tasks to be done before specific date/time * Event class for tasks with specific start date/time and end date/time * Todo class for tasks to be done without date/time limit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"0a6dd751d8d10c50ae8b3464234ba345cab11582","isMergeCommit":false,"messageTitle":"fix: Modify inheritance of Event Add extends Task to add inheritance from Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"87ced314b999066a2da14938f5d95145ec54f08f","isMergeCommit":false,"messageTitle":"feat: Add toString() method Override default toString() method to return status icon and description of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"2310085fce442e568dba0083f14b1a9db62dee6b","isMergeCommit":false,"messageTitle":"feat: Add constructor and toString() method * Add constructor which inherits from Task constructor * Add toString() method inherit from Task and override with addition of task type icon","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"0134c0cb362f46315e4ceca0dd66730e0584bd41","isMergeCommit":false,"messageTitle":"feat: Add constructor and toString() method * Add constructor which inherits from Task constructor and the date by which task needs to be completed * Add toString() method inherit from Task and override with addition of task type icon and the date by which task needs to be completed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"9d55a5dc76521487bd415a464ff6ef56cd0b81c6","isMergeCommit":false,"messageTitle":"feat: Add constructor and toString() method * Add constructor which inherits from Task constructor and add start and end date/time for task * Add toString() method inherit from Task and override with addition of task type icon and the start and end date/time for task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"syj02":{"java":152,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":0}},"authorContributionVariance":{"syj02":4360.665},"authorDisplayNameMap":{"syj02":"CS2113T-T09-4 SOH ..JIA)"}}
