[{"path":"data/jane.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"T | 1 | 10","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"T | 0 | 100","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"syj02":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"# Jane User Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"Welcome to Jane, a chatbot used for task management, via a Command Line Interface ","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"(CLI). Jane is designed to help you organize your tasks efficiently and stay on top","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"of your to-do list. ","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"## Table of Contents","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"2. [Features](#features)","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"   * [Add Todo Task: `todo`](#add-todo-task-todo)","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"   * [Add Deadline Task: `deadline`](#add-deadline-task-deadline)","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"   * [Add Event Task: `event`](#add-event-task-event)","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"   * [List Tasks: `list`](#list-tasks-list)","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"   * [Mark Task As Done: `mark`](#mark-task-as-done-mark)","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"   * [Mark Task As Undone: `unmark`](#mark-task-as-undone-unmark)","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"   * [Delete A Task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"   * [Find Keyword: `find`](#find-keyword-find)","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"   * [Exit Jane: `bye`](#exit-jane-bye)","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"3. [Frequently Asked Questions (FAQ)](#frequently-asked-questions-faq)","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"## Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"1. Ensure that you have the latest Java 11.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"2. Download the latest `ip.jar` file from https://github.com/syj02/ip/releases.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"3. Copy the file to the folder you want to use as the home folder for Jane.","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"4. Open a command terminal, `cd` to the folder containing `ip.jar` and use ","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"   `java -jar ip.jar` to run the application.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"5. The welcome message for Jane should be printed to the console.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"6. Type commands in the command line and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"$ java -jar ip.jar","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":" _____    _____    ____ _    _____ ","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"|____ |  |     |  |    | |  | ____|","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"    | |  |  |  |  | |  | |  | |___ ","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":" _  | |  |  _  |  | |  | |  |  ___|","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"| |_| |  | | | |  | |  | |  | |___ ","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"|_____|  |_| |_|  |_| ___|  |_____|","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"Hello! I am Jane.","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"What can I do for you?","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"Some example commands:","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"* `list`: List all tasks recorded.","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"* `bye`: Exit Jane chatbot.","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"### Notes about the command format","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"* Words in `UPPER_CASE` are parameters to be provided by users.","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"  * E.g. `todo TASK`, `TASK` is a parameter that could be used in the form of ","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"  `todo Submit assignment`.","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"### Add Todo Task: `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"Adds a Todo task. No specifications on deadline, start date, or end date.","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"Format: `todo TASK`","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"* `TASK` represents the description or name of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"* `todo Watch a movie`","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"* `todo take a nap`","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"todo Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"[T][ ]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"syj02"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"syj02"},"content":"### Add Deadline Task: `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"syj02"},"content":"Adds a Deadline task. It has a specific **deadline**.","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"Format: `deadline TASK /by DEADLINE`","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"syj02"},"content":"* `TASK` represents the description or name of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"* `DEADLINE` represents the due date and/or time of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"syj02"},"content":"* `deadline Complete quiz /by tomorrow`","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"syj02"},"content":"* `deadline go for a run /by Tuesday 6pm`","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"syj02"},"content":"deadline go for a run /by Tuesday 6pm","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"syj02"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"syj02"},"content":"[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"syj02"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"syj02"},"content":"### Add Event Task: `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"syj02"},"content":"Adds an Event task. It has a specific **start date/time** and **end date/time**.","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"syj02"},"content":"Format: `event TASK /from START_DATE_TIME /to END_DATE_TIME`","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"syj02"},"content":"* `TASK` represents the description or name of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"syj02"},"content":"* `START_DATE_TIME` represents the date and/or time of the start of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"syj02"},"content":"* `END_DATE_TIME` represents the date and/or time of the end of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"syj02"},"content":"* `event Attend lecture /from today 4pm /to 6pm`","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"syj02"},"content":"* `event sports competition /from 31 Mar 1pm /to 4 May 5pm`","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"syj02"},"content":"event sports competition /from 31 Mar 1pm /to 4 May 5pm","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"syj02"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"syj02"},"content":"[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"syj02"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":127,"author":{"gitId":"syj02"},"content":"### List Tasks: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"syj02"},"content":"Lists all tasks recorded in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"syj02"},"content":"Format: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"syj02"},"content":"1.[T][ ]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"syj02"},"content":"2.[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"syj02"},"content":"3.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"syj02"},"content":"### Mark Task As Done: `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"syj02"},"content":"Mark a task as done, which will be denoted as [X] in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"syj02"},"content":"Format: `mark SEQUENCE`","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":150,"author":{"gitId":"syj02"},"content":"* `SEQUENCE` represents the number of the task in the list. Check `list` to see number.","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"syj02"},"content":"* `mark 1`","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":155,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"syj02"},"content":"1.[T][ ]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"syj02"},"content":"2.[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"syj02"},"content":"3.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"syj02"},"content":"mark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"syj02"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"syj02"},"content":"[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"syj02"},"content":"1.[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"syj02"},"content":"2.[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"syj02"},"content":"3.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":177,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":178,"author":{"gitId":"syj02"},"content":"### Mark Task As Undone: `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"syj02"},"content":"Mark a task as undone, which will be denoted as [ ] in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":182,"author":{"gitId":"syj02"},"content":"Format: `mark SEQUENCE`","lastModifiedDate":"2024-03-08"},{"lineNumber":183,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"syj02"},"content":"* `SEQUENCE` represents the number of the task in the list. Check `list` to see number.","lastModifiedDate":"2024-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":186,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":187,"author":{"gitId":"syj02"},"content":"* `unmark 3`","lastModifiedDate":"2024-03-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":190,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":191,"author":{"gitId":"syj02"},"content":"list ","lastModifiedDate":"2024-03-08"},{"lineNumber":192,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":194,"author":{"gitId":"syj02"},"content":"1.[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"syj02"},"content":"2.[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"syj02"},"content":"3.[E][X]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"syj02"},"content":"unmark 3","lastModifiedDate":"2024-03-08"},{"lineNumber":199,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":200,"author":{"gitId":"syj02"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-03-08"},{"lineNumber":201,"author":{"gitId":"syj02"},"content":"[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":202,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":203,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":204,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":205,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":206,"author":{"gitId":"syj02"},"content":"1.[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":207,"author":{"gitId":"syj02"},"content":"2.[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":208,"author":{"gitId":"syj02"},"content":"3.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":209,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":210,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":212,"author":{"gitId":"syj02"},"content":"### Delete A Task: `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":214,"author":{"gitId":"syj02"},"content":"Deletes a task from the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":216,"author":{"gitId":"syj02"},"content":"Format: `delete SEQUENCE`","lastModifiedDate":"2024-03-08"},{"lineNumber":217,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":218,"author":{"gitId":"syj02"},"content":"* `SEQUENCE` represents the number of the task in the list. Check `list` to see number.","lastModifiedDate":"2024-03-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":220,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":221,"author":{"gitId":"syj02"},"content":"* `delete 2`","lastModifiedDate":"2024-03-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":223,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":225,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":226,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":227,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":228,"author":{"gitId":"syj02"},"content":"1.[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":229,"author":{"gitId":"syj02"},"content":"2.[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":230,"author":{"gitId":"syj02"},"content":"3.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":231,"author":{"gitId":"syj02"},"content":"4.[T][ ]  eat a Banana","lastModifiedDate":"2024-03-08"},{"lineNumber":232,"author":{"gitId":"syj02"},"content":"5.[D][ ]  make a banana cake (by: 2 March)","lastModifiedDate":"2024-03-08"},{"lineNumber":233,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":234,"author":{"gitId":"syj02"},"content":"delete 2","lastModifiedDate":"2024-03-08"},{"lineNumber":235,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":236,"author":{"gitId":"syj02"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-03-08"},{"lineNumber":237,"author":{"gitId":"syj02"},"content":"[D][ ]  go for a run (by: Tuesday 6pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":238,"author":{"gitId":"syj02"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":239,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":240,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":241,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":242,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":243,"author":{"gitId":"syj02"},"content":"1.[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":244,"author":{"gitId":"syj02"},"content":"2.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":245,"author":{"gitId":"syj02"},"content":"3.[T][ ]  eat a Banana","lastModifiedDate":"2024-03-08"},{"lineNumber":246,"author":{"gitId":"syj02"},"content":"4.[D][ ]  make a banana cake (by: 2 March)","lastModifiedDate":"2024-03-08"},{"lineNumber":247,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":249,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":250,"author":{"gitId":"syj02"},"content":"### Find Keyword: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":251,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":252,"author":{"gitId":"syj02"},"content":"Find all tasks that contains **ONE keyword** provided and print them out.","lastModifiedDate":"2024-03-08"},{"lineNumber":253,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":254,"author":{"gitId":"syj02"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-03-08"},{"lineNumber":255,"author":{"gitId":"syj02"},"content":"* All fields must be provided.","lastModifiedDate":"2024-03-08"},{"lineNumber":256,"author":{"gitId":"syj02"},"content":"* `KEYWORD` represents word to be matched in the tasks\u0027 description.","lastModifiedDate":"2024-03-08"},{"lineNumber":257,"author":{"gitId":"syj02"},"content":"* `KEYWORD` should be **ONE WORD LONG**.","lastModifiedDate":"2024-03-08"},{"lineNumber":258,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":259,"author":{"gitId":"syj02"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":260,"author":{"gitId":"syj02"},"content":"* `find banana`","lastModifiedDate":"2024-03-08"},{"lineNumber":261,"author":{"gitId":"syj02"},"content":"* `find Banana`","lastModifiedDate":"2024-03-08"},{"lineNumber":262,"author":{"gitId":"syj02"},"content":"* `find 1010`","lastModifiedDate":"2024-03-08"},{"lineNumber":263,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":264,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":265,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":266,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-03-08"},{"lineNumber":267,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":268,"author":{"gitId":"syj02"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":269,"author":{"gitId":"syj02"},"content":"1.[T][X]  Watch a movie","lastModifiedDate":"2024-03-08"},{"lineNumber":270,"author":{"gitId":"syj02"},"content":"2.[E][ ]  sports competition (from: 31 Mar 1pm to: 4 May 5pm)","lastModifiedDate":"2024-03-08"},{"lineNumber":271,"author":{"gitId":"syj02"},"content":"3.[T][ ]  eat a Banana","lastModifiedDate":"2024-03-08"},{"lineNumber":272,"author":{"gitId":"syj02"},"content":"4.[D][ ]  make a banana cake (by: 2 March)","lastModifiedDate":"2024-03-08"},{"lineNumber":273,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":274,"author":{"gitId":"syj02"},"content":"find banana","lastModifiedDate":"2024-03-08"},{"lineNumber":275,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":276,"author":{"gitId":"syj02"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":277,"author":{"gitId":"syj02"},"content":"[D][ ]  make a banana cake (by: 2 March)","lastModifiedDate":"2024-03-08"},{"lineNumber":278,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":279,"author":{"gitId":"syj02"},"content":"find Banana","lastModifiedDate":"2024-03-08"},{"lineNumber":280,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":281,"author":{"gitId":"syj02"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":282,"author":{"gitId":"syj02"},"content":"[T][ ]  eat a Banana","lastModifiedDate":"2024-03-08"},{"lineNumber":283,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":284,"author":{"gitId":"syj02"},"content":"find 1010","lastModifiedDate":"2024-03-08"},{"lineNumber":285,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":286,"author":{"gitId":"syj02"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":287,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":288,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":289,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":290,"author":{"gitId":"syj02"},"content":"### Exit Jane: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":291,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":292,"author":{"gitId":"syj02"},"content":"Exit the Jane chatbot. Exiting message will be printed.","lastModifiedDate":"2024-03-08"},{"lineNumber":293,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":294,"author":{"gitId":"syj02"},"content":"Format: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":295,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":296,"author":{"gitId":"syj02"},"content":"Expected Output:","lastModifiedDate":"2024-03-08"},{"lineNumber":297,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":298,"author":{"gitId":"syj02"},"content":"bye","lastModifiedDate":"2024-03-08"},{"lineNumber":299,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":300,"author":{"gitId":"syj02"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-08"},{"lineNumber":301,"author":{"gitId":"syj02"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":302,"author":{"gitId":"syj02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":303,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":304,"author":{"gitId":"syj02"},"content":"## Frequently Asked Questions (FAQ)","lastModifiedDate":"2024-03-08"},{"lineNumber":305,"author":{"gitId":"syj02"},"content":"1. If I exit the chatbot without using `bye`, will I lose data?","lastModifiedDate":"2024-03-08"},{"lineNumber":306,"author":{"gitId":"syj02"},"content":"   ","lastModifiedDate":"2024-03-08"},{"lineNumber":307,"author":{"gitId":"syj02"},"content":"   No, data might not be lost. However, there is a chance of data corruption which may ","lastModifiedDate":"2024-03-08"},{"lineNumber":308,"author":{"gitId":"syj02"},"content":"   result in a full or partial loss of data.","lastModifiedDate":"2024-03-08"},{"lineNumber":309,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":310,"author":{"gitId":"syj02"},"content":"2. How do I transfer data to other machines?","lastModifiedDate":"2024-03-08"},{"lineNumber":311,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":312,"author":{"gitId":"syj02"},"content":"   Copy the `ip.jar` file and `jane.txt` to the other machine. Place both of the files ","lastModifiedDate":"2024-03-08"},{"lineNumber":313,"author":{"gitId":"syj02"},"content":"   in the same directory, and Jarvas will be able to load the data file.","lastModifiedDate":"2024-03-08"},{"lineNumber":314,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"syj02":288,"-":26}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Represents a specific type of task called \"Deadline\" in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * It extends the base Task class and includes additional information about the deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    /** The deadline associated of the task. */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"    protected String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"     * @param by The deadline information associated with the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"     * Retrieves the deadline information associated with the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"     * @return The deadline information.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"        return by;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"     * Generates a string representation of the Deadline task, including its specialized status icon and deadline information.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"syj02":38}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Represents a specific type of task called \"Event\" in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * It extends the base Task class and includes additional information about the event\u0027s start and end times.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    /** The start time of the event. */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"    protected String start;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"    /** The end time of the event. */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"    protected String end;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"     * @param start The start time information associated with the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"     * @param end The end time information associated with the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"     * Retrieves the start time information associated with the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"     * @return The start time information.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"    public String getStart() {","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        return start;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"     * Retrieves the end time information associated with the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"     * @return The end time information.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"        return end;","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"     * Generates a string representation of the Event task, including its specialized status icon and event information.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStart() + \" to: \" + getEnd() + \")\";","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"syj02":52}},{"path":"src/main/java/Jane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" * Represents the main class for the Jane chatbot.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":" * Jane is a task management chatbot that allows users to interact with a list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":" * This class contains the main method that initializes and runs the Jane chatbot.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"public class Jane {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"    /** File path that stores the task data. */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"    public static final String FILE_PATH \u003d \"./data/jane.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"    /** Storage system that handles file operations. */","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    public static Storage storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"     * Initializes and runs the Jane chatbot.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"     * It displays a logo, greeting message, and enters a loop to process user input until the \"bye\" command is entered.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"     * @param args Command-line arguments from user.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"     * @throws IOException If error occurs during file loading or saving.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"     * @throws JaneDataCorruptedException If file data is corruption","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"        String Logo \u003d \" _____    _____    ____ _    _____ \\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"                + \"|____ |  |     |  |    | |  | ____|\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"                + \"    | |  |  |  |  | |  | |  | |___ \\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"                + \" _  | |  |  _  |  | |  | |  |  ___|\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"                + \"| |_| |  | | | |  | |  | |  | |___ \\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"                + \"|_____|  |_| |_|  |_| ___|  |_____|\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"        String Separator \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        String Greet_Message \u003d \"Hello! I am Jane.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"        String Exit_Message \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"        System.out.print(Logo + Separator);","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"        System.out.print(Greet_Message + Separator);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"            // Initialize storage and load existing files","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"            storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"            storage.ensureDataFileExists();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"            TaskList taskList \u003d storage.loadTasksToFile();","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"            while (!ui.input.equals(\"bye\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"                // Process user input, display output, and save tasks to file","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"                try {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"                    System.out.print(Separator);","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"                    ui.processInput(ui.input, taskList);","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"                    System.out.print(Separator);","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"                    storage.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"                } catch (JaneException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"                    System.out.print(Separator);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"                ui.nextInput();","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"            // Save tasks to file before exiting","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"                storage.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"                System.out.print(Separator + Exit_Message + Separator);","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"                System.out.println(\"File does not exist\");","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"            System.out.println(\"File does not exist\");","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"        } catch (JaneDataCorruptedException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"            System.out.println(\"File does not exist\");","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"syj02":71}},{"path":"src/main/java/JaneDataCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Customs exception that extends the base Exception class.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * It is used to handle exceptions related to data corruption in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class JaneDataCorruptedException extends Exception{","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"     * Constructs a JaneDataCorruptedException with the specified error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"     * @param message The error message associated with the data corruption exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    public JaneDataCorruptedException(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"        super(message);","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"syj02":14}},{"path":"src/main/java/JaneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Customs exception that extends the base Exception class.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * It is used to handle exceptions specific to the Jane chatbot.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class JaneException extends Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"     * Constructs a JaneException with the specified error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    public JaneException(String message) {","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"        super(message);","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"syj02":14}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Responsible for interpreting user input and executing corresponding actions","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * on the TaskList in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    /** The TaskList instance to which the parsed tasks will be added or manipulated. */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"     * Constructs a Parser object with the specified TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"     * @param taskList The TaskList to be manipulated by the parser.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"     * Processes a \"todo\" command and adds a new Todo task to the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"     * @param input The user\u0027s input for the \"todo\" command.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"     * @throws JaneException If the description of the todo task is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    public void processTodo(String input) throws JaneException {","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"            throw new JaneException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"        Todo todo \u003d new Todo(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"        this.taskList.addTask(todo);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"                + todo","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"                + \"\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"                + this.taskList.getCount()","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"     * Processes a \"deadline\" command and adds a new Deadline task to the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"     * @param input The user\u0027s input for the \"deadline\" command.","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"     * @throws JaneException If the description or deadline information is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"    public void processDeadline(String input) throws JaneException {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"            throw new JaneException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"        String[] deadlineInput \u003d input.split(\" /\", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"        Deadline deadline \u003d new Deadline(deadlineInput[0],","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"                deadlineInput[1].replace(\"/\", \"\").replace(\"by \", \"\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"        this.taskList.addTask(deadline);","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"                + deadline","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"                + \"\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"                + this.taskList.getCount()","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"     * Processes an \"event\" command and adds a new Event task to the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"     * @param input The user\u0027s input for the \"event\" command.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"     * @throws JaneException If the description or event information is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"    public void processEvent(String input) throws JaneException {","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"            throw new JaneException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"        String[] eventInput \u003d input.split(\" /\", 3);","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"        Event event \u003d new Event(eventInput[0],","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"                eventInput[1].replace(\"/\", \"\").replace(\"from \", \"\"),","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"syj02"},"content":"                eventInput[2].replace(\"/\", \"\").replace(\"to \", \"\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"        this.taskList.addTask(event);","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"syj02"},"content":"                + event","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"                + \"\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"syj02"},"content":"                + this.taskList.getCount()","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"syj02"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"     * Marks a task as done in the TaskList based on the provided sequence number.","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"syj02"},"content":"     * @param sequence The sequence number of the task to be marked as done.","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"syj02"},"content":"    public void markAsDone(int sequence) {","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"syj02"},"content":"        Task task \u003d this.taskList.list.get(sequence);","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"syj02"},"content":"        task.setDone(true);","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"syj02"},"content":"     * Marks a task as undone in the TaskList based on the provided sequence number.","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"syj02"},"content":"     * @param sequence The sequence number of the task to be marked as undone.","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"syj02"},"content":"    public void markAsUndone(int sequence) {","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"syj02"},"content":"        Task task \u003d this.taskList.list.get(sequence);","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"syj02"},"content":"        task.setDone(false);","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"syj02"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"syj02"},"content":"     * Searches for tasks in the TaskList containing a specific word in their descriptions.","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"syj02"},"content":"     * @param word The word to be searched for in task descriptions.","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"syj02"},"content":"    public void findWord(String word) {","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"syj02"},"content":"        String description;","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"syj02"},"content":"        for (Task task : this.taskList.list) {","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"syj02"},"content":"            description \u003d task.getDescription();","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"syj02"},"content":"            if (description.contains(word)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"syj02"},"content":"                System.out.println(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"syj02":121}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"import java.util.List;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":" * Manages the loading and saving of tasks to a data file for the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"public class Storage {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    /** The file path for storing and retrieving task data. */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    public final String filePath;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"     * @param filePath The path to the file for storing task data.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"     * Saves the tasks from the provided TaskList to the data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"     * @throws IOException If an error occurs during file writing.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"        if (!Files.exists(filePath.getParent())) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"        List\u003cString\u003e encodedTasks \u003d encodeTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"        Files.write(filePath, encodedTasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"     * Loads tasks from the data file into a TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"     * @return A TaskList containing tasks loaded from the data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"     * @throws IOException If an error occurs during file reading.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"     * @throws JaneDataCorruptedException If the data file is corrupted.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"    public TaskList loadTasksToFile() throws IOException, JaneDataCorruptedException {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"        TaskList tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"        if (Files.exists(filePath)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"                tasks \u003d new TaskList(decodeTasks(lines));","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"                throw new FileNotFoundException(\"Data file not found\");","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"                throw new IOException(\"Error reading tasks from the file\", e);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"            } catch (JaneDataCorruptedException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"                throw e;","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"        return tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"     * Encodes a list of tasks into a format suitable for writing to the data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"     * @param tasks The list of tasks to be encoded.","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"     * @return A list of encoded task strings.","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"syj02"},"content":"    public static List\u003cString\u003e encodeTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"syj02"},"content":"            encodedTasks.add(encodeTask(task));","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"        return encodedTasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"syj02"},"content":"     * Encodes a single task into a string format suitable for writing to the data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"     * @param task The task to be encoded.","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"syj02"},"content":"     * @return The encoded string representation of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"    public static String encodeTask(Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"syj02"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"syj02"},"content":"            return \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"syj02"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"syj02"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"syj02"},"content":"            return \"D | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + deadlineTask.getDescription() + \" | \" + deadlineTask.getBy();","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"syj02"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"syj02"},"content":"            return \"E | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + eventTask.getDescription() + \" | \" + eventTask.getStart() + \"-\" + eventTask.getEnd();","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"syj02"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"syj02"},"content":"            return \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"syj02"},"content":"     * Decodes a list of task strings from the data file into a list of Task objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"syj02"},"content":"     * @param lines The list of task strings read from the data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"syj02"},"content":"     * @return A list of Task objects decoded from the task strings.","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"syj02"},"content":"     * @throws JaneDataCorruptedException If the data file is corrupted.","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"syj02"},"content":"    public static ArrayList\u003cTask\u003e decodeTasks(List\u003cString\u003e lines) throws JaneDataCorruptedException {","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"syj02"},"content":"        ArrayList\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"syj02"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"syj02"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"syj02"},"content":"                decodedTasks.add(decodeTask(line));","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"syj02"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"syj02"},"content":"            throw new JaneDataCorruptedException(\"Data file is corrupted: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"syj02"},"content":"        return decodedTasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"syj02"},"content":"     * Decodes a single task string from the data file into a Task object.","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"syj02"},"content":"     * @param line The task string read from the data file.","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"syj02"},"content":"     * @return The Task object decoded from the task string.","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"syj02"},"content":"    public static Task decodeTask(String line) {","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"syj02"},"content":"        String[] parts \u003d line.split(\" \\\\| \", 3);","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"syj02"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"syj02"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"syj02"},"content":"        String description;","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"syj02"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"syj02"},"content":"        case \"T\":","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"syj02"},"content":"            description \u003d parts[2];","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"syj02"},"content":"            Task newTodo \u003d new Todo(description);","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"syj02"},"content":"            newTodo.setDone(isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"syj02"},"content":"            return newTodo;","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"syj02"},"content":"        case \"D\":","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"syj02"},"content":"            String[] descriptionByString \u003d parts[2].split(\" \\\\| \");","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"syj02"},"content":"            description \u003d descriptionByString[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"syj02"},"content":"            String by \u003d descriptionByString[1];","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"syj02"},"content":"            Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"syj02"},"content":"            newDeadline.setDone(isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"syj02"},"content":"            return newDeadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"syj02"},"content":"        case \"E\":","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"syj02"},"content":"            String[] descriptionStartEndString \u003d parts[2].split(\" \\\\| \");","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"syj02"},"content":"            description \u003d descriptionStartEndString[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"syj02"},"content":"            String[] dateTimeParts \u003d descriptionStartEndString[1].split(\"-\");","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"syj02"},"content":"            String start \u003d dateTimeParts[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"syj02"},"content":"            String end \u003d dateTimeParts[1];","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"syj02"},"content":"            Event newEvent \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"syj02"},"content":"            newEvent.setDone(isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"syj02"},"content":"            return newEvent;","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"syj02"},"content":"        default:","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"syj02"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"syj02"},"content":"     * Ensures that the data file exists, creating it if necessary.","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"syj02"},"content":"     * @throws IOException If an error occurs during file creation.","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"syj02"},"content":"    public void ensureDataFileExists() throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":165,"author":{"gitId":"syj02"},"content":"        Path filePath \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"syj02"},"content":"        // Check if the file exists or create it","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"syj02"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"syj02"},"content":"            if (!Files.exists(filePath.getParent())) {","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"syj02"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"syj02"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":172,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":174,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"syj02":174}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Represents a basic task in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * It provides methods to get and set the task status, retrieve the task description,","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" * and generate a formatted string representation of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"    /** Description of the task. */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"    /** Status of the task (done or not done). */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"        return description;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"        return isDone;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"     * Sets the status of the task (done or not done).","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"     * @param status The status to be set for the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"    public void setDone(Boolean status) {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"     * @return A string representing the status icon (\"[X]\" for done, \"[ ]\" for not done).","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"     * Generates a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"syj02":69}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" * Represents a collection of tasks in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":" * It provides methods to add, remove, and retrieve tasks, as well as print the list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"    /** The list containing tasks. */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"     * @param list The list of tasks to initialize the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"     * Retrieves the count of tasks in the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"     * @return The count of tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"    public int getCount() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"        return list.size();","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"        return list;","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"        this.list.add(task);","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"     * Removes a task from the TaskList based on the specified sequence number.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"     * @param sequence The sequence number of the task to be removed.","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"    public void removeTask(int sequence) {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"        Task task \u003d this.list.get(sequence);","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"        this.list.remove(sequence);","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"                + task","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"                + getCount()","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"     * Prints the list of tasks with their respective sequence numbers.","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"syj02"},"content":"    public void printList() {","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"        for (int i \u003d 0; i \u003c getCount(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"syj02"},"content":"            System.out.println(i+1 + \".\" + this.list.get(i));","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"syj02":79}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":" * Represents a specific type of task called \"Todo\" in the Jane task management application.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":" * It extends the base Task class and provides a specialized string representation for Todo tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"     * Constructs a Todo object with the specified description.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"     * Generates a string representation of the Todo task, including its specialized status icon.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"     * @return A formatted string representing the Todo task.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"syj02":24}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":" * Represents user input processing.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"public class Ui {","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"    /** User input string. */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"    public String input;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"    /** Scanner object for reading user input. */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    public Scanner in;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    /** Expected length of user input. One keyword and subsequent description. */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    public final int EXPECTED_LENGTH \u003d 2;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"     * Constructs a Ui object and initializes the Scanner to read user input.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"    public Ui() {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"        this.input \u003d in.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"     * Processes the user input, delegating the command to the appropriate parser.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"     * @param taskList The TaskList object to be manipulated.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"     * @throws JaneException If an error occurs during command processing.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"    public void processInput(String input, TaskList taskList) throws JaneException {","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"            // Splitting the input into two parts for command processing","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"            String[] inputPart \u003d input.split(\" \", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"            // Checking if the input has the expected length and is not null for certain commands","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"            if (inputPart.length \u003c EXPECTED_LENGTH || inputPart[1] \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"                switch (inputPart[0]) {","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"                case \"todo\" :","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"                case \"deadline\" :","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"                case \"event\" :","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"                    throw new JaneException(\"Description for a \" + inputPart[0] + \" cannot be empty\");","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"            // Creating a parser and executing the appropriate command based on user input","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"            Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"            switch (inputPart[0]) {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"            case \"todo\":","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"                parser.processTodo(inputPart[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"            case \"deadline\":","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"                parser.processDeadline(inputPart[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"            case \"event\":","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"                parser.processEvent(inputPart[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"            case \"list\":","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"                taskList.printList();","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"            case \"mark\":","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"                parser.markAsDone(Integer.parseInt(inputPart[1]) - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"            case \"unmark\":","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"                parser.markAsUndone(Integer.parseInt(inputPart[1]) - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"                taskList.removeTask(Integer.parseInt(inputPart[1]) - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"            case \"find\":","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"                parser.findWord(inputPart[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"syj02"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"                throw new JaneException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"syj02"},"content":"        } catch (JaneException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"            throw new JaneException(e.getMessage());","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"syj02"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"syj02"},"content":"     * Reads the next line of user input and updates the input field.","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"    public void nextInput() {","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"syj02"},"content":"        this.input \u003d in.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"syj02":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"todo CS2113 homework","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"deadline CS2113 quiz /by today","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"event CS2113 workshop /from Friday 4pm /to 6pm","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"mark 1","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"bye","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"syj02":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"java -classpath ..\\bin Jane \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"syj02":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"java -classpath ../bin Jane \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"syj02":1,"-":37}}]
