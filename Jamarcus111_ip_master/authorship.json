[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"# Ma project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Jamarcus111"},"content":"3. After that, locate the `src/main/java/Ma.java` file, right-click it, and choose `Run Ma.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jamarcus111":2,"-":22}},{"path":"src/main/java/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"public class CommandParser {","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"    public CommandParser(TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"    public void parseCommand(String userInput) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"        if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"            taskList.listTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"            taskList.addTask(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jamarcus111"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":17}},{"path":"src/main/java/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"    protected String by;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"    public DeadLine(String description, String by) {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"    protected String from;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"    protected String to;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jamarcus111"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jamarcus111"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jamarcus111":18}},{"path":"src/main/java/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"public class TaskFactory {","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"    public static Task createTask(String userInput) {","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"            task \u003d new Todo(parts[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"        } else if (type.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"            String[] details \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"            task \u003d new DeadLine(details[0], details[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"        } else if (type.startsWith(\"event\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"            String[] details \u003d parts[1].split(\" /from \", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jamarcus111"},"content":"            String[] times \u003d details[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Jamarcus111"},"content":"            task \u003d new Event(details[0], times[0], times[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Jamarcus111"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Jamarcus111"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":20}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"public class TaskList {","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"    public void addTask(String userInput) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"        // Similar to addTask method in TaskManager, but refactored for this class","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"        Task task \u003d TaskFactory.createTask(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jamarcus111"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Jamarcus111"},"content":"            System.out.println(\"  \" + task);","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Jamarcus111"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Jamarcus111"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Jamarcus111"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Jamarcus111"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Jamarcus111"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Jamarcus111"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Jamarcus111"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":26}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"public class TaskManager {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"        CommandParser commandParser \u003d new CommandParser(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"        System.out.println(\"Hello! I\u0027m TaskManager Jamarcus \\nWhat can I do for you?\");","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Jamarcus111"},"content":"        while (true) {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Jamarcus111"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jamarcus111"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Jamarcus111"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Jamarcus111"},"content":"                break;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Jamarcus111"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Jamarcus111"},"content":"                commandParser.parseCommand(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Jamarcus111"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Jamarcus111"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Jamarcus111"},"content":"        scanner.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":23}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jamarcus111"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Jamarcus111"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Jamarcus111"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Jamarcus111"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Jamarcus111"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Jamarcus111"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Jamarcus111"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Jamarcus111"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Jamarcus111"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Jamarcus111":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jamarcus111"},"content":"java -classpath ..\\bin Ma \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jamarcus111":1,"-":20}}]
