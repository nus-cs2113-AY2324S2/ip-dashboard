[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"# Oley project template","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"3. After that, locate the `src/main/java/Oley.java` file, right-click it, and choose `Run Oley.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhangWenyue3325":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"Oley is a Java project for **task management**, optimized for use via a Command Line Interface (CLI). Given below are instructions on how to use it.","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"## Quick Start","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e [!IMPORTANT] ","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e Ensure you have **Java 11** or above installed in your Computer.","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"1. Download the latest `Oley.jar` from [here](https://github.com/ZhangWenyue3325/ip/releases).","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"2. Copy the file to the folder you want to use as the _home folder_ for your Oley chatbot.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"3. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Oley.jar` command to run the application.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"4. If the setup is correct, you will see the below on your screen:","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"   ```","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"   Greetings from","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"     _____  __       ","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"    /  _  \\|  | ____ ___  ___","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"   |  | |  |  |/ ___ \\  \\/  /","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"   |  |_|  |  |  ____/\\    /","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"    \\_____/|__|\\_____|/   /","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"                     /___/","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"    *~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"    Hello, I\u0027m your cute and lovely friend Oley.","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"    What can I do for you?","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"    *~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"    OOPS, the file does not exist! I will now create one for you~ (*o*)","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"    *~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"   ```","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"   Some example commands you can try:","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"- `todo do homework`: Adds _do homework_ as a todo type task to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"- `delete 3`: Deletes the third task in the current task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"- `list`: Lists all tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"- `mark 1`: Marks the first task in the list as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"- `before 2023-02-01-1222`: Finds all tasks that end before _12:23 Feb 01 2023_.","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"- `find book`: Finds all tasks that contain the keyword _book_.","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"- `bye`: Exits the chatbot.","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"6. Refer to the **Features** below for details of each command.","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"## Features ","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e Words in `UPPER_CASE` are the parameters to be supplied by the user.   ","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e e.g. In `todo TASK_NAME`, `TASK_NAME` is a parameter which can be used as `todo go to sleep`.","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"### Adding a task: `todo` `deadline` `event`","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"Adds a new task to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"- Adding a **to-do** task:","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"   - Format: `todo TASK_NAME`","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"   - Example: `todo walk` adds _walk_ as a to-do task to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"- Adding a **deadline** task:","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"   - Format: `deadline TASK_NAME /by TIME`","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"      - `/by` must be used to indicate the due time","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"      - `TIME` must be in the format of `yyyy-MMM-dd-HHmm`, else Oley will ask you to re-enter `TIME` without `deadline TASK_NAME /by`","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"      - `TIME` should be **before the current time** as it is meaningless to add a passed task to the task list. If a passed deadline is entered, Oley will ask you to re-enter `TIME`.","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"   - Example: `deadline finish iP /by 2024-03-08-2359` adds _finish iP_ as a deadline task, which dues at 23:59 Mar 8th 2024.","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"- Adding a **event** task:","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"   - Format: `event TASK_NAME /from TIME /to TIME`","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"      - `/from` `/to` must be used to indicate the start and end time respectively","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"      - `TIME` must be in the format of `yyyy-MMM-dd-HHmm`, else Oley will first ask you to re-enter the start `TIME`, then the end `TIME`","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"      - The end `TIME` should be **after** the start `TIME`, else Oley will ask you to re-enter the end `TIME`.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"   - Example: `event sleep /from 2024-03-05-2359 /to 2024-03-06-0800` adds an event _sleep_ that starts from 23:59 Mar 5th 2024, ends at 08:00 Mar 6th 2024.","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"Deletes a task from the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"- Format: `delete INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"   - `INDEX` must be an integer within the size of the current task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"- Example: `delete 2` removes the second task from the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"Lists out all existing tasks in the current task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"- Format: `list`","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"ZhangWenyue3325"},"content":"### Marking / Unmarking a task: `mark` `unmark`","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"ZhangWenyue3325"},"content":"Marks a task as done or not done.","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"ZhangWenyue3325"},"content":"- Marking a task:","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Format: `mark INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"ZhangWenyue3325"},"content":"    - `INDEX` must be an integer within the size of the current task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"ZhangWenyue3325"},"content":"    - If the task to be marked has been marked before, a warning will be given by Oley.","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Example: `mark 4` marks task 4 as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"ZhangWenyue3325"},"content":"- Unmarking a task:","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Format: `unmark INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"ZhangWenyue3325"},"content":"    - `INDEX` must be an integer within the size of the current task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"ZhangWenyue3325"},"content":"    - If the task to be unmarked has not been marked before, a warning will be given by Oley.","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Example: `unmark 2` marks task 2 as not done yet.","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"ZhangWenyue3325"},"content":"### Searching for tasks: `before` `find`","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"ZhangWenyue3325"},"content":"Searches for tasks that meet specific requirements.","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"ZhangWenyue3325"},"content":"- Searching for tasks that end before a certain time:","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Format: `before TIME`","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"ZhangWenyue3325"},"content":"    - `TIME` must be in the format of `yyyy-MMM-dd-HHmm`.","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Example: `before 2023-09-08-1222` searches for all tasks that end before 12:22 Sep 8th 2023, i.e. deadlines that due before the time, events that end before the time.","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"ZhangWenyue3325"},"content":"- Searching for tasks that contain a certain keyword:","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Format: `find KEYWORD`","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"ZhangWenyue3325"},"content":"    - `KEYWORD` must be a single word. If multiple words are entered as `KEYWORD`, the first word will be recognised as the keyword to search for.","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"ZhangWenyue3325"},"content":"    - `KEYWORD` is case-sensitive.","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"ZhangWenyue3325"},"content":"  - Example: `find do` searches for all tasks that contain the keyword _do_.","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"ZhangWenyue3325"},"content":"### Exiting the chatbot: `bye`","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"ZhangWenyue3325"},"content":"Terminates the conversation with Oley.","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"ZhangWenyue3325"},"content":"- Format: `bye`","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"ZhangWenyue3325"},"content":"- The following will be shown on the screen:","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"ZhangWenyue3325"},"content":"    *~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"ZhangWenyue3325"},"content":"bye","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"ZhangWenyue3325"},"content":" ","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"ZhangWenyue3325"},"content":"    *~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"ZhangWenyue3325"},"content":"    Bye~ Feel free to talk to me anytime. I will always be here waiting for you. (0~0)","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"ZhangWenyue3325"},"content":"### Saving the data","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"ZhangWenyue3325"},"content":"Oley data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"ZhangWenyue3325"},"content":"### Editing the data file","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e [!CAUTION]","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e - Oley data are saved automatically as a `.txt` file: `[JAR file location]/data/Oley.txt`.  ","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"ZhangWenyue3325"},"content":"\u003e - Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"ZhangWenyue3325":103,"-":19}},{"path":"src/main/java/oley/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.commands;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.Task;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.Todo;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.Deadline;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.Event;","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.TaskList;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.TimingNotFoundException;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents all acceptable valid commands and the way of processing them.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Command {","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"    private boolean isExit;","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns whether the iteration of reading commands from users should stop.","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return Whether continue reading in commands or not.","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"        return isExit;","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Add a new task to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If it is initialising, the message of tasks being successfully added will not be printed and tasks will not","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"     * be added to the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param isBegin Boolean attribute that determines whether the program is initialising automatically from","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"     *                the existing data file or following newly entered commands by users.","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @throws InputNotRecognizedException If the first word entered is not valid.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void addTask(TaskList tasks, String sentence, boolean isBegin) throws InputNotRecognizedException {","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"        String instruction \u003d Parser.parse(sentence);","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"        switch (instruction) {","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"todo\":","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"            tasks.add(new Todo(sentence.substring(5)));","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"deadline\":","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"                tasks.add(new Deadline(sentence.substring(9)));","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (TimingNotFoundException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printDeadlineNotSpecified();","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"                return;","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"event\":","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"                tasks.add(new Event(sentence.substring(6)));","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (TimingNotFoundException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printEventNotSpecified();","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"                return;","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"        default:","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"            throw new InputNotRecognizedException();","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (!isBegin) {","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"ZhangWenyue3325"},"content":"            String file \u003d \"./data/Oley.txt\";","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"            Task taskName \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"                Storage.appendToFile(file, taskName.format());","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToWrite();","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printTaskAdded(taskName);","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printTaskNumber(tasks.size());","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Delete a task from the current task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Deleting from data file is achieved by clearing the file and re-write the current task list to the file.","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void deleteTask(TaskList tasks, String sentence) {","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"ZhangWenyue3325"},"content":"        int toBeDeleted \u003d -1;","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"ZhangWenyue3325"},"content":"        String taskToBeDeleted;","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"ZhangWenyue3325"},"content":"            toBeDeleted \u003d Parser.parseDeleteOrMark(sentence);","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"ZhangWenyue3325"},"content":"            taskToBeDeleted \u003d tasks.get(toBeDeleted).toString();","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printMissingNumber();","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"ZhangWenyue3325"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printMarkExceedRange(toBeDeleted + 1);","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"ZhangWenyue3325"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"ZhangWenyue3325"},"content":"        ","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"ZhangWenyue3325"},"content":"        tasks.remove(toBeDeleted);","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.printTaskDeleted(taskToBeDeleted);","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.printTaskNumber(tasks.size());","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"ZhangWenyue3325"},"content":"        String file \u003d \"./data/Oley.txt\";","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":114,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"ZhangWenyue3325"},"content":"                Storage.changeFile(file, tasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToWrite();","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"ZhangWenyue3325"},"content":"                Storage.clearFile(file);","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":125,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToClear();","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Print all the tasks in the current list in the format of \"No. [TYPE][ISDONE] TaskName ([TIMING])\",","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. 1.[T][] Sleep","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTask(TaskList tasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.printTasks();","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"ZhangWenyue3325"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"ZhangWenyue3325"},"content":"        while (i \u003c tasks.size()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printTask((i + 1), tasks.get(i).toString());","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"ZhangWenyue3325"},"content":"            i++;","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Mark a task in the current task list as done or unmark it.","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If the index of task to be marked or unmarked is larger than the total number of tasks, a warning will be","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"ZhangWenyue3325"},"content":"     * printed.","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If the task to be marked is already marked as done, or the task to be unmarked is not yet to be marked,","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"ZhangWenyue3325"},"content":"     * a warning will be printed.","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param isBegin Boolean attribute that determines whether the program is initialising automatically from","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"ZhangWenyue3325"},"content":"     *                the existing data file or following newly entered commands by users.","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void mark(TaskList tasks, String sentence, boolean isBegin) {","lastModifiedDate":"2024-03-03"},{"lineNumber":158,"author":{"gitId":"ZhangWenyue3325"},"content":"        int toBeMarked;","lastModifiedDate":"2024-03-04"},{"lineNumber":159,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"ZhangWenyue3325"},"content":"            toBeMarked \u003d Parser.parseDeleteOrMark(sentence);","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printMissingNumber();","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"ZhangWenyue3325"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":166,"author":{"gitId":"ZhangWenyue3325"},"content":"        String instruction \u003d Parser.parse(sentence);","lastModifiedDate":"2024-03-03"},{"lineNumber":167,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":168,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (toBeMarked \u003e\u003d tasks.size() || toBeMarked \u003c\u003d -1) {","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printMarkExceedRange(toBeMarked + 1);","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"ZhangWenyue3325"},"content":"            return;","lastModifiedDate":"2024-03-03"},{"lineNumber":172,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":173,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":174,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (instruction.equals(\"mark\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":175,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (tasks.get(toBeMarked).checkDone()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":176,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printMarkedAlready();","lastModifiedDate":"2024-03-03"},{"lineNumber":177,"author":{"gitId":"ZhangWenyue3325"},"content":"                return;","lastModifiedDate":"2024-03-03"},{"lineNumber":178,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":179,"author":{"gitId":"ZhangWenyue3325"},"content":"            tasks.get(toBeMarked).setDone();","lastModifiedDate":"2024-03-03"},{"lineNumber":180,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (!isBegin) {","lastModifiedDate":"2024-03-03"},{"lineNumber":181,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printMarked(tasks.get(toBeMarked));","lastModifiedDate":"2024-03-03"},{"lineNumber":182,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":183,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else if (instruction.equals(\"unmark\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":184,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (!tasks.get(toBeMarked).checkDone()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":185,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printUnmarkFailed();","lastModifiedDate":"2024-03-03"},{"lineNumber":186,"author":{"gitId":"ZhangWenyue3325"},"content":"                return;","lastModifiedDate":"2024-03-03"},{"lineNumber":187,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":188,"author":{"gitId":"ZhangWenyue3325"},"content":"            tasks.get(toBeMarked).setNotDone();","lastModifiedDate":"2024-03-03"},{"lineNumber":189,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (!isBegin) {","lastModifiedDate":"2024-03-03"},{"lineNumber":190,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printUnmarked(tasks.get(toBeMarked));","lastModifiedDate":"2024-03-03"},{"lineNumber":191,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":192,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":193,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":194,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (!isBegin) {","lastModifiedDate":"2024-03-03"},{"lineNumber":195,"author":{"gitId":"ZhangWenyue3325"},"content":"            String file \u003d \"./data/Oley.txt\";","lastModifiedDate":"2024-03-03"},{"lineNumber":196,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":197,"author":{"gitId":"ZhangWenyue3325"},"content":"                Storage.changeFile(file, tasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":198,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":199,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":200,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToWrite();","lastModifiedDate":"2024-03-03"},{"lineNumber":201,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":202,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":203,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":204,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":205,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":206,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Print tasks that end before the given time.","lastModifiedDate":"2024-03-05"},{"lineNumber":207,"author":{"gitId":"ZhangWenyue3325"},"content":"     * \"todo\" are not involved as it does not involve time.","lastModifiedDate":"2024-03-05"},{"lineNumber":208,"author":{"gitId":"ZhangWenyue3325"},"content":"     * For \"deadline\", the ones with due time (by) before given time will be included.","lastModifiedDate":"2024-03-05"},{"lineNumber":209,"author":{"gitId":"ZhangWenyue3325"},"content":"     * For \"event\", the ones with end time (to) before given time will be included.","lastModifiedDate":"2024-03-05"},{"lineNumber":210,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":211,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":212,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":213,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":214,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void tasksBeforeTime(TaskList tasks, String sentence) {","lastModifiedDate":"2024-03-04"},{"lineNumber":215,"author":{"gitId":"ZhangWenyue3325"},"content":"        TaskList inDuration \u003d new TaskList();","lastModifiedDate":"2024-03-04"},{"lineNumber":216,"author":{"gitId":"ZhangWenyue3325"},"content":"        LocalDateTime d;","lastModifiedDate":"2024-03-04"},{"lineNumber":217,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":218,"author":{"gitId":"ZhangWenyue3325"},"content":"            d \u003d Parser.parseTiming(sentence);","lastModifiedDate":"2024-03-04"},{"lineNumber":219,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":220,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":221,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printCorrectFormat(\"\");","lastModifiedDate":"2024-03-04"},{"lineNumber":222,"author":{"gitId":"ZhangWenyue3325"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":223,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":224,"author":{"gitId":"ZhangWenyue3325"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":225,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (task.getClass() \u003d\u003d Event.class \u0026\u0026 task.getTime().isBefore(d)) {","lastModifiedDate":"2024-03-04"},{"lineNumber":226,"author":{"gitId":"ZhangWenyue3325"},"content":"                inDuration.add(task);","lastModifiedDate":"2024-03-04"},{"lineNumber":227,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":228,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (task.getClass() \u003d\u003d Deadline.class \u0026\u0026 task.getTime().isBefore(d)) {","lastModifiedDate":"2024-03-04"},{"lineNumber":229,"author":{"gitId":"ZhangWenyue3325"},"content":"                inDuration.add(task);","lastModifiedDate":"2024-03-04"},{"lineNumber":230,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":231,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":232,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.printTasksWithinTime(inDuration);","lastModifiedDate":"2024-03-04"},{"lineNumber":233,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":234,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":235,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":236,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Print tasks that include the given single keyword.","lastModifiedDate":"2024-03-05"},{"lineNumber":237,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":238,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":239,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":240,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":241,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void findTask(TaskList tasks, String sentence) {","lastModifiedDate":"2024-03-04"},{"lineNumber":242,"author":{"gitId":"ZhangWenyue3325"},"content":"        String keyWord \u003d Parser.parseFind(sentence);","lastModifiedDate":"2024-03-04"},{"lineNumber":243,"author":{"gitId":"ZhangWenyue3325"},"content":"        TaskList tasksContainingKeyWord \u003d new TaskList();","lastModifiedDate":"2024-03-04"},{"lineNumber":244,"author":{"gitId":"ZhangWenyue3325"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":245,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (task.getTaskName().contains(keyWord)) {","lastModifiedDate":"2024-03-04"},{"lineNumber":246,"author":{"gitId":"ZhangWenyue3325"},"content":"                tasksContainingKeyWord.add(task);","lastModifiedDate":"2024-03-04"},{"lineNumber":247,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":248,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":249,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.printTasksWithKeyword(tasksContainingKeyWord);","lastModifiedDate":"2024-03-04"},{"lineNumber":250,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":251,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":252,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":253,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Execute commands based on the first word entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":254,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If the first word is not recognised, there will be InputNotRecognizedException.","lastModifiedDate":"2024-03-05"},{"lineNumber":255,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":256,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":257,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":258,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":259,"author":{"gitId":"ZhangWenyue3325"},"content":"        String message \u003d Ui.readCommand();","lastModifiedDate":"2024-03-03"},{"lineNumber":260,"author":{"gitId":"ZhangWenyue3325"},"content":"        String instruction \u003d Parser.parse(message);","lastModifiedDate":"2024-03-03"},{"lineNumber":261,"author":{"gitId":"ZhangWenyue3325"},"content":"        switch (instruction) {","lastModifiedDate":"2024-03-03"},{"lineNumber":262,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"bye\":","lastModifiedDate":"2024-03-03"},{"lineNumber":263,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.exit();","lastModifiedDate":"2024-03-03"},{"lineNumber":264,"author":{"gitId":"ZhangWenyue3325"},"content":"            isExit \u003d true;","lastModifiedDate":"2024-03-03"},{"lineNumber":265,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":266,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"list\":","lastModifiedDate":"2024-03-03"},{"lineNumber":267,"author":{"gitId":"ZhangWenyue3325"},"content":"            printTask(tasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":268,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":269,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":270,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"mark\":","lastModifiedDate":"2024-03-03"},{"lineNumber":271,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"unmark\":","lastModifiedDate":"2024-03-03"},{"lineNumber":272,"author":{"gitId":"ZhangWenyue3325"},"content":"            mark(tasks, message, false);","lastModifiedDate":"2024-03-03"},{"lineNumber":273,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":274,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":275,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-03"},{"lineNumber":276,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":277,"author":{"gitId":"ZhangWenyue3325"},"content":"                deleteTask(tasks, message);","lastModifiedDate":"2024-03-03"},{"lineNumber":278,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":279,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":280,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToDelete();","lastModifiedDate":"2024-03-03"},{"lineNumber":281,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":282,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":283,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":284,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"before\":","lastModifiedDate":"2024-03-05"},{"lineNumber":285,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-04"},{"lineNumber":286,"author":{"gitId":"ZhangWenyue3325"},"content":"                tasksBeforeTime(tasks, message);","lastModifiedDate":"2024-03-04"},{"lineNumber":287,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":288,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":289,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToFindTiming();","lastModifiedDate":"2024-03-04"},{"lineNumber":290,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":291,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":292,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-04"},{"lineNumber":293,"author":{"gitId":"ZhangWenyue3325"},"content":"        case \"find\":","lastModifiedDate":"2024-03-04"},{"lineNumber":294,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-04"},{"lineNumber":295,"author":{"gitId":"ZhangWenyue3325"},"content":"                findTask(tasks, message);","lastModifiedDate":"2024-03-04"},{"lineNumber":296,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":297,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":298,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFailToFindTasks();","lastModifiedDate":"2024-03-04"},{"lineNumber":299,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":300,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":301,"author":{"gitId":"ZhangWenyue3325"},"content":"            break;","lastModifiedDate":"2024-03-04"},{"lineNumber":302,"author":{"gitId":"ZhangWenyue3325"},"content":"        default:","lastModifiedDate":"2024-03-03"},{"lineNumber":303,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":304,"author":{"gitId":"ZhangWenyue3325"},"content":"                addTask(tasks, message, false);","lastModifiedDate":"2024-03-03"},{"lineNumber":305,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":306,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printError();","lastModifiedDate":"2024-03-03"},{"lineNumber":307,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printMissingDescription();","lastModifiedDate":"2024-03-03"},{"lineNumber":308,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (InputNotRecognizedException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":309,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printInstructionNotUnderstood();","lastModifiedDate":"2024-03-03"},{"lineNumber":310,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":311,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":312,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":313,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":314,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"ZhangWenyue3325":314}},{"path":"src/main/java/oley/commands/InputNotRecognizedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.commands;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents exceptions when the first word entered is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"public class InputNotRecognizedException extends Exception{","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ZhangWenyue3325":7}},{"path":"src/main/java/oley/commands/Oley.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.commands;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.TaskList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents the main body of the chatbot Oley, including initialising and reading in commands to be executed.","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Oley {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents task list that contains the existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static TaskList tasks;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Initialise Oley by printing greetings and loading all tasks from the data file to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void initialise() {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.printGreeting();","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"        String file \u003d \"./data/Oley.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"        Storage.load(tasks, file);","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Iterate to read in user\u0027s commands and execute them, until isExit equals to true.","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void run() {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"        Command instructions \u003d new Command(false);","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"        while (!instructions.isExit()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"            instructions.execute(tasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"        initialise();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"        run();","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ZhangWenyue3325":38}},{"path":"src/main/java/oley/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.commands;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents methods that are used to parse the instructions.","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":" * It deals with making sense of the user command, e.g. split the sentence into an array of String and return","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":" * its first element for the recognition of different types of commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Parser {","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the first word by splitting the sentence entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The first element in the array of strings entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static String parse(String sentence) {","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"        String[] markInstructions \u003d sentence.split(\" \");","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"        return markInstructions[0];","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the index of task to be deleted or marked or unmarked by splitting the sentence entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"     * The second element of the array of strings will be the index + 1, and it will be transferred to Integer type.","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The index of task to be deleted or marked or unmarked.","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static int parseDeleteOrMark(String sentence) {","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"        String[] parseInstructions \u003d sentence.split(\" \");","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"        return Integer.parseInt(parseInstructions[1]) - 1;","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the time the user want to search for by splitting the sentence entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"     * The second element of the array of strings will be the time.","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The time in \"yyyy-MM-dd-HHmm\" format.","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static LocalDateTime parseTiming(String sentence) {","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"        String[] parseInstructions \u003d sentence.split(\" \");","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"        return LocalDateTime.parse(parseInstructions[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the keyword that user want to search for by splitting the sentence entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"     * The second element of the array of strings will be the keyword.","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param sentence Sentence entered by the user as a command.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The keyword that user want to search for.","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static String parseFind(String sentence) {","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"        String[] parseInstructions \u003d sentence.split(\" \");","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"        return parseInstructions[1];","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"ZhangWenyue3325":58}},{"path":"src/main/java/oley/commands/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.commands;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.TaskList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.io.File;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents methods that are used to make changes to the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":" * It deals with writing to and deleting from data file, as well as load data file during initialisation.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Storage {","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Append a new task to the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param filePath Path to the file that contains the data.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param textToAppend Text that are adding to the end of the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @throws IOException If fail to write to the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void appendToFile (String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"        fw.close();","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Re-write the tasks in the task list after some changes, e.g. delete, to the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param filePath Path to the file that contains the data.","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @throws IOException If fail to change the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void changeFile (String filePath, TaskList tasks) throws IOException {","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"        fw.write(tasks.get(0).format() + System.lineSeparator());","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"        fw.close();","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"        for (int i \u003d 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"            appendToFile(filePath, tasks.get(i).format());","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Clear all data in the data file by creating a new file in the same path.","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param filePath Path to the file that contains the data.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @throws IOException If fail to clear the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void clearFile (String filePath) throws IOException {","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"        fw.close();","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Load tasks from the data file when initialising the chatbot.","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains existing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param file Path to the file that contains the data.","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void load(TaskList tasks, String file) {","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"        Scanner s;","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"            File f \u003d new File(file);","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printFileNotFound();","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"ZhangWenyue3325"},"content":"            Path folder \u003d Paths.get(\"./data/\");","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"            Path filePath \u003d Paths.get(file);","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"                Files.createDirectory(folder);","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"ZhangWenyue3325"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFileNotCreated();","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"ZhangWenyue3325"},"content":"            return;","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"ZhangWenyue3325"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"ZhangWenyue3325"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"ZhangWenyue3325"},"content":"            String isDone \u003d line.substring(0,1);","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"ZhangWenyue3325"},"content":"            String task \u003d line.substring(1);","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"ZhangWenyue3325"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"ZhangWenyue3325"},"content":"                Command.addTask(tasks, task, true);","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"ZhangWenyue3325"},"content":"            } catch (InputNotRecognizedException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"ZhangWenyue3325"},"content":"                Ui.printFileCorrupted();","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"ZhangWenyue3325"},"content":"            if (isDone.equals(\"1\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"ZhangWenyue3325"},"content":"                Command.mark(tasks, \"mark \" + tasks.size(), true);","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"ZhangWenyue3325"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"ZhangWenyue3325":98}},{"path":"src/main/java/oley/commands/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.commands;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.Task;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.tasks.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents methods that are used to communicate with users.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":" * It deals with interactions with users.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Ui {","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents a line of divider on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to divide between chatbot and user.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void lineBreaker() {","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\" \");","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    *~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*~~~~~*\");","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents greeting content of the chatbot on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to greet the user at initialisation stage.","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printGreeting() {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"        String logo \u003d \"  _____  __       \\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"                + \" /  _  \\\\|  | ____ ___  ___ \\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"                + \"|  | |  |  |/ ___ \\\\  \\\\/  /\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"                + \"|  |_|  |  |  ____/\\\\    /\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"                + \" \\\\_____/|__|\\\\_____|/   /\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"                + \"                  /___/\";","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"Greetings from\\n\" + logo);","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"        lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Hello, I\u0027m your cute and lovely friend Oley.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"        lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that target file does not exist.","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFileNotFound() {","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    OOPS, the file does not exist! I will now create one for you~ (*o*)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that data file is not successfully created.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFileNotCreated() {","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Sorry! I am unable to create file for you. (\u003e.\u003c)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that there are some errors in target file.","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFileCorrupted() {","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    OOPS, the file seems to be corrupted!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printError() {","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    OOPS, we have encountered an error!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents a warning message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to ask the user to re-enter the time in acceptable format.","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param string Type of time that needs to be re-entered.","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printCorrectFormat(String string) {","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (Objects.equals(string, \"from\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    Please re-enter the starting time of the event!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else if (Objects.equals(string, \"to\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    Please re-enter the ending time of the event!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else if (Objects.equals(string, \"by\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    Please re-enter the due time of the task!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    The accepted format of timing should be yyyy-MM-dd-HHmm.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    For example, 2024-06-07-2359.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints event and deadline that end before the required time.","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains tasks within the specified time.","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTasksWithinTime(TaskList tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Here are the tasks before the timing:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"ZhangWenyue3325"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    \" + task.toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints tasks that contain the keyword.","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param tasks Task list that contains tasks with the keyword.","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTasksWithKeyword(TaskList tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Here are the tasks containing the keyword:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"ZhangWenyue3325"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    \" + task.toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that due time is not recognised.","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printDeadlineNotSpecified() {","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    A specific deadline would be better for you to complete your task on time! (* ^ *)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    You may use /by to indicate the time.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that start or end time is not recognised.","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printEventNotSpecified() {","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    A specific timing of the event would be clearer! (* ^ *)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":129,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    You may use /from and /to to indicate the starting and ending time.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show unsuccessful writing to file.","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFailToWrite() {","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Write to file failed.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints the message of task being successfully added to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param taskName Name of task added.","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTaskAdded(Task taskName) {","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    \" + \"added: \" + taskName);","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints the size of task list after adding or deleting.","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param size Number of tasks in the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTaskNumber(int size) {","lastModifiedDate":"2024-03-03"},{"lineNumber":155,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (size \u003c\u003d 1) {","lastModifiedDate":"2024-03-03"},{"lineNumber":156,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    Now you have \" + size + \" task in the list.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":157,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":158,"author":{"gitId":"ZhangWenyue3325"},"content":"            System.out.println(\"    Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":159,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":160,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":161,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints the message of task being successfully deleted from the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":165,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param taskToBeDeleted Task to be deleted.","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":167,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTaskDeleted(String taskToBeDeleted) {","lastModifiedDate":"2024-03-03"},{"lineNumber":168,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Sure! (0 u 0) I have removed this task:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    \" + taskToBeDeleted);","lastModifiedDate":"2024-03-03"},{"lineNumber":170,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":172,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show clear file unsuccessfully.","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFailToClear() {","lastModifiedDate":"2024-03-03"},{"lineNumber":177,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Clear file failed.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":178,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":179,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":180,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":181,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents exiting content of the chatbot on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":182,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to say goodbye to the user when user typed \"bye\" command.","lastModifiedDate":"2024-03-05"},{"lineNumber":183,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":184,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void exit() {","lastModifiedDate":"2024-03-03"},{"lineNumber":185,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Bye~ Feel free to talk to me anytime. I will always be here waiting for you. (0~0)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":187,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":188,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTasks() {","lastModifiedDate":"2024-03-03"},{"lineNumber":189,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":190,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":191,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":192,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":193,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints the task on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":194,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":195,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param taskNumber Index of the task in the task list","lastModifiedDate":"2024-03-05"},{"lineNumber":196,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param taskName Task to be printed in its toString() format.","lastModifiedDate":"2024-03-05"},{"lineNumber":197,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":198,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printTask(int taskNumber, String taskName) {","lastModifiedDate":"2024-03-03"},{"lineNumber":199,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    \" + taskNumber + \".\" + taskName);","lastModifiedDate":"2024-03-03"},{"lineNumber":200,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":201,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":202,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":203,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":204,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the number entered is greater than the size of the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":205,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":206,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param taskNumber Index of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":207,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":208,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printMarkExceedRange(int taskNumber) {","lastModifiedDate":"2024-03-03"},{"lineNumber":209,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Task \" + taskNumber + \" does not exist!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":210,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":211,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":212,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":213,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents a warning message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":214,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the task user want to mark is already marked.","lastModifiedDate":"2024-03-05"},{"lineNumber":215,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":216,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printMarkedAlready() {","lastModifiedDate":"2024-03-03"},{"lineNumber":217,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    This task has been marked as done already!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":218,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":219,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":220,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":221,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints the message of task being successfully marked in the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":222,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":223,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param task Name of task marked.","lastModifiedDate":"2024-03-05"},{"lineNumber":224,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":225,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printMarked(Task task) {","lastModifiedDate":"2024-03-03"},{"lineNumber":226,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":227,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2024-03-03"},{"lineNumber":228,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":229,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":230,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":231,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents a warning message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":232,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the task user want to unmark is not yet marked.","lastModifiedDate":"2024-03-05"},{"lineNumber":233,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":234,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printUnmarkFailed() {","lastModifiedDate":"2024-03-03"},{"lineNumber":235,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    This task hasn\u0027t been done yet!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":236,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":237,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":238,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":239,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Prints the message of task being successfully unmarked in the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":240,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":241,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param task Name of task unmarked.","lastModifiedDate":"2024-03-05"},{"lineNumber":242,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":243,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printUnmarked(Task task) {","lastModifiedDate":"2024-03-03"},{"lineNumber":244,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Sure~ I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":245,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2024-03-03"},{"lineNumber":246,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":247,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":248,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":249,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":250,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show delete task unsuccessfully.","lastModifiedDate":"2024-03-05"},{"lineNumber":251,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":252,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFailToDelete() {","lastModifiedDate":"2024-03-03"},{"lineNumber":253,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    The task you are trying to delete does not exist! (\u003e.\u003c)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":254,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":255,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":256,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":257,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":258,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that a specific time is not provided after \"time\" command.","lastModifiedDate":"2024-03-05"},{"lineNumber":259,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":260,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFailToFindTiming() {","lastModifiedDate":"2024-03-04"},{"lineNumber":261,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Please provide a specific timing! (\u003e.\u003c)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":262,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":263,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":264,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":265,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":266,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that a keyword is not provided after \"find\" command.","lastModifiedDate":"2024-03-05"},{"lineNumber":267,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":268,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printFailToFindTasks() {","lastModifiedDate":"2024-03-04"},{"lineNumber":269,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Please provide one keyword to search! (\u003e.\u003c)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":270,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":271,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":272,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":273,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":274,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the description of task is missing.","lastModifiedDate":"2024-03-05"},{"lineNumber":275,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":276,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printMissingDescription() {","lastModifiedDate":"2024-03-03"},{"lineNumber":277,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    The description of a task cannot be empty! (\u003e.\u003c)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":278,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":279,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":280,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":281,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":282,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the command entered by user is invalid, cannot be recognized.","lastModifiedDate":"2024-03-05"},{"lineNumber":283,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":284,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printInstructionNotUnderstood() {","lastModifiedDate":"2024-03-03"},{"lineNumber":285,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    So sorry, I do not understand the commands. I will try to improve!! (o ^ o)\");","lastModifiedDate":"2024-03-04"},{"lineNumber":286,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    Meanwhile, you can use todo, deadline or event to indicate the type of tasks.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":287,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":288,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":289,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":290,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Reads commands from user input.","lastModifiedDate":"2024-03-05"},{"lineNumber":291,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":292,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return New instructions entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":293,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":294,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static String readCommand() {","lastModifiedDate":"2024-03-03"},{"lineNumber":295,"author":{"gitId":"ZhangWenyue3325"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-03"},{"lineNumber":296,"author":{"gitId":"ZhangWenyue3325"},"content":"        String message;","lastModifiedDate":"2024-03-03"},{"lineNumber":297,"author":{"gitId":"ZhangWenyue3325"},"content":"        message \u003d in.nextLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":298,"author":{"gitId":"ZhangWenyue3325"},"content":"        Ui.lineBreaker();","lastModifiedDate":"2024-03-03"},{"lineNumber":299,"author":{"gitId":"ZhangWenyue3325"},"content":"        return message;","lastModifiedDate":"2024-03-03"},{"lineNumber":300,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":301,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":302,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":303,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents a warning message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":304,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the due time being set for the deadline is before the current time.","lastModifiedDate":"2024-03-05"},{"lineNumber":305,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":306,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printDeadlinePassed() {","lastModifiedDate":"2024-03-04"},{"lineNumber":307,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    OOPS! The deadline is passed already. Please change it to sometime after now.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":308,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":309,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":310,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":311,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents a warning message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":312,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the end time of the event is before the start time.","lastModifiedDate":"2024-03-05"},{"lineNumber":313,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":314,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printToBeforeFrom() {","lastModifiedDate":"2024-03-04"},{"lineNumber":315,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    OOPS! The end time is before the starting time. Please change it to sometime after the starting time.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":316,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":317,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":318,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":319,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Represents an error message on the screen.","lastModifiedDate":"2024-03-05"},{"lineNumber":320,"author":{"gitId":"ZhangWenyue3325"},"content":"     * It is used to show that the index of task is missing.","lastModifiedDate":"2024-03-05"},{"lineNumber":321,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":322,"author":{"gitId":"ZhangWenyue3325"},"content":"    public static void printMissingNumber() {","lastModifiedDate":"2024-03-04"},{"lineNumber":323,"author":{"gitId":"ZhangWenyue3325"},"content":"        System.out.println(\"    The index of task should be provided! (\u003e.\u003c)\");","lastModifiedDate":"2024-03-05"},{"lineNumber":324,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":325,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"ZhangWenyue3325":325}},{"path":"src/main/java/oley/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.commands.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents a task of Deadline type. A Deadline object corresponds to a task with its name, due time, and state of","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":" * done being specified.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":" * It is a subclass of Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Constructor of Deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Identifies due time in string type through index of \"/by\".","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param description The name and time of the deadline entered by user","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @throws TimingNotFoundException If the time of due is not specified.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"    public Deadline(String description) throws TimingNotFoundException {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"            throw new TimingNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"        int dividerIndex \u003d description.indexOf(\"/\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"        String taskName \u003d description.substring(0, dividerIndex - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"        String byBeforeFormatting \u003d description.substring(dividerIndex + 4);","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"        setBy(byBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Set the LocalDateTime object \u0027by\u0027 from its string type.","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If the time is not provided in the correct format, or the due time has already passed, user will be asked to","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"     * enter the due time again until the correct time is read in.","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param byBeforeFormatting The due time under String type.","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void setBy(String byBeforeFormatting) {","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"            this.by \u003d LocalDateTime.parse(byBeforeFormatting, DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printCorrectFormat(\"by\");","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"            byBeforeFormatting \u003d Ui.readCommand();","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"            setBy(byBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (by.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printDeadlinePassed();","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"            byBeforeFormatting \u003d Ui.readCommand();","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"            setBy(byBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Override the toString method of its parent class Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the type, due time, state and name of task being printed and shown under a specified format","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"     * to the users.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. [D][#] Sleep (by: 23:00 OCT 17 2023)","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The type, due time, done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"ZhangWenyue3325"},"content":"        return by;","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Override the format method of its parent class Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the type, due time, state and name of task being recorded under a specified format in the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. 1deadline /by 2023-10-17-2300","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The type, due time, done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String format() {","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (checkDone()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"1deadline \" + getTaskName() + \" /by \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"0deadline \" + getTaskName() + \" /by \" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ZhangWenyue3325":95}},{"path":"src/main/java/oley/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"import oley.commands.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents a task of Event type. An Event object corresponds to a task with its name, start time, end time, and","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":" * state of done being specified.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":" * It is a subclass of Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Constructor of Event.","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Identifies from and to in string type through index of \"/from\" and \"/to\".","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param description The name and time of the event entered by user","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @throws TimingNotFoundException If the time of start or end is not specified.","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"    public Event (String description) throws TimingNotFoundException {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"            throw new TimingNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"        int fromIndex \u003d description.indexOf(\"/\");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"        String time \u003d description.substring(fromIndex + 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"        int toIndex \u003d time.indexOf(\"/\") + fromIndex + 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"        String taskName \u003d description.substring(0, fromIndex - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"        String fromBeforeFormatting \u003d description.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"        String toBeforeFormatting \u003d description.substring(toIndex + 4);","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"        setFrom(fromBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"        setTo(toBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Set the LocalDateTime object \u0027from\u0027 from its string type.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If the time is not provided in the correct format, user will be asked to enter the start time again","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"     * until the correct format is read in.","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param fromBeforeFormatting The start time under String type.","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void setFrom(String fromBeforeFormatting) {","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"            this.from \u003d LocalDateTime.parse(fromBeforeFormatting, DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printCorrectFormat(\"from\");","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"            fromBeforeFormatting \u003d Ui.readCommand();","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"            setFrom(fromBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Set the LocalDateTime object \u0027to\u0027 from its string type.","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"     * If the time is not provided in the correct format, or end time is before start time, user will be asked to","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"     * enter the end time again until the correct time is read in.","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param toBeforeFormatting The end time under String type.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void setTo(String toBeforeFormatting) {","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"            this.to \u003d LocalDateTime.parse(toBeforeFormatting, DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printCorrectFormat(\"to\");","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhangWenyue3325"},"content":"            toBeforeFormatting \u003d Ui.readCommand();","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"            setTo(toBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printError();","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.printToBeforeFrom();","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"ZhangWenyue3325"},"content":"            Ui.lineBreaker();","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"ZhangWenyue3325"},"content":"            toBeforeFormatting \u003d Ui.readCommand();","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"ZhangWenyue3325"},"content":"            setTo(toBeforeFormatting);","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"ZhangWenyue3325"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"ZhangWenyue3325"},"content":"        return to;","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Override the toString method of its parent class Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the type, start time, end time, state and name of task being printed and shown under a specified format","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"ZhangWenyue3325"},"content":"     * to the users.","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. [E][ ] Sleep (from: 23:59 OCT 16 2023 to: 08:00 OCT 17 2023)","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The type, start time, end time, done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"ZhangWenyue3325"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Override the format method of its parent class Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the type, start time, end time, state and name of task being recorded under a specified format in the","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"ZhangWenyue3325"},"content":"     * data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. 0event Sleep /from 2023-10-16-2359 /to 2023-10-17-0800","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The type, start time, end time, done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String format() {","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (checkDone()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"1event \" + getTaskName() + \" /from \" + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\")) + \" /to \" + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"0event \" + getTaskName() + \" /from \" + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\")) + \" /to \" + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HHmm\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ZhangWenyue3325":119}},{"path":"src/main/java/oley/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents a task regardless of the type. A Task object corresponds to a task with its name and state of done","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":" * being specified.","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"    private String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Constructor of Task, initialising isDone to false, and setting the taskName.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"    public boolean checkDone() {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"        return isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"        return taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ZhangWenyue3325"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The year, month, date and time of now.","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"ZhangWenyue3325"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"ZhangWenyue3325"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the state and name of task being printed and shown under a specified format to the users.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. [#] Sleep","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"ZhangWenyue3325"},"content":"            return (\"[#] \" + taskName);","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ZhangWenyue3325"},"content":"            return (\"[ ] \" + taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the state and name of task being recorded under a specified format in the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. 1task Sleep","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String format() {","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"1task \" + taskName;","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"0task \" + taskName;","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ZhangWenyue3325":77}},{"path":"src/main/java/oley/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.tasks;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"ZhangWenyue3325":10}},{"path":"src/main/java/oley/tasks/TimingNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents exceptions when the time for deadline and event are not provided.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":"public class TimingNotFoundException extends Exception{","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ZhangWenyue3325":7}},{"path":"src/main/java/oley/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhangWenyue3325"},"content":"package oley.tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhangWenyue3325"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"ZhangWenyue3325"},"content":" * Represents a task of Todo type. A Todo object corresponds to a task with its name, and state of done being specified.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"ZhangWenyue3325"},"content":" * It is a subclass of Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ZhangWenyue3325"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ZhangWenyue3325"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ZhangWenyue3325"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ZhangWenyue3325"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Override the toString method of its parent class Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the type, state and name of task being printed and shown under a specified format to the users.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. [T][#] Sleep","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The type, done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ZhangWenyue3325"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ZhangWenyue3325"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"ZhangWenyue3325"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Override the format method of its parent class Task.","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ZhangWenyue3325"},"content":"     * Returns the type, state and name of task being recorded under a specified format in the data file.","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ZhangWenyue3325"},"content":"     * e.g. 1todo Sleep","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ZhangWenyue3325"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"ZhangWenyue3325"},"content":"     * @return The type, done state and name of task under a specified format.","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"ZhangWenyue3325"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"ZhangWenyue3325"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"ZhangWenyue3325"},"content":"    public String format() {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"ZhangWenyue3325"},"content":"        if (checkDone()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"1todo \" + getTaskName();","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"ZhangWenyue3325"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"ZhangWenyue3325"},"content":"            return \"0todo \" + getTaskName();","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"ZhangWenyue3325"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"ZhangWenyue3325"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"ZhangWenyue3325"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ZhangWenyue3325":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ZhangWenyue3325"},"content":"java -classpath ..\\bin Oley \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhangWenyue3325":1,"-":20}}]
