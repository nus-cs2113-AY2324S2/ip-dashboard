[{"path":"src/main/java/JingHao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"import command.Command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.InvalidDeadlineCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.InvalidEventCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.InvalidTodoCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Deadline;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Todo;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":" * Represents the JingHao CLI chatbot application.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":" * JingHao allows users to track and manage their tasks, as well as to store tasks in data storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"public class JingHao {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    protected static Ui ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    protected static TaskList taskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    protected final Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a BossMan instance.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     * Initializes the TaskList and Storage objects.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    public JingHao(String filePath) {","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"            taskList \u003d this.storage.readFile();","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        } catch (JingHaoExceptions e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"     * Starts the JingHao chatbot application.","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"     * Displays a greeting message to the user, reads user input,","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"     * execute user commands, and saves tasks to file.","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"    public void start() {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        ui.greetUser();","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"            try {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"                ui.promptUser();","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"                c.execute(taskList,ui,storage);","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"                storage.updateDisk(taskList);","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"            } catch (JingHaoExceptions e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"                ui.printErrorMessage(\"Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"JingHaoooo":70}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"public class Main {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"     * The main method for starting the JingHao chatbot","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"     * Creates a new JingHao object and runs the JingHao chatbot","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"     * @param args Command-line arguments","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"        JingHao chatBot \u003d new JingHao(\"data/tasklist.txt\");","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"        chatBot.start();","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JingHaoooo":13}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents a command to exit the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class ByeCommand implements Command{","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the bye command by displaying the farewell message.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        ui.farewell();","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns true since this is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":33}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" * Represents a general command of the Duke chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"public interface Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the respective command.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If there is an error in the user\u0027s input","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions, IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"     * @return true if it is an exit command, otherwise false.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":32}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Deadline;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to add a deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private final String userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a DeadlineCommand with the user\u0027s input.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The description of the task from the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    public DeadlineCommand(String description) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"        userInput \u003d description;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by creating a Deadline object and adding the deadline task to the existing task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     * Displays deadline task to be added and the corresponding status on the screen after executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If user input does not satisfy the required format.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        boolean isFromFile \u003d false;","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        String[] deadlineDescription \u003d userInput.split(\"/by\");","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        if(deadlineDescription.length !\u003d 2) {","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            String invalidDeadline \u003d \"Use: deadline (Deadline description) + /by + (YYYY-MM-DD)\";","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidDeadline);","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        String description \u003d deadlineDescription[0].trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        String date \u003d deadlineDescription[1].trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        Task newDeadline \u003d new Deadline(description, date, isFromFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + newDeadline);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"        ui.printTotalTask(taskList.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":59}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to delete a specific task from the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    private static int index;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * Construct a DeleteCommand with index specified by the user, relative to the index in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The index provided by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the index provided by the user is not a number.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    public DeleteCommand(String description) throws JingHaoExceptions{","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"            index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Invalid index\";","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by removing the task from the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * Displays task to be deleted and the corresponding status on the screen after executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the index is not within the appropriate range of the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        if(index \u003c 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Selected index is not within the size. PLease input a valid index.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        ui.printWithoutDivider(\"Noted. I have removed this task:\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"                taskList.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"        ui.printTotalTask(taskList.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":54}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Event;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to add an Event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private final String userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a EventCommand with the user\u0027s input.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The description of the task from the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    public EventCommand(String description) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"        userInput \u003d description;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by creating an Event object and adding the event task to the existing task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     * Displays event task to be added and the corresponding status on the screen after executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If user input does not satisfy the required format.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        boolean isFromFile \u003d false;","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        String[] eventDescriptions \u003d userInput.split(\"/from\", 2);","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        String invalidEvent \u003d\"Invalid event Command Format!\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"                \"Use: event (Event description) + /from + (YYYY-MM-DD) + /to + (YYYY-MM-DD) \\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        if(eventDescriptions.length !\u003d 2 || eventDescriptions[0].isBlank() || eventDescriptions[1].isBlank()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidEvent);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        String description \u003d eventDescriptions[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        String[] eventTime \u003d eventDescriptions[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        if(eventTime.length !\u003d 2 || eventTime[0].isBlank() || eventTime[1].isBlank()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidEvent);","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"        String fromDate \u003d eventTime[0].trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        String toDate \u003d eventTime[1].trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"        Task newEvent \u003d new Event(description,fromDate,toDate, isFromFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" +newEvent);","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        ui.printTotalTask(taskList.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":66}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    protected String key;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public FindCommand(String input) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"        if(input.isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"            String invalidKey \u003d \"Sorry, the keyword to find cannot be empty\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"                    \"Please use the valid command: find (keyword)\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"                    \"For example: find book\";","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidKey);","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.key \u003d input.toLowerCase();","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        TaskList taskMatch \u003d new TaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        for(Task currentTask: taskList) {","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"            if(currentTask.toString().toLowerCase().contains(key)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"                taskMatch.add(currentTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        if(taskMatch.isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"            String emptyMessage \u003d \"There are no matching task found.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"            ui.printMessage(emptyMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"            ui.printWithoutDivider(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"            for (Task item: taskMatch) {","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"                System.out.println( i + \".\" + item );","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"                i++;","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"            ui.printDivider();","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":48}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" * Represents a command to list all tasks in the list of JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by iterating through the task list and displaying each task.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"            ui.printMessage(\"You have no task.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"            ui.printWithoutDivider(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"            for (Task item: taskList) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"                System.out.println( i + \".\" + item );","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"                i++;","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"            ui.printDivider();","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":44}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to mark a specific task in the list based on the user\u0027s input","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    private final int index;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a MarkCommand with index specified by the user, relative to the index in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The index provided by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the index provided by the user is not a number.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    public MarkCommand(String description) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"            index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Invalid index\";","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by marking the task as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * Displays the task and the task status on the screen after executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the index is not within the appropriate range of the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        if(index \u003c 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Selected index is not within the size. PLease input a valid index.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        taskList.get(index).check();","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done: \\n\" + taskList.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":57}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Todo;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to add a todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private final String userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a TodoCommand with the user\u0027s input.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The description of the task from the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        userInput \u003d description;","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by creating a todo object and adding the todo task to the existing task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * Displays todo task to be added and the corresponding status on the screen after executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the description of the task is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"        if(userInput.isBlank()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"            String invalidTodoInput \u003d \"Description of Todo cannot be empty.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidTodoInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        Task newTodo \u003d new Todo(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        taskList.add(newTodo);","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + newTodo);","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        ui.printTotalTask(taskList.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":54}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to unmark a specific task in the list based on the user\u0027s input","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public final int index;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a UnmarkCommand with index specified by the user, relative to the index in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The index provided by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the index provided by the user is not a number.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    public UnmarkCommand(String description) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"            index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Invalid index\";","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by unmarking the task as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * Displays the task and the task status on the screen after executing the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The list of task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * @param ui The user interface of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * @param storage The file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the index is not within the appropriate range of the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        if(index \u003c 0 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Selected index is not within the size. PLease input a valid index.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        taskList.get(index).uncheck();","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet: \\n\" + taskList.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"     /**","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":57}},{"path":"src/main/java/commandexceptions/InvalidDeadlineCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commandexceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class InvalidDeadlineCommandException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    //no other code needed","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"JingHaoooo":5}},{"path":"src/main/java/commandexceptions/InvalidEventCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commandexceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class InvalidEventCommandException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    //no other code needed","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"JingHaoooo":5}},{"path":"src/main/java/commandexceptions/InvalidTodoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commandexceptions;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class InvalidTodoCommandException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    //no other code needed","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"JingHaoooo":5}},{"path":"src/main/java/commandexceptions/JingHaoExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commandexceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class JingHaoExceptions extends Exception {","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"    public JingHaoExceptions(String message) {","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"JingHaoooo":8}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package parser;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import command.Command;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import command.FindCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import command.TodoCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import command.EventCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import command.ListCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"import command.DeleteCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"import command.ByeCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":" * Parser class determines the type of command based on user\u0027s input and","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":" * maps it to the corresponding command with the required task descriptions","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":" * given by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"public class Parser {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     * Determines the command based on user input and returns the corresponding command object.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @param userInput the input string provided by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * @return Type of command object to be executed.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the type of command is not part of the list of commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    public static Command parse(String userInput) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        String command \u003d words[0].toLowerCase();","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        String description \u003d (words.length \u003d\u003d 2) ? words[1] : \"\";","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"        switch (command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"        case \"list\":","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"            return new MarkCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"            return new UnmarkCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"            return new DeadlineCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        case \"event\":","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"            return new EventCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"            return new DeleteCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"        case \"find\":","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"            return new FindCommand(description);","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        default:","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(\"Unknown command encountered! Please try again.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":58}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Todo;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"import java.io.File;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":" * Represents the file storage of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":" * Responsible for saving and loading of the task data to and fro the text file.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"public class Storage {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    private static String filePath;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a new Storage object with the specified filepath.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     * @param file The filepath of the saved text file containing the tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        filePath \u003d file;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * Loads the task list from the text file and returns the TaskList.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * @return The taskList with the loaded tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If there is an error loading the tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    public TaskList readFile() throws JingHaoExceptions, IOException{","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        TaskList currentList \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        boolean isFromFile \u003d true;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"                String currentLine \u003d s.nextLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"                String[] informations \u003d currentLine.split(\",\");","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"                String taskType \u003d informations[0];","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"                case \"T\":","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"                    Todo newTodo \u003d new Todo(informations[2]);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"                    updateCheck(newTodo, informations[1], currentList);","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"                case \"D\":","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"                    String date \u003d informations[3].replace(\"T\", \" \").replace(\":\",\"\");","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"                    Deadline newDeadline \u003d new Deadline(informations[2], date, isFromFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"                    updateCheck(newDeadline,informations[1], currentList);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"                case \"E\":","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"                    String start \u003d informations[3].replace(\"T\", \" \").replace(\":\",\"\");","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"                    String end \u003d informations[4].replace(\"T\", \" \").replace(\":\",\"\");","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"                    Event newEvent \u003d new Event(informations[2], start, end, isFromFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"                    updateCheck(newEvent, informations[1], currentList);","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"                default:","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"                    throw new JingHaoExceptions(\"~~~~~~~~~~~~~~~~Error!! Corrupted datafile~~~~~~~~~~~~~~~~~~\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"                            \"\\n             Deleting corrupted data file :(\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"        return currentList;","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"     * Updates the status of the task based on the loaded data before adding it to the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"     * @param task The type of task (Todo/Deadline/Event).","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"     * @param information The details of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"     * @param list The taskList containing the loaded tasks from text file.","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"    public void updateCheck(Task task, String information, TaskList list) {","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"        if(information.equalsIgnoreCase(\"TRUE\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"            task.check();","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"        list.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"     * Updates the list of tasks to the text file.","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"     * @param taskList The TaskList containing the tasks to be saved.","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"JingHaoooo"},"content":"    public void updateDisk(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"JingHaoooo"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"JingHaoooo"},"content":"        for (Task item: taskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"JingHaoooo"},"content":"            fw.write(item.toDiskFormat());","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"JingHaoooo"},"content":"        fw.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"JingHaoooo":106}},{"path":"src/main/java/tasktype/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package tasktype;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" * Represents the Deadline task of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" * Deadline class is a subclass of task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private final static String ICON_TYPE \u003d \"[D]\";","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a deadline object with the specific description and deadline date.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The description of the deadline task from the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * @param by The deadline date for the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * @param isfromFile Whether the construction request is from data file.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If user input does not satisfy the required format.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    public Deadline(String description, String by, boolean isfromFile) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        this.date \u003d convertTime(by, isfromFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the string that the user input as the time into a valid LocalDateTime variable.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     * @param by The deadline date for the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * @param isFromFile Whether the construction request is from data file.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * @return The input deadline from the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If there is an error in the input date.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"    private LocalDateTime convertTime(String by, boolean isFromFile) throws JingHaoExceptions{","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        LocalDateTime inputDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"            int ISO_Length \u003d 10;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"            if (by.length() \u003d\u003d ISO_Length) {","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"                by +\u003d \" 2359\";","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"            inputDate \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"            if (!isFromFile \u0026\u0026 inputDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"                String deadlineOverMessage \u003d \"Hold on...\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"                        \"The deadline stated is already over\";","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"                throw new JingHaoExceptions(deadlineOverMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"            String incorrectFormat \u003d \"Wrong date format :(\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"                    \"Use the command: (Task description) + /by + (YYYY-MM-DD) or (YYYY-MM-DD HHmm)\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"                    \"Example: deadline Return book /by 2024-02-25 2300\";","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(incorrectFormat);","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"        return inputDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the deadline task to a specific format to display on the screen.","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"     * @return A formatted string containing the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"    public String toString(){","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"        return ICON_TYPE + super.toString() + \" (By: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the Deadline task to the specific format for saving to the text file.","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"     * @return A formatted string containing the Deadline task for saving.","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"        return \"D,\" + (this.isDone ? \"TRUE,\" : \"FALSE,\")","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"                + description + \",\" + date + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JingHaoooo":80}},{"path":"src/main/java/tasktype/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package tasktype;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commandexceptions.JingHaoExceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" * Represents the Event task of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" * Event class is a subclass of task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private final static String ICON_TYPE \u003d \"[E]\";","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs an Event object with the specific description, start and end date.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * @param fromDate The starting date and time of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * @param toDate The ending date and time of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     * @param isFromFile Whether the construction request is from data file.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If user input does not satisfy the required format.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    public Event(String description, String fromDate, String toDate, boolean isFromFile) throws JingHaoExceptions{","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        LocalDateTime begin \u003d convertTime(fromDate);","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        LocalDateTime end \u003d convertTime(toDate);","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        verifyTime(begin, end, isFromFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the string that the user input as the time into a valid LocalDateTime variable.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     * @param date The input date and time from the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return The time in the required format.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If there is an error in the input date.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    private LocalDateTime convertTime(String date) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"            int ISO_Length \u003d 10;","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"            if (date.length() \u003d\u003d ISO_Length) {","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"                date +\u003d \" 2359\";","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"            String incorrectFormat \u003d \"Wrong date format :(\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"                    \"Use the command: (Task description) + /date + (YYYY-MM-DD) or (YYYY-MM-DD HHmm)\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"                    \"Example: event Return book /from 2024-02-25 2300 /to 2024-02-29 1800\";","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(incorrectFormat);","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"     * Checks if the input dates are valid before storing the date and time.","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"     * @param begin The starting date and time of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"     * @param end The ending date and time of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"     * @param isFromFile Whether the construction request is from data file.","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"     * @throws JingHaoExceptions If the end date is earlier than the starting date.","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"    private void verifyTime(LocalDateTime begin, LocalDateTime end, boolean isFromFile) throws JingHaoExceptions {","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"        if(!isFromFile \u0026\u0026 begin.isAfter(end)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"            String invalidBeginAndEndTime \u003d \"Hmm... start date seems to be after end date\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"                    \"Please make sure the input dates are correct\";","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"            throw new JingHaoExceptions(invalidBeginAndEndTime);","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"        this.startDate \u003d begin;","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the Event task to a specific format to display on the screen.","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"     * @return A formatted string containing the Event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"        return ICON_TYPE + super.toString()","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"                + \"(From: \" + startDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\")) + \" To: \"+","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"                endDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the Event task to the specific format for saving to the text file.","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"     * @return A formatted string containing the Event task for saving.","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"        return \"E,\" + (this.isDone ? \"TRUE,\" : \"FALSE,\") + description + \",\"","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"                + startDate + \",\" + endDate + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JingHaoooo":97}},{"path":"src/main/java/tasktype/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package tasktype;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":" * Represents the general Task of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":" * It provides common functionality and properties for different types of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a Task object with a given description and the status of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    public void check(){","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"     * Unmark the task as incomplete.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    public void uncheck(){","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * Restructure the task to the specific format to display on the screen.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return The formatted string containing the details of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        String statusIcon \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        return \"[\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"    public abstract String toDiskFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JingHaoooo":47}},{"path":"src/main/java/tasktype/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package tasktype;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":" * Represents the lists of tasks of the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":" * The TaskList contains all the tasks managed by the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"JingHaoooo":10}},{"path":"src/main/java/tasktype/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package tasktype;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":" * Represents the todo task in the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":" * Todo class is a subclass of task.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"    private final static String ICON_TYPE \u003d \"[T]\";","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a new Todo object with the specified description.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    public Todo(String description){","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the Todo task to a specific format to display on the screen.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * @return A formatted string containing the Todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    public String toString(){","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        return ICON_TYPE + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"     * Converts the Todo task to a specific format to save in the text file.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * @return The formatted string representing the todo task for saving.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"        return \"T,\" + (this.isDone ? \"TRUE,\" : \"FALSE,\") + description + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JingHaoooo":37}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import tasktype.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the user interface for the JingHao chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" * Responsible for taking in user input, and displaying messages.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"public class Ui {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    private static final String LINE_SEP \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    protected Scanner sc;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a new Ui object and initialises the Scanner to take in user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    public Ui() {","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     * Greets the user upon starting the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    public void greetUser() {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(LINE_SEP + \"\\nHello! I\u0027m JingHao\" );","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(\"What can I do for you?\\n\" + LINE_SEP);","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     * Reads in user\u0027s input using the Scanner.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"     * Displays the exit message upon exitting the application","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    public void farewell() {","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(LINE_SEP);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"     * Display the prompt for user\u0027s input.","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"    public void promptUser() {","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        System.out.print(\"Input: \");","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"     * Display the message followed by a divider.","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(LINE_SEP);","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"     * Display a divider","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"    public void printDivider() {","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(LINE_SEP);","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"     * Display the content without a divider.","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"     * @param input The content to be printed out.","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"    public void printWithoutDivider(String input) {","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(input);","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"     * Display the error message","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"     * @param error The error message to be printed.","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"    public void printErrorMessage(String error) {","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(error);","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(LINE_SEP);","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"     * Displays the total number of task in the list of the chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"     * @param total The total number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"    public void printTotalTask(int total){","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(\"Now you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"        System.out.println(LINE_SEP);","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"JingHaoooo":98}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"todo borrow book","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"deadline return book /by sunday","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"mark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"mark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"mark 3","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"unmark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"unmark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"unmark 3","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"JingHaoooo":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JingHaoooo":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JingHaoooo":2,"-":36}}]
