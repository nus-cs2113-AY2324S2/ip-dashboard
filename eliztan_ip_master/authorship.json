[{"path":"data/miku.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"[T][ ]  keke","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"eliztan":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"# MIKU CHATBOT","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"Miku is a chatbot who can help you keep track of all your upcoming tasks!","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"### Interface example","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"______________________","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"Here are your list items!","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"1. [T][X]  CS2113 homework","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"2. [E][ ]  CS2113 lecture (from: 2pm to: 4pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"3. [D][X]  CS2113 iP (by: 3rd Jan) ","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"4. [T][X]  Cook dinner","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"5. [D][ ]  Find internship (by: 20th Jan)","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"______________________","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"## Usage","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"### `todo` - adds a new todo task to your list","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"Add a new task todo to your list. This task does not have any time constraints.","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"Format: `time [NAME]`","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"`todo CS2113 homework`","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"[T][ ]  CS2113 homework","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"Now you have 1 tasks in the list!","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"### `event` - adds a new event task to your list","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"Add a new task event to your list. The event has two time parameters of \"/from\" and \"/to\", ","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"which are when the event starts and ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"Format: `event [NAME] /from [TIME] /to [TIME]`","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"eliztan"},"content":"`event CS2113 lecture /from 2pm /to 4pm`","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"eliztan"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"eliztan"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"eliztan"},"content":"[E][ ]  CS2113 lecture (from: 2pm to: 4pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"eliztan"},"content":"Now you have 2 tasks in the list!","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"eliztan"},"content":"### ","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"eliztan"},"content":"### `deadline` - adds a new deadline task to your list","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"eliztan"},"content":"Add a new task deadline to your list. The deadline has the time parameter of \"/by\", which is when the deadline is due by.","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"eliztan"},"content":"Format: `deadline [NAME] /by [TIME]`","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"eliztan"},"content":"`deadline CS2113 iP /by 3rd Jan`","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"eliztan"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"eliztan"},"content":"[D][ ]  CS2113 iP (by: 3rd Jan)","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"eliztan"},"content":"Now you have 3 tasks in the list!","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"eliztan"},"content":"### `mark` - marks a task as done","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"eliztan"},"content":"Marks a task as complete in your list. The index is the index of the task you want to mark.","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"eliztan"},"content":"It must be positive and exists in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"eliztan"},"content":"Format: `mark [INDEX]`","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"eliztan"},"content":"`mark 1`","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"eliztan"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"eliztan"},"content":"Good job~! I\u0027ve marked it as done","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"eliztan"},"content":"[X]  CS2113 homework","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"eliztan"},"content":"### `unmark` - unmarks a task from its done status","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"eliztan"},"content":"Unmarks a task from being complete in your list. The index is the index of the task you want to unmark.","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"eliztan"},"content":"It must be positive and exists in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"eliztan"},"content":"Format: `unmark [INDEX]`","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"eliztan"},"content":"`unmark 2`","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"eliztan"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"eliztan"},"content":"Aww... I\u0027ve marked it as undone.","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"eliztan"},"content":"[ ]  CS2113 lecture ","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"eliztan"},"content":"### `list` - lists all the tasks you currently have","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"eliztan"},"content":"The list function will display all your current upcoming tasks as well as if you have completed them or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"eliztan"},"content":"Format: `list`","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"eliztan"},"content":"`list`","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"eliztan"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"eliztan"},"content":"Here are your list items!","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"eliztan"},"content":"1. [T][X]  CS2113 homework","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"eliztan"},"content":"2. [E][ ]  CS2113 lecture (from: 2pm to: 4pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"eliztan"},"content":"3. [D][X]  CS2113 iP (by: 3rd Jan)","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"eliztan"},"content":"### `delete` - deletes a task","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"eliztan"},"content":"Deletes a task from your list. The index is the index of the task you want to delete.","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"eliztan"},"content":"It must be positive and exists in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"eliztan"},"content":"Format: `delete [INDEX]`","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"eliztan"},"content":"`delete 2`","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"eliztan"},"content":"Okay, I\u0027m deleting this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"eliztan"},"content":"[ ]  CS2113 lecture","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"eliztan"},"content":"Now you have 2 items in your list!","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"eliztan"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"eliztan"},"content":"###","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"eliztan"},"content":"### `find` - finds a keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"eliztan"},"content":"Finds all tasks in your list that fit a provided keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"eliztan"},"content":"Format: `find [KEYWORD]`","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"eliztan"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"eliztan"},"content":"`find homework`","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"eliztan"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"eliztan"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"eliztan"},"content":"1. [T][ ]  CS2113 homework","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"eliztan":140,"-":26}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"    protected String by;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"        taskTypeLetter \u003d \"D\";","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"     * Rewrites the description of the deadline into a format suitable to save onto the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"     * @return The string of the deadline in the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"    public String saveTaskDescription(){","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"        return (super.saveTaskDescription() + \"|\" + this.by.trim());","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"     * Returns a String of the deadline consisting of a representation of","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"     * its task type, its marked status and description, and its due date","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"     * @return The string of the deadline in the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"        return(\"[D]\" + super.toString() + \"(by:\" + this.by + \")\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"     * Prints out newly added deadline for the user","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"    public void printTask (int numberOfListItems){","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Got it! I\u0027ve added this task:\\n\" + this.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Now you have \" + (numberOfListItems + 1) + \" tasks in the list!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"eliztan":40}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"    protected String from;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"    protected String to;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"        taskTypeLetter \u003d \"E\";","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"     * Rewrites the description of the event into a format suitable to save onto the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"     * @return The string of the event in the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"    public String saveTaskDescription(){","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"        return (super.saveTaskDescription() + \"|\" + this.from.trim() + \"|\" + this.to.trim());","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"     * Returns a String of the event consisting of a representation of","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"     * its task type, its marked status and description, when it starts, and when it ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"     * @return The string of the event in the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"        return(\"[E]\" + super.toString() + \"(from:\" + this.from + \" to:\" + this.to + \")\");","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"     * Prints out newly added event for the user","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"    public void printTask (int numberOfListItems){","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Got it! I\u0027ve added this task:\\n\" + this.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Now you have \" + (numberOfListItems + 1) + \" tasks in the list!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"eliztan":43}},{"path":"src/main/java/Miku.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"public class Miku {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"            TaskList.setTaskList(Storage.loadData());","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"            TaskList.setTaskList();","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"        Ui.greetings();","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"        Parser.decideAction();","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"        Ui.goodbye();","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"eliztan":16}},{"path":"src/main/java/MikuException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class MikuException extends Exception {","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"eliztan":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"public class Parser {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"    static String[] splitCommand;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"    static String newItem;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"    static int numberOfListItems;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"    public Parser(String newItem, int numberOfListItems) {","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"        Parser.newItem \u003d newItem;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"        Parser.splitCommand \u003d newItem.split(\" \");","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"        Parser.numberOfListItems \u003d numberOfListItems;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    public static void setParser(String newItem) {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"        Parser.newItem \u003d newItem;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"        Parser.splitCommand \u003d newItem.split(\" \");","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"        Parser.numberOfListItems \u003d TaskList.numberOfListItems;","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"     * Takes in user input and determines what to command to run from the input","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"    public static void decideAction() {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"        newItem \u003d in.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"        while (!newItem.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"            setParser(newItem);","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"            if (newItem.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"                Ui.printList(numberOfListItems);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"            } else if (splitCommand[0].matches(\"todo|event|deadline\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"                addTask();","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"            } else if (splitCommand[0].matches(\"mark|unmark|delete|find\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"                editListStatus();","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"            } else {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"                Ui.invalidInput();","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"            Storage.saveToFile();","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"eliztan"},"content":"            Ui.lineBreak();","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"eliztan"},"content":"            newItem \u003d in.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"eliztan"},"content":"     * Handles the processes of adding a new task (todo/event/deadline) to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"eliztan"},"content":"    public static void addTask() {","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"eliztan"},"content":"        switch (splitCommand[0]) {","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"eliztan"},"content":"        case \"todo\":","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"eliztan"},"content":"                TaskList.newTodo(newItem, TaskList.storedList);","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"eliztan"},"content":"                Ui.printNewTask(numberOfListItems);","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"eliztan"},"content":"                Ui.blankTodo();","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"eliztan"},"content":"        case \"deadline\":","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"eliztan"},"content":"                TaskList.newDeadline(newItem, TaskList.storedList);","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"eliztan"},"content":"                Ui.printNewTask(numberOfListItems);","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"eliztan"},"content":"                Ui.blankDeadline();","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"eliztan"},"content":"            } catch (wrongDeadlineArguments e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"eliztan"},"content":"                Ui.invalidDeadlineArguments();","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"eliztan"},"content":"        case \"event\":","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"eliztan"},"content":"                TaskList.newEvent(newItem, TaskList.storedList);","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"eliztan"},"content":"                Ui.printNewTask(numberOfListItems);","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"eliztan"},"content":"                Ui.blankEvent();","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"eliztan"},"content":"            } catch (wrongEventArguments e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"eliztan"},"content":"                Ui.invalidEventArguments();","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"eliztan"},"content":"        default:","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"eliztan"},"content":"            Ui.generalError();","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"eliztan"},"content":"     * Handles the processes of \"mark\", \"unmark\", and \"delete\"","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"eliztan"},"content":"    public static void editListStatus() {","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"eliztan"},"content":"        switch (splitCommand[0]) {","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"eliztan"},"content":"        case \"mark\":","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"eliztan"},"content":"                TaskList.markTask(splitCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"eliztan"},"content":"                Ui.blankMark();","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"eliztan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"eliztan"},"content":"                Ui.notProperIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"eliztan"},"content":"            } catch (voidNumberOfItems e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"eliztan"},"content":"                Ui.emptyList();","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"eliztan"},"content":"            } catch (indexOutOfListBounds e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"eliztan"},"content":"                Ui.outOfBoundsIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"eliztan"},"content":"        case \"unmark\":","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"eliztan"},"content":"                TaskList.unmarkTask(splitCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"eliztan"},"content":"                Ui.blankUnark();","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"eliztan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"eliztan"},"content":"                Ui.notProperIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"eliztan"},"content":"            } catch (voidNumberOfItems e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"eliztan"},"content":"                Ui.emptyList();","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"eliztan"},"content":"            } catch (indexOutOfListBounds e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"eliztan"},"content":"                Ui.outOfBoundsIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"eliztan"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"eliztan"},"content":"                TaskList.deleteTask(splitCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"eliztan"},"content":"                Ui.blankDelete();","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"eliztan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"eliztan"},"content":"                Ui.notProperIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"eliztan"},"content":"            } catch (voidNumberOfItems e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"eliztan"},"content":"                Ui.emptyList();","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"eliztan"},"content":"            } catch (indexOutOfListBounds e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"eliztan"},"content":"                Ui.outOfBoundsIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"eliztan"},"content":"        case \"find\":","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"eliztan"},"content":"                Ui.printFindTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"eliztan"},"content":"                TaskList.findKeyword(newItem);","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"eliztan"},"content":"                Ui.blankFind();","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"eliztan"},"content":"            } catch (voidNumberOfItems e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"eliztan"},"content":"                Ui.emptyList();","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"eliztan"},"content":"        default:","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"eliztan"},"content":"            Ui.generalError();","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"eliztan":151}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"import java.io.File;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"public class Storage {","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"    public static String FILE_PATH \u003d \"./data/miku.txt\";","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"    public Storage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"        saveToFile();","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"     * Handles the process of overwriting the current data in the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"     * and writing to it with the current list to save the data","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"    public static void saveToFile() {","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"        if (TaskList.numberOfListItems \u003e 0) {","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"            writeToFile(TaskList.storedList.get(0).saveTaskDescription() + System.lineSeparator());","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"            for (int i \u003d 1; i \u003c TaskList.numberOfListItems; i++) {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"                appendToFile(TaskList.storedList.get(i).saveTaskDescription() + System.lineSeparator());","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"     * Overwrites the current data in the saved text file with one task.","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"     * If there is no existing directory/text file, it creates one","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"     * @param textToAdd The String of the first task in the list to be saved in the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"    public static void writeToFile(String textToAdd) {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"eliztan"},"content":"            FileWriter f \u003d new FileWriter(FILE_PATH, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"eliztan"},"content":"            f.write(textToAdd);","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"eliztan"},"content":"            f.close();","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"eliztan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"eliztan"},"content":"            Ui.fileError();","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"eliztan"},"content":"     * Appends to the current data in the saved text file with a task","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"eliztan"},"content":"     * @param textToAppend The String of the task in the list to be saved in the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"eliztan"},"content":"    public static void appendToFile(String textToAppend) {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"eliztan"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"eliztan"},"content":"            FileWriter f \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"eliztan"},"content":"            f.write(textToAppend);","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"eliztan"},"content":"            f.close();","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"eliztan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"eliztan"},"content":"            Ui.fileError();","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"eliztan"},"content":"     * Loads the data from the saved file","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"eliztan"},"content":"     * @return loadedTask The list of tasks containing all tasks that had been saved in the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"eliztan"},"content":"     * @throws FileNotFoundException If the file does not exist","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"eliztan"},"content":"    public static ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"eliztan"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"eliztan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"eliztan"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"eliztan"},"content":"        int currentLoadListIndex \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"eliztan"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"eliztan"},"content":"            String[] command \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"eliztan"},"content":"            transferLoadToArray(command, loadedTasks, currentLoadListIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"eliztan"},"content":"            currentLoadListIndex++;","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"eliztan"},"content":"        return loadedTasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"eliztan"},"content":"     * Rewrites each task from the load data into a format understandable by other classes.","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"eliztan"},"content":"     * @param command The String array of a task loaded from the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"eliztan"},"content":"     * @param loadedTasks The list of tasks containing tasks that had been saved in the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"eliztan"},"content":"     * @param currentLoadListIndex The current index of the loaded list","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"eliztan"},"content":"    public static void transferLoadToArray(String[] command, ArrayList\u003cTask\u003e loadedTasks, int currentLoadListIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"eliztan"},"content":"        boolean isMarked \u003d (command[1].equals(\"1\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"eliztan"},"content":"        String loadedTaskDescription;","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"eliztan"},"content":"        switch (command[0]) {","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"eliztan"},"content":"        case \"T\":","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"eliztan"},"content":"            loadedTaskDescription \u003d (command[2]);","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"eliztan"},"content":"                TaskList.newTodo(\"todo \" + loadedTaskDescription, loadedTasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"eliztan"},"content":"                loadedTasks.get(currentLoadListIndex).isDone \u003d isMarked;","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"eliztan"},"content":"                Ui.loadError();","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"eliztan"},"content":"        case \"D\":","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"eliztan"},"content":"            loadedTaskDescription \u003d (\"deadline \" + command[2] + \"/by \" + command[3]);","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"eliztan"},"content":"                TaskList.newDeadline(loadedTaskDescription, loadedTasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"eliztan"},"content":"                loadedTasks.get(currentLoadListIndex).isDone \u003d isMarked;","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"eliztan"},"content":"                Ui.loadError();","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"eliztan"},"content":"            } catch (wrongDeadlineArguments e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"eliztan"},"content":"                Ui.loadArgumentsError();","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"eliztan"},"content":"        case \"E\":","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"eliztan"},"content":"            loadedTaskDescription \u003d (\"event \" + command[2] + \"/from \" + command[3] + \"/to \" + command[4]);","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"eliztan"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"eliztan"},"content":"                TaskList.newEvent(loadedTaskDescription, loadedTasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"eliztan"},"content":"                loadedTasks.get(currentLoadListIndex).isDone \u003d isMarked;","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"eliztan"},"content":"            } catch (MikuException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"eliztan"},"content":"                Ui.loadError();","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"eliztan"},"content":"            } catch (wrongEventArguments e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"eliztan"},"content":"                Ui.loadArgumentsError();","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"eliztan"},"content":"        default:","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"eliztan"},"content":"            Ui.loadError();","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"eliztan"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"eliztan":139}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"    protected String description;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"    protected String taskTypeLetter;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"     * Returns the icon to display whether the task is marked or not","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"     * @return isDone Returns X if the tasks is marked, blank otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"     * Returns the icon to display whether the task is marked or not","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"     * @return isDone Returns X if the tasks is marked, blank otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"    public int isDoneInt(){","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"     * Rewrites the description of the task into a format suitable to save onto the text file","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"     * @return The string of the task in the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"    public String saveTaskDescription() {","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"        return (this.taskTypeLetter + \"|\" + this.isDoneInt() + \"|\" + this.description.trim());","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"     * Returns marked status and description of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"     * @return The string of the task\u0027s marked status and description","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"eliztan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"eliztan"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"eliztan"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"eliztan"},"content":"    public void printTask(int numberOfListItems) {","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"eliztan"},"content":"        return;","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"eliztan":50}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"public class TaskList {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"    public static ArrayList\u003cTask\u003e storedList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"    public static int numberOfListItems;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"    /*","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"        public TaskList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"            storedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"            numberOfListItems \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    public static void setTaskList(ArrayList\u003cTask\u003e loadList) {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"        storedList \u003d loadList;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"        numberOfListItems \u003d loadList.size();","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"    public static void setTaskList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"        storedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"        numberOfListItems \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"    private static String[] getEventArgument(String newItem) {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"        return newItem.split(\"event|/from|/to\");","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"    private static String[] getDeadlineArgument(String newItem) {","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"        return newItem.split(\"deadline|/by\");","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"    private static String[] getTodoArgument(String newItem) {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"        return newItem.split(\"todo\");","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"     * Creates a new todo in the current list","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"     * @param newItem A string of the entire user input","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"     * @param storedTask The current list","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"     * @throws MikuException If the String array \u003c 1","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"eliztan"},"content":"    public static void newTodo(String newItem, ArrayList\u003cTask\u003e storedTask) throws MikuException {","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"eliztan"},"content":"        String[] itemString \u003d getTodoArgument(newItem);","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"eliztan"},"content":"        if (itemString.length \u003c 1) {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"eliztan"},"content":"        storedTask.add(new Todo(itemString[1]));","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"eliztan"},"content":"        numberOfListItems++;","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"eliztan"},"content":"     * Creates a new deadline in the current list","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"eliztan"},"content":"     * @param newItem A string of the entire user input","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"eliztan"},"content":"     * @param storedTask The current list","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"eliztan"},"content":"     * @throws MikuException If the String array \u003c 1","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"eliztan"},"content":"     * @throws wrongDeadlineArguments If the given input is not in the proper format (does not contain \"/by\")","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"eliztan"},"content":"    public static void newDeadline(String newItem, ArrayList\u003cTask\u003e storedTask)","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"eliztan"},"content":"            throws MikuException, wrongDeadlineArguments {","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"eliztan"},"content":"        String[] itemString \u003d getDeadlineArgument(newItem);","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"eliztan"},"content":"        if (itemString.length \u003c 1) {","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"eliztan"},"content":"        if (!newItem.contains(\"/by \")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"eliztan"},"content":"            throw new wrongDeadlineArguments();","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"eliztan"},"content":"        storedTask.add(new Deadline(itemString[1], itemString[2]));","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"eliztan"},"content":"        numberOfListItems++;","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"eliztan"},"content":"     * Creates a new event in the current list","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"eliztan"},"content":"     * @param newItem A string of the entire user input","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"eliztan"},"content":"     * @param storedTask The current list","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"eliztan"},"content":"     * @throws MikuException If the String array \u003c 3","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"eliztan"},"content":"     * @throws wrongEventArguments If the given input is not in the proper format (does not contain \"/from\" or \"/to\")","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"eliztan"},"content":"    public static void newEvent(String newItem, ArrayList\u003cTask\u003e storedTask)","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"eliztan"},"content":"            throws MikuException, wrongEventArguments {","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"eliztan"},"content":"        String[] itemString \u003d getEventArgument(newItem);","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"eliztan"},"content":"        if (itemString.length \u003c 3) {","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"eliztan"},"content":"        if (!newItem.contains(\"/from \") || !newItem.contains(\"/to \")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"eliztan"},"content":"            throw new wrongEventArguments();","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"eliztan"},"content":"        storedTask.add(new Event(itemString[1], itemString[2], itemString[3]));","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"eliztan"},"content":"        numberOfListItems++;","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"eliztan"},"content":"     * Marks a task from the current list.","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"eliztan"},"content":"     * @param taskToMark An array of Strings that contains the user input of the task to mark","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"eliztan"},"content":"     * @throws MikuException If the String array length \u003e 2 or \u003d 1","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"eliztan"},"content":"     * @throws voidNumberOfItems If the current list is empty","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"eliztan"},"content":"     * @throws indexOutOfListBounds If the inputted index of the task to delete does not exist in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"eliztan"},"content":"    public static void markTask(String[] taskToMark)","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"eliztan"},"content":"            throws MikuException, voidNumberOfItems, indexOutOfListBounds {","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"eliztan"},"content":"        if (taskToMark.length \u003e 2 || taskToMark.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"eliztan"},"content":"        if (storedList.isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"eliztan"},"content":"            throw new voidNumberOfItems();","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"eliztan"},"content":"        int inputtedIndex \u003d Integer.parseInt(taskToMark[1]);","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"eliztan"},"content":"        if (inputtedIndex \u003c\u003d 0 || inputtedIndex \u003e storedList.size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"eliztan"},"content":"            throw new indexOutOfListBounds();","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"eliztan"},"content":"        int listNumberIndex \u003d (inputtedIndex - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"eliztan"},"content":"        storedList.get(listNumberIndex).isDone \u003d true;","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"eliztan"},"content":"        Ui.printMark(listNumberIndex);","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"eliztan"},"content":"     * Unmarks a given task from the current list.","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"eliztan"},"content":"     * @param taskToUnmark An array of Strings that contains the user input of the task to unmark","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"eliztan"},"content":"     * @throws MikuException If the String array length \u003e 2 or \u003d 1","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"eliztan"},"content":"     * @throws voidNumberOfItems If the current list is empty","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"eliztan"},"content":"     * @throws indexOutOfListBounds If the inputted index of the task to delete does not exist in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"eliztan"},"content":"    public static void unmarkTask(String[] taskToUnmark)","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"eliztan"},"content":"            throws MikuException, voidNumberOfItems, indexOutOfListBounds {","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"eliztan"},"content":"        if (taskToUnmark.length \u003e 2 || taskToUnmark.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"eliztan"},"content":"        if (storedList.isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"eliztan"},"content":"            throw new voidNumberOfItems();","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"eliztan"},"content":"        int inputtedIndex \u003d Integer.parseInt(taskToUnmark[1]);","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"eliztan"},"content":"        if (inputtedIndex \u003c\u003d 0 || inputtedIndex \u003e storedList.size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"eliztan"},"content":"            throw new indexOutOfListBounds();","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"eliztan"},"content":"        int listNumberIndex \u003d (inputtedIndex - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"eliztan"},"content":"        storedList.get(listNumberIndex).isDone \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"eliztan"},"content":"        Ui.printUnmark(listNumberIndex);","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"eliztan"},"content":"     * Deletes a task from the current list.","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"eliztan"},"content":"     * @param taskToDelete An array of Strings that contains the user input of the task to delete","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"eliztan"},"content":"     * @throws MikuException If the String array length \u003e 2 or \u003d 1","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"eliztan"},"content":"     * @throws voidNumberOfItems If the current list is empty","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"eliztan"},"content":"     * @throws indexOutOfListBounds If the inputted index of the task to delete does not exist in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"eliztan"},"content":"    public static void deleteTask(String[] taskToDelete)","lastModifiedDate":"2024-03-05"},{"lineNumber":165,"author":{"gitId":"eliztan"},"content":"            throws MikuException, voidNumberOfItems, indexOutOfListBounds {","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"eliztan"},"content":"        if (taskToDelete.length \u003e 2 || taskToDelete.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-05"},{"lineNumber":167,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":169,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":170,"author":{"gitId":"eliztan"},"content":"        if (storedList.isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":171,"author":{"gitId":"eliztan"},"content":"            throw new voidNumberOfItems();","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"eliztan"},"content":"        int inputtedIndex \u003d Integer.parseInt(taskToDelete[1]);","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"eliztan"},"content":"        if (inputtedIndex \u003c\u003d 0 || inputtedIndex \u003e storedList.size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"eliztan"},"content":"            throw new indexOutOfListBounds();","lastModifiedDate":"2024-03-05"},{"lineNumber":177,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":178,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":179,"author":{"gitId":"eliztan"},"content":"        int listNumberIndex \u003d (inputtedIndex - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":180,"author":{"gitId":"eliztan"},"content":"        Ui.printDelete(listNumberIndex);","lastModifiedDate":"2024-03-05"},{"lineNumber":181,"author":{"gitId":"eliztan"},"content":"        storedList.remove(listNumberIndex);","lastModifiedDate":"2024-03-05"},{"lineNumber":182,"author":{"gitId":"eliztan"},"content":"        numberOfListItems--;","lastModifiedDate":"2024-03-05"},{"lineNumber":183,"author":{"gitId":"eliztan"},"content":"        Ui.printNumberOfListItems(numberOfListItems);","lastModifiedDate":"2024-03-05"},{"lineNumber":184,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":185,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":186,"author":{"gitId":"eliztan"},"content":"    public static void findKeyword(String inputKeyword) throws MikuException, voidNumberOfItems {","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"eliztan"},"content":"        String[] keyword \u003d inputKeyword.split(\"find\");","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"eliztan"},"content":"        if (storedList.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"eliztan"},"content":"            throw new voidNumberOfItems();","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"eliztan"},"content":"        if (keyword.length \u003c 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"eliztan"},"content":"            throw new MikuException();","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"eliztan"},"content":"        boolean hasMatchingTask \u003d false;","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"eliztan"},"content":"        for (int i \u003d 0; i \u003c storedList.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":199,"author":{"gitId":"eliztan"},"content":"            if (storedList.get(i).description.contains(keyword[1])) {","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"eliztan"},"content":"                Ui.printWholeTask(i);","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"eliztan"},"content":"                hasMatchingTask \u003d true;","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"eliztan"},"content":"        if (!hasMatchingTask) {","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"eliztan"},"content":"            Ui.blankFind();","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"eliztan":210}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"        taskTypeLetter \u003d \"T\";","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"     * Returns a String of the todo consisting of a representation of","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"     * its task type, its marked status, and its description","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"     * @return The string of the todo in the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    public String toString(){","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"     * Prints out newly added todo for the user","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"    public void printTask (int numberOfListItems){","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Got it! I\u0027ve added this task:\\n\" + this.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Now you have \" + (numberOfListItems + 1) + \" tasks in the list!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"eliztan":28}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class Ui {","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"    static final String LINE_BREAK \u003d \"______________________\";","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"eliztan"},"content":"    public Ui() {","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"eliztan"},"content":"        greetings();","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"eliztan"},"content":"     * Prints out the line break.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"eliztan"},"content":"    public static void lineBreak() {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"eliztan"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"eliztan"},"content":"     * Prints out the greetings for when the user boots up the chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"eliztan"},"content":"    public static void greetings() {","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"eliztan"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Hello! I\u0027m Miku!\\n\" + \"What can I do for you?\");","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"eliztan"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"eliztan"},"content":"     * Prints the text for when a new task is added.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"eliztan"},"content":"    public static void printNewTask(int numberOfListItems) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"eliztan"},"content":"        TaskList.storedList.get(numberOfListItems).printTask(numberOfListItems);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"eliztan"},"content":"     * Prints out the parting text for when the user closes the chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"eliztan"},"content":"    public static void goodbye() {  ","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Bye, hope to see you again soon! :D\");","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"eliztan"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"eliztan"},"content":"     * Prints out the text for when a task is marked.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"eliztan"},"content":"    public static void printMark(int listNumberIndex) {","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Good job~! I\u0027ve marked it as done\");","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"[\" + TaskList.storedList.get(listNumberIndex).getStatusIcon()","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"eliztan"},"content":"                + \"] \" + TaskList.storedList.get(listNumberIndex).description);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"eliztan"},"content":"     * Prints out the text for when a task is unmarked.","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"eliztan"},"content":"    public static void printUnmark(int listNumberIndex) {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Aww... I\u0027ve marked it as undone.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"[\" + TaskList.storedList.get(listNumberIndex).getStatusIcon()","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"eliztan"},"content":"                + \"] \" + TaskList.storedList.get(listNumberIndex).description);","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"eliztan"},"content":"     * Prints out the text for when a task is deleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"eliztan"},"content":"    public static void printDelete(int listNumberIndex) {","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Okay, I\u0027m deleting this task:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"[\" + TaskList.storedList.get(listNumberIndex).getStatusIcon()","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"eliztan"},"content":"                + \"] \" + TaskList.storedList.get(listNumberIndex).description);","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"eliztan"},"content":"     * Prints out the number of tasks in the list for the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"eliztan"},"content":"    public static void printNumberOfListItems(int numberOfListItems){","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Now you have \" + numberOfListItems + \" items in your list!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"eliztan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"eliztan"},"content":"     * Prints out the entire current list.","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"eliztan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"eliztan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"eliztan"},"content":"    public static void printList(int numberOfListItems) {","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"eliztan"},"content":"        if (TaskList.numberOfListItems \u003e 0) {","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"eliztan"},"content":"            System.out.println(\"Here are your list items!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"eliztan"},"content":"            for (int i \u003d 0; i \u003c numberOfListItems; i++) {","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"eliztan"},"content":"                System.out.println((i + 1) + \". \" + TaskList.storedList.get(i).toString());","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"eliztan"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"eliztan"},"content":"        } else if (TaskList.numberOfListItems \u003d\u003d 0) {","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"eliztan"},"content":"            emptyList();","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"eliztan"},"content":"        } else {","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"eliztan"},"content":"            generalError();","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"eliztan"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"eliztan"},"content":"    public static void fileError() {","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"file is not found!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"eliztan"},"content":"    public static void printFindTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"eliztan"},"content":"    public static void printWholeTask(int i) {","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"eliztan"},"content":"        System.out.println((i + 1) + \". \" + TaskList.storedList.get(i).toString());","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"eliztan"},"content":"    public static void invalidInput() {","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"That\u0027s not a command, sorry (ㅠ﹏ㅠ)\");","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"eliztan"},"content":"    public static void blankTodo(){","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Todo can\u0027t be blank!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"eliztan"},"content":"    public static void blankDeadline(){","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Deadline is incomplete, did you forget to type something?\");","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"eliztan"},"content":"    public static void invalidDeadlineArguments(){","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"You didn\u0027t add when it\u0027s due by D:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"eliztan"},"content":"    public static void blankEvent(){","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Event is incomplete, did you forget to type something?\");","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"eliztan"},"content":"    public static void invalidEventArguments(){","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"You incorrectly inputted the arguments D:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"eliztan"},"content":"    public static void blankMark(){","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"You forgot to say what to mark.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"eliztan"},"content":"    public static void blankUnark(){","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"You forgot to say what to unmark.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"eliztan"},"content":"    public static void blankDelete(){","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Check your delete arguments!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"eliztan"},"content":"    public static void notProperIndex(){","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Enter the number index of the item.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"eliztan"},"content":"    public static void emptyList(){","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"There are no items in your list :(\");","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"eliztan"},"content":"    public static void outOfBoundsIndex(){","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Error! Try to input an index that exists in your current list instead.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":158,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":159,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"eliztan"},"content":"    public static void loadError() {","lastModifiedDate":"2024-03-05"},{"lineNumber":161,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"Error in loading data!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":162,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"eliztan"},"content":"    public static void loadArgumentsError() {","lastModifiedDate":"2024-03-05"},{"lineNumber":165,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"there\u0027s something wrong with the loaded data\u0027s arguments\");","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":167,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"eliztan"},"content":"    public static void blankFind() {","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"There are no tasks that match your keyword :(\");","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"eliztan"},"content":"    public static void generalError(){","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"eliztan"},"content":"        System.out.println(\"There\u0027s an error somewhere D:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"eliztan"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"eliztan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"eliztan":175}},{"path":"src/main/java/indexOutOfListBounds.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class indexOutOfListBounds extends Exception {","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"eliztan":2}},{"path":"src/main/java/voidNumberOfItems.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class voidNumberOfItems extends Exception {","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"eliztan":2}},{"path":"src/main/java/wrongDeadlineArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class wrongDeadlineArguments extends Exception {","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"eliztan":2}},{"path":"src/main/java/wrongEventArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eliztan"},"content":"public class wrongEventArguments extends Exception {","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"eliztan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"eliztan":2}}]
