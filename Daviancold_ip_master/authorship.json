[{"path":"data/davvy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"D | 1 | return book  |  June 6th ","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"E | 1 | project meeting |  Aug 6th 2pm  |  4pm","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"T | 0 | hi","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"D | 0 | wash clothes  |  tonight ","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Daviancold":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"# Davvy User Guide","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"*Davvy* is the individual project component for CS2113, AY23/24 Semester 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":" Hello! I\u0027m Davvy","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":" What can I do for you?","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"The chatbot aims to be your personal task tracker for your daily needs!","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"## Table of Contents","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"- [Davvy User Guide](#Davvy-User-Guide)","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    - [Launching Davvy](#launching-davvy)","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    - [Features](#features)","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"      - [Task Creation](#task-creation)","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"      - [Task Management](#task-management)","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"      - [Persistent State](#persistent-state)","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    - [Commands](#commands)","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"      - [`todo`](#todo---create-and-add-a-todo-task)","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"      - [`deadline`](#deadline---create-and-add-a-deadline-task)","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"      - [`event`](#event---create-and-add-a-event-task)","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"      - [`list`](#list---list-out-all-saved-tasks)","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"      - [`mark`](#mark---tags-a-task-as-completed)","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"      - [`unmark`](#unmark---un-tag-a-task-if-incomplete)","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"      - [`delete`](#delete---deletes-a-specified-task)","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"      - [`find`](#find---searches-for-a-task)","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"      - [`bye`](#bye---end-the-chatbot)","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"## Launching Davvy","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"To start the chatbot, go to the src folder containing the JAR file. Then, on a terminal of your choice, run:","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"-$ java -jar ip.jar","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"*This program is best executed with the Java-11 Runtime Environment*","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"## Features","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"*Davvy* comes jam-packed with features that allow you to use CLI to manage your upcoming tasks ","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"### Task Creation","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"Manage your upcoming tasks by adding and creating tasks:","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"1. `todo` for your everyday general tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"2. `deadline` for tasks with a date goal in mind","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"3. `event` for time critical tasks and appointments","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"### Task Management","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"Track, edit and mark all of your tasks with ease!","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"- *Davvy* allows you to `mark` and `unmark` tasks, so you can focus on what is not done!","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"- *Davvy* allows you to `list` out all the tasks you have added so far.","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"- Made a wrong entry? Just `delete` and be on your way!","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"### Persistent State","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"*Davvy* helps you track even when the PC is shut! Data is saved to the local drive with every added task, and loaded","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"automatically on startup!","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"## Commands","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"### `todo` - Create and add a TODO task","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"Create a task of todo type for *Davvy* to track.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"todo \u003ctask_description\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"todo homework","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"*Davvy* will read your todo description, and echo it back to you via console after adding it to your task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":" [T][ ] hi","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":" Now you have 4 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"### `deadline` - Create and add a Deadline task","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"Create a task of deadline type for *Davvy* to track. \u003cbr /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"Note that a \"due by\" parameter is needed.","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"deadline \u003ctask_description\u003e /by \u003ctask_deadline\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"deadline wash clothes /by tonight","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"*Davvy* will read your deadline description, and echo it back to you via console after adding it to your task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":" [D][ ] wash clothes (by: tonight)","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":" Now you have 5 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"### `event` - Create and add a Event task","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"Create a task of event type for *Davvy* to track. \u003cbr /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"Note that a \"from\" and \"to\" parameter is needed.","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"event \u003ctask_description\u003e /from \u003cstart_date_or_time\u003e /to \u003cend_date_or_time\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"event attend class /from 9am /to 10am","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"*Davvy* will read your event description, and echo it back to you via console after adding it to your task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":" [E][ ] attend class (from: 9am to: 10am)","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"Daviancold"},"content":" Now you have 6 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"Daviancold"},"content":"### `list` - List out all saved tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"Daviancold"},"content":"Shows all stored tasks that the user has added into the chatbot","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"Daviancold"},"content":"list","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"Daviancold"},"content":"A list of all tasks will be shown. The first box indicates the type of task shown, the second box indicates the ","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"Daviancold"},"content":"completion status of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"Daviancold"},"content":" Here are the tasks in your list:","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"Daviancold"},"content":" 1.[T][ ] read book","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"Daviancold"},"content":" 2.[D][X] return book (by: June 6th )","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"Daviancold"},"content":" 3.[E][X] project meeting(from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"Daviancold"},"content":"### `mark` - Tags a task as completed","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"Daviancold"},"content":"Tag a selected task as completed. Can be seen with an \u0027X\u0027. \u003cbr /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"Daviancold"},"content":"Note that task number here refers to the index of the item of the list","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":143,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"Daviancold"},"content":"mark \u003ctask_number\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"Daviancold"},"content":"mark 6","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"Daviancold"},"content":"*Davvy* will store the new status of the task, and echos the tagged task on the console for the user to verify","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"Daviancold"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"Daviancold"},"content":" [E][X] attend class(from: 9am to: 10am)","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"Daviancold"},"content":"### `unmark` - Un-Tag a task if incomplete","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"Daviancold"},"content":"Tag a selected task as not completed. Can be seen with the absence of an \u0027X\u0027 in the second box of the task. \u003cbr /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"Daviancold"},"content":"Note that task number here refers to the index of the item of the list","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"Daviancold"},"content":"unmark \u003ctask_number\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":168,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"Daviancold"},"content":"unmark 6","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"Daviancold"},"content":"*Davvy* will store the new status of the task, and echos the un-tagged task on the console for the user to verify","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"Daviancold"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"Daviancold"},"content":" [E][ ] attend class(from: 9am to: 10am)","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"Daviancold"},"content":"### `delete` - Deletes a specified task","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"Daviancold"},"content":"Removes a selected task from storage. \u003cbr /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"Daviancold"},"content":"Note that task number here refers to the index of the item of the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"Daviancold"},"content":"delete \u003ctask_number\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"Daviancold"},"content":"delete 6","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"Daviancold"},"content":"*Davvy* will remove the task from storage, and echos the deleted task on the console for the user to verify","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":196,"author":{"gitId":"Daviancold"},"content":" Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":197,"author":{"gitId":"Daviancold"},"content":" [E][ ] attend class(from: 9am to: 10am)","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"Daviancold"},"content":" Now you have 5 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":200,"author":{"gitId":"Daviancold"},"content":"### `find` - Searches for a task","lastModifiedDate":"2024-03-07"},{"lineNumber":201,"author":{"gitId":"Daviancold"},"content":"Searches everything in the list for tasks that match the search description","lastModifiedDate":"2024-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"Daviancold"},"content":"**Syntax**:","lastModifiedDate":"2024-03-07"},{"lineNumber":204,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":205,"author":{"gitId":"Daviancold"},"content":"find \u003csearch_description\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":206,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":209,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":210,"author":{"gitId":"Daviancold"},"content":"find clothes","lastModifiedDate":"2024-03-07"},{"lineNumber":211,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":213,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":214,"author":{"gitId":"Daviancold"},"content":"*Davvy* will query for the task with the user specified description, and returns the tasks with the description, should","lastModifiedDate":"2024-03-07"},{"lineNumber":215,"author":{"gitId":"Daviancold"},"content":"it exist","lastModifiedDate":"2024-03-07"},{"lineNumber":216,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":217,"author":{"gitId":"Daviancold"},"content":" Here are the matching tasks in your list:","lastModifiedDate":"2024-03-07"},{"lineNumber":218,"author":{"gitId":"Daviancold"},"content":" 1.[D][ ] wash clothes (by: tonight )","lastModifiedDate":"2024-03-07"},{"lineNumber":219,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":220,"author":{"gitId":"Daviancold"},"content":"### `bye` - End the chatbot","lastModifiedDate":"2024-03-07"},{"lineNumber":221,"author":{"gitId":"Daviancold"},"content":"Done with the chatbot? End the bot manually to prevent potential saving issues :(","lastModifiedDate":"2024-03-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":223,"author":{"gitId":"Daviancold"},"content":"**Example of usage**:","lastModifiedDate":"2024-03-07"},{"lineNumber":224,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":225,"author":{"gitId":"Daviancold"},"content":"bye","lastModifiedDate":"2024-03-07"},{"lineNumber":226,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":228,"author":{"gitId":"Daviancold"},"content":"**Expected outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":229,"author":{"gitId":"Daviancold"},"content":"*Davvy* will terminate the chatbot program","lastModifiedDate":"2024-03-07"},{"lineNumber":230,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":231,"author":{"gitId":"Daviancold"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-07"},{"lineNumber":232,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Daviancold":216,"-":16}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"import Tasking.Davvy;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class Main {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"        Davvy chatBot \u003d new Davvy();","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"        chatBot.startChat();","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"        chatBot.endChat();","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Daviancold":9}},{"path":"src/main/java/NewExceptions/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package NewExceptions;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class EmptyArgumentException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Daviancold":4}},{"path":"src/main/java/NewExceptions/EmptyStatementException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package NewExceptions;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class EmptyStatementException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Daviancold":4}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Parser;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import NewExceptions.EmptyArgumentException;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import NewExceptions.EmptyStatementException;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import Tasking.TaskList;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import Tasking.Todo;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import Tasking.Deadline;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import Tasking.Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import Ui.Ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"public class Parser {","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"     * Takes in the string that comes after the \u0027deadline\u0027 command, and processes it to","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"     * obtain the \u0027by\u0027 date","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"     * @param commandArg String that comes after the keyword \u0027deadline\u0027","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there is an issue writing to file","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    private static void handleDeadline(String commandArg) throws IOException {","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        String[] newCommandArg \u003d commandArg.split(\"/by\", 2);","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        Deadline inputDeadline \u003d new Deadline(newCommandArg[0], newCommandArg[1]);","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        TaskList.addTask(inputDeadline,false);","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"     * Takes in the string that comes after the \u0027deadline\u0027 command, and processes it to","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"     * obtain the \u0027from\u0027 and \u0027to\u0027 parameters","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"     * @param commandArg String that comes after the keyword \u0027event\u0027","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there is an issue writing to file","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"    private static void handleEvent(String commandArg) throws IOException {","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        String[] newCommandArg \u003d commandArg.split(\"/from\", 2);","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        String[] newCommandArg2 \u003d newCommandArg[1].split(\"/to\", 2);","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        Events inputEvent \u003d new Events(newCommandArg[0], newCommandArg2[0], newCommandArg2[1]);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        TaskList.addTask(inputEvent, false);","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"     * Cleans up raw user input, and returns an array of 2 strings, where index 0 is command type,","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"     * index 1 is command argument","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"     * @param inputText Pass in the raw user input","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"     * @return An array of 2 strings","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"     * @throws EmptyStatementException if the user input was entirely empty","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"    public static String[] processInput (String inputText) throws EmptyStatementException {","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"        // String processing, \\\\b is used to signal the end of a word","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"        String[] processedInput \u003d inputText.split(\"\\\\b\", 2);","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"        if (inputText.isEmpty()) {","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"            throw new EmptyStatementException();","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"        // String Cleaning","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"        processedInput[0] \u003d processedInput[0].trim().toLowerCase();","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"        processedInput[1] \u003d processedInput[1].isEmpty() ? \"\" : processedInput[1].trim();","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"        return processedInput;","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"     * The method takes in a cleaned user input and further processes it based on the command","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"     * given","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"     * @param input Pass in an array of 2 strings, string at index 0 gives the command type, string","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"     *              at index 1 gives the command argument","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"     * @return true if the chatbot is to be terminated, false otherwise","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"     * @throws EmptyArgumentException if there is nothing in the argument string when a command is","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"     *                                entered","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there was an issue reading/writing into the file","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"    public static boolean processCommand (String[] input) throws EmptyArgumentException,","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"            IOException {","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"        String commandType \u003d input[0];","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"        String commandArg \u003d input[1];","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"        if (!commandType.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"            Ui.printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"        int taskIndex;","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"        switch (commandType) {","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"        case \"list\":","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"            TaskList.printList();","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"        case \"mark\":","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"            taskIndex \u003d parseInt(commandArg.trim()) - 1;","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"            TaskList.getTask(taskIndex).markDone(true);","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"        case \"unmark\":","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"            taskIndex \u003d parseInt(commandArg.trim()) - 1;","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"            TaskList.getTask(taskIndex).markNotDone(true);","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"        case \"bye\":","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"            return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"        case \"todo\":","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"            if (commandArg.isEmpty()) {","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"                throw new EmptyArgumentException();","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"            Todo inputTodo \u003d new Todo(commandArg);","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"            TaskList.addTask(inputTodo, false);","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"        case \"deadline\":","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"            if (commandArg.contains(\"/by\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"                handleDeadline(commandArg);","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"            } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"                System.out.println(\"Please put a date!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"        case \"event\":","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"            if (commandArg.contains(\"/from\") \u0026\u0026 commandArg.contains(\"/to\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"                handleEvent(commandArg);","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"            } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"                System.out.println(\"Please put a correct time!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Daviancold"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"Daviancold"},"content":"            // This regex refers to all numbers","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"Daviancold"},"content":"            if (commandArg.matches(\"[0-9]+\")) {","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Daviancold"},"content":"                TaskList.deleteTask(Integer.parseInt(commandArg));","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Daviancold"},"content":"            } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Daviancold"},"content":"                System.out.println(\"Please enter a number!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Daviancold"},"content":"        case \"find\":","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Daviancold"},"content":"            TaskList.findList(commandArg);","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"Daviancold"},"content":"        default:","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\"Unknown Command, type something I know please!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Daviancold":137}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Storage;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import Tasking.*;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import java.io.File;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"public class Storage {","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    public static final String DIRECTORY_PATH \u003d \"./data/\";","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    public static final String FILE_PATH \u003d DIRECTORY_PATH + \"/davvy.txt\";","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"     * Checks if both the directory and the file exists. If either or both do not, it will be","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"     * created","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there was an issue creating the file","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    public static void createFile() throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"            directory.mkdir(); // Not a must to assign its return value","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        if (!file.exists()){","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"            file.createNewFile(); // Not a must to assign its return value","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"     * Writes data to file","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"     * @param textToAppend the string to be added into storage","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there was an issue writing into the file","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"    public static void writeToFile(String textToAppend) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        createFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        fw.write(textToAppend + \"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"     * Completely re-writes all data onto a fresh file","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there was an issue deleting/writing into the file","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"    public static void rewriteFile() throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        file.delete();","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"        file.createNewFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"        for (int i \u003d 0; i \u003c TaskList.listLength(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"            Davvy.writeData(TaskList.getTask(i));","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"     * Uses a scanner to read data line by line from the input file, before breaking it down","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"     * and initialising the data into the program before the user is allowed to start interacting","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"     * with the bot","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there is an issue reading data from the file","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"    public static void readFile() throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"            createFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"                // Data is split into type, status, description and time (into 4/5 parts)","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"                String[] data \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"                switch (data[0].trim()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"                case \"T\":","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"                    task \u003d new Todo(data[2].trim());","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"                case \"D\":","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"                    task \u003d new Deadline(data[2].trim() + \" \",","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"                            \" \" + data[3].trim() + \" \");","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"                case \"E\":","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"                    task \u003d new Events(data[2].trim(),","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"                            \" \" + data[3].trim() + \" \", \" \" + data[4].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"                default:","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"Unknown Data type found in file\");","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"                }","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"                if (!(task \u003d\u003d null)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"                    // Only executed if a valid task is obtained from file","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"                    TaskList.addTask(task, true);","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"                    if (data[1].contains(\"1\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"                        task.markDone(false);","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"                    } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"                        task.markNotDone(false);","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"                    }","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"                }","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"            s.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"Daviancold":107}},{"path":"src/main/java/Tasking/Davvy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Tasking;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import NewExceptions.EmptyArgumentException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import NewExceptions.EmptyStatementException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import Storage.Storage;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import Parser.Parser;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import Ui.Ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"public class Davvy {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"     * This method takes a task object and modifies it into a different set of string according","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"     * to its type, for storage and ease of parsing subsequently when reading from storage","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"     * @param task pass in the task to be added into storage","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there is an issue reading/writing from/into storage","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    public static void writeData(Task task) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        int status \u003d task.isDone ? 1 : 0;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        String data \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"        // Formatting data into different string to be saved in file","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"            data \u003d \"T | \" + status + \" | \" + task.description;","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        } else if (task instanceof Events) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"            data \u003d \"E | \" + status + \" | \" + task.description + \" | \"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"                    + ((Events) task).dueFrom + \" | \" + ((Events) task).dueAt;","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"            data \u003d \"D | \" + status + \" | \" + task.description + \" | \"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"                    + ((Deadline) task).dueDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"        Storage.writeToFile(data);","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"     * Starts the chatbot and ensures continuous user input until terminated.","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"     * Handles error messages as well","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"    public void startChat() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        Ui.printStatement(\"greetings\");","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"        boolean isExitStatus \u003d false;","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"            Storage.readFile();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"            while (!isExitStatus) {","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"                try {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"                    String[] parsedInput \u003d Parser.processInput(in.nextLine());","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"                    isExitStatus \u003d Parser.processCommand(parsedInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"                } catch (EmptyStatementException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"                    Ui.printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"Please type something \u003e:(\");","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"Please Enter A Valid Number\");","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"There is no such task!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"                } catch (EmptyArgumentException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"                    System.out.println(\"Please enter a proper argument \u003e:(\");","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"                } finally {","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"                    Ui.printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"                }","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"            Ui.printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"     * Prints end statement when the chatbot has been terminated","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"    public void endChat() {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"        Ui.printStatement(\"goodbye\");","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Daviancold":80}},{"path":"src/main/java/Tasking/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Tasking;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"    protected String dueDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + dueDate + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Daviancold":14}},{"path":"src/main/java/Tasking/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Tasking;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class Events extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"    protected String dueFrom;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"    protected String dueAt;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"    public Events(String description, String dueFrom, String dueAt) {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"        this.dueFrom \u003d dueFrom;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"        this.dueAt \u003d dueAt;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + dueFrom + \"to:\" + dueAt + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Daviancold":16}},{"path":"src/main/java/Tasking/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Tasking;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import static Storage.Storage.rewriteFile;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"     * Mark tasks in the ArrayList as done","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"     * @param isPrint Passes in a boolean which enables the printing of message onto console","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there was an issue writing data into the file","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"    public void markDone(boolean isPrint) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        if (isPrint) {","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" \" + this);","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            rewriteFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"     * Unmark tasks in the ArrayList","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"     * @param isPrint Passes in a boolean which enables the printing of message onto console","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there was an issue writing data into the file","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"    public void markNotDone(boolean isPrint) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"        if (isPrint) {","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" \" + this);","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"            rewriteFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Daviancold":57}},{"path":"src/main/java/Tasking/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Tasking;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import static Storage.Storage.rewriteFile;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"     * Adds a single task into an ArrayList of tasks","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"     * This function can be called when initialising data into the program or can be called","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"     * by the user when creating a task","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"     * @param userTask the task to be added","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"     * @param isInitMode to determine whether printing is required","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there is an issue with writing data","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    public static void addTask(Task userTask, boolean isInitMode) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        list.add(userTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"        if (!isInitMode) {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"            // Used for normal task adding, printing not needed when initialising","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" \" + userTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"            Davvy.writeData(userTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"     * Remove a task from the ArrayList of Tasks","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"     * @param index pass in the index of the task to be deleted","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"     * @throws IOException if there is an issue with writing data","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"    public static void deleteTask(int index) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"        Task task \u003d list.get(index - 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        list.remove(index - 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        rewriteFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"    public static Task getTask(int taskNumber) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"        return list.get(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"    public static int listLength() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        return list.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"     * Prints every item in the ArrayList indexed with numbers","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"    public static void printList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"            System.out.print(\" \" + (i+1) + \".\");","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"            System.out.println(list.get(i));","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"    public static void findList(String s) {","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"        int j \u003d 0;","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"            if (task.description.contains(s)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"                System.out.print(\" \" + (j + 1) + \".\");","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"                System.out.println(task);","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"                j++;","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Daviancold":76}},{"path":"src/main/java/Tasking/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Tasking;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Daviancold":12}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package Ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class Ui {","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"    private static final String BOT_NAME \u003d \"Davvy\";","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"    public static void printLine() {","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"     * Prints hello and goodbye","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"     * @param statementType string to determine whether it is hello or goodbye","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    public static void printStatement(String statementType) {","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"        switch (statementType) {","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        case \"greetings\":","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"            printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" Hello! I\u0027m \" + BOT_NAME + \"\\n\" + \" What can I do for you?\");","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"            printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        case \"goodbye\":","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"            System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"            printLine();","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"Daviancold":27}}]
