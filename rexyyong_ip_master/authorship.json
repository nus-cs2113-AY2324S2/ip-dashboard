[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"# :robot: Omoh :robot:\t","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"Welcome to the Omoh chatbot user guide! :heart_on_fire:\t","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"## :page_with_curl: Content Page :page_with_curl:\t","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"- [Setting up in Intellij](#wrenchsetting-up-in-intellij-wrench)","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"- [Features](#musclefeatures-muscle)","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"   - [Adding a todo task: `todo TASK_DESCRIPTION`](#adding-a-todo-task-todo-task_description)","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"   - [Adding a deadline task: `deadline TASK_DESCRIPTION /by DATE`](#adding-a-deadline-task-deadline-task_description-by-date)","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"   - [Adding an event task: `event TASK_DESCRIPTION /from DATE /to DATE`](#adding-a-event-task-event-task_description-from-date-to-date)","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"   - [Marking a task: `mark TASK_NUMBER`](#marking-a-task-mark-task_number)","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"   - [Unmarking a task: `unmark TASK_NUMBER`](#unmarking-a-task-unmark-task_number)","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"   - [Deleting a task: `delete TASK_NUMBER`](#deleting-a-task-delete-task_number)","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"   - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"   - [Finding tasks based on keyword: `find KEYWORD`](#finding-tasks-based-on-keyword-find-keyword)","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"   - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"## :wrench:\t**Setting up in Intellij** :wrench:\t","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"3. After that, locate the `src/main/java/omoh/Omoh.java` file, right-click it, and choose `Run Omoh.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"_________________________________________________","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"Hello! I\u0027m Omoh","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"What can I do for you?","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"__________________________________________________","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"## :muscle:\t**Features** :muscle:\t","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"### Adding a todo task: `todo TASK_DESCRIPTION`","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"Adds a todo task into the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"* `TASK_DESCRIPTION` must not be empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"* todo eat lunch","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"* todo study for cs2113","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"### Adding a deadline task: `deadline TASK_DESCRIPTION /by DATE`","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"Adds a deadline task into the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"* `TASK_DESCRIPTION` must not be empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"* `DATE` must not be empty","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"* `/by` must be included","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"* deadline cs2113 ip /by wednesday","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"* deadline cs1010 mid term revision /by 10th March 2024","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"### Adding a event task: `event TASK_DESCRIPTION /from DATE /to DATE`","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"Adds a event task into the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"* `TASK_DESCRIPTION` must not be empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"* `DATE` must not be empty","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"rexyyong"},"content":"* `/from` and `/to` must be included","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"rexyyong"},"content":"* event cs2113 lecture /from 4pm /to 6pm","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"rexyyong"},"content":"* event CDE career fair /from 29th Feb 10am /to 29th feb 10pm","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"rexyyong"},"content":"### Marking a task: `mark TASK_NUMBER`","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"rexyyong"},"content":"Marks a task in task list as completed. X stands for completed, empty stands for not completed.","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"rexyyong"},"content":"* `TASK_NUMBER` must be a positive integer within number of total tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"rexyyong"},"content":"* `TASK_NUMBER` must not be empty","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"rexyyong"},"content":"* mark 1","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"rexyyong"},"content":"* mark 2","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"rexyyong"},"content":"### Unmarking a task: `unmark TASK_NUMBER`","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"rexyyong"},"content":"Marks a task in task list as not completed. X stands for completed, empty stands for not completed.","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"rexyyong"},"content":"* `TASK_NUMBER` must be a positive integer within number of total tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"rexyyong"},"content":"* `TASK_NUMBER` must not be empty","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"rexyyong"},"content":"* unmark 1","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"rexyyong"},"content":"* unmark 2","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"rexyyong"},"content":"### Deleting a task: `delete TASK_NUMBER`","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"rexyyong"},"content":"Deletes a task from task list according to task number provided","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"rexyyong"},"content":"* `TASK_NUMBER` must be a positive integer within number of total tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"rexyyong"},"content":"* `TASK_NUMBER` must not be empty","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"rexyyong"},"content":"* `list` followed by `delete 1 `deletes the first task in the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"rexyyong"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"rexyyong"},"content":"Shows a list of all tasks in task list","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"rexyyong"},"content":"### Finding tasks based on keyword: `find KEYWORD`","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"rexyyong"},"content":"Finds matching task(s) in task list based on a keyword provided","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"rexyyong"},"content":"* `KEYWORD` must not be empty","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"rexyyong"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"rexyyong"},"content":"* `find books` returns `read books` and `return book to book drop`","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"rexyyong"},"content":"* `find study` returns `study at library` and `study tonight`","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"rexyyong"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"rexyyong"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"rexyyong"},"content":"Exits programe and saves the task list into ../data/output.txt file","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"rexyyong":100,"-":14}},{"path":"src/main/java/omoh/Omoh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"public class Omoh {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"        Storage.createFileDirectory();","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"        Storage.createOrReadOutputFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"        printWelcomeMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"        //initialise the size 100 array if it was not initialised previously","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"        //because if tasks were already initialised from reading output.txt, we don\u0027t need to initialise the array again","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"        if(Task.totalTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"            Task.initArray();","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"        Ui.readUserInput();","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"        bye();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"     * Prints a horizontal line consisting of \"_\" characters.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"     * The line is 50 characters long.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"     * Prints a welcome message with the Omoh name.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"     * The message includes a horizontal line above and below it.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Hello! I\u0027m Omoh\");","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"    //Method that prints the bye message","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"    public static void bye() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"            Task.writeToFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Something went wrong\" + e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rexyyong":55}},{"path":"src/main/java/omoh/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyFindException;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyTaskNumberException;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.IllegalDeadlineInput;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.IllegalEventInput;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Deadline;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Event;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"public class Parser {","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"     * Extracts the task number from the input string.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"     * Used when user wants to mark tasks or delete tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"     * @param input The input string containing the task number.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"     * @return The extracted task number.","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"     * @throws NumberFormatException if the task number is not a valid integer.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"     * @throws EmptyTaskNumberException if the input string is empty after removing the keyword.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"    public static int extractTaskNumber(String input) throws NumberFormatException, EmptyTaskNumberException {","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"        String keyword;","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"            keyword \u003d \"mark\";","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"            keyword \u003d \"unmark\";","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"        } else {","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"            keyword \u003d \"delete\";","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        String numberString \u003d input.substring(keyword.length()).trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"            throw new EmptyTaskNumberException();","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"        int taskNumber \u003d Integer.parseInt(numberString);","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"        return taskNumber;","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"     * Extracts the task description and due date for a Deadline task from the input string.","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"     * @param input The input string containing the task description and due date.","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"     * @return The extracted Deadline task with its description and due date.","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"     * @throws IllegalDeadlineInput if the input string does not follow the required format.","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"    public static Deadline extractTaskAndDueDate (String input) throws IllegalDeadlineInput {","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"        //splits string according to /by keyword","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"        String[] parts \u003d input.split(\"/by\");","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"        //if array is not size 2, means that we are missing inputs","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"            throw new IllegalDeadlineInput();","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"        String deadlineDescription \u003d parts[0].substring(\"deadline\".length()).trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"        String deadlineDueBy \u003d parts[1].trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"        Deadline taskAndDeadlineString \u003d new Deadline(deadlineDescription, deadlineDueBy);","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"        if (deadlineDescription.isEmpty() || deadlineDueBy.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"            throw new IllegalDeadlineInput();","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"        return taskAndDeadlineString;","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"     * Extracts the event details from the input string.","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"rexyyong"},"content":"     * @param input The input string containing the event description, start date, and end date.","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"rexyyong"},"content":"     * @return The extracted Event object with its description, start date, and end date.","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"rexyyong"},"content":"     * @throws IllegalEventInput if the input string does not follow the required format.","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"rexyyong"},"content":"    public static Event extractEvent (String input) throws IllegalEventInput {","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"rexyyong"},"content":"        //splits string according to /by keyword","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"rexyyong"},"content":"        String[] parts \u003d input.split(\"/from|/to\");","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"rexyyong"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"rexyyong"},"content":"            throw new IllegalEventInput();","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"rexyyong"},"content":"        //extracts task portion from input, after deadline keyword","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"rexyyong"},"content":"        String eventDescription \u003d parts[0].substring(\"event\".length()).trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"rexyyong"},"content":"        //extracts from and to portion from input","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"rexyyong"},"content":"        String eventFrom \u003d parts[1].trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"rexyyong"},"content":"        String eventTo \u003d parts[2].trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"rexyyong"},"content":"        Event eventDetails  \u003d new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"rexyyong"},"content":"        if (eventFrom.isEmpty() || eventTo.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"rexyyong"},"content":"            throw new IllegalEventInput();","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"rexyyong"},"content":"        return eventDetails;","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"rexyyong"},"content":"    //extract keyword to find","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"rexyyong"},"content":"    public static String extractKeyword(String input) throws EmptyFindException {","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"rexyyong"},"content":"        //split by empty space","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"rexyyong"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"rexyyong"},"content":"        if (parts.length \u003c 2 || parts[1].isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"rexyyong"},"content":"            throw new EmptyFindException();","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"rexyyong"},"content":"        //parts[1] contains the keyword","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"rexyyong"},"content":"        return parts[1];","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"rexyyong":97}},{"path":"src/main/java/omoh/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.CorruptedFileException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyTodoException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Todo;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"import java.io.File;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"public class Storage {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"     * Creates the directory for the output.txt file if it does not exist.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"     * The directory named \"data\" will be created if it is not already present.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"    public static void createFileDirectory () {","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"            directory.mkdirs(); // This will create the necessary directories","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"     * Creates or reads the output.txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"     * If the file does not exist, it creates a new one in the \"data\" directory.","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"     * If the file exists, it attempts to read its contents.","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"    public static void createOrReadOutputFile () {","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"        //code to create new file in data directory","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"        File f \u003d new File(\"data/output.txt\");","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"            readFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"        } catch (EmptyTodoException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Todo task empty\");","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"        } catch (CorruptedFileException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Output.txt file format is wrong. File corrupted.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"     * Reads and processes the output.txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"     * @throws FileNotFoundException if the output.txt file is not found.","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"     * @throws CorruptedFileException if the output.txt file format is incorrect or corrupted.","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"     * @throws EmptyTodoException if a todo task in the output.txt file is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"    public static void readFile() throws FileNotFoundException, CorruptedFileException, EmptyTodoException {","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"        //open file for reading","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"        File f \u003d new File(\"data/output.txt\");","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"        Task.initArray();","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"        //iteration required so that programme knows which task to mark as done","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"        int iteration \u003d 0;","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"rexyyong"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"rexyyong"},"content":"            // Process each line (splitting by \"|\", for example)","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"rexyyong"},"content":"            String[] parts \u003d line.split(\"\\\\|\"); // Split the line by \"|\"","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"rexyyong"},"content":"            if (parts.length \u003c 3 || parts.length \u003e 5 ) {","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"rexyyong"},"content":"                throw new CorruptedFileException();","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"rexyyong"},"content":"            processFileText(parts, iteration);","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"rexyyong"},"content":"            iteration++;","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"rexyyong"},"content":"        s.close();","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"rexyyong"},"content":"     * Processes the content of the output.txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"rexyyong"},"content":"     * Adds tasks and marks tasks as done based on the text content.","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"rexyyong"},"content":"     * @param parts An array containing the parts of a line from the output.txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"rexyyong"},"content":"     * @param iteration The iteration count for identifying tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"rexyyong"},"content":"     * @throws EmptyTodoException if a todo task in the output.txt file is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"rexyyong"},"content":"    public static void processFileText (String[] parts, int iteration) throws EmptyTodoException {","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"rexyyong"},"content":"        String command;","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"rexyyong"},"content":"        switch (parts[0].trim().charAt(0)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"rexyyong"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"rexyyong"},"content":"            command \u003d \"todo \" + parts[2].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"rexyyong"},"content":"            Todo.addTodo(command);","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"rexyyong"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"rexyyong"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"rexyyong"},"content":"            command \u003d \"deadline \" + parts[2].trim() + \" /by \" + parts[3].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"rexyyong"},"content":"            Deadline.addDeadline(command);","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"rexyyong"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"rexyyong"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"rexyyong"},"content":"            command \u003d \"event \" + parts[2].trim() + \" /from \" + parts[3].trim() + \" /to \" + parts[4].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"rexyyong"},"content":"            Event.addEvent(command);","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"rexyyong"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"rexyyong"},"content":"        if (parts[1].trim().equals(\"1\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"rexyyong"},"content":"            command \u003d \"mark \" + iteration + 1;","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"rexyyong"},"content":"            Task.modifyDoneStateOrDelete(iteration + 1, command);","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"rexyyong":105}},{"path":"src/main/java/omoh/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyTaskNumberException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyTodoException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"import omoh.tasktypes.Todo;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"public class Ui {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"     * Reads user input from the console and performs corresponding actions based on the input.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"     * The method continues reading input until the user enters \"bye\".","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"     * Actions performed based on input:","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"     * - If input is empty, prompts the user to enter a non-empty input.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"     * - If input is \"list\", prints all tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"     * - If input starts with \"deadline\", adds a deadline task.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"     * - If input starts with \"todo\", adds a todo task.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"     * - If input starts with \"event\", adds an event task.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"     * - If input starts with \"mark\", \"unmark\", or \"delete\", modifies task status or deletes a task.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"     * - Otherwise, adds a general task.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"    public static void readUserInput() {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"        String line;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        while (!line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"            if (line.trim().isEmpty()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"                System.out.println(\"Please enter a non empty Input!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"            } else if (line.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"                Task.printAllTasks();","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"            } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"                Deadline.addDeadline(line);","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"            else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"                try {","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"                    Todo.addTodo(line);","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"                } catch (EmptyTodoException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"            else if (line.startsWith(\"event\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"                Event.addEvent(line);","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"            else if (line.startsWith(\"mark\") || line.startsWith(\"unmark\") || line.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"                try {","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"                    int taskNumber \u003d Parser.extractTaskNumber(line);","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"                    Task.modifyDoneStateOrDelete(taskNumber, line);","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"                    System.out.println(\"Please enter valid number without alphabets after mark or unmark or delete \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"                            \"Example: mark 1\");","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"                    System.out.println(\"Please enter valid number within boundaries of list. \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"                            \"Example: if list only has 2 items, dont enter beyond 2\");","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"                } catch (EmptyTaskNumberException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"            } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"                Task.findMatchingTasks(line);","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"            } else {","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"rexyyong"},"content":"                System.out.println(\"Please enter a valid user command!\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"rexyyong"},"content":"                        \"You may refer to the user guide for more information about valid user commands :)\");","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"rexyyong"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"rexyyong":69}},{"path":"src/main/java/omoh/customexceptions/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.customexceptions;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class CorruptedFileException extends Exception {","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"rexyyong":4}},{"path":"src/main/java/omoh/customexceptions/EmptyFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.customexceptions;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class EmptyFindException extends Exception {","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"    public EmptyFindException() {","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Please enter non empty keyword after find!\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"                \" for example, find book\");","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"rexyyong":9}},{"path":"src/main/java/omoh/customexceptions/EmptyTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.customexceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class EmptyTaskNumberException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"    public EmptyTaskNumberException() {","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Please enter a number after mark or unmark or delete \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"                \"Example: mark 1\");","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"rexyyong":8}},{"path":"src/main/java/omoh/customexceptions/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.customexceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class EmptyTodoException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Todo cannot be empty! Please key in input in this format [Todo] [task]\"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"                + \"example: todo hang clothes\");","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"rexyyong":8}},{"path":"src/main/java/omoh/customexceptions/IllegalDeadlineInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.customexceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class IllegalDeadlineInput extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"rexyyong":4}},{"path":"src/main/java/omoh/customexceptions/IllegalEventInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.customexceptions;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class IllegalEventInput extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"rexyyong":5}},{"path":"src/main/java/omoh/tasktypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.tasktypes;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import omoh.Omoh;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import omoh.Parser;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.IllegalDeadlineInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"    protected String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"        //parent class sets String description and bool isDone","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"     * @return A string representing the Deadline task, including its task status, description, and due date.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        return by;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"     * Prints a message indicating that a Deadline task has been added.","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"     * @param description The Deadline task that has been added.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"    public static void printDeadline (Deadline description) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"[D][ ] \" + description.description + \" (by: \" + description.by + \")\" );","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"     * Adds a Deadline task based on the input string.","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"     * @param input The input string containing the Deadline task description and due date.","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"    public static void addDeadline (String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"            Deadline extractedInfo \u003d Parser.extractTaskAndDueDate(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"            Task.tasks.add(new Deadline(extractedInfo.description, extractedInfo.by));","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"            Task.totalTasks++;","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"            Deadline.printDeadline(extractedInfo);","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"        } catch (IllegalDeadlineInput e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Please enter non empty Input for Deadline in format [task] [/by] \" +","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"                    \"example: deadline hang clothes /by tomorrow\");","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"rexyyong":62}},{"path":"src/main/java/omoh/tasktypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.tasktypes;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import omoh.Parser;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.IllegalEventInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import omoh.Omoh;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"    protected String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"    protected String to;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"        return from;","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"        return to;","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"     * Prints a message indicating that an event task has been added.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"     * @param description The Event object containing the details of the added event task.","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"    public static void addEventMessage (Event description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"[E][ ] \" + description.description + \" (from: \" + description.from","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"                + \" to: \" + description.to + \")\" );","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"     * Adds an event task based on the input string.","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"     * @param input The input string containing the event details.","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"    public static void addEvent (String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"            Event extractedInfo \u003d Parser.extractEvent(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"            Task.tasks.add(new Event(extractedInfo.description, extractedInfo.from, extractedInfo.to));","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"            Task.totalTasks++;","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"            Event.addEventMessage(extractedInfo);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"        } catch (IllegalEventInput e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Invalid Input for Event. Ensure that format follows \" +","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"                    \"event [task] [/from] [/to]\");","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"rexyyong"},"content":"     * @return A string representing the Event object, including its task status, description, start date, and end date.","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"rexyyong"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"rexyyong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"rexyyong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\" ;","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"rexyyong":69}},{"path":"src/main/java/omoh/tasktypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.tasktypes;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"import omoh.Omoh;","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import omoh.Parser;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyFindException;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyTaskNumberException;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"    protected static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"    public static int totalTasks \u003d 0;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"    protected String type;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"     * Initializes the tasks ArrayList.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"     * This method is called once in the main method to initialize the tasks ArrayList.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"    public static void initArray() {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"     * Returns the status icon of the task (X for done, empty for not done).","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"     * Gets all tasks and prints them.","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"    public static void getAllTasks() {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"rexyyong"},"content":"        int serialNumber \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"            System.out.println(serialNumber + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"rexyyong"},"content":"            serialNumber +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"rexyyong"},"content":"     * Writes tasks to the output file.","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"rexyyong"},"content":"     * Format of tasks is shown below","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"rexyyong"},"content":"     * taskType | isMark | description | etc","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"rexyyong"},"content":"     * @throws IOException if an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"rexyyong"},"content":"    public static void writeToFile() throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rexyyong"},"content":"        FileWriter fw \u003d new FileWriter(\"data/output.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rexyyong"},"content":"        for(int i \u003d 0; i \u003c totalTasks ; i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rexyyong"},"content":"            String taskType \u003d tasks.get(i).type;","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"rexyyong"},"content":"            int isMark \u003d tasks.get(i).isDone ? 1 : 0;","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rexyyong"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"rexyyong"},"content":"            case \"T\":","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"rexyyong"},"content":"                fw.write(taskType + \" | \" + isMark + \" | \" + tasks.get(i).description);","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"rexyyong"},"content":"                break;","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"rexyyong"},"content":"            case \"D\":","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"rexyyong"},"content":"                Deadline deadline \u003d (Deadline) tasks.get(i); // Casting to Deadline","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"rexyyong"},"content":"                fw.write(taskType + \" | \" + isMark + \" | \" + tasks.get(i).description + \" | \" + deadline.getBy());","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"rexyyong"},"content":"                break;","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"rexyyong"},"content":"            case \"E\":","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"rexyyong"},"content":"                Event event \u003d (Event) tasks.get(i); //Casting to event","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"rexyyong"},"content":"                fw.write(taskType + \" | \" + isMark + \" | \" + tasks.get(i).description +","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"rexyyong"},"content":"                        \" | \" + event.getFrom() + \" | \" + event.getTo());","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"rexyyong"},"content":"                break;","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"rexyyong"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"rexyyong"},"content":"        fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"rexyyong"},"content":"     * Modifies the status of a task (done or not done) or deletes a task.","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"rexyyong"},"content":"     * @param taskNumber The number of the task to be modified or deleted.","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"rexyyong"},"content":"     * @param input The user input specifying whether to mark, unmark, or delete the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"rexyyong"},"content":"     * @throws IndexOutOfBoundsException if the task number is invalid.","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"rexyyong"},"content":"    public static void modifyDoneStateOrDelete(int taskNumber, String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"rexyyong"},"content":"            if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"rexyyong"},"content":"                tasks.get(taskNumber - 1).isDone \u003d true;","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"rexyyong"},"content":"                printMarkTask(taskNumber, input);","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"rexyyong"},"content":"            } else if (input.startsWith(\"unmark\")){","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"rexyyong"},"content":"                tasks.get(taskNumber - 1).isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"rexyyong"},"content":"                printMarkTask(taskNumber, input);","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"rexyyong"},"content":"            } else if (input.startsWith(\"delete\")){","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"rexyyong"},"content":"                if (totalTasks \u003d\u003d 0 || totalTasks \u003c taskNumber) {","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"rexyyong"},"content":"                    throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"rexyyong"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"rexyyong"},"content":"                printDeleteTask(taskNumber);","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"rexyyong"},"content":"     * Prints a message indicating that a task has been deleted.","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"rexyyong"},"content":"     * @param index The index of the task that is to be deleted.","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"rexyyong"},"content":"    public static void printDeleteTask(int index) {","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"rexyyong"},"content":"        //need to print out task that we deleted before we actually remove it because","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"rexyyong"},"content":"        //once we remove th task, we can\u0027t retrieve it anymore","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"rexyyong"},"content":"        System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"rexyyong"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"rexyyong"},"content":"        totalTasks--;","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"rexyyong"},"content":"     * Prints a message indicating that a task has been marked as done or not done.","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"rexyyong"},"content":"     * @param index The index of the task that has been marked.","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"rexyyong"},"content":"     * @param input The user input specifying whether to mark the task as done or not done.","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"rexyyong"},"content":"    public static void printMarkTask(int index, String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"rexyyong"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"rexyyong"},"content":"            System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"rexyyong"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"OK, I\u0027ve marked his task as not done yet:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"rexyyong"},"content":"            System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"rexyyong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"rexyyong"},"content":"     * @return A string representing the task, including its status icon and description.","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"rexyyong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"rexyyong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"rexyyong"},"content":"     * Prints all tasks stored in the tasks ArrayList.","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"rexyyong"},"content":"    public static void printAllTasks() {","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"rexyyong"},"content":"        Task.getAllTasks();","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":168,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"rexyyong"},"content":"    //finds matching tasks based on user input","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"rexyyong"},"content":"    public static void findMatchingTasks (String line) {","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"rexyyong"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"rexyyong"},"content":"            String keyword \u003d Parser.extractKeyword(line);","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"rexyyong"},"content":"            ArrayList\u003cString\u003e findResult \u003d searchTasks(keyword);","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"rexyyong"},"content":"            printFindResults(findResult);","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"rexyyong"},"content":"        } catch (EmptyFindException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"rexyyong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"rexyyong"},"content":"    public static ArrayList\u003cString\u003e searchTasks(String keyword) {","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"rexyyong"},"content":"        ArrayList\u003cString\u003e findResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"rexyyong"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"rexyyong"},"content":"            if (tasks.get(i).description.contains(keyword)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"rexyyong"},"content":"                findResult.add(tasks.get(i).toString());","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"rexyyong"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"rexyyong"},"content":"        return findResult;","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"rexyyong"},"content":"    public static void printFindResults(ArrayList\u003cString\u003e findResult) {","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"rexyyong"},"content":"        if(findResult.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"There were no matching tasks found :(\");","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"rexyyong"},"content":"            Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"rexyyong"},"content":"            return;","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"rexyyong"},"content":"        int serialNumber \u003d 1;","lastModifiedDate":"2024-02-29"},{"lineNumber":200,"author":{"gitId":"rexyyong"},"content":"        for (String s : findResult) {","lastModifiedDate":"2024-02-29"},{"lineNumber":201,"author":{"gitId":"rexyyong"},"content":"            System.out.println(serialNumber + \".\" + s);","lastModifiedDate":"2024-02-29"},{"lineNumber":202,"author":{"gitId":"rexyyong"},"content":"            serialNumber++;","lastModifiedDate":"2024-02-29"},{"lineNumber":203,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":204,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-29"},{"lineNumber":205,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":206,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"rexyyong":208}},{"path":"src/main/java/omoh/tasktypes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package omoh.tasktypes;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"import omoh.Omoh;","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import omoh.customexceptions.EmptyTodoException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"        super(description);","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"     * Adds a todo task based on the input string.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"     * @param input The input string containing the todo task description.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"     * @throws EmptyTodoException if the description of the todo task is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"    public static void addTodo (String input) throws EmptyTodoException {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"        //extracts task portion from input, after the \"todo\" keyword","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"        String description \u003d input.substring(\"todo\".length()).trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"            throw new EmptyTodoException();","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"        Task.tasks.add(new Todo(description));","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"        Task.totalTasks++;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"        printTodoMessage(Task.tasks.get(Task.totalTasks - 1));","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"     * Prints a message indicating that a todo task has been added.","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"     * @param description The todo task that has been added.","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"    public static void printTodoMessage (Task description) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"[T][ ] \" + description.description);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"        Omoh.printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"     * @return A string representing the Todo task, including its task status and description.","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"rexyyong":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"todo borrow book","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"event Go supper /from 12am /to","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"delete 3","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"rexyyong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"mark 1b","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"mark 3","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"unmark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"unmark 3","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"unmark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"unmark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"mark 5","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"unmark 50","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"deadline Assingment /by","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"delete 100","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"find book","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"list","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"mark 1","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"mark 2","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"find book","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"find","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"asdf","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"12423","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"ded asdf","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"bye","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"rexyyong":38}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\omoh\\*.java ..\\src\\main\\java\\omoh\\customexceptions\\*.java ..\\src\\main\\java\\omoh\\tasktypes\\*.java","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"java -classpath ..\\bin omoh.Omoh \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rexyyong":2,"-":19}}]
