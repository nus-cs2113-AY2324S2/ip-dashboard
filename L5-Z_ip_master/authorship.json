[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":" * Represents an Enum of the available commands for the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"public enum Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    BYE,","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"    MARK,","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"    UNMARK,","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    LIST,","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"    TODO,","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    EVENT,","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    HELP,","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    DELETE,","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"    FIND","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"L5-Z":15}},{"path":"src/main/java/CommandHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":" * Represents user input parsing and handling","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":" * before providing feedback to the user.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"public class CommandHandling {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"     * Processes user input and filters for valid command words from enum {@code Command},","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"     * then creates the relevant {@code Task} object based on details entered.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The tasks list to be managed, adding the relevant {@code Task} object into the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"     * @throws IOException If an error occurs during file operations.","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during command processing.","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    public static void processInput(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"        while (true) {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"            // Convert to uppercase before processing","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"            String instruction \u003d userInput.toUpperCase().split(\" \")[0];","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"            try {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"                Command command \u003d Command.valueOf(instruction);","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"                switch (command) {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"                case BYE:","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"                    return;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"                case MARK:","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"                case UNMARK:","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"                    handleMarkUnmark(userInput, tasks, command);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"                case LIST:","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"                    List.handleTasks(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"                case TODO:","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"                    handleToDo(tasks, userInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"                case EVENT:","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"                    handleEvent(tasks, userInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"                case DEADLINE:","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"                    handleDeadline(tasks, userInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"                case HELP:","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"                    Reply.printHelp();","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"                case DELETE:","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"                    deleteItem(tasks, userInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"                case FIND:","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"                    List.searchList(tasks, userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"                Reply.printException(e, Reply.INVALID_COMMAND);","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"            } catch (CustomException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"                Reply.printException(e);","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"L5-Z"},"content":"            Persistence.saveTasks(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"L5-Z"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code Event} task object based on the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The tasks list to be managed, adding the relevant {@code Event} object into the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If the {@code Event} details are unspecified or invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"L5-Z"},"content":"    private static void handleEvent(ArrayList\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"L5-Z"},"content":"        int taskCount \u003d List.getTotal(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"L5-Z"},"content":"        String eventDetails \u003d userInput.substring(Constant.EVENT_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"L5-Z"},"content":"        if (eventDetails.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"L5-Z"},"content":"        String[] eventParameters \u003d Event.getInterval(eventDetails);","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"        String eventLabel \u003d eventParameters[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"L5-Z"},"content":"        Event event \u003d new Event(eventLabel, eventParameters[1], eventParameters[2]);","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"L5-Z"},"content":"        List.addTask(tasks, event);","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"L5-Z"},"content":"        Reply.printReply(event, taskCount+1);","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code Deadline} task object based on the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The tasks list to be managed, adding the relevant {@code Deadline} object into the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If the {@code Deadline} details are unspecified or invalid.","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"L5-Z"},"content":"    private static void handleDeadline(ArrayList\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"L5-Z"},"content":"        int taskCount \u003d List.getTotal(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"L5-Z"},"content":"        String deadlineDetails \u003d userInput.substring(Constant.DEADLINE_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"L5-Z"},"content":"        if (deadlineDetails.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"L5-Z"},"content":"        String[] deadlineParameters \u003d Deadline.getDeadline(deadlineDetails);","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"L5-Z"},"content":"        String deadlineLabel \u003d deadlineParameters[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"L5-Z"},"content":"        Deadline deadline \u003d new Deadline(deadlineLabel, deadlineParameters[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"L5-Z"},"content":"        List.addTask(tasks, deadline);","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"L5-Z"},"content":"        Reply.printReply(deadline, taskCount+1);","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code ToDo} task object based on the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The tasks list to be managed, adding the relevant {@code ToDo} object into the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If the {@code ToDo} label is unspecified.","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"L5-Z"},"content":"    private static void handleToDo(ArrayList\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"L5-Z"},"content":"        int taskCount \u003d List.getTotal(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"L5-Z"},"content":"        String label \u003d userInput.substring(Constant.TODO_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"L5-Z"},"content":"        if (label.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"L5-Z"},"content":"        ToDo toDo \u003d new ToDo(label);","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"L5-Z"},"content":"        List.addTask(tasks, toDo);","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"L5-Z"},"content":"        Reply.printReply(toDo, taskCount+1);","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":158,"author":{"gitId":"L5-Z"},"content":"     * Updates completion of a task, marking or unmarking the specified task based on user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":159,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":160,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The task index to mark or unmark completed.","lastModifiedDate":"2024-03-03"},{"lineNumber":161,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The tasks list to be managed.","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"L5-Z"},"content":"     * @param command The command (MARK or UNMARK) to be executed.","lastModifiedDate":"2024-03-03"},{"lineNumber":163,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If the task index is invalid or unspecified.","lastModifiedDate":"2024-03-03"},{"lineNumber":164,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":165,"author":{"gitId":"L5-Z"},"content":"    private static void handleMarkUnmark(String userInput, ArrayList\u003cTask\u003e tasks, Command command) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"L5-Z"},"content":"        String index \u003d userInput.substring(command \u003d\u003d Command.MARK ? Constant.MARK_OFFSET : Constant.UNMARK_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"L5-Z"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":168,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-02-17"},{"lineNumber":169,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":170,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":171,"author":{"gitId":"L5-Z"},"content":"        int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"L5-Z"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d List.getTotal(tasks)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.INVALID_PARAMETER);","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"L5-Z"},"content":"        Task markTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"L5-Z"},"content":"        markTask.setCompleted(command \u003d\u003d Command.MARK); // Use enum for logic","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"L5-Z"},"content":"        if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"L5-Z"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":181,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"L5-Z"},"content":"            System.out.println(\"Okay, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"L5-Z"},"content":"        System.out.println(markTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":185,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":187,"author":{"gitId":"L5-Z"},"content":"     * Deletes a specified task from the list based on the provided user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":188,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":189,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The tasks list to be managed.","lastModifiedDate":"2024-03-03"},{"lineNumber":190,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The task index to delete from the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":191,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If the task index is invalid or unspecified.","lastModifiedDate":"2024-03-03"},{"lineNumber":192,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":193,"author":{"gitId":"L5-Z"},"content":"    public static void deleteItem(ArrayList\u003cTask\u003e tasks, String userInput) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"L5-Z"},"content":"        String index \u003d userInput.substring(Constant.DELETE_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"L5-Z"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":199,"author":{"gitId":"L5-Z"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"L5-Z"},"content":"            int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"L5-Z"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d List.getTotal(tasks)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":202,"author":{"gitId":"L5-Z"},"content":"                throw new CustomException(Reply.INVALID_PARAMETER);","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"L5-Z"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":204,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"L5-Z"},"content":"            Reply.printReply(\"Deleted: \" + (taskIndex + 1) + \". \" + tasks.get(taskIndex));","lastModifiedDate":"2024-02-22"},{"lineNumber":206,"author":{"gitId":"L5-Z"},"content":"            List.removeTask(tasks, taskIndex);","lastModifiedDate":"2024-02-22"},{"lineNumber":207,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":208,"author":{"gitId":"L5-Z"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":209,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.INVALID_PARAMETER);","lastModifiedDate":"2024-02-22"},{"lineNumber":210,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":213,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":214,"author":{"gitId":"L5-Z"},"content":"     * Initializes the Jarvas bot by printing a welcome message, loading tasks from storage,","lastModifiedDate":"2024-03-03"},{"lineNumber":215,"author":{"gitId":"L5-Z"},"content":"     * and returning the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":216,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":217,"author":{"gitId":"L5-Z"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":218,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":219,"author":{"gitId":"L5-Z"},"content":"    public static ArrayList\u003cTask\u003e initialiseBot() {","lastModifiedDate":"2024-02-22"},{"lineNumber":220,"author":{"gitId":"L5-Z"},"content":"        Reply.printWelcomeMessage();","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"L5-Z"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(Constant.MAX_TASKS);","lastModifiedDate":"2024-02-22"},{"lineNumber":222,"author":{"gitId":"L5-Z"},"content":"        Persistence.loadTasks(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":223,"author":{"gitId":"L5-Z"},"content":"        return tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":224,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":226,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":227,"author":{"gitId":"L5-Z"},"content":"     * Terminates the Jarvas bot by saving tasks to storage, printing a goodbye message,","lastModifiedDate":"2024-03-03"},{"lineNumber":228,"author":{"gitId":"L5-Z"},"content":"     * and indicating the filename where tasks are saved.","lastModifiedDate":"2024-03-03"},{"lineNumber":229,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":230,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-03-03"},{"lineNumber":231,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":232,"author":{"gitId":"L5-Z"},"content":"    public static void terminateBot(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":233,"author":{"gitId":"L5-Z"},"content":"        Persistence.saveTasks(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":234,"author":{"gitId":"L5-Z"},"content":"        Reply.printGoodbyeMessage();","lastModifiedDate":"2024-02-17"},{"lineNumber":235,"author":{"gitId":"L5-Z"},"content":"        Reply.printReply(\"Saved tasks as: \" + Constant.FILE_NAME);","lastModifiedDate":"2024-02-22"},{"lineNumber":236,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":237,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"L5-Z":237}},{"path":"src/main/java/Constant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" * Represents all constant variables, excluding pre-programmed error replies, used in the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"public class Constant {","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"    // Used in CommandHandling.java","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"    public static final int MARK_OFFSET \u003d 4;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    public static final int UNMARK_OFFSET \u003d 6;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    public static final int TODO_OFFSET \u003d 4;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    public static final int EVENT_OFFSET \u003d 5;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    public static final int DEADLINE_OFFSET \u003d 8;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"    public static final int DELETE_OFFSET \u003d 6;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    public static final int FIND_OFFSET \u003d 4;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    public static final int ARRAY_START_INDEX \u003d 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"    // Used in Persistence.java","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    public static final String FILE_NAME \u003d \"saveFile.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"    public static final File SAVE_FILE \u003d new File(Constant.FILE_NAME);","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"    // Used in Event.java","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"    public static final int EVENT_PARAMETERS \u003d 3;","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"    public static final int EVENT_FROM_OFFSET \u003d 6;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    public static final int EVENT_TO_OFFSET \u003d 3;","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"    // Used in Deadline.java","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"    public static final int DEADLINE_PARAMETERS \u003d 2;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"    public static final int DEADLINE_BY_OFFSET \u003d 3;","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"L5-Z":31}},{"path":"src/main/java/CustomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":" * Represents a custom exception class designed for Jarvas to handle errors during command processing.","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"public class CustomException extends RuntimeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new CustomException with the specified error message.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"     * @param message The error message to be associated with this exception.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    public CustomException(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"        super(\"\\n\" + \"Error Occurred: \" + \"\\n\" + message + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"L5-Z":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":" * Represents the {@code Deadline} task with a label and a due date for the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    protected String due;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code Deadline} task object.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"     * @param label Label of the {@code Deadline} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"     * @param due Deadline for the {@code Deadline} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    public Deadline(String label, String due) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"        super(label);","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"     * Parses a string containing Deadline information, extracts the label and due date before returning","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"     * an array of strings containing the information.","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"     * @param input A string containing the Deadline information in the format \"label /by deadline\".","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"     * @return An array of strings containing the extracted label and due date.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    public static String[] getDeadline(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"        String[] results \u003d new String[Constant.DEADLINE_PARAMETERS];","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"        int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"        String label \u003d input.substring(0, index).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"        String deadline \u003d input.substring(index + Constant.DEADLINE_BY_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"        results[0] \u003d label;","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"        results[1] \u003d deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"        return results;","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"     * Retrieves the string representation of the {@code Deadline} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code toString} method from the parent {@code Task} class.","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"     * @return A formatted string representing the {@code Deadline} task,","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"     * including the symbol representing completion status, description and the deadline.","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + due + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the {@code Deadline} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code getType} method from the parent {@code Task} class.","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing {@code Deadline} tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"    public String getType() {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"        return \"DEADLINE\";","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the associated deadline to the {@code Deadline} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code getRange} method from the parent {@code Task} class, and returns.","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"     * @return The time range associated with the Deadline task, which is the due date.","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"    public String getRange() {","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"        return due;","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"L5-Z":78}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":" * Represents the {@code Event} task including a label and time interval information for the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    protected String from;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"    protected String to;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code Event} task object.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"     * @param label Label of the {@code Event} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"     * @param from Start time for the {@code Event} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"     * @param to End time for the {@code Event} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    public Event(String label, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"        super(label);","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"     * Parses a string containing Event information, extracts the label, start time and end time before returning","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"     * an array of strings containing the information.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"     * @param input A string containing the Event information in the format \"label /from start /to end\".","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"     * @return An array of strings containing the extracted label, start time and end time.","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"    public static String[] getInterval(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"        String[] results \u003d new String[Constant.EVENT_PARAMETERS];","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"        int indexFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"        int indexTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"        String label \u003d input.substring(0, indexFrom).trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"        String fromSubstring \u003d input.substring(indexFrom + Constant.EVENT_FROM_OFFSET, indexTo).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"        String toSubstring \u003d input.substring(indexTo + Constant.EVENT_TO_OFFSET).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"        results[0] \u003d label;","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"        results[1] \u003d fromSubstring;","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"        results[2] \u003d toSubstring;","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"        return results;","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"     * Retrieves the string representation of the {@code Event} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code toString} method from the parent {@code Task} class.","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"     * @return A formatted string representing the {@code Event} task,","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"     * including the symbol representing completion status, description and the time range.","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the {@code Event} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code getType} method from the parent {@code Task} class.","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing {@code Event} tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"    public String getType() {","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"        return \"EVENT\";","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the associated time range to the {@code Event} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code getRange} method from the parent {@code Task} class, and returns.","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"     * @return The time range associated with the Event task, which is the start and end time.","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"    public String getRange() {","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"        return from + \":\" + to;","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"L5-Z":84}},{"path":"src/main/java/Jarvas.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":" * Represents the Jarvas chatbot.","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"public class Jarvas {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     * Executes the Jarvas bot. The full procedure of initialising, processing and terminating is executed.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"     * @param args Command-line arguments from the user.","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during the execution of the command.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"        ArrayList\u003cTask\u003e tasks \u003d CommandHandling.initialiseBot();","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"            CommandHandling.processInput(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.SAVE_ERROR + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"            Reply.printException(e);","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"        } finally {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"            CommandHandling.terminateBot(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"L5-Z":24,"-":2}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":" * Represents management and display of the task list.","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"public class List {","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be modified.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"     * @param task The new task to be added.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    public static void addTask(ArrayList\u003cTask\u003e tasks, Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be counted.","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"     * @return The total number of tasks in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    public static int getTotal (ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"     * Removes a task from the list based on its index.","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be modified.","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"     * @throws IndexOutOfBoundsException If the provided index is out of bounds.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"    public static void removeTask(ArrayList\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"     * Prints the details of all tasks in the list, or displays a message if the list is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"    public static void handleTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"        if (List.getTotal(tasks) \u003d\u003d Constant.ARRAY_START_INDEX) {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"            Reply.printReply(Reply.EMPTY_LIST);","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"            return;","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"        Reply.printReply(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"            System.out.println(taskIndex + \". \"  + task.toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"            taskIndex++;","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"        Reply.printLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"     * Searches all tasks in the provided list matching the search query parameter","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"     * or displays a message if there are no matches.","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be searched.","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"     * @param userInput A string representing the user input, typically containing a search query.","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"     *                  The expected format is \"find\" followed by a space and the desired search term.","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If the user input is empty, indicating a missing search term.","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"    public static void searchList(ArrayList\u003cTask\u003e tasks, String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"        String query \u003d userInput.substring(Constant.FIND_OFFSET).trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"        if (query.isEmpty()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"                .filter((t) -\u003e t.getLabel().contains(query))","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"            Reply.printReply(Reply.NO_RESULTS);","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"            Reply.printSearch(filteredList);","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"L5-Z":88}},{"path":"src/main/java/Persistence.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":" * Represents the Storage interface for the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":" * Used for reading and writing from data files.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"public class Persistence {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"     * Saves the list of tasks to a file.","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during file operations.","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"        try (FileWriter writer \u003d new FileWriter(Constant.FILE_NAME)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"            // Write each task in a specific format","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"                writer.write(task.getType() + \":\" + task.getLabel() + \":\" + task.getRange() + \":\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"                        task.getStatusIcon() + \u0027\\n\u0027);","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"            writer.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.SAVE_ERROR);","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"     * Verifies the integrity of the data file, checking if it exists and if it\u0027s readable.","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"     * If not, it creates a data file, a message is printed indicating the missing file","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"     * and the program continues with an empty list.","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"     * If the file exists but cannot be read, an exception is thrown.","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"     * @param data The {@code File} object representing the data file to be verified.","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"     * @throws IOException If an I/O error occurs during file operations.","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"    public static void verifyIntegrity(File data) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"        if (data.createNewFile()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"            Reply.printReply(Reply.MISSING_FILE);","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"        } else if (data.canRead()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"            Reply.printReply(Reply.SUCCESSFUL_LOAD);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"            Reply.printReply(Reply.MISSING_FILE);","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"     * Loads tasks to the list of tasks from a given specific file name.","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"     * If the file doesn\u0027t exist or is empty, an empty list is returned.","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to be loaded into that may be empty initially.","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during file operations or the file","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"     * representing the saved tasks cannot be found.","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"    public static void loadTasks(ArrayList\u003cTask\u003e tasks) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"        try (final Scanner scanner \u003d new Scanner(Constant.SAVE_FILE)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"            verifyIntegrity(Constant.SAVE_FILE);","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"                String[] task \u003d scanner.nextLine().split(\":\");","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"                String input \u003d task[0].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"                try {","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"                    Command command \u003d Command.valueOf(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"                    switch (command) {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"                    case TODO:","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"                        spawnToDo(tasks, task, taskCount);","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"                        break;","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"                        spawnDeadline(tasks, task, taskCount);","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"                        break;","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"                    case EVENT:","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"                        spawnEvent(tasks, task, taskCount);","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"                        break;","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"                    }","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"L5-Z"},"content":"                    Reply.printException(e, Reply.LOAD_ERROR + (taskCount + 1) + Reply.ERROR_CORRUPT);","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"L5-Z"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"                taskCount++;","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"            throw new CustomException(Reply.LOAD_ERROR + (taskCount + 1));","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"L5-Z"},"content":"     * Converts a string array representing a saved Deadline task back into a Deadline object","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"L5-Z"},"content":"     * and adds it to the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to add the Deadline to.","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"L5-Z"},"content":"     * @param task The string array representing the saved Deadline task.","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"L5-Z"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during task creation.","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"L5-Z"},"content":"    public static void spawnDeadline(ArrayList\u003cTask\u003e tasks,String[] task, int taskCount) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"L5-Z"},"content":"        String label \u003d task[1].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"L5-Z"},"content":"        String due \u003d task[2].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"L5-Z"},"content":"        boolean isCompleted \u003d !task[3].trim().isEmpty();","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"L5-Z"},"content":"        Deadline deadline \u003d new Deadline(label, due);","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"L5-Z"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"L5-Z"},"content":"        updateCompletion(tasks, isCompleted, taskCount);","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"L5-Z"},"content":"     * Converts a string array representing a saved Event task back into an Event object","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"L5-Z"},"content":"     * and adds it to the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":125,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to add the Event to.","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"L5-Z"},"content":"     * @param task The string array representing the saved Event task.","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"L5-Z"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during task creation.","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"L5-Z"},"content":"    public static void spawnEvent(ArrayList\u003cTask\u003e tasks,String[] task, int taskCount) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"L5-Z"},"content":"        String label \u003d task[1].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"L5-Z"},"content":"        String from \u003d task[2].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"L5-Z"},"content":"        String to \u003d task[3].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"L5-Z"},"content":"        boolean isCompleted \u003d !task[4].trim().isEmpty();","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"L5-Z"},"content":"        Event event \u003d new Event(label, from, to);","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"L5-Z"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"L5-Z"},"content":"        updateCompletion(tasks, isCompleted, taskCount);","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"L5-Z"},"content":"     * Converts a string array representing a saved ToDo task back into a ToDo object","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"L5-Z"},"content":"     * and adds it to the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to add the ToDo to.","lastModifiedDate":"2024-03-03"},{"lineNumber":150,"author":{"gitId":"L5-Z"},"content":"     * @param task The string array representing the saved ToDo task.","lastModifiedDate":"2024-03-03"},{"lineNumber":151,"author":{"gitId":"L5-Z"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":152,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during task creation.","lastModifiedDate":"2024-03-03"},{"lineNumber":153,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":154,"author":{"gitId":"L5-Z"},"content":"    public static void spawnToDo(ArrayList\u003cTask\u003e tasks,String[] task, int taskCount) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"L5-Z"},"content":"        String label \u003d task[1].trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"L5-Z"},"content":"        boolean isCompleted \u003d !task[3].trim().isEmpty();","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"L5-Z"},"content":"        ToDo toDo \u003d new ToDo(label);","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"L5-Z"},"content":"        tasks.add(toDo);","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"L5-Z"},"content":"        updateCompletion(tasks, isCompleted, taskCount);","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":163,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":164,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":165,"author":{"gitId":"L5-Z"},"content":"     * Updates the completion status of a task in the tasks list based on a provided boolean value.","lastModifiedDate":"2024-03-03"},{"lineNumber":166,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":167,"author":{"gitId":"L5-Z"},"content":"     * @param tasks The list of tasks to update.","lastModifiedDate":"2024-03-03"},{"lineNumber":168,"author":{"gitId":"L5-Z"},"content":"     * @param value A boolean value representing the new completion status (true for completed, false for incomplete).","lastModifiedDate":"2024-03-03"},{"lineNumber":169,"author":{"gitId":"L5-Z"},"content":"     * @param taskCount The index of the task in the list to update.","lastModifiedDate":"2024-03-03"},{"lineNumber":170,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomException If an error occurs during task update.","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":172,"author":{"gitId":"L5-Z"},"content":"    public static void updateCompletion(ArrayList\u003cTask\u003e tasks, boolean value, int taskCount) throws CustomException {","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"L5-Z"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":174,"author":{"gitId":"L5-Z"},"content":"            tasks.get(taskCount).setCompleted(value);","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"L5-Z"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":176,"author":{"gitId":"L5-Z"},"content":"            Reply.printException(e);","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":178,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"L5-Z":180}},{"path":"src/main/java/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":" * Represents the user interface of the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"public class Reply {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"    public static final String PARTITION_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"    // Input Errors","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    public static final String INVALID_COMMAND \u003d \"Invalid command. Enter \u0027help\u0027 to view available commands.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    public static final String UNSPECIFIED_PARAMETER \u003d \"Parameter is unspecified.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    public static final String INVALID_PARAMETER \u003d \"Parameter is invalid and out of bounds\";","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"    // List Errors","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    public static final String EMPTY_LIST \u003d \"List is empty.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    public static final String NO_RESULTS \u003d \"There are no results that match your search query.\\n\";","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"    // Storage Replies","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    public static final String SAVE_ERROR \u003d \"File save failed.\\nWrite error occurred:\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"    public static final String MISSING_FILE \u003d \"Data file not found/corrupted. Starting with an empty list.\";","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"    public static final String LOAD_ERROR \u003d \"File read error:\\n\" + \"Error at task number \u003d \";","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"    public static final String ERROR_CORRUPT \u003d \"\\nFile is corrupted. Ceasing any further data imports.\";","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"    public static final String SUCCESSFUL_LOAD \u003d \"Prior data file found\\n\" + \"Previous data has been imported.\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"        System.out.println(PARTITION_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"     * Prints the help message.","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Commands List:\" + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"list - prints out the List\");","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"man - procures utility commands\u0027 usage\");","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"help - procures command list\");","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"bye - terminates the bot\");","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"todo - adds an item to the List\");","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"event - adds an event to the List\");","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"deadline - adds a deadline to the List\");","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"mark - indicates an item on the List as done\");","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"unmark - indicates an item on the List as not done\");","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"delete - deletes a task from the List\");","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"todo format: todo *parameter*\");","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"event format: event *parameter* /from *start time* /to *end time*\");","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"deadline format: deadline *parameter* /by *end time*\");","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"unmark format: unmark *index*\");","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"mark format: mark *index*\");","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"delete format: delete *index*\");","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"     * Prints a formatted message containing the original user input sandwiched between two horizontal lines.","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"     * @param reply The user input string to be formatted.","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"    public static void printReply(String reply) {","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"        System.out.println(reply);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"     * Prints a formatted message containing the original user input sandwiched between two horizontal lines.","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"     * Prints two user input strings separated by a newline character","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"     * @param firstString The first user input string to be formatted.","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"     * @param secondString The second user input string to be formatted.","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"    public static void printReply(String firstString, String secondString) {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"        System.out.println(firstString);","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"        System.out.println(secondString);","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"     * Prints a formatted message to feedback a newly added task back to the user,","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"L5-Z"},"content":"     * followed by the updated tally of the tasks list, sandwiched between two horizontal lines.","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"L5-Z"},"content":"     * @param task The {@code Task} object added to the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"     * @param total The total number of tasks in the tasks list.","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"    public static void printReply(Task task, int total) {","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Got it. I\u0027ve added: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"L5-Z"},"content":"        if (total \u003d\u003d 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"            System.out.println(\"You now have \" + total + \" task in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"L5-Z"},"content":"            System.out.println(\"You now have \" + total + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"L5-Z"},"content":"     * Prints an ASCII Art depicting the word \u0027Jarvas\u0027.","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"    public static void printArt() {","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\" _____                                  \");","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"(___  )                                 \");","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"    | |   _ _  _ __  _   _    _ _   ___ \");","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\" _  | | /\u0027_` )( \u0027__)( ) ( ) /\u0027_` )/\u0027,__)\");","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"( )_| |( (_| || |   | \\\\_/ |( (_| |\\\\__, \\\\\");","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"`\\\\___/\u0027`\\\\__,_)(_)   `\\\\___/\u0027`\\\\__,_)(____/\");","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"L5-Z"},"content":"     * Prints the startup message.","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"L5-Z"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"L5-Z"},"content":"        printArt();","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"L5-Z"},"content":"        printReply(\"Hello! I\u0027m Jarvas\", \"What can I do for you?\");","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"L5-Z"},"content":"     * Prints the shutdown message.","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"L5-Z"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"L5-Z"},"content":"        printReply(\"Have a good day!\", \"Bye, see you soon!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"L5-Z"},"content":"     * Prints out the error message if any.","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"L5-Z"},"content":"     * @param e A string representing the error message to print.","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"L5-Z"},"content":"    public static void printException(CustomException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"L5-Z"},"content":"        System.err.println(\"Custom Exception Caught!\" + \"\\n\" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"L5-Z"},"content":"        Reply.printLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"L5-Z"},"content":"     * Prints out the error message if any.","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"L5-Z"},"content":"     * @param e A string representing the error message to print.","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"L5-Z"},"content":"     * @param input A string representing a custom error message to print.","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"L5-Z"},"content":"    public static void printException(Exception e, String input) {","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"L5-Z"},"content":"        System.err.println(\"Custom Exception Caught!\\n\" + input + \"\\n\\n\" + e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"L5-Z"},"content":"        Reply.printLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":152,"author":{"gitId":"L5-Z"},"content":"     * Prints out the search results.","lastModifiedDate":"2024-03-03"},{"lineNumber":153,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":154,"author":{"gitId":"L5-Z"},"content":"     * @param filteredList An ArrayList of {@code Task} to print containing the search results.","lastModifiedDate":"2024-03-03"},{"lineNumber":155,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":156,"author":{"gitId":"L5-Z"},"content":"    public static void printSearch(ArrayList\u003cTask\u003e filteredList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":157,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"L5-Z"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"L5-Z"},"content":"        for (Task t : filteredList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"L5-Z"},"content":"            System.out.println((taskIndex + 1) + \". \"  + filteredList.get(taskIndex));","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"L5-Z"},"content":"            taskIndex++;","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"L5-Z":169}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":" * Represents a general {@code Task} for the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    protected String label;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"     * @param input Label of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    public Task(String input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"        this.label \u003d input;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"     * Returns a symbol representing the completion status of a task.","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing completion status of a {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"        return (isCompleted ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"     * Marks the task as done or not done based on {@code isCompleted} parameter.","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"     * If {@code isCompleted} is {@code true}, task is completed.","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"     * @param value A boolean variable representing completion status of task.","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"    public void setCompleted(boolean value) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"        this.isCompleted \u003d value;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the task type.","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"     * @return A string \u0027task\u0027 representing {@code Task} tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"    public abstract String getType();","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"     * Retrieves the label of a task.","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing the label of a {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"    public String getLabel(){","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"        return label;","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"    };","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the time range assigned to a {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing any time ranges associated with the {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"    public abstract String getRange();","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"     * Returns a formatted string representing the {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing a {@code Task} object.","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + label;","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"L5-Z":67}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":" * Represents the {@code ToDo} task for the Jarvas bot.","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code ToDo} task object.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     * @param label Label of the {@code ToDo} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    public ToDo(String label) {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"        super(label);","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"     * Retrieves the string representation of the {@code ToDo} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code toString} method from the parent {@code Task} class.","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"     * @return A formatted string representing the {@code ToDo} task,","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"     * including the symbol representing completion status and description.","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the {@code ToDo} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code getType} method from the parent {@code Task} class.","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"     * @return A string representing {@code ToDo} tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"    public String getType() {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"        return \"TODO\";","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"     * Retrieves a string representing the associated time range to the {@code ToDo} task.","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"     * Inherits the {@code getRange} method from the parent {@code Task} class, and returns.","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"     * @return The time range associated with the ToDo task, which is not applicable.","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"    public String getRange() {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"        return \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"L5-Z":49}}]
