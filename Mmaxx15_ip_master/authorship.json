[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"# Dobby project template","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"3. After that, locate the `src/main/java/Dobby.java` file, right-click it, and choose `Run Dobby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mmaxx15":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"    protected String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"    public String getType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"        return \"D\";","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"        return super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Mmaxx15":18}},{"path":"src/main/java/Dobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"public class Dobby {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"        String logo \u003d \" _____        _     _           \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"                + \"|  __ \\\\      | |   | |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"                + \"| |  | | ___ | |__ | |__  _   _ \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"                + \"| |  | |/ _ \\\\| \u0027_ \\\\| \u0027_ \\\\| | | |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"                + \"| |__| | |_| | |_) | |_) | |_| |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"                + \"|_____/ \\\\___/|_.__/|_.__/ \\\\__, |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"                + \"                           __/ |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"                + \"                          |___/ \\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"Dobby say\u0027s Hello!\\nHow can Dobby help?\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"        TaskList taskmanager \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"        taskmanager.userCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Mmaxx15":20}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"public class Events extends Task {","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"    protected String From;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"    protected String To;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"    Events(String description, String from, String to) {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"        super(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"        this.From \u003d from;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"        this.To \u003d to;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"    public String getType() {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"        return \"E\";","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"    public String toString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"Mmaxx15"},"content":"        return super.toString() + \"(from:\" + From + \" to: \" + To + \")\";","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Mmaxx15":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"    protected String description;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"    protected Boolean isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"    public void markTask() {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"    public Boolean isDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Mmaxx15"},"content":"        return isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Mmaxx15"},"content":"    public String getType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Mmaxx15"},"content":"        return \"T\";","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Mmaxx15"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Mmaxx15"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Mmaxx15"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Mmaxx15"},"content":"     * returns \"X\" if task is mark done and","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Mmaxx15"},"content":"     * \" \" if not marked","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Mmaxx15"},"content":"     * @return \"X\" or \" \"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Mmaxx15"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Mmaxx15"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Mmaxx15"},"content":"            return \"X\";","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Mmaxx15"},"content":"        return \" \";","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Mmaxx15":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"    private final Task[] taskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"    private int taskCount;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"        this.taskList \u003d new Task[MAX_TASKS];","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"     *  Seperates the unser input into the type of task","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"     *  and adds them to the list","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"     * @param command user command to handle","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"Mmaxx15"},"content":"     **/","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"Mmaxx15"},"content":"    private void processTaskCommand(String command) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Mmaxx15"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"Mmaxx15"},"content":"            String[] commandParts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Mmaxx15"},"content":"            String taskType \u003d commandParts[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Mmaxx15"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Mmaxx15"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Mmaxx15"},"content":"                addTask(new Task(commandParts[1]));","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Mmaxx15"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Mmaxx15"},"content":"                addDeadlineTask(commandParts);","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Mmaxx15"},"content":"            case \"event\":","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"Mmaxx15"},"content":"                addEvent(commandParts);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"Mmaxx15"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Mmaxx15"},"content":"                markTask(commandParts);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Mmaxx15"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Mmaxx15"},"content":"                unmarkTask(commandParts);","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Mmaxx15"},"content":"            default:","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Mmaxx15"},"content":"                System.out.println(\"☹ Dobby does not understand.\"); // Default to addTask if not recognised","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Mmaxx15"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Mmaxx15"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid command format. Provide valid input\");","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"Mmaxx15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid command format. Input a valid number\");","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"Mmaxx15"},"content":"     *  Adds task of \"deadline\" type","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"Mmaxx15"},"content":"     * @param commandParts user command to handle","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"Mmaxx15"},"content":"     **/","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"Mmaxx15"},"content":"    private void addDeadlineTask(String[] commandParts) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"Mmaxx15"},"content":"        String[] deadlineParts \u003d commandParts[1].split(\"/by\", 2);","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"Mmaxx15"},"content":"        if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid deadline format! Use: deadline \u003c\u003cdescription\u003e\u003e /by \u003c\u003cdeadline\u003e\u003e.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"Mmaxx15"},"content":"            addTask(new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"Mmaxx15"},"content":"     *  Adds task of \"event\" type","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"Mmaxx15"},"content":"     * @param commandParts user command to handle","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"Mmaxx15"},"content":"     **/","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"Mmaxx15"},"content":"    private void addEvent(String[] commandParts) {","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"Mmaxx15"},"content":"        String[] eventparts \u003d commandParts[1].split(\"/from\", 2);","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"Mmaxx15"},"content":"        if (eventparts.length !\u003d 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid deadline format! Use: deadline \u003c\u003cdescription\u003e\u003e /by \u003c\u003cdeadline\u003e\u003e.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"Mmaxx15"},"content":"            String[] endDateParts \u003d eventparts[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"Mmaxx15"},"content":"            if (endDateParts.length !\u003d 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"Mmaxx15"},"content":"                System.out.println(\"☹ OOPS!!! Invalid event format. \" +","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"Mmaxx15"},"content":"                        \"Use \u0027event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\u0027.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"Mmaxx15"},"content":"            } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"Mmaxx15"},"content":"                addTask(new Events(eventparts[0], endDateParts[0], endDateParts[1]));","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"Mmaxx15"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"Mmaxx15"},"content":"     *  marks specified task","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"Mmaxx15"},"content":"     *  @param commandParts user command to handle","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"Mmaxx15"},"content":"     **/","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"Mmaxx15"},"content":"    private void markTask(String[] commandParts) {","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"Mmaxx15"},"content":"        if (commandParts.length \u003d\u003d 1 || !isValidIndex(Integer.parseInt(commandParts[1]) - 1)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid command format for marking a task. Use \u0027mark \u003cindex\u003e\u0027.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"Mmaxx15"},"content":"            markTaskIndex(Integer.parseInt(commandParts[1]) - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"Mmaxx15"},"content":"     *  Unmarks specified task*","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"Mmaxx15"},"content":"     * @param commandParts user command to handle","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"Mmaxx15"},"content":"     **/","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"Mmaxx15"},"content":"    private void unmarkTask(String[] commandParts) {","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"Mmaxx15"},"content":"        if (commandParts.length \u003d\u003d 1 || !isValidIndex(Integer.parseInt(commandParts[1]) - 1)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid command format for marking a task. Use \u0027mark \u003cindex\u003e\u0027.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"Mmaxx15"},"content":"            unmarkTaskIndex(Integer.parseInt(commandParts[1]) - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"Mmaxx15"},"content":"     * Adds user input into taskList","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"Mmaxx15"},"content":"     * @param task input given by user","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"Mmaxx15"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"Mmaxx15"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"Mmaxx15"},"content":"            if (taskCount \u003c taskList.length) {","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"Mmaxx15"},"content":"                taskList[taskCount] \u003d task;","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"Mmaxx15"},"content":"                taskCount +\u003d 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"Mmaxx15"},"content":"                System.out.println(\"added: \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"Mmaxx15"},"content":"            } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"Mmaxx15"},"content":"                throw new TaskListFullException(\"TaskList if full\");","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"Mmaxx15"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"Mmaxx15"},"content":"        } catch (TaskListFullException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"ERROR: \" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"Mmaxx15"},"content":"     * list out current tasks and displays task status","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"Mmaxx15"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"Mmaxx15"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Dobby has no tasks :(\");","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"Mmaxx15"},"content":"            return;","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"List\\n~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"Mmaxx15"},"content":"        for (int i \u003d 0 ; i \u003c taskCount ; i +\u003d 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"  \" + (i+1) + \". [\" + taskList[i].getType() + \"]\" + taskList[i]);","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"Mmaxx15"},"content":"     *  Checks if user inputted index is valid","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"Mmaxx15"},"content":"     * @param index integer input by user","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"Mmaxx15"},"content":"     * @return  True if valid index and false if invalid","lastModifiedDate":"2024-02-18"},{"lineNumber":155,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"Mmaxx15"},"content":"     **/","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"Mmaxx15"},"content":"    private Boolean isValidIndex(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"Mmaxx15"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c taskCount;","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"Mmaxx15"},"content":"     * 1. Checks if user inputs a valid index if valid","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"Mmaxx15"},"content":"     * marks the stated task and shows which task is marked","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"Mmaxx15"},"content":"     * @param taskIndex index of task stored in array","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"Mmaxx15"},"content":"    public void markTaskIndex(int taskIndex) {","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"Mmaxx15"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":169,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid number! Please try again\");","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"Mmaxx15"},"content":"        } else if (taskList[taskIndex].isDone()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"ERROR: task is already marked\");","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"Mmaxx15"},"content":"            taskList[taskIndex].markTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"OK, Dobby has marked this task as done:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":175,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"  \" + taskList[taskIndex]);","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"Mmaxx15"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":178,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":180,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":181,"author":{"gitId":"Mmaxx15"},"content":"     * Checks if user inputs a valid index","lastModifiedDate":"2024-02-06"},{"lineNumber":182,"author":{"gitId":"Mmaxx15"},"content":"     * if valid, unmarks the stated task and shows the unmarked task","lastModifiedDate":"2024-02-06"},{"lineNumber":183,"author":{"gitId":"Mmaxx15"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":184,"author":{"gitId":"Mmaxx15"},"content":"     * @param taskIndex index of task stored in array","lastModifiedDate":"2024-02-06"},{"lineNumber":185,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":186,"author":{"gitId":"Mmaxx15"},"content":"    public void unmarkTaskIndex(int taskIndex) {","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"Mmaxx15"},"content":"        if (!isValidIndex(taskIndex)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid number! Please try again\");","lastModifiedDate":"2024-02-13"},{"lineNumber":189,"author":{"gitId":"Mmaxx15"},"content":"        } else if (!taskList[taskIndex].isDone()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"The task is already unmarked\");","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":192,"author":{"gitId":"Mmaxx15"},"content":"            taskList[taskIndex].unmarkTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":193,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"OK, Dobby marked this task as not done:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":194,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"  \" + taskList[taskIndex]);","lastModifiedDate":"2024-02-06"},{"lineNumber":195,"author":{"gitId":"Mmaxx15"},"content":"            printLineBreak();","lastModifiedDate":"2024-02-18"},{"lineNumber":196,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":197,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":198,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":199,"author":{"gitId":"Mmaxx15"},"content":"    private static void printLineBreak() {","lastModifiedDate":"2024-02-18"},{"lineNumber":200,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-02-18"},{"lineNumber":201,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":202,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":203,"author":{"gitId":"Mmaxx15"},"content":"    public void userCommand() {","lastModifiedDate":"2024-02-06"},{"lineNumber":204,"author":{"gitId":"Mmaxx15"},"content":"        while(true) {","lastModifiedDate":"2024-02-06"},{"lineNumber":205,"author":{"gitId":"Mmaxx15"},"content":"            String command;","lastModifiedDate":"2024-02-06"},{"lineNumber":206,"author":{"gitId":"Mmaxx15"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":207,"author":{"gitId":"Mmaxx15"},"content":"            command \u003d in.nextLine().toLowerCase();","lastModifiedDate":"2024-02-06"},{"lineNumber":208,"author":{"gitId":"Mmaxx15"},"content":"            String[] commandParts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":209,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":210,"author":{"gitId":"Mmaxx15"},"content":"            switch (commandParts[0]) {","lastModifiedDate":"2024-02-06"},{"lineNumber":211,"author":{"gitId":"Mmaxx15"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-06"},{"lineNumber":212,"author":{"gitId":"Mmaxx15"},"content":"                System.out.println(\"~~~~~~~~~~~~~~~~\\nDobby say\u0027s BYE!\");","lastModifiedDate":"2024-02-06"},{"lineNumber":213,"author":{"gitId":"Mmaxx15"},"content":"                return;","lastModifiedDate":"2024-02-06"},{"lineNumber":214,"author":{"gitId":"Mmaxx15"},"content":"            case \"list\":","lastModifiedDate":"2024-02-06"},{"lineNumber":215,"author":{"gitId":"Mmaxx15"},"content":"                listTasks();","lastModifiedDate":"2024-02-06"},{"lineNumber":216,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":217,"author":{"gitId":"Mmaxx15"},"content":"            default:","lastModifiedDate":"2024-02-06"},{"lineNumber":218,"author":{"gitId":"Mmaxx15"},"content":"                processTaskCommand(command);","lastModifiedDate":"2024-02-06"},{"lineNumber":219,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":220,"author":{"gitId":"Mmaxx15"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":221,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":222,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":223,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":224,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":225,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":226,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":227,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":228,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":229,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Mmaxx15":229}},{"path":"src/main/java/TaskListFullException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"public class TaskListFullException extends Exception {","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"    public TaskListFullException(String message) {","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"        super(message);","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Mmaxx15":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"//seems useless can probably just delete","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Mmaxx15":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"java -classpath ..\\bin Dobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mmaxx15":1,"-":20}}]
