[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"# Dobby project template","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"3. After that, locate the `src/main/java/Dobby.java` file, right-click it, and choose `Run Dobby.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mmaxx15":2,"-":22}},{"path":"src/main/java/Dobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"public class Dobby {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"        String logo \u003d \" _____        _     _           \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"                + \"|  __ \\\\      | |   | |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"                + \"| |  | | ___ | |__ | |__  _   _ \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"                + \"| |  | |/ _ \\\\| \u0027_ \\\\| \u0027_ \\\\| | | |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"                + \"| |__| | |_| | |_) | |_) | |_| |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"                + \"|_____/ \\\\___/|_.__/|_.__/ \\\\__, |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"                + \"                           __/ |\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"                + \"                          |___/ \\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"Dobby say\u0027s Hello!\\nHow can Dobby help?\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"        Task taskmanager \u003d new Task();","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"        taskmanager.userCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Mmaxx15":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mmaxx15"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Mmaxx15"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Mmaxx15"},"content":"    private String[] tasklist;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Mmaxx15"},"content":"    protected boolean[] taskstatus;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Mmaxx15"},"content":"    private int taskcount;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Mmaxx15"},"content":"    public Task() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Mmaxx15"},"content":"        this.tasklist \u003d new String[100];","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Mmaxx15"},"content":"        this.taskstatus \u003d new boolean[100];","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Mmaxx15"},"content":"        this.taskcount \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Mmaxx15"},"content":"     * Adds user input into taskList","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Mmaxx15"},"content":"    public void addTask(String task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Mmaxx15"},"content":"        tasklist[taskcount] \u003d task;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Mmaxx15"},"content":"        taskstatus[taskcount] \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Mmaxx15"},"content":"        taskcount +\u003d 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"added: \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Mmaxx15"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Mmaxx15"},"content":"     * list out current tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Mmaxx15"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Mmaxx15"},"content":"    public void listTask() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Mmaxx15"},"content":"        if (taskcount \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Dobby has no tasks :(\");","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Mmaxx15"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"List\\n~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Mmaxx15"},"content":"        for (int i \u003d 0 ; i \u003c taskcount ; i +\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"  \" + (i+1) + \". \" + getStatusIcon(i) + \" \" + tasklist[i]);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Mmaxx15"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Mmaxx15"},"content":"    public String getStatusIcon(int taskindex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Mmaxx15"},"content":"        return (taskstatus[taskindex] ? \"[X]\" : \"[ ]\" );","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Mmaxx15"},"content":"    public void markTask(int taskindex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Mmaxx15"},"content":"        if (taskindex \u003c 1 || taskindex \u003e taskcount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid number\u003e Please try again\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Mmaxx15"},"content":"            taskstatus[taskindex-1] \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"  \" + getStatusIcon(taskindex - 1) + \" \" + tasklist[taskindex - 1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Mmaxx15"},"content":"    public void unmarkTask(int taskindex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Mmaxx15"},"content":"        if (taskindex \u003c 1 || taskindex \u003e taskcount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"Invalid number\u003e Please try again\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Mmaxx15"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Mmaxx15"},"content":"            taskstatus[taskindex-1] \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"  \" + getStatusIcon(taskindex - 1) + \" \" + tasklist[taskindex - 1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Mmaxx15"},"content":"            System.out.println(\"~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Mmaxx15"},"content":"    public void userCommand() {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Mmaxx15"},"content":"        while(true) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Mmaxx15"},"content":"            String command;","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Mmaxx15"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Mmaxx15"},"content":"            command \u003d in.nextLine().toLowerCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Mmaxx15"},"content":"            switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Mmaxx15"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Mmaxx15"},"content":"                System.out.println(\"~~~~~~~~~~~~~~~~\\nDobby say\u0027s BYE!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Mmaxx15"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Mmaxx15"},"content":"            case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Mmaxx15"},"content":"                listTask();","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Mmaxx15"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Mmaxx15"},"content":"                if (command.startsWith(\"add\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Mmaxx15"},"content":"                    addTask(command.substring(4).trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Mmaxx15"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Mmaxx15"},"content":"                    int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Mmaxx15"},"content":"                    markTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Mmaxx15"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Mmaxx15"},"content":"                    int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Mmaxx15"},"content":"                    unmarkTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Mmaxx15"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Mmaxx15"},"content":"                    addTask(command);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Mmaxx15"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Mmaxx15"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Mmaxx15"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Mmaxx15"},"content":"//            switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Mmaxx15"},"content":"//            case \"bye\": System.out.println(\"~~~~~~~~~~~~~~~~\\nDobby say\u0027s BYE!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Mmaxx15"},"content":"//                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Mmaxx15"},"content":"//            case \"list\": listTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Mmaxx15"},"content":"//            case command.starsWith(\"mark\"):","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Mmaxx15"},"content":"//                //int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Mmaxx15"},"content":"//                markTask(Integer.parseInt(command.split(\" \")[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Mmaxx15"},"content":"//            case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Mmaxx15"},"content":"//                //int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Mmaxx15"},"content":"//                unmarkTask(Integer.parseInt(command.split(\" \")[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Mmaxx15"},"content":"//            default: addTask(co);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Mmaxx15"},"content":"//","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Mmaxx15"},"content":"//            }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Mmaxx15"},"content":"//            if (command.toLowerCase().equals(\"bye\")) {  //exit dobby","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Mmaxx15"},"content":"//                System.out.println(\"~~~~~~~~~~~~~~~~\\nDobby say\u0027s BYE!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Mmaxx15"},"content":"//                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Mmaxx15"},"content":"//            }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Mmaxx15"},"content":"//            if (command.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Mmaxx15"},"content":"//                listTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Mmaxx15"},"content":"//            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Mmaxx15"},"content":"//                addTask(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Mmaxx15"},"content":"//            }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Mmaxx15"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Mmaxx15"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"Mmaxx15"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Mmaxx15"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Mmaxx15":120}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Mmaxx15"},"content":"java -classpath ..\\bin Dobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mmaxx15":1,"-":20}}]
