[{"path":"src/main/java/soot/Soot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"import soot.parser.Parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import soot.task.TaskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import soot.ui.UserUi;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import soot.storage.Storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import java.io.File;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"public class Soot {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"//    private Ui ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    public Soot(String savedFilePath) {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"//        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"//            ui.showLoadingError();","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"//            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"//        }","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"        UserUi.showUserGreeting();","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"            ArrayList\u003cString\u003e savedFile \u003d Storage.readSavedFile(\"saved-data/saved.txt\");","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"            for (int i \u003d 0; i \u003c savedFile.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"                Storage.loadSavedTasks(savedFile.get(i));","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"No file was found, i will create one immediately\");","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"            UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"            File savedData \u003d new File(\"saved-data/saved.txt\");","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"            UserUi.displayDividerLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"            Parser.parseCommand(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"            Storage.saveFinalFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"there was a problem saving your tasks to the hard disk...\");","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        UserUi.showGoodbyeMessage();","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"claribelho":55}},{"path":"src/main/java/soot/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.exceptions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class that is inherited from Exception,","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * thrown when the task argument is unspecified.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    //no other code needed","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/soot/exceptions/SavedFileErrorTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.exceptions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class that is inherited from Exception,","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * thrown when the saved file has an unknown task type.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class SavedFileErrorTypeException extends Exception {","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/soot/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.exceptions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class that is inherited from Exception,","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * thrown when the command action is unknown.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/soot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import soot.exceptions.EmptyTaskException;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import soot.exceptions.UnknownCommandException;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import soot.task.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import soot.ui.UserUi;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":" * Class Parser handles the input commands provided by the user,","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":" * by extracting the command action to ensure that the correct method is executed.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"     * The command action word, i.e. the first word of the user input, is extracted.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"     * Method handles the case where the user input only contains one word, which should only be \"list\".","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     * Else, an EmptyTaskException is thrown to indicate to the user that the user input was incomplete.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * @param input command inputted by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * @return string of the command action word, is only one word long.","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     * @throws EmptyTaskException If user input only contains one word that is not \"list\".","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    public static String getCommandAction(String input) throws EmptyTaskException {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"            return input;","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        int spaceIndex \u003d input.indexOf(\" \");","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        if (spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        return input.substring(0, spaceIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     * Given the command action word, the command by the user will be handled.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     * @param input command inputted by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    public static void parseCommand(String input) {","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"            String inputCommand \u003d getCommandAction(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"            String inputTask;","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"            switch (inputCommand) {","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"            case \"list\":","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"                TaskList.printList();","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"            case \"done\":","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"                handleModifyDoneCommands(input, \"done\");","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"            case \"unmark\":","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"                handleModifyDoneCommands(input, \"unmark\");","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"                handleDeleteCommand(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"            case \"find\":","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"                handleFindCommand(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"            case \"todo\":","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"                TaskList.addTask(input, TaskType.TODO);","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"            case \"deadline\":","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"                TaskList.addTask(input, TaskType.DEADLINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"            case \"event\":","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"                TaskList.addTask(input, TaskType.EVENT);","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  !! hmmm, no argument was specified.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"            UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  !! this isn\u0027t a command i recognise...\\n  \" +","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"                    \"sorry, pls try again\");","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"            UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"     * Method to handle when user is trying to mark a task done or unmark.","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"     * The listIndex of this task is extracted.","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"     * @param userInput command inputted by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"     * @param modifyCommand string that indicates done or unmark to determine how the task will be handled.","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"     * @throws IllegalArgumentException If the task specified by the user input is in the wrong format.","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"    static void handleModifyDoneCommands(String userInput, String modifyCommand) throws IllegalArgumentException {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"        String inputTask;","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        int listIndex;","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"            if (modifyCommand.equals(\"done\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"                inputTask \u003d userInput.substring(5,6);","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"                listIndex \u003d Integer.parseInt(inputTask) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"                TaskList.markTaskDone(listIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"            } else if (modifyCommand.equals(\"unmark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"                inputTask \u003d userInput.substring(7,8);","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"                listIndex \u003d Integer.parseInt(inputTask) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"                TaskList.markTaskUndone(listIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"the task specified should be a integer task number! \\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"                    \"you can type command \u0027list\u0027 to verify this number :)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"            UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"     * Method to handle when user is trying to delete a task.","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     * The listIndex of this task is extracted.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"     * @param userInput command inputted by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"    private static void handleDeleteCommand(String userInput) {","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"        String inputTask \u003d userInput.substring(7);","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"        int listIndex \u003d Integer.parseInt(inputTask) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"        TaskList.deleteTask(listIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"    private static void handleFindCommand(String userInput) {","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"        ArrayList\u003cTask\u003e foundKeywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"        String toFind \u003d userInput.substring(5);","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"        foundKeywordList \u003d TaskList.findKeyword(toFind);","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"        UserUi.printKeywordList(foundKeywordList);","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"claribelho":131}},{"path":"src/main/java/soot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import soot.exceptions.SavedFileErrorTypeException;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import soot.task.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import soot.ui.UserUi;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import java.io.File;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":" * Class Storage handles the reading and writing of the tasks in the stored data file.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":" * The stored tasks will be loaded and added into an ArrayList.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     * Reads the saved file in the given path line by line using a scanner,","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * and stores each line as a String in an ArrayList.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     * @param path relative path from project source of the saved file.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     * @return ArrayList of String that contains each line of the saved file.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * @throws FileNotFoundException If no file was found at the specified path.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    public static ArrayList\u003cString\u003e readSavedFile(String path) throws FileNotFoundException {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"        ArrayList\u003cString\u003e readFile \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"        File savedFile \u003d new File(path);","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        Scanner s \u003d new Scanner(savedFile);","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"            readFile.add(s.nextLine());","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        s.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"a previously saved file was found!\\nyour data will be loaded in now :)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"        return readFile;","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"     * Loads the saved task into the required format of an ArrayList of Tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"     * The details of the saved task will be extracted from the given string, depending on the Task Type.","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"     * @param line string that contains only one line of the saved file, and thus one task.","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"    // TODO: create a getTaskDescription method","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"    public static void loadSavedTasks(String line) {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"            String[] taskInfo \u003d line.split(\" ; \", 0);","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"            boolean isTaskDone \u003d !taskInfo[1].trim().equals(\"0\");","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"            TaskType savedTaskType \u003d Task.identifyTaskType(taskInfo[0].trim());","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"            if (savedTaskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"                TaskList.addSavedTodoTask(taskInfo[2], isTaskDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"            } else if (savedTaskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"                TaskList.addSavedDeadlineTask(taskInfo[2], isTaskDone, taskInfo[3]);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"            } else if (savedTaskType \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"                TaskList.addSavedEventTask(taskInfo[2], isTaskDone, taskInfo[3], taskInfo[4]);","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        } catch (SavedFileErrorTypeException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"there was an error with the previously saved file, sorry about it :o \\n \" +","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"                            \"unfortunately, i will have to get rid of the previous data...\");","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"            UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"            File savedData \u003d new File(\"saved-data/saved.txt\");","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"     * Save all tasks in the task list into a specified file first when the user indicated to stop the chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"     * Tasks will be formatted to be stored as one line per task, with all the task details.","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"     * @throws IOException If there was a problem when saving the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"    public static void saveFinalFile() throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"        FileWriter fw \u003d new FileWriter(\"saved-data/saved.txt\");","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"        for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"            String stringToSave \u003d TaskList.formatTaskToSave(i);","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"            fw.write(stringToSave + \"\\n\");","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"        fw.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"claribelho":84}},{"path":"src/main/java/soot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Class Deadline is an inherited class of Class Task.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * It is a type of task with 4 members: taskName, isDone, taskType and dueDate.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    public String dueDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"     * Constructor for Deadline class, will return a reference to the","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     * created Deadline object by default.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * Task Type for this Task will be DEADLINE.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     * @param taskName name of the Deadline task to be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"     * @param isDone state of the Deadline task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"     * @param dueDate deadline for this particular Deadline task.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    public Deadline(String taskName, Boolean isDone, String dueDate) {","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"        super(taskName, isDone);","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the deleted task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * Method overrides printRespondWhenDeleteTask() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenDeleteTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        super.printRespondWhenDeleteTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + this.taskName + \" (by: \" + dueDate + \"!)\");","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        super.printTaskCount();","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the added task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"     * Method overrides printRespondWhenAddTask() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenAddTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"        super.printRespondWhenAddTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + this.taskName + \" (by: \" + dueDate + \"!)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"        super.printTaskCount();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"     * Prints the task type D to represent the Deadline class.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"     * Method overrides printTaskType() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"    public void printTaskType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        System.out.print(\"[D]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"     * Prints all task details for the Deadline task with the specified index in the list,","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"     * in the required format.","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"     * Note: This index is not the index in the ArrayList.","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     * @param index numbering for task in the task list, smallest value being 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    public void printTaskInListFormat(int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"        super.printTaskInListFormat(index);","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"    \u003e\u003e by: \" + dueDate + \"!!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"claribelho":68}},{"path":"src/main/java/soot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Class Event is an inherited class of Class Task.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * It is a type of task with 5 members: taskName, isDone, taskType, startDate and endDate.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    public String startDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"    public String endDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     * Constructor for Event class, will return a reference to the","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * created Event object by default.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * Task Type for this Task will be EVENT.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"     * @param taskName name of the Event task to be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"     * @param isDone state of the Event task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"     * @param startDate date where this Event task will start.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"     * @param endDate date where this Event task will end.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    public Event(String taskName, Boolean isDone, String startDate, String endDate) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"        super(taskName, isDone);","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the deleted task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"     * Method overrides printRespondWhenDeleteTask() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenDeleteTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        super.printRespondWhenDeleteTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + this.taskName + \" (from: \" + startDate + \" ~~ to: \" + endDate + \"!)\");","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"        super.printTaskCount();","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the added task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     * Method overrides printRespondWhenAddTask() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenAddTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        super.printRespondWhenAddTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + this.taskName + \" (from: \" + startDate + \" ~~ to: \" + endDate + \"!)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"        super.printTaskCount();","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"     * Prints the task type E to represent the Event class.","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"     * Method overrides printTaskType() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"    public void printTaskType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        System.out.print(\"[E]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"     * Prints all task details for the Event task with the specified index in the list,","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     * in the required format.","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"     * Note: This index is not the index in the ArrayList.","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"     * @param index numbering for task in the task list, smallest value being 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    public void printTaskInListFormat(int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"        super.printTaskInListFormat(index);","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"    \u003e\u003e from: \" + startDate + \" ~~ to: \" + endDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"claribelho":71}},{"path":"src/main/java/soot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import soot.exceptions.SavedFileErrorTypeException;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" * Class Task has 3 members: taskName, isDone and taskType.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"// TODO: make class abstract","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"public class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"    public String taskName;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"    public boolean isDone;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"    public TaskType taskType;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     * Constructor for Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"     * Task Type is not initialised.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"     * @param taskName name of the task to be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"     * @param isDone state of the task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    public Task(String taskName, Boolean isDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * Prints the checkbox for the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     * If task has been completed, checkbox will contain a \"/\", else will be an empty space.","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    public void printCheckbox() {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"            System.out.print(\"[/]\");","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"            System.out.print(\"[ ]\");","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     * Prints all task details for the task with the specified index in the list,","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     * in the required format.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     * Note: This index is not the index in the ArrayList.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"     * @param index numbering for task in the task list, smallest value being 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"    public void printTaskInListFormat(int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"        System.out.print(index + \".\");","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"        printTaskType();","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        printCheckbox();","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + taskName);","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"     * Task has been completed by user and class member isDone will become true.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"     * Chatbot to print out the name of this completed task.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"good job! this task is marked as done now: \");","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \u003e\u003e \" + this.taskName);","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"     * Either task has not been completed by user but was marked done,","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"     * or if an uncompleted task was accidentally called, chatbot will inform user.","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"     * Class member isDone for this task is false when method finishes.","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"     * Chatbot to print out the name of the identified task.","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    //TODO: removed printTaskType and printCheckbox due to error: \u0027void\u0027 type not allowed here","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"    public void markUndone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"        if (!isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"hm, this task (\" + this.taskName + \") had not been done yet. wrong one?\");","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"            return;","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"This task is now marked undone: \");","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"  \u003e\u003e \" + this.taskName);","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the deleted task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenDeleteTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"okay, i will remove this task from your list: \");","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"        System.out.print(\"  \u003e\u003e \");","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"        printTaskType();","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"        printCheckbox();","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the added task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenAddTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Okay! i\u0027ve added to ur tasklist:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        System.out.print(\" \u003e\u003e \");","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"        printTaskType();","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"        printCheckbox();","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"     * Prints the size of the TaskList to indicate the number of tasks in the list,","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"     * in the required format.","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"    public void printTaskCount() {","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"        int taskCount \u003d TaskList.getSize();","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"you now have \" + taskCount + \" tasks left...\");","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"    public void printTaskType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"        System.out.print(\"[NA]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"     * Given a string that contains the letter representing the task type,","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     * return the defined enum TaskType type.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"     * @param input string that contains one letter representing the task type.","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"     * @return TaskType of enum TaskType.","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"     * @throws SavedFileErrorTypeException If input string is not \u0027T\u0027, \u0027D\u0027 or \u0027E\u0027, then it is not a known task type.","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"    public static TaskType identifyTaskType(String input) throws SavedFileErrorTypeException {","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"        switch (input) {","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"        case \"T\":","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"            return TaskType.TODO;","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"        case \"D\":","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"        case \"E\":","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"        default:","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"            throw new SavedFileErrorTypeException();","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"claribelho":133}},{"path":"src/main/java/soot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.task;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import soot.ui.UserUi;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":" * Class TaskList handles the created task list that stores the tasks added by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":" * This includes adding and deleting tasks from the created task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"     * Print all tasks stored in the list in a list format,","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     * if the list is empty, user will be informed.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"    //TODO: implement stream?","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    public static void printList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"tasks to be done:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"                UserUi.displayIndent();","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"                TaskList.taskList.get(i).printTaskInListFormat(i + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"            printTaskListCount();","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"     * Prints to the terminal the number of tasks the user currently has in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"    public static void printTaskListCount() {","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"        int taskCount \u003d TaskList.getSize();","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"you currently have \" + taskCount + \" tasks on your list :)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     * Add a given task to the task list, based on the Task Type of this task.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"     * @param userInput details of the task as given by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"     * @param taskType task type of the task to be added.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"    public static void addTask(String userInput, TaskType taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        case TODO:","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"            addTodoTask(userInput);","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        case DEADLINE:","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"            addDeadlineTask(userInput);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        case EVENT:","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"            addEventTask(userInput);","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"     * Method to add specifically a Todo task.","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"     * Details of this task will be printed to the terminal for the user to view.","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"     * @param userInput details of the todo task as given by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"    //TODO: clean up add task methods","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"    public static void addTodoTask(String userInput) {","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"        String inputTask \u003d userInput.substring(5);","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        taskList.add(new Todo(inputTask, false));","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"        taskList.get(taskList.size() - 1).printRespondWhenAddTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"     * Method to add specifically a Deadline task, where the details of the Deadline task","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"     * such as taskName etc. will be extracted.","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"     * Details of this task will be printed to the terminal for the user to view.","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"     * @param userInput details of the deadline task as given by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"    public static void addDeadlineTask(String userInput) {","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"        String inputTask \u003d userInput.substring(9);","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"        //split taskName and dueDate","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"        int deadlineIndex \u003d inputTask.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"        String taskName \u003d inputTask.substring(0, deadlineIndex - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"        String dueDate \u003d inputTask.substring(deadlineIndex + 4);","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"        taskList.add(new Deadline(taskName, false, dueDate));","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        taskList.get(taskList.size()-1).printRespondWhenAddTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"     * Method to add specifically an Event task, where the details of the Event task","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"     * such as endDate etc. will be extracted.","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"     * Details of this task will be printed to the terminal for the user to view.","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"     * @param userInput details of the event task as given by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"    public static void addEventTask(String userInput) {","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"        String inputTask \u003d userInput.substring(6);","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"        //split taskName and time frames","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"        int startIndex \u003d inputTask.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"        String taskName \u003d inputTask.substring(0, startIndex - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"        String timeLine \u003d inputTask.substring(startIndex + 6);","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"        int endIndex \u003d timeLine.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"        String startDate \u003d timeLine.substring(0, endIndex - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"        String endDate \u003d timeLine.substring(endIndex + 4);","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"        taskList.add(new Event(taskName, false, startDate, endDate));","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"        taskList.get(taskList.size()-1).printRespondWhenAddTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"     * Returns the size of the ArrayList taskList.","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"     * @return size of the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"    public static int getSize() {","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"        return taskList.size();","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"    //TODO: methods are unused","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"    public static Task getTask(int taskIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"        return taskList.get(taskIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"    public static TaskType getTaskType(int taskIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"        return taskList.get(taskIndex).taskType;","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"     * For a task at the specified index, call method to mark it completed.","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"     * @param taskIndex index of task in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"    public static void markTaskDone(int taskIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"        taskList.get(taskIndex).markDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"     * For a task at the specified index, call method to mark it uncompleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"     * @param taskIndex index of task in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"    public static void markTaskUndone(int taskIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"        taskList.get(taskIndex).markUndone();","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"     * For a task at the specified index, remove the task from the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"     * Details of this task will be printed to the terminal for the user to view.","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"     * A tempTask is used to temporarily store the task when printing the details of the deleted task, so that the","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"     * task count printed will be accurate.","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"     * @param listIndex index of task in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"    public static void deleteTask(int listIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"        Task tempTask \u003d taskList.get(listIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"        taskList.remove(taskList.get(listIndex));","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"        tempTask.printRespondWhenDeleteTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"     * Given details of a todo task that was previously saved in the data file,","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"     * add this task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"     * @param taskName name of the todo task to be added.","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"     * @param isTaskDone state of the todo task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"    public static void addSavedTodoTask(String taskName, boolean isTaskDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"        taskList.add(new Todo(taskName, isTaskDone));","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"claribelho"},"content":"     * Given details of a deadline task that was previously saved in the data file,","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"claribelho"},"content":"     * add this task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"     * @param taskName name of the deadline task to be added.","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"     * @param isTaskDone state of the deadline task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"     * @param taskDeadline deadline for this particular Deadline task.","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"    public static void addSavedDeadlineTask(String taskName, boolean isTaskDone, String taskDeadline) {","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"        taskList.add(new Deadline(taskName, isTaskDone, taskDeadline));","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"     * Given details of an event task that was previously saved in the data file,","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"     * add this task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"     * @param taskName name of the event task to be added.","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"     * @param isTaskDone state of the event task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"     * @param taskStart date where this Event task will start.","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"     * @param taskEnd date where this Event task will end.","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"    public static void addSavedEventTask(String taskName, boolean isTaskDone, String taskStart, String taskEnd) {","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"        taskList.add(new Event(taskName, isTaskDone, taskStart, taskEnd));","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"     * Returns a string that is the task in the required format to be saved in saved file,","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"     * given the task index of this task.","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"     * The task type has to be identified first.","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"     * @param taskIndex index of task in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":215,"author":{"gitId":"claribelho"},"content":"     * @return formatted string to be used in saved file to save this task.","lastModifiedDate":"2024-03-06"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":217,"author":{"gitId":"claribelho"},"content":"    public static String formatTaskToSave(int taskIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"claribelho"},"content":"        String formattedLine;","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"claribelho"},"content":"        int taskDone \u003d task.isDone ? 1 : 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":222,"author":{"gitId":"claribelho"},"content":"        switch (task.taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":223,"author":{"gitId":"claribelho"},"content":"        case TODO:","lastModifiedDate":"2024-03-06"},{"lineNumber":224,"author":{"gitId":"claribelho"},"content":"            formattedLine \u003d \"T ; \" + taskDone + \" ; \" + task.taskName;","lastModifiedDate":"2024-03-06"},{"lineNumber":225,"author":{"gitId":"claribelho"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":226,"author":{"gitId":"claribelho"},"content":"        case DEADLINE:","lastModifiedDate":"2024-03-06"},{"lineNumber":227,"author":{"gitId":"claribelho"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-03-06"},{"lineNumber":228,"author":{"gitId":"claribelho"},"content":"            formattedLine \u003d \"D ; \" + taskDone + \" ; \" + deadlineTask.taskName + \" ; \" + deadlineTask.dueDate;","lastModifiedDate":"2024-03-06"},{"lineNumber":229,"author":{"gitId":"claribelho"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":230,"author":{"gitId":"claribelho"},"content":"        case EVENT:","lastModifiedDate":"2024-03-06"},{"lineNumber":231,"author":{"gitId":"claribelho"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"claribelho"},"content":"            formattedLine \u003d \"E ; \" + taskDone + \" ; \" + eventTask.taskName + \" ; \" + eventTask.startDate + \" ; \" + eventTask.endDate;","lastModifiedDate":"2024-03-06"},{"lineNumber":233,"author":{"gitId":"claribelho"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":234,"author":{"gitId":"claribelho"},"content":"        default:","lastModifiedDate":"2024-03-06"},{"lineNumber":235,"author":{"gitId":"claribelho"},"content":"            formattedLine \u003d \"i could not read this task\";","lastModifiedDate":"2024-03-06"},{"lineNumber":236,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"task of unknown type detected\");","lastModifiedDate":"2024-03-06"},{"lineNumber":237,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":238,"author":{"gitId":"claribelho"},"content":"        return formattedLine;","lastModifiedDate":"2024-03-06"},{"lineNumber":239,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":240,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":241,"author":{"gitId":"claribelho"},"content":"    public static ArrayList\u003cTask\u003e findKeyword(String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":242,"author":{"gitId":"claribelho"},"content":"        ArrayList\u003cTask\u003e compiledList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":243,"author":{"gitId":"claribelho"},"content":"        for (Task taskToCheck : taskList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":244,"author":{"gitId":"claribelho"},"content":"            if (taskToCheck.taskName.equals(keyword)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":245,"author":{"gitId":"claribelho"},"content":"                compiledList.add(taskToCheck);","lastModifiedDate":"2024-03-06"},{"lineNumber":246,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":247,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":248,"author":{"gitId":"claribelho"},"content":"        return compiledList;","lastModifiedDate":"2024-03-06"},{"lineNumber":249,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":250,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"claribelho":250}},{"path":"src/main/java/soot/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.task;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Enum for the 3 fixed types of task considered.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"public enum TaskType {","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"    TODO,","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"    EVENT","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"claribelho":10}},{"path":"src/main/java/soot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Class Todo is an inherited class of Class Task.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * It is a type of task with 3 members: taskName, isDone and taskType.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"     * Constructor for Todo class, will return a reference to the","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"     * created Todo object by default.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"     * Task Type for this Task will be TODO.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * @param input name of the todo task to be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * @param isDone state of the todo task whether it has been completed or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    public Todo(String input, Boolean isDone) {","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"        super(input, isDone);","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"        this.taskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the deleted task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * Method overrides printRespondWhenDeleteTask() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenDeleteTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"        super.printRespondWhenDeleteTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + this.taskName);","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"        printTaskCount();","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"     * Prints the details of the added task and the updated task count.","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"     * Method overrides printRespondWhenAddTask() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    public void printRespondWhenAddTask() {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"        super.printRespondWhenAddTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"        System.out.println(\" \" + this.taskName);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"        printTaskCount();","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"     * Prints the task type T to represent the Todo class.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"     * Method overrides printTaskType() method in parent Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"    public void printTaskType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        System.out.print(\"[T]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"claribelho":51}},{"path":"src/main/java/soot/ui/UserUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package soot.ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import soot.parser.Parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import soot.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import soot.task.TaskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":" * Class UserUi handles interactions with the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":" * This includes display of user interfaces, such as displaying the divider line.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"public class UserUi {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    public static final String INDENT \u003d \"  \";","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    public UserUi() {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"        ","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     * Prints a greeting to the user when the chatbot is first run.","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * Chatbot will introduce itself and question for a user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    public static void showUserGreeting() {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Hello! I\u0027m Soot, your personal chatbot companion :)\");","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"What can I help you with?\");","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"        displayDividerLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"     * Prints a goodbye greeting to the user when the user stops the chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Bye! Till the next time we meet... \\n \" +","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"                \"i\u0027ve saved your list for future use \u003c3\");","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"        displayDividerLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     * Prints a horizontal line that acts as a divider within the conversation between the","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     * user input and the chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"     * Divider Line will be displayed after the user input before the chatbot speaks.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    public static void displayDividerLine() {","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        int LINE_LENGTH \u003d 60;","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"        for (int i \u003d 0; i \u003c LINE_LENGTH; i++) {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"\");","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"     * Prints a 2 space indent for a pleasant UI experience.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"    public static void displayIndent() {","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        System.out.print(INDENT);","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"    public static void showTaskListCount() {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        int taskCount \u003d TaskList.getSize();","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"you currently have \" + taskCount + \" tasks on your list :)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    public static void printKeywordList(ArrayList\u003cTask\u003e foundKeywordList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"        if (foundKeywordList.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"i couldn\u0027t find any tasks with this word.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"i found your word in these tasks:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"            for (int i \u003d 0; i \u003c foundKeywordList.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"                UserUi.displayIndent();","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"                foundKeywordList.get(i).printTaskInListFormat(i + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"        UserUi.displayDividerLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"claribelho":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"todo go cycling","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"claribelho":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"java -classpath ..\\bin Soot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"claribelho":1}}]
