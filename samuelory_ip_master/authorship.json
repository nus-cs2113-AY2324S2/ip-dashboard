[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    private final String deadlineString;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    Deadline(String description, String deadline){","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    public java.lang.String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"            return \"[D][X] \" + this.taskName + String.format(\" (by: %s)\", deadlineString );","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"            return \"[D][ ] \" + this.taskName + String.format(\" (by: %s)\", deadlineString );","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    private final String startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    private final String endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    Event(String description, String startTime, String endTime){","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"            return \"[E][X] \" + this.taskName + String.format(\" (from: %s to: %s)\", startTime, endTime );","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"            return \"[E][ ] \" + this.taskName + String.format(\" (from: %s to: %s)\", startTime, endTime );","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":20}},{"path":"src/main/java/OGF.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"public class OGF {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    private static final int MAX_ITEMS \u003d 100;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    private static int numItem;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    private static final Task[] tasks \u003d new Task[MAX_ITEMS];","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    private static boolean isRunning \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    private static void printBreakLine(){","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"        System.out.println((\"____________________________________________________________\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"    private static void printTaskAdded(Task task, int taskIndex){","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Alright, adding this task to the list: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"        System.out.printf(\"You have %d tasks in the list.%n\", taskIndex+1);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        printBreakLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    private static boolean handleInput (String input) throws OGFException{","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        switch (input.split(\" \")[0]) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"            case (\"bye\"):","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"                System.out.println(\"Bye bye now!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"                return (false);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"            case (\"list\"):","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"                System.out.println(\"Here are your tasks for today: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"                for (int i \u003d 0; i \u003c numItem; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"                    System.out.print(i + 1 + \". \");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"                    System.out.println(tasks[i]);","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"                printBreakLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"            case (\"mark\"):","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"                //Fallthrough","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"            case (\"unmark\"):","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"                if (!input.contains(\" \")){","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"did not indicate task to mark/unmark\");","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"samuelory"},"content":"                int taskNo \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"samuelory"},"content":"                if (taskNo \u003c 0 || taskNo \u003e numItem-1){","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"tried to mark/unmark task not in list\");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"samuelory"},"content":"                if (input.split(\" \")[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"samuelory"},"content":"                    System.out.println(\"Good Job! I\u0027m setting this task as done: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"samuelory"},"content":"                    tasks[taskNo].setDone(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"samuelory"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"samuelory"},"content":"                    System.out.println(\"Oop! I\u0027m setting this task as undone: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"samuelory"},"content":"                    tasks[taskNo].setDone(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"samuelory"},"content":"                System.out.println(tasks[taskNo]);","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"samuelory"},"content":"                printBreakLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"samuelory"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"samuelory"},"content":"            case (\"todo\"):","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"samuelory"},"content":"                if (!input.contains(\" \") || input.indexOf(\" \") \u003d\u003d input.length()-1){","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"Did not write anything after \\\"todo\\\", dont waste my time and yours pls\");","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"samuelory"},"content":"                String newTodoDesc \u003d input.substring(input.indexOf(\" \"));","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"samuelory"},"content":"                tasks[numItem] \u003d new Todo(newTodoDesc);","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"samuelory"},"content":"                printTaskAdded(tasks[numItem], numItem);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"samuelory"},"content":"                numItem++;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"samuelory"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"samuelory"},"content":"            case (\"deadline\"):","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"samuelory"},"content":"                if (!input.contains(\" \")){","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"Did not write anything after \\\"deadline\\\", dont waste my time and yours pls\");","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"samuelory"},"content":"                if (!input.contains(\" /by \")){","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"Did not enter deadline, use /by, followed by your deadline to add a deadline to your deadline\");","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"samuelory"},"content":"                String newDeadlineDesc \u003d input.substring(input.indexOf(\" \"), input.indexOf(\" /by\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"samuelory"},"content":"                String newDeadlineTime \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"samuelory"},"content":"                tasks[numItem] \u003d new Deadline(newDeadlineDesc, newDeadlineTime);","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"samuelory"},"content":"                printTaskAdded(tasks[numItem], numItem);","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"samuelory"},"content":"                numItem++;","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"samuelory"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"samuelory"},"content":"            case (\"event\"):","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"samuelory"},"content":"                if (!input.contains(\" \")){","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"Did not write anything after \\\"event\\\", dont waste my time and yours pls\");","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"samuelory"},"content":"                if (!input.contains(\" /from \") || !input.contains(\" /to \")){","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"Did not enter event start and end, use /from and /to to enter start and end time respectively\");","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"samuelory"},"content":"                String newEventDesc \u003d input.substring(input.indexOf(\" \"), input.indexOf(\"/from\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"samuelory"},"content":"                String newEventStart \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\" /to\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"samuelory"},"content":"                String newEventEnd \u003d input.substring(input.indexOf(\"/to\") + 4);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"samuelory"},"content":"                tasks[numItem] \u003d new Event(newEventDesc, newEventStart, newEventEnd);","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"samuelory"},"content":"                printTaskAdded(tasks[numItem], numItem);","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"samuelory"},"content":"                numItem++;","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"samuelory"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"samuelory"},"content":"            default:","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"samuelory"},"content":"                throw new OGFException(\"unrecognised input\");","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"samuelory"},"content":"        return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"samuelory"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"samuelory"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"samuelory"},"content":"                \" _____  _    _                   _____ ______ \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"samuelory"},"content":"                \"|  _  || |  | |                 |  __ \\\\|  ___|\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"samuelory"},"content":"                \"| | | || |_ | |__    ___  _ __  | |  \\\\/| |_   \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"samuelory"},"content":"                \"| | | || __|| \u0027_ \\\\  / _ \\\\| \u0027__| | | __ |  _|  \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"samuelory"},"content":"                \"\\\\ \\\\_/ /| |_ | | | ||  __/| |    | |_\\\\ \\\\| |    \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"samuelory"},"content":"                \" \\\\___/  \\\\__||_| |_| \\\\___||_|     \\\\____/\\\\_|    \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"samuelory"},"content":"                \"                                              \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"samuelory"},"content":"                \"                                              \\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Welcome! I\u0027m your \\n\" + logo + \"Nice to meet you!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"samuelory"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"samuelory"},"content":"        while (isRunning) {","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"samuelory"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"samuelory"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"samuelory"},"content":"                isRunning \u003d handleInput(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"samuelory"},"content":"            catch (OGFException error){","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"samuelory"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"samuelory"},"content":"                printBreakLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"samuelory"},"content":"            catch (NumberFormatException error){","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"samuelory"},"content":"                System.out.println(\"did not enter int: \" + input);","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"samuelory"},"content":"                printBreakLine();","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"samuelory"},"content":"            catch (ArrayIndexOutOfBoundsException error){","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"samuelory"},"content":"                System.out.println(\"Whoops, looks like you have too many items in the list! Have less commitments next time :)\");","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"samuelory"},"content":"                printBreakLine();","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"samuelory":132}},{"path":"src/main/java/OGFException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class OGFException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    OGFException(String message){","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"        super(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"samuelory":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    protected String taskName;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    public Task(){","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    public Task(String task){","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        return taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    public boolean getDone(){","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        return isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"    public void setTaskName(String task){","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"    public void setDone(boolean done){","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"    public String toString(){","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"            return(\"[X] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"            return(\"[ ] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"samuelory":38}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"Todo(String task){","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    super(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"@Override","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"public String toString(){","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    if (this.isDone){","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"        return(\"[T][X] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    else{","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"        return(\"[T][ ] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"todo borrow book","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"mark 1","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"mark 2","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"mark 3","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"unmark 1","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"java -classpath ..\\bin OGF \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"samuelory":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"java -classpath ../bin OGF \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"samuelory":1,"-":37}}]
