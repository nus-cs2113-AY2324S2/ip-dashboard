[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    private final Task task;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    public AddCommand(Task task){","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws OGFException {","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        try{","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"            taskList.addTask(task);","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"            ui.printTaskAdded(task, taskList);","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"            storage.appendToFile(task);","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"        catch(IOException error){","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"            throw new OGFException(\"Encountered an error trying to access hard drive file. Closing program.\", true);","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        return true;","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":22}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"        return false;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":6}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"// abstract command class for execute method","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    public abstract boolean execute(TaskList taskList, Ui ui, Storage storage) throws OGFException; //todo add params","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    private final String deadlineString;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    Deadline(String description, String deadline){","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    Deadline(String description, String deadline, boolean isDone){","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"    public java.lang.String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"            return \"[D][X] \" + this.taskName + String.format(\" (by: %s)\", deadlineString );","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"            return \"[D][ ] \" + this.taskName + String.format(\" (by: %s)\", deadlineString );","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"    public String toSerial() {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"        return (\"deadline,\" + super.toSerial() + \",\"+ this.deadlineString);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":27}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    private final int taskToDelete;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    DeleteCommand(int task){","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        taskToDelete \u003d task;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws OGFException{","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        try {","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"            System.out.println(\"Deleting task: \" + taskList.getTask(taskToDelete));","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"            taskList.deleteTask(taskToDelete);","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"            ui.printList(taskList);","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"            storage.updateFile(taskList);","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"        catch(IndexOutOfBoundsException e){","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"            throw new OGFException(\"Tried to access item not in list index. Try again with a smaller number\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"        catch(IOException e){","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"            throw new OGFException(\"Encountered an error trying to access hard drive file. Closing program.\", true);","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"        return true;","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    private final String startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    private final String endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    Event(String description, String startTime, String endTime){","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    Event(String description, String startTime, String endTime, boolean isDone){","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"            return \"[E][X] \" + this.taskName + String.format(\" (from: %s to: %s)\", startTime, endTime );","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"            return \"[E][ ] \" + this.taskName + String.format(\" (from: %s to: %s)\", startTime, endTime );","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"    public String toSerial() {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"        return (\"event,\" + super.toSerial()+ \",\" + startTime + \",\" + endTime);","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":28}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage){","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"        ui.printList(taskList);","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"        return true;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":6}},{"path":"src/main/java/OGF.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"public class OGF {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    private static final String STORAGE_PATH_NAME \u003d \"data/tasklist.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    private static Storage listStorage;","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    private static TaskList tempTasks;","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"    private static boolean isRunning \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"        ui.printIntroMessage();","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"            listStorage \u003d new Storage();","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"            tempTasks \u003d listStorage.readFile();","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        catch(OGFException e){","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"            if (e.getFatal()){","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"                isRunning \u003d false;","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"        catch(IOException e){","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"            System.out.println(\"There has been a fatal error in reading the storage file. Closing program :(\");","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"            isRunning \u003d false;","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"        while (isRunning) {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"                isRunning \u003d command.execute(tempTasks, ui,listStorage);","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"            catch (OGFException error){","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"                ui.printOGFException(error);","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"                if(error.getFatal()){","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"samuelory"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"samuelory"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"samuelory":45}},{"path":"src/main/java/OGFException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class OGFException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    private boolean isFatal;","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    OGFException(String message, boolean isFatal){","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"        super(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"        this.isFatal \u003d isFatal;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    public boolean getFatal(){","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"        return isFatal;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"samuelory":10}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Parser {","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    public static Command parse(String input) throws OGFException{","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"        try {","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"            switch (input.split(\" \")[0]) {","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"                case (\"bye\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"                    return new ByeCommand();","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"                case (\"list\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"                    return new ListCommand();","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"                case (\"delete\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not indicate task to delete\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"                    int taskToDelete \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"                    return new DeleteCommand(taskToDelete);","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"                case (\"mark\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not indicate task to mark\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"                    int taskToMark \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"                    return new UpdateCommand(taskToMark, true);","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"                case (\"unmark\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not indicate task to unmark\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"                    int taskToUnmark \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"                    return new UpdateCommand(taskToUnmark, false);","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"                case (\"todo\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" \") || input.indexOf(\" \") \u003d\u003d input.length() - 1) {","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not write anything after \\\"todo\\\", dont waste my time and yours pls\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"                    String newTodoDesc \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"                    return new AddCommand(new Todo(newTodoDesc));","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"                case (\"deadline\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not write anything after \\\"deadline\\\", dont waste my time and yours pls\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" /by \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not enter deadline, use /by, followed by your deadline to add a deadline to your deadline\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"samuelory"},"content":"                    String newDeadlineDesc \u003d input.substring(input.indexOf(\" \") + 1, input.indexOf(\" /by\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"samuelory"},"content":"                    String newDeadlineTime \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"samuelory"},"content":"                    return new AddCommand(new Deadline(newDeadlineDesc, newDeadlineTime));","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"samuelory"},"content":"                case (\"event\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not write anything after \\\"event\\\", dont waste my time and yours pls\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"samuelory"},"content":"                    if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"samuelory"},"content":"                        throw new OGFException(\"Did not enter event start and end, use /from and /to to enter start and end time respectively\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"samuelory"},"content":"                    }","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"samuelory"},"content":"                    String newEventDesc \u003d input.substring(input.indexOf(\" \") + 1, input.indexOf(\" /from\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"samuelory"},"content":"                    String newEventStart \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\" /to\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"samuelory"},"content":"                    String newEventEnd \u003d input.substring(input.indexOf(\"/to\") + 4);","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"samuelory"},"content":"                    return new AddCommand(new Event(newEventDesc, newEventStart, newEventEnd));","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"samuelory"},"content":"                default:","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"samuelory"},"content":"                    throw new OGFException(\"I don\u0027t recognise this input, try again!\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"samuelory"},"content":"        catch(NumberFormatException error){","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"samuelory"},"content":"            throw new OGFException(\"Looks like the input you entered was not an integer: \" + input,false);","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":62}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.io.File;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"// Manages file creation, reading and writing from file","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"public class Storage {","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    private static final String STORAGE_PATH_NAME \u003d \"data/tasklist.txt\";","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    private File storedList \u003d new File(STORAGE_PATH_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"    public Storage() throws OGFException, IOException {","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"        if (!storedList.exists()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"            if (!(storedList.getParentFile().mkdirs() \u0026\u0026 storedList.createNewFile())) {","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"                throw new OGFException(\"Encountered an error trying to import storage file, ending program \", true); //fatal exception","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"    private static Task parseStoredTask(String data) throws OGFException {","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"        String[] params \u003d data.split(\",\");","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"        switch (params[0]) {","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"            case (\"todo\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"                return new Todo(params[1], Boolean.parseBoolean(params[2]));","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"            case (\"deadline\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"                return new Deadline(params[1], params[3], Boolean.parseBoolean(params[2]));","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"            case (\"event\"):","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"                return new Event(params[1], params[3], params[4], Boolean.parseBoolean(params[2]));","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"            default:","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"                throw (new OGFException(\"Looks like your storage file is corrupted, ending program. \\n Corrupted line: \" + data, true)); //fatal exception","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"    public TaskList readFile() throws IOException, OGFException { //ioexceptions should be fatal","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"        Scanner storageScanner \u003d new Scanner(storedList);","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"        TaskList newList \u003d new TaskList();","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"        while (storageScanner.hasNext()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"            newList.addTask(parseStoredTask(storageScanner.nextLine()));","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"samuelory"},"content":"        return newList;","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"samuelory"},"content":"    private static void writeToFile(String textToAdd, boolean willAppend) throws java.io.IOException{","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"samuelory"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_PATH_NAME, willAppend);","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"samuelory"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"samuelory"},"content":"            fw.close();","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"samuelory"},"content":"    public void updateFile(TaskList newerList) throws IOException {","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"samuelory"},"content":"        String listSerial \u003d \"\";","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"samuelory"},"content":"        for (Task task : newerList.getTaskList()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"samuelory"},"content":"            listSerial \u003d listSerial + task.toSerial() + System.lineSeparator();","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"samuelory"},"content":"        writeToFile(listSerial, false);","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"samuelory"},"content":"    public void appendToFile(Task taskToAdd) throws IOException{","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"samuelory"},"content":"        writeToFile(taskToAdd.toSerial(), true);","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":64}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    protected String taskName;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    public Task(){","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    public Task(String task){","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"    public Task(String task, boolean isDone){","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        return taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"    public boolean getDone(){","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"        return isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"    public void setTaskName(String task){","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"    public void setDone(boolean done){","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"    public String toString(){","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"            return(\"[X] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"samuelory"},"content":"            return(\"[ ] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"samuelory"},"content":"    public String toSerial(){","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"samuelory"},"content":"        return (this.taskName+\",\"+this.isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"samuelory":46}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"//Manages temporary list of tasks, i.e. adding, removing, editing","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"public class TaskList {","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    public TaskList(){","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    public void addTask(Task task){","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"        return tasks;","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException { return tasks.get(index); }","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException { tasks.remove(index);}","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"    public void updateTaskDone(int index, boolean isDone) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"        tasks.get(index).setDone(isDone);","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"    public int getSize(){ return tasks.size(); }","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":21}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"    Todo(String task){","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"        super(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    Todo(String task, boolean isDone){","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        super(task, isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    public String toString(){","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"        if (this.isDone){","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"            return(\"[T][X] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"            return(\"[T][ ] \" + this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"    public String toSerial() {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"        return (\"todo,\"+ super.toSerial());","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":23}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"// Includes methods for messages to show to the user, i.e. intro, error messages, confirmation messages","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"public class Ui  {","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"    public void printIntroMessage(){","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"                \" _____  _    _                   _____ ______ \\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"                \"|  _  || |  | |                 |  __ \\\\|  ___|\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"                \"| | | || |_ | |__    ___  _ __  | |  \\\\/| |_   \\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"                \"| | | || __|| \u0027_ \\\\  / _ \\\\| \u0027__| | | __ |  _|  \\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"                \"\\\\ \\\\_/ /| |_ | | | ||  __/| |    | |_\\\\ \\\\| |    \\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"                \" \\\\___/  \\\\__||_| |_| \\\\___||_|     \\\\____/\\\\_|    \\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"                \"                                              \\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"                \"                                              \\n\";","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Welcome! I\u0027m your \\n\" + logo + \"Nice to meet you!\");","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"    private void printBreakLine(){","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        System.out.println((\"____________________________________________________________\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"    public String getInput(){","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"        return inputScanner.nextLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"samuelory"},"content":"    public void printList(TaskList taskList){","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"samuelory"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Here are your tasks: \");","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"samuelory"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"samuelory"},"content":"            System.out.printf(\"%d. \", i+1);","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"samuelory"},"content":"            System.out.println(tasks.get(i).toString());","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"samuelory"},"content":"        printBreakLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"samuelory"},"content":"    public void printByeMessage(){","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Bye bye now!\");","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"samuelory"},"content":"        System.out.println((\"____________________________________________________________\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"samuelory"},"content":"    public void printMarkMessage(boolean isMark, Task task){","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"samuelory"},"content":"        if (isMark){","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"samuelory"},"content":"            System.out.println(\"Good Job! I\u0027m setting this task as done: \");","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"samuelory"},"content":"            }","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"samuelory"},"content":"        else{","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"samuelory"},"content":"            System.out.println(\"Oop! I\u0027m setting this task as undone: \");","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"samuelory"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"samuelory"},"content":"        printBreakLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"samuelory"},"content":"    public void printIOException(){","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Encountered an error trying to access hard drive file. Closing program.\");","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"samuelory"},"content":"    public void printTaskAdded(Task task, TaskList taskList){","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"samuelory"},"content":"        System.out.println(\"Alright, adding this task to the list: \");","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"samuelory"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"samuelory"},"content":"        System.out.printf(\"You have %d tasks in the list.%n\", taskList.getSize());","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"samuelory"},"content":"        printBreakLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"samuelory"},"content":"    public void printOGFException(OGFException error){","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"samuelory"},"content":"        System.out.println(error.getMessage());","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"samuelory"},"content":"        printBreakLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":69,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":69}},{"path":"src/main/java/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"public class UpdateCommand extends Command{","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"    boolean isMark;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"    int taskToMark;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"    UpdateCommand(int taskToMark, boolean isMark){","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"        this.taskToMark \u003d taskToMark;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"samuelory"},"content":"    @Override","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"samuelory"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws OGFException {","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"samuelory"},"content":"        try{","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"samuelory"},"content":"            taskList.updateTaskDone(taskToMark, isMark);","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"samuelory"},"content":"            ui.printMarkMessage(isMark, taskList.getTask(taskToMark));","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"samuelory"},"content":"            storage.updateFile(taskList);","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"samuelory"},"content":"        catch(IndexOutOfBoundsException e ){","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"samuelory"},"content":"            throw new OGFException(\"Tried to access item not in list index. Try again with a smaller number\", false);","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"        catch(IOException e ){","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"samuelory"},"content":"            throw new OGFException(\"Encountered an error trying to access hard drive file. Closing program.\", true);","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"samuelory"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"samuelory"},"content":"        return true;","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"samuelory"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"samuelory"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"samuelory":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelory"},"content":"todo borrow book","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"samuelory"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"samuelory"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"samuelory"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"samuelory"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"samuelory"},"content":"mark 1","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"samuelory"},"content":"mark 2","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"samuelory"},"content":"mark 3","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"samuelory"},"content":"unmark 1","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"samuelory":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"samuelory"},"content":"java -classpath ..\\bin OGF \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"samuelory":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"samuelory"},"content":"java -classpath ../bin OGF \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"samuelory":1,"-":37}}]
