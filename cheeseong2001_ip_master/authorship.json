[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"# CheeseBot User Guide","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"CheeseBot is an automated task tracking bot, optimised for use in a command-line interface environment.","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"  - [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"  - [Adding a task:](#adding-a-task)","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"    - [To-do task with no deadline: `todo`](#adding-a-to-do-task-todo)","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"    - [To-do task with a deadline: `deadline`](#adding-a-to-do-task-with-deadline-deadline)","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"    - [Event with start and end time: `event`](#adding-an-event-event)","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"  - [Listing tasks: `list`](#listing-tasks-list)","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"  - [Deleting tasks: `delete`](#deleting-tasks-delete)","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"  - [Searching tasks by keyword: `find`](#searching-tasks-by-keyword-find)","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"  - [Marking a task as completed: `mark`](#marking-a-task-as-completed-mark)","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"  - [Marking a task as uncompleted: `unmark`](#marking-a-task-as-uncompleted-unmark)","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"  - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"  ","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"## Quick Start","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"2. Download the latest CheeseBot.jar from [here]()","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"3. Copy the file to the folder you want to use as the home folder for CheeseBot.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the following command:","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"`java -jar CheeseBot.jar`. A command-line interface should appear in a few seconds.","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"5. Type a command into the command-line interface and press Enter to execute the command. For example, try typing `help`","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"to bring up the list of commands available to you. You can also obtain more information on the commands","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"[here](#features).","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":information_source:\" alt\u003d\":information_source:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\" height\u003d\"20\" width\u003d\"20\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003eNotes on command formatting \u003c/strong\u003e  ","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"\u003e - Words in `UPPER_CASE` are parameters that need to be supplied by the user.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"\u003e E.g. in `todo TASK_NAME`, `TASK_NAME` is a parameter which should be used like this: `todo reading`.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"\u003e - Parameters ordering should be followed strictly.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"\u003e E.g. in command `event TASK_NAME /from START_TIME /to END_TIME`, users are expected to use the command in the given","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"\u003e way, and not in like this: `event TASK_NAME /to END_TIME /from START_TIME`.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"\u003e - Certain commands (like `help`, `list` and `bye`) are singular and should not have extra parameters supplied to it.","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"\u003e Extra parameters will cause the command entered to be rejected.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"\u003e E.g. `help` is the correct format and `help 123` will not be accepted.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"cheeseong2001"},"content":"### Viewing help: `help`","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"cheeseong2001"},"content":"Displays a list of commands available to you and how to use them.","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"cheeseong2001"},"content":"Format: `help`","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"cheeseong2001"},"content":"### Adding a task","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"cheeseong2001"},"content":"There are 3 types of tasks you may add. If you are unsure what kind of tasks you should use, here\u0027s a summary of the ","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"cheeseong2001"},"content":"tasks:","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"cheeseong2001"},"content":"| Task Type | Deadline? | Start Time? | End Time? |","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"cheeseong2001"},"content":"|-----------|-----------|-------------|-----------|","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"cheeseong2001"},"content":"| To-do     | No        | No          | No        |","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"cheeseong2001"},"content":"| Deadline  | Yes       | No          | No        |","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"cheeseong2001"},"content":"| Event     | No        | Yes         | Yes       |","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"cheeseong2001"},"content":"#### Adding a to-do task: `todo`","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"cheeseong2001"},"content":"Adds a to-do task into your list of tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"cheeseong2001"},"content":"Format: `todo TASK_NAME`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `todo Revise lecture 1 content`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":information_source:\" alt\u003d\":information_source:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\" height\u003d\"20\" width\u003d\"20\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003eNote\u003c/strong\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"cheeseong2001"},"content":"\u003e If you are looking to add a task with a specific deadline to adhere to, ","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"cheeseong2001"},"content":"\u003e try [`deadline`](#adding-a-to-do-task-with-deadline-deadline)  ","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"cheeseong2001"},"content":"#### Adding a to-do task with deadline: `deadline`","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"cheeseong2001"},"content":"Adds a to-do task with deadline into your list of tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"cheeseong2001"},"content":"Format: `deadline TASKNAME /by DEADLINE`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `deadline assignment 1 /by 1/2/2024 2359`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":information_source:\" alt\u003d\":information_source:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\" height\u003d\"20\" width\u003d\"20\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003eNote \u003c/strong\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"cheeseong2001"},"content":"\u003e For `DEADLINE` parameter, ensure that it is fully numeric and in the form `dd/MM/yyyy HHmm`, where `dd` is the date,","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"cheeseong2001"},"content":"\u003e `MM` is the month, `yyyy` is the year, `HHmm` is the time in 24-hour format.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"cheeseong2001"},"content":"#### Adding an event: `event`","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"cheeseong2001"},"content":"Adds an event (with a start and end time) into your list of tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"cheeseong2001"},"content":"Format: `event EVENT_NAME /from START_TIME /to END_TIME`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `event Week 7 CS2113T Lecture /from 8/3/2024 1600 /to 8/3/2024 1800`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":information_source:\" alt\u003d\":information_source:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\" height\u003d\"20\" width\u003d\"20\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003e Note \u003c/strong\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"cheeseong2001"},"content":"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"cheeseong2001"},"content":"\u003e For `START_TIME` and `END_TIME` parameters, ensure that it is fully numeric and in the form `dd/MM/yyyy HHmm`, where ","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"cheeseong2001"},"content":"\u003e`dd` is the date, `MM` is the month, `yyyy` is the year, `HHmm` is the time in 24-hour format.   ","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":information_source:\" alt\u003d\":information_source:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\" height\u003d\"20\" width\u003d\"20\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003e Note \u003c/strong\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"cheeseong2001"},"content":"\u003e Ensure that `START_TIME` is before `END_TIME`, or your command will get rejected.","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"cheeseong2001"},"content":"### Listing tasks: `list`","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"cheeseong2001"},"content":"Lists all the tasks that you have entered so far.","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"cheeseong2001"},"content":"Format: `list`","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"cheeseong2001"},"content":"### Deleting tasks: `delete`","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"cheeseong2001"},"content":"Deletes a particular task from the list of tasks using its task number. You may obtain a task\u0027s task number by using ","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"cheeseong2001"},"content":"[`list`](#listing-tasks-list).  ","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":bulb:\" alt\u003d\":bulb:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png\" height\u003d\"20\" width\u003d\"20\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003e Tip\u003c/strong\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"cheeseong2001"},"content":"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"cheeseong2001"},"content":"\u003e A task\u0027s task number is not fixed and may be reassigned after `delete`.","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"cheeseong2001"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"cheeseong2001"},"content":"\u003e Use [`list`](#listing-tasks-list) after every `delete` to ensure you are deleting the correct task.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"cheeseong2001"},"content":"Format: `delete TASK_NUMBER`.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `delete 3`","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"cheeseong2001"},"content":"Example: Suppose you use `list` and have the following tasks stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":127,"author":{"gitId":"cheeseong2001"},"content":"Here\u0027s your current list of tasks:","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"cheeseong2001"},"content":"    1. [T][ ] Task","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"cheeseong2001"},"content":"    2. [E][ ] Event (from: Jan 01 2024 12:00AM to: Dec 31 2024 11:59 PM)","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"cheeseong2001"},"content":"    3. [D][ ] Deadline (by: Oct 10 2024 10:10 AM)","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"cheeseong2001"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"cheeseong2001"},"content":"And you want to delete task 2, using `delete 2`.","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"cheeseong2001"},"content":"The expected output should be:","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"cheeseong2001"},"content":"Done! I have deleted the following task.","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"cheeseong2001"},"content":"    [E][ ] b (from: Jan 01 2024 12:00 AM to: Dec 31 2024 11:59 PM)","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"cheeseong2001"},"content":"Now you have 2 tasks in your list","lastModifiedDate":"2024-02-29"},{"lineNumber":140,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":141,"author":{"gitId":"cheeseong2001"},"content":"Using `list` once more:","lastModifiedDate":"2024-02-29"},{"lineNumber":142,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"cheeseong2001"},"content":"Here\u0027s your current list of tasks:","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"cheeseong2001"},"content":"    1. [T][ ] Task","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"cheeseong2001"},"content":"    2. [D][ ] Deadline (by: Oct 10 2024 10:10 AM)","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"cheeseong2001"},"content":"Now you have 2 tasks in your list.","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"cheeseong2001"},"content":"\u003e Note that the task numbering in the list have changed. Be careful when trying deleting multiple tasks at once.","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"cheeseong2001"},"content":"### Searching tasks by keyword: `find`","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"cheeseong2001"},"content":"Displays all tasks whose names contains the keyword.","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":153,"author":{"gitId":"cheeseong2001"},"content":"Format: `find KEYWORD`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `find assignment`","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":156,"author":{"gitId":"cheeseong2001"},"content":"Example: Suppose you use `list` and have the following tasks stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"cheeseong2001"},"content":"Here\u0027s your current list of tasks:","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"cheeseong2001"},"content":"    1.[T][ ] revise lecture 1","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"cheeseong2001"},"content":"    2.[D][ ] revise for test 1 (by: Aug 08 2024 11:59 PM)","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"cheeseong2001"},"content":"    3.[T][ ] code side project","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"cheeseong2001"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"cheeseong2001"},"content":"And you want to find all the tasks with the keyword \"revise\", using `find revise`.","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"cheeseong2001"},"content":"Expected output should be:","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"cheeseong2001"},"content":"The following matches what you are trying to find:","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"cheeseong2001"},"content":"    1.[T][ ] revise lecture 1","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"cheeseong2001"},"content":"    2.[D][ ] revise for test 1 (by: Aug 08 2024 11:59 PM)","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"cheeseong2001"},"content":"### Marking a task as completed: `mark`","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"cheeseong2001"},"content":"Marks a particular task as completed. You may obtain a task\u0027s task number by using [`list`](#listing-tasks-list).","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":176,"author":{"gitId":"cheeseong2001"},"content":"Format: `mark TASK_NUMBER`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `mark 2`","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"cheeseong2001"},"content":"Example: Suppose you use `list` and have the following tasks stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"cheeseong2001"},"content":"Here\u0027s your current list of tasks:","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"cheeseong2001"},"content":"    1. [T][ ] Task","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"cheeseong2001"},"content":"    2. [E][ ] Event (from: Jan 01 2024 12:00AM to: Dec 31 2024 11:59 PM)","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"cheeseong2001"},"content":"    3. [D][ ] Deadline (by: Oct 10 2024 10:10 AM)","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"cheeseong2001"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"cheeseong2001"},"content":"You have completed task 3 and want to mark it as complete, using `mark 3`.","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"cheeseong2001"},"content":"The expected output should be:","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"cheeseong2001"},"content":"Well done, you are one step closer to finishing your tasks!","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"cheeseong2001"},"content":"    I\u0027ve marked this task done for you:","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"cheeseong2001"},"content":"        3. [D][X] Deadline (by: Oct 10 2024 10:10 AM)","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"cheeseong2001"},"content":"\u003e Note that the `X` in the task indicates the task is completed.","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"cheeseong2001"},"content":"### Marking a task as uncompleted: `unmark`","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"cheeseong2001"},"content":"Marks a particular task as uncompleted. You may obtain a task\u0027s task number by using [`list`](#listing-tasks-list).","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"cheeseong2001"},"content":"Format: `unmark TASK_NUMBER`  ","lastModifiedDate":"2024-02-29"},{"lineNumber":201,"author":{"gitId":"cheeseong2001"},"content":"Example usage: `unmark 3`","lastModifiedDate":"2024-02-29"},{"lineNumber":202,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":203,"author":{"gitId":"cheeseong2001"},"content":"Example: Suppose you use `list` and have the following tasks stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":204,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":205,"author":{"gitId":"cheeseong2001"},"content":"Here\u0027s your current list of tasks:","lastModifiedDate":"2024-02-29"},{"lineNumber":206,"author":{"gitId":"cheeseong2001"},"content":"    1. [T][ ] Task","lastModifiedDate":"2024-02-29"},{"lineNumber":207,"author":{"gitId":"cheeseong2001"},"content":"    2. [E][ ] Event (from: Jan 01 2024 12:00AM to: Dec 31 2024 11:59 PM)","lastModifiedDate":"2024-02-29"},{"lineNumber":208,"author":{"gitId":"cheeseong2001"},"content":"    3. [D][X] Deadline (by: Oct 10 2024 10:10 AM)","lastModifiedDate":"2024-02-29"},{"lineNumber":209,"author":{"gitId":"cheeseong2001"},"content":"Now you have 3 tasks in your list.","lastModifiedDate":"2024-02-29"},{"lineNumber":210,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":211,"author":{"gitId":"cheeseong2001"},"content":"You realised you did not complete task 3 and want to mark it as incomplete, using `unmark 3`.","lastModifiedDate":"2024-02-29"},{"lineNumber":212,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":213,"author":{"gitId":"cheeseong2001"},"content":"The expected output should be:","lastModifiedDate":"2024-02-29"},{"lineNumber":214,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":215,"author":{"gitId":"cheeseong2001"},"content":"No worries, let\u0027s do our best!","lastModifiedDate":"2024-02-29"},{"lineNumber":216,"author":{"gitId":"cheeseong2001"},"content":"    I\u0027ve unmarked this task done for you:","lastModifiedDate":"2024-02-29"},{"lineNumber":217,"author":{"gitId":"cheeseong2001"},"content":"        3. [D][ ] Deadline (by: Oct 10 2024 10:10 AM)","lastModifiedDate":"2024-02-29"},{"lineNumber":218,"author":{"gitId":"cheeseong2001"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":219,"author":{"gitId":"cheeseong2001"},"content":"\u003e Note that the lack of `X` in the task indicates the task is uncompleted.","lastModifiedDate":"2024-02-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"cheeseong2001"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"cheeseong2001"},"content":"Exits the program safely. This will also automatically save your to-do list.","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"cheeseong2001"},"content":"Format: `bye`","lastModifiedDate":"2024-02-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"cheeseong2001"},"content":"### Saving the data","lastModifiedDate":"2024-02-29"},{"lineNumber":227,"author":{"gitId":"cheeseong2001"},"content":"Upon entering `bye`, all data is saved automatically. This includes the tasks\u0027 statuses such as their task names, task","lastModifiedDate":"2024-02-29"},{"lineNumber":228,"author":{"gitId":"cheeseong2001"},"content":"types, and their completion status. ","lastModifiedDate":"2024-02-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"cheeseong2001"},"content":"The next time you boot up CheeseBot, the saved data will also automatically be loaded.","lastModifiedDate":"2024-02-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"cheeseong2001"},"content":"### Editing the data file","lastModifiedDate":"2024-02-29"},{"lineNumber":233,"author":{"gitId":"cheeseong2001"},"content":"Saved data are saved automatically as a TXT file `[JAR file location]/data/CheeseBot.txt`.","lastModifiedDate":"2024-02-29"},{"lineNumber":234,"author":{"gitId":"cheeseong2001"},"content":"Advanced users are welcome to update data directly by editing the data file.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":236,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":exclamation:\" alt\u003d\":exclamation:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2757.png\" height\u003d\"20\" width\u003d\"20\"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":237,"author":{"gitId":"cheeseong2001"},"content":"\u003e \u003cstrong\u003e Caution: \u003c/strong\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":238,"author":{"gitId":"cheeseong2001"},"content":"\u003e If the changes you have made to the save file are deemed invalid by the built-in parser, you may lose tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":239,"author":{"gitId":"cheeseong2001"},"content":"\u003e Hence, it is recommended that your store a backup of the file before editing it.  ","lastModifiedDate":"2024-02-29"},{"lineNumber":240,"author":{"gitId":"cheeseong2001"},"content":"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":241,"author":{"gitId":"cheeseong2001"},"content":"\u003e Please only use this feature if you are sure with what you are doing. ","lastModifiedDate":"2024-02-29"},{"lineNumber":242,"author":{"gitId":"cheeseong2001"},"content":"\u003e We will not be liable for any data lost.","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"cheeseong2001":215,"-":27}},{"path":"src/main/java/CheeseBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"import InvalidInputExceptions.InvalidInputException;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"import java.io.File;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":" * Main executable class that controls program flow","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"public class CheeseBot {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"    public final static DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"    private final static String inFilePath \u003d \"./data/CheeseBot.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"    private final static String outFilePath \u003d \"./data/temp.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"    private final static File inFile \u003d new File(inFilePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"    private final static File outFile \u003d new File(outFilePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"    protected final static TasksList TASKS_LIST \u003d new TasksList();","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"    private static final Parser PARSER \u003d new Parser();","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"    protected static final Ui UI \u003d new Ui();","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"    private static final Storage STORAGE \u003d new Storage();","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"    private void botAction(String[] arguments) throws InvalidInputException {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"        String command \u003d arguments[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"        switch (command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"        case \"list\":","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.listTasks();","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.mark(arguments, true);","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.mark(arguments, false);","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"        case \"help\":","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"            UI.printCommandList();","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"            Task deletedTask \u003d TASKS_LIST.delete(arguments);","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"            UI.printDeleted(deletedTask, TASKS_LIST.getNumberOfTasks());","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"cheeseong2001"},"content":"        case \"find\":","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.find(arguments);","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"cheeseong2001"},"content":"        default:","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"cheeseong2001"},"content":"            addTask(arguments);","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"cheeseong2001"},"content":"    private void inputLoop() {","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"cheeseong2001"},"content":"        while (true) {","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"cheeseong2001"},"content":"            try {","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"cheeseong2001"},"content":"                String input \u003d UI.printInputPrompt();","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"cheeseong2001"},"content":"                UI.printDivider();","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"cheeseong2001"},"content":"                String[] arguments \u003d PARSER.validateAndParseInput(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"cheeseong2001"},"content":"                String command \u003d arguments[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"cheeseong2001"},"content":"                if (PARSER.isBye(command)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"cheeseong2001"},"content":"                    break;","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"cheeseong2001"},"content":"                }","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"cheeseong2001"},"content":"                botAction(arguments);","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"cheeseong2001"},"content":"                UI.printDivider();","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"cheeseong2001"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"cheeseong2001"},"content":"                // No action required. Just catch the exception.","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"cheeseong2001"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"cheeseong2001"},"content":"    private void run() {","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"cheeseong2001"},"content":"            STORAGE.readFromInputFile(inFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"cheeseong2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"cheeseong2001"},"content":"            STORAGE.createFile(inFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"cheeseong2001"},"content":"        STORAGE.createFile(outFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"cheeseong2001"},"content":"        UI.printGreeting();","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"cheeseong2001"},"content":"        UI.printDivider();","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"cheeseong2001"},"content":"        inputLoop();","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"cheeseong2001"},"content":"        STORAGE.storeData(inFile, outFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"cheeseong2001"},"content":"        UI.printFarewell();","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"cheeseong2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"cheeseong2001"},"content":"        CheeseBot cheeseBot \u003d new CheeseBot();","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"cheeseong2001"},"content":"        cheeseBot.run();","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"cheeseong2001"},"content":"  ","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"cheeseong2001"},"content":"     * Adds a task of a specific type (Todo, Deadline or Event) using the arguments supplied.","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"cheeseong2001"},"content":"     * @param arguments The required parsed arguments for each specific task type.","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"cheeseong2001"},"content":"    public static void addTask(String[] arguments) {","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"cheeseong2001"},"content":"        String command \u003d arguments[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"cheeseong2001"},"content":"        String taskName \u003d arguments[1];","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"cheeseong2001"},"content":"        switch (command) {","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"cheeseong2001"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.addTask(new Todo(taskName));","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"cheeseong2001"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"cheeseong2001"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(arguments[2], INPUT_FORMAT);","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.addTask(new Deadline(taskName, by));","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"cheeseong2001"},"content":"        case \"event\":","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"cheeseong2001"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(arguments[2], INPUT_FORMAT);","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"cheeseong2001"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(arguments[3], INPUT_FORMAT);","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.addTask(new Event(taskName, start, end));","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"cheeseong2001"},"content":"        UI.printAdded(taskName, TASKS_LIST.getNumberOfTasks());","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"cheeseong2001":122}},{"path":"src/main/java/InvalidInputExceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package InvalidInputExceptions;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"public class InvalidDeadlineException extends InvalidInputException {","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"    public InvalidDeadlineException(String errorMessage) {","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tDeadline format: deadline TASK_NAME /by DEADLINE\");","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tDEADLINE should be fully numerical and of the format dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"cheeseong2001":9}},{"path":"src/main/java/InvalidInputExceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package InvalidInputExceptions;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"public class InvalidEventException extends InvalidInputException {","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"    public InvalidEventException(String errorMessage) {","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tEvent format: event TASK_NAME /from START_TIME /to END_TIME\");","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tSTART_TIME and END_TIME should be fully numerical and of the format dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"cheeseong2001":9}},{"path":"src/main/java/InvalidInputExceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package InvalidInputExceptions;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"cheeseong2001":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"import InvalidInputExceptions.InvalidDeadlineException;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"import InvalidInputExceptions.InvalidEventException;","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"import InvalidInputExceptions.InvalidInputException;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.TasksList;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":" * Helper class used to validate and parse input supplied by user into CheeseBot.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"public class Parser {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"    private static final TasksList TASKS_LIST \u003d CheeseBot.TASKS_LIST;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d CheeseBot.INPUT_FORMAT;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"    private static final String BY \u003d \" /by\";","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"    private static final String FROM \u003d \" /from\";","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"    private static final String TO \u003d \" /to\";","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"     * Returns True if command is \"bye\".","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"     * @param command Input entered by user","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"     * @return True if command is \"bye\", else False.","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"    public boolean isBye(String command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"        return command.equals(\"bye\");","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"    private static String[] parseSingleWordCommand(String input) throws InvalidInputException {","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"        // for case of single word commands with no space","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"        if (input.equals(\"list\") || input.equals(\"bye\") || input.equals(\"help\")) {","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"            String[] parsed \u003d new String[4];","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"            parsed[0] \u003d input;","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"            return parsed;","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"        // for commands where \u003e1 arguments are needed","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"        throw new InvalidInputException(\"\\tWrong command usage or no such command!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"    private static String[] parseDoubleWordCommand(String input) {","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"        int spaceIndex \u003d input.indexOf(SPACE);","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"        String command \u003d input.substring(0, spaceIndex);","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"        String argument \u003d input.substring(spaceIndex + 1);","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"        String[] parsed \u003d new String[4];","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"cheeseong2001"},"content":"        parsed[0] \u003d command;","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"cheeseong2001"},"content":"        parsed[1] \u003d argument;","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"cheeseong2001"},"content":"        return parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"cheeseong2001"},"content":"    private static String[] validateAndParseDeadlineInput(String input) throws InvalidInputException {","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"cheeseong2001"},"content":"        int byIndex \u003d input.indexOf(BY);","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"cheeseong2001"},"content":"        int spaceIndex \u003d input.indexOf(SPACE);","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"cheeseong2001"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidDeadlineException(\"\\tMissing \u0027/by\u0027 flag!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"cheeseong2001"},"content":"        if (spaceIndex \u003d\u003d byIndex || spaceIndex + 1 \u003d\u003d byIndex) {","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"cheeseong2001"},"content":"            //case where there is no task name input","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidDeadlineException(\"\\tMissing TASK_NAME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"cheeseong2001"},"content":"        String taskName \u003d input.substring(spaceIndex + 1, byIndex).strip();","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"cheeseong2001"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidDeadlineException(\"\\tMissing TASK_NAME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"cheeseong2001"},"content":"        if (input.charAt(byIndex + 4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidDeadlineException(\"\\tInvalid format! Please provide a space between /by and DEADLINE\");","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"cheeseong2001"},"content":"        if (byIndex + 5 \u003e input.length()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"cheeseong2001"},"content":"            //case where input ends immediately after /by flag","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidDeadlineException(\"\\tMissing DEADLINE!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"cheeseong2001"},"content":"        String deadline \u003d input.substring(byIndex + 5);","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"cheeseong2001"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(deadline, INPUT_FORMAT);","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"cheeseong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidDeadlineException(\"\\tWrong time and date format for DEADLINE!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"cheeseong2001"},"content":"        String[] parsed \u003d new String[4];","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"cheeseong2001"},"content":"        parsed[0] \u003d \"deadline\";","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"cheeseong2001"},"content":"        parsed[1] \u003d taskName;","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"cheeseong2001"},"content":"        parsed[2] \u003d deadline;","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"cheeseong2001"},"content":"        return parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"cheeseong2001"},"content":"    private static String[] validateAndParseEventInput(String input) throws InvalidEventException {","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"cheeseong2001"},"content":"        int spaceIndex \u003d input.indexOf(SPACE);","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"cheeseong2001"},"content":"        int fromIndex \u003d input.indexOf(FROM);","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"cheeseong2001"},"content":"        int toIndex \u003d input.indexOf(TO);","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"cheeseong2001"},"content":"        if (fromIndex \u003d\u003d spaceIndex || fromIndex \u003d\u003d spaceIndex + 1) {","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"cheeseong2001"},"content":"            //case where there is no task name input","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing TASK_NAME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"cheeseong2001"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing \u0027/from\u0027 flag!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"cheeseong2001"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing \u0027/to\u0027 flag!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"cheeseong2001"},"content":"        if (fromIndex \u003e toIndex) {","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"cheeseong2001"},"content":"            //case where /to is placed in front of /from","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tWrong order of flags!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"cheeseong2001"},"content":"        String taskName \u003d input.substring(spaceIndex + 1, fromIndex).strip();","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"cheeseong2001"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing TASK_NAME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"cheeseong2001"},"content":"        if (fromIndex + 7 \u003e input.length()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"cheeseong2001"},"content":"            //case where input ends immediately after /from","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing START_TIME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":126,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":127,"author":{"gitId":"cheeseong2001"},"content":"        if (fromIndex + 7 \u003e\u003d toIndex) {","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"cheeseong2001"},"content":"            //case where argument for /from is missing","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing START_TIME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"cheeseong2001"},"content":"        if (input.charAt(fromIndex + 6) !\u003d \u0027 \u0027) {","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tInvalid format! Please provide a space between /from and START_TIME\");","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"cheeseong2001"},"content":"        String from \u003d input.substring(fromIndex + 7, toIndex);","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"cheeseong2001"},"content":"        LocalDateTime start;","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"cheeseong2001"},"content":"            start \u003d LocalDateTime.parse(from, INPUT_FORMAT);","lastModifiedDate":"2024-02-29"},{"lineNumber":140,"author":{"gitId":"cheeseong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":141,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tWrong time and date format for START_TIME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":142,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"cheeseong2001"},"content":"        if (toIndex + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"cheeseong2001"},"content":"            //case where input ends immediately after /to","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tMissing END_TIME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"cheeseong2001"},"content":"        if (input.charAt(toIndex + 4) !\u003d \u0027 \u0027) {","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tInvalid format! Please provide a space between /to and END_TIME\");","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"cheeseong2001"},"content":"        String to \u003d input.substring(toIndex + 5);","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"cheeseong2001"},"content":"        LocalDateTime end;","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"cheeseong2001"},"content":"            end \u003d LocalDateTime.parse(to, INPUT_FORMAT);","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"cheeseong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tWrong time and date format for END_TIME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"cheeseong2001"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tSTART_TIME cannot be after END_TIME!\");","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"cheeseong2001"},"content":"        } else if (start.isEqual(end)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidEventException(\"\\tEND_TIME cannot end on the same time as START_TIME\");","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"cheeseong2001"},"content":"        String[] parsed \u003d new String[4];","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"cheeseong2001"},"content":"        parsed[0] \u003d \"event\";","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"cheeseong2001"},"content":"        parsed[1] \u003d taskName;","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"cheeseong2001"},"content":"        parsed[2] \u003d from;","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"cheeseong2001"},"content":"        parsed[3] \u003d to;","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"cheeseong2001"},"content":"        return parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":174,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":175,"author":{"gitId":"cheeseong2001"},"content":"    private static String[] validateAndParseIntegerInput(String input) throws InvalidInputException {","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"cheeseong2001"},"content":"        if (TASKS_LIST.getNumberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidInputException(\"\\tList is empty! Nothing can be deleted.\");","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"cheeseong2001"},"content":"        int spaceIndex \u003d input.indexOf(SPACE);","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"cheeseong2001"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(spaceIndex + 1)) - 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":181,"author":{"gitId":"cheeseong2001"},"content":"        if (taskNumber \u003e\u003d TASKS_LIST.getNumberOfTasks()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidInputException(\"\\tInvalid number! Number cannot be more than the total number of tasks (\"","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"cheeseong2001"},"content":"                    + TASKS_LIST.getNumberOfTasks() + \").\");","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":185,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":186,"author":{"gitId":"cheeseong2001"},"content":"        if (taskNumber \u003c 0) {","lastModifiedDate":"2024-02-25"},{"lineNumber":187,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidInputException(\"\\tInvalid number! Task number must be more than 0.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":188,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":189,"author":{"gitId":"cheeseong2001"},"content":"        String[] parsed \u003d new String[4];","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"cheeseong2001"},"content":"        parsed[0] \u003d input.substring(0, spaceIndex);","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"cheeseong2001"},"content":"        parsed[1] \u003d String.valueOf(taskNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"cheeseong2001"},"content":"        return parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":194,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"cheeseong2001"},"content":"     * Validates if an input is of the correct format, then parse it accordingly to the command.","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"cheeseong2001"},"content":"     * First, checks if input is a single word command. Next, checks if input is a double word command. Then, checks if","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"cheeseong2001"},"content":"     * command takes in an integer input. Lastly, check if command matches any of the task-adding commands. Else, reject","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"cheeseong2001"},"content":"     * command input and throw InvalidInputException.","lastModifiedDate":"2024-02-29"},{"lineNumber":200,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":201,"author":{"gitId":"cheeseong2001"},"content":"     * @param input Input supplied to CheeseBot","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"cheeseong2001"},"content":"     * @throws InvalidInputException Throws InvalidInputException if the arguments supplied does not match the","lastModifiedDate":"2024-02-29"},{"lineNumber":203,"author":{"gitId":"cheeseong2001"},"content":"     *                               command requirements.","lastModifiedDate":"2024-02-29"},{"lineNumber":204,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"cheeseong2001"},"content":"    public String[] validateAndParseInput(String input) throws InvalidInputException {","lastModifiedDate":"2024-02-29"},{"lineNumber":206,"author":{"gitId":"cheeseong2001"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":207,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidInputException(\"\\tInput is empty! Please type something.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":208,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":209,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":210,"author":{"gitId":"cheeseong2001"},"content":"        String[] parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":211,"author":{"gitId":"cheeseong2001"},"content":"        if (!input.contains(SPACE)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":212,"author":{"gitId":"cheeseong2001"},"content":"            parsed \u003d parseSingleWordCommand(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":213,"author":{"gitId":"cheeseong2001"},"content":"            return parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":214,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":215,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":216,"author":{"gitId":"cheeseong2001"},"content":"        String command \u003d input.substring(0, input.indexOf(SPACE));","lastModifiedDate":"2024-02-29"},{"lineNumber":217,"author":{"gitId":"cheeseong2001"},"content":"        switch (command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":218,"author":{"gitId":"cheeseong2001"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-25"},{"lineNumber":219,"author":{"gitId":"cheeseong2001"},"content":"            //Fallthrough","lastModifiedDate":"2024-02-26"},{"lineNumber":220,"author":{"gitId":"cheeseong2001"},"content":"        case \"find\":","lastModifiedDate":"2024-02-26"},{"lineNumber":221,"author":{"gitId":"cheeseong2001"},"content":"            parsed \u003d parseDoubleWordCommand(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":224,"author":{"gitId":"cheeseong2001"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":225,"author":{"gitId":"cheeseong2001"},"content":"            //Fallthrough","lastModifiedDate":"2024-02-25"},{"lineNumber":226,"author":{"gitId":"cheeseong2001"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":227,"author":{"gitId":"cheeseong2001"},"content":"            //Fallthrough","lastModifiedDate":"2024-02-25"},{"lineNumber":228,"author":{"gitId":"cheeseong2001"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-25"},{"lineNumber":229,"author":{"gitId":"cheeseong2001"},"content":"            parsed \u003d validateAndParseIntegerInput(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":230,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-29"},{"lineNumber":231,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":232,"author":{"gitId":"cheeseong2001"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-29"},{"lineNumber":233,"author":{"gitId":"cheeseong2001"},"content":"            parsed \u003d validateAndParseDeadlineInput(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":234,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-29"},{"lineNumber":235,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":236,"author":{"gitId":"cheeseong2001"},"content":"        case \"event\":","lastModifiedDate":"2024-02-29"},{"lineNumber":237,"author":{"gitId":"cheeseong2001"},"content":"            parsed \u003d validateAndParseEventInput(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":238,"author":{"gitId":"cheeseong2001"},"content":"            break;","lastModifiedDate":"2024-02-29"},{"lineNumber":239,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":240,"author":{"gitId":"cheeseong2001"},"content":"        default: // case where there is a space but command does not match any","lastModifiedDate":"2024-02-25"},{"lineNumber":241,"author":{"gitId":"cheeseong2001"},"content":"            throw new InvalidInputException(\"\\tNo such command!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":242,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":243,"author":{"gitId":"cheeseong2001"},"content":"        return parsed;","lastModifiedDate":"2024-02-29"},{"lineNumber":244,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":245,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"cheeseong2001":245}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.Event;","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.TasksList;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.Todo;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"import java.io.File;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":" * Storage helper class to load from and store into save file.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"public class Storage {","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"    private static final TasksList TASKS_LIST \u003d CheeseBot.TASKS_LIST;","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"     * Takes in 2 files: an input file and a temporary output file. Stores data into temporary output file, then","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"     * replaces input file with temporary output file, and finally deleting the temporary output file.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"     * @param inFile Input file containing data to be loaded from when CheeseBot is loaded up again.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"     * @param outFile Temporary output file to store final data","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"    public void storeData(File inFile, File outFile) {","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"        String inFilePath \u003d inFile.getPath();","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"        String outFilePath \u003d outFile.getPath();","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"        storeDataIntoTempFile(outFilePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"        copyData(inFilePath, outFilePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"        deleteTempFile(outFilePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"    private static void storeDataIntoTempFile(String outFilePath) {","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"            TASKS_LIST.outputDataIntoFile(outFilePath);","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"Cannot save to output file!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"            System.exit(1);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"    private static void deleteTempFile(String outFilePath) {","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"cheeseong2001"},"content":"            Files.delete(Paths.get(outFilePath));","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"cheeseong2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"Temp file cannot be deleted\");","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"cheeseong2001"},"content":"            System.exit(1);","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"cheeseong2001"},"content":"    private static void copyData(String inFilePath, String outFilePath) {","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"cheeseong2001"},"content":"            Files.copy(Paths.get(outFilePath), Paths.get(inFilePath), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"cheeseong2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"Data file cannot be replaced\");","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"cheeseong2001"},"content":"            System.exit(1);","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"cheeseong2001"},"content":"     * Creates a file if it does not exist. Also creates the directories it needs if they do not exist.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"cheeseong2001"},"content":"     * @param file The file that is being created.","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"cheeseong2001"},"content":"    public void createFile(File file) {","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"cheeseong2001"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"cheeseong2001"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"cheeseong2001"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"cheeseong2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"cheeseong2001"},"content":"            System.exit(1);","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"cheeseong2001"},"content":"     * Reads from the input file and stores all data into CheeseBot\u0027s tasksList.","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"cheeseong2001"},"content":"     * It reads as single line at a time, deciphers the task type specified, creates the respective task type object,","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"cheeseong2001"},"content":"     * and finally stores into CheeseBot\u0027s tasksList.","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"cheeseong2001"},"content":"     * @param inFile Input file containing data to be loaded from.","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"cheeseong2001"},"content":"     * @throws FileNotFoundException Throws FileNotFoundException when input file cannot found at specific location.","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"cheeseong2001"},"content":"    public void readFromInputFile(File inFile) throws FileNotFoundException {","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"cheeseong2001"},"content":"        Scanner scanner \u003d new Scanner(inFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"cheeseong2001"},"content":"        int tasksLoaded \u003d 0;","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"cheeseong2001"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"cheeseong2001"},"content":"            String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"cheeseong2001"},"content":"            String[] arguments \u003d nextLine.split(\" \\\\| \");","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"cheeseong2001"},"content":"            boolean isTaskDone \u003d Boolean.parseBoolean(arguments[arguments.length - 1]);","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"cheeseong2001"},"content":"            String taskName \u003d arguments[1];","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"cheeseong2001"},"content":"            switch (arguments[0]) {","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"cheeseong2001"},"content":"            case \"T\":","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"cheeseong2001"},"content":"                Todo newTodo \u003d new Todo(taskName);","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"cheeseong2001"},"content":"                newTodo.setTaskDone(isTaskDone);","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"cheeseong2001"},"content":"                TASKS_LIST.addTask(newTodo);","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"cheeseong2001"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"cheeseong2001"},"content":"            case \"D\":","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"cheeseong2001"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(arguments[2]);","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"cheeseong2001"},"content":"                Deadline newDeadline \u003d new Deadline(taskName, by);","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"cheeseong2001"},"content":"                newDeadline.setTaskDone(isTaskDone);","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"cheeseong2001"},"content":"                TASKS_LIST.addTask(newDeadline);","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"cheeseong2001"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"cheeseong2001"},"content":"            case \"E\":","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"cheeseong2001"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(arguments[2]);","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"cheeseong2001"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(arguments[3]);","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"cheeseong2001"},"content":"                Event newEvent \u003d new Event(taskName, from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"cheeseong2001"},"content":"                newEvent.setTaskDone(isTaskDone);","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"cheeseong2001"},"content":"                TASKS_LIST.addTask(newEvent);","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"cheeseong2001"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"cheeseong2001"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"cheeseong2001"},"content":"            tasksLoaded++;","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"cheeseong2001"},"content":"        if (tasksLoaded \u003e 0) {","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tSuccessfully loaded \" + tasksLoaded + \" tasks from save file.\");","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"cheeseong2001"},"content":"        scanner.close();","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"cheeseong2001":127}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package Tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":" * Represents a Deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":" * A deadline task consists of the task\u0027s name, its deadline date and time, and whether it is completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"    private final static DateTimeFormatter DESIRED_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"    public Deadline(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"        super(taskName);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"        setDeadline(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"        return deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"    public void setDeadline(LocalDateTime deadline) {","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"        return \"D\";","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"        return super.toString() + \" (by: \" + deadline.format(DESIRED_FORMAT) + \")\";","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"cheeseong2001":36}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package Tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":" * Represents an Event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":" * An Event task consists of a task\u0027s name, its start date and time, its end data and time, and whether it is completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"    private final static DateTimeFormatter DESIRED_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"        super(taskName);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"        setStart(start);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"        setEnd(end);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"        return start;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"    public void setStart(LocalDateTime start) {","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"        return end;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"    public void setEnd(LocalDateTime end) {","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"        return \"E\";","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"        return super.toString() +","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"                \" (from: \" + start.format(DESIRED_FORMAT) + \" to: \" + end.format(DESIRED_FORMAT) + \")\";","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"cheeseong2001":47}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package Tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":" * An abstract class type that is inherited by Todo, Deadline and Event.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":" * A task has a name and a done status.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"    protected String taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"        setTaskDone(false);","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"        return taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"        return isTaskDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"    public void setTaskDone(boolean newValue) {","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"        isTaskDone \u003d newValue;","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"        return (isTaskDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"        return \"[\" + getTaskType() + \"][\" + getStatusIcon() + \"] \" + getTaskName();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"cheeseong2001":42}},{"path":"src/main/java/Tasks/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package Tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":" * Helper class to manage task-related operations. Primarily manages the array of tasks stored.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"public class TasksList {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"    private final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"    private void printFilteredList(ArrayList\u003cTask\u003e filteredList) {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tThere are no matches!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tThe following matches what you are trying to find:\");","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"        for (Task task: filteredList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\t\\t\" + (i + 1) + \".\" + task);","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"            i +\u003d 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"    private ArrayList\u003cTask\u003e filterTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"        return (ArrayList\u003cTask\u003e) TASKS.stream()","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"                .filter(t -\u003e t.getTaskName().toLowerCase().contains(keyword))","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"                .collect(toList());","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"     * Searches the array of tasks for tasks that contains the keyword. Then prints out in a similar way to the list","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"     * command. Searching is not case-sensitive.","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"     * @param arguments Arguments for the find command. Specifically only the keyword in arguments[1].","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"    public void find(String[] arguments) {","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"        String keyword \u003d arguments[1].toLowerCase();","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d filterTasksByKeyword(keyword);","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"        printFilteredList(filteredList);","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"     * Adds a new Task into array of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"cheeseong2001"},"content":"     * @param newTask A Task to be added. Can be of 1 of the 3 inherited types of Task (Todo, Deadline or Event).","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"cheeseong2001"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"cheeseong2001"},"content":"        TASKS.add(newTask);","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"cheeseong2001"},"content":"    private void printTasksList() {","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"cheeseong2001"},"content":"        boolean isAllTasksDone \u003d true;","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tHere\u0027s your current list of tasks:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"cheeseong2001"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"cheeseong2001"},"content":"        for (Task task: TASKS) {","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"cheeseong2001"},"content":"            if (!task.isTaskDone()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"cheeseong2001"},"content":"                isAllTasksDone \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"cheeseong2001"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\t\\t\" + (i + 1) + \".\" + task);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"cheeseong2001"},"content":"            i +\u003d 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tNow you have \" + TASKS.size() + \" tasks in your list.\");","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"cheeseong2001"},"content":"        if (isAllTasksDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tExcellent! You have completed all your tasks!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"cheeseong2001"},"content":"    private boolean isTasksListEmpty() {","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"cheeseong2001"},"content":"        if (TASKS.isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tThere are no tasks in your list! Please add some tasks.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"cheeseong2001"},"content":"            return true;","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"cheeseong2001"},"content":"        return false;","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"cheeseong2001"},"content":"     * Lists out all the tasks that are currently stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"cheeseong2001"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"cheeseong2001"},"content":"        if (isTasksListEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"cheeseong2001"},"content":"            return;","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"cheeseong2001"},"content":"        printTasksList();","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"cheeseong2001"},"content":"     * Marks or unmarks a specific task according to the isDone value.","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"cheeseong2001"},"content":"     * @param arguments Contains the arguments for the mark or unmark command. Mainly uses arguments[1], which","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"cheeseong2001"},"content":"     *                  corresponds to the task number of the task in the current most updated list which the user","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"cheeseong2001"},"content":"     *                  wishes to mark or unmark.","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"cheeseong2001"},"content":"     * @param isDone Value to be updated for the task","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"cheeseong2001"},"content":"    public void mark(String[] arguments, boolean isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"cheeseong2001"},"content":"        if (isTasksListEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"cheeseong2001"},"content":"            return;","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"cheeseong2001"},"content":"        int taskNumber \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"cheeseong2001"},"content":"        Task taskToEdit \u003d TASKS.get(taskNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"cheeseong2001"},"content":"        if (isAlreadyMarked(isDone, taskToEdit) || isAlreadyUnmarked(isDone, taskToEdit)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"cheeseong2001"},"content":"            return;","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"cheeseong2001"},"content":"        changeTaskStatus(isDone, taskToEdit, taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"cheeseong2001"},"content":"    private void changeTaskStatus(boolean isDone, Task taskToEdit, int taskNumber) {","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"cheeseong2001"},"content":"        taskToEdit.setTaskDone(isDone);","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"cheeseong2001"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tWell done, you are one step closer to finishing your tasks!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tI\u0027ve marked this task done for you:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"cheeseong2001"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tNo worries, let\u0027s do our best!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tI\u0027ve unmarked this task done for you:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\t\\t\" + (taskNumber + 1) + \". \" + taskToEdit);","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"cheeseong2001"},"content":"    private boolean isAlreadyUnmarked(boolean isDone, Task taskToEdit) {","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"cheeseong2001"},"content":"        if (!taskToEdit.isTaskDone() \u0026\u0026 !isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tTask is already unmarked!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"cheeseong2001"},"content":"            return true;","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"cheeseong2001"},"content":"        return false;","lastModifiedDate":"2024-02-13"},{"lineNumber":134,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"cheeseong2001"},"content":"    private boolean isAlreadyMarked(boolean isDone, Task taskToEdit) {","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"cheeseong2001"},"content":"        if (taskToEdit.isTaskDone() \u0026\u0026 isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"cheeseong2001"},"content":"            System.out.println(\"\\tTask is already marked done!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"cheeseong2001"},"content":"            return true;","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"cheeseong2001"},"content":"        return false;","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"cheeseong2001"},"content":"     * Deletes a specific task, which is specified by the task number. Mainly uses arguments[1] which corresponds to the","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"cheeseong2001"},"content":"     * task number of the task in the current most updated list which the user wishes to delete.","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"cheeseong2001"},"content":"     * @param arguments The array containing arguments supplied by user for the delete command.","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"cheeseong2001"},"content":"     * @return The task that was deleted","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"cheeseong2001"},"content":"    public Task delete(String[] arguments) {","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"cheeseong2001"},"content":"        int taskNumber \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"cheeseong2001"},"content":"        Task taskToDelete \u003d TASKS.get(taskNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"cheeseong2001"},"content":"        TASKS.remove(taskToDelete);","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"cheeseong2001"},"content":"        return taskToDelete;","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"cheeseong2001"},"content":"     * Stores the final status of the array into the file specified by the outputFilePath.","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"cheeseong2001"},"content":"     * Formats each Task into a specific format before saving into save file.","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"cheeseong2001"},"content":"     * @param outputFilePath The file location where the output file is located at.","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"cheeseong2001"},"content":"     * @throws IOException Throws IO Exception if data cannot be stored into file.","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"cheeseong2001"},"content":"    public void outputDataIntoFile(String outputFilePath) throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":166,"author":{"gitId":"cheeseong2001"},"content":"        FileWriter fw \u003d new FileWriter(outputFilePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":167,"author":{"gitId":"cheeseong2001"},"content":"        for (Task task: TASKS) {","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"cheeseong2001"},"content":"            String output \u003d task.getTaskType() +  \" | \" + task.getTaskName();","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"cheeseong2001"},"content":"            switch (task.getTaskType()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"cheeseong2001"},"content":"            case \"D\":","lastModifiedDate":"2024-02-21"},{"lineNumber":171,"author":{"gitId":"cheeseong2001"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"cheeseong2001"},"content":"                output \u003d output.concat(\" | \" + deadline.getDeadline());","lastModifiedDate":"2024-02-21"},{"lineNumber":173,"author":{"gitId":"cheeseong2001"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"cheeseong2001"},"content":"            case \"E\":","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"cheeseong2001"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-02-21"},{"lineNumber":177,"author":{"gitId":"cheeseong2001"},"content":"                output \u003d output.concat(\" | \" + event.getStart() + \" | \" + event.getEnd());","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"cheeseong2001"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"cheeseong2001"},"content":"            default:","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"cheeseong2001"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"cheeseong2001"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"cheeseong2001"},"content":"            output \u003d output + \" | \" + task.isTaskDone() + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":184,"author":{"gitId":"cheeseong2001"},"content":"            fw.write(output);","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"cheeseong2001"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"cheeseong2001"},"content":"        fw.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"cheeseong2001"},"content":"     * Used to enquire how many tasks are currently stored in the array of tasks. Returns an integer corresponding to","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"cheeseong2001"},"content":"     * size of the array of tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"cheeseong2001"},"content":"     * @return the number of tasks in the array of tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"cheeseong2001"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"cheeseong2001"},"content":"        return TASKS.size();","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"cheeseong2001":199}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"package Tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":" * Represents a Todo task. A Todo task consists of only the task\u0027s name and whether it is completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"        super(taskName);","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"        return \"T\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"cheeseong2001":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeseong2001"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"cheeseong2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"cheeseong2001"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"cheeseong2001"},"content":" * Helper User interface class to print results and command prompts to the command line interface that users of CheeseBot","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"cheeseong2001"},"content":" * interacts with.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"cheeseong2001"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"cheeseong2001"},"content":"public class Ui {","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"cheeseong2001"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"cheeseong2001"},"content":"    private static final String DIVIDER \u003d \"\\t-------------------------------------------------------------------\";","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"cheeseong2001"},"content":"     * Prints out a line of dashes to the command-line interface. Used to make the screen neater.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"cheeseong2001"},"content":"    public void printDivider() {","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"cheeseong2001"},"content":"     * Prints out the greeting when CheeseBot is booted up. Used to welcome the user.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"cheeseong2001"},"content":"    public void printGreeting() {","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"cheeseong2001"},"content":"        printDivider();","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"cheeseong2001"},"content":"        String greeting \u003d \"\\tHello! I\u0027m CheeseBot\\n\" + \"\\tWhat can I do for you?\";","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"cheeseong2001"},"content":"     * Prints out the farewell when user types in \"bye\" to end session. Used to indicate end of session.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"cheeseong2001"},"content":"    public void printFarewell() {","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"cheeseong2001"},"content":"        String farewell \u003d \"\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(farewell);","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"cheeseong2001"},"content":"        printDivider();","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"cheeseong2001"},"content":"     * Prints the list of commands available to the user. Invoked when the \"help\" command is supplied by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"cheeseong2001"},"content":"    public void printCommandList() {","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tAvailable commands: help, todo, deadline, event, list, delete, find, mark, unmark, \" +","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"cheeseong2001"},"content":"                \"help, bye\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027help\u0027 usage: help\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Lists the available command, along with its usage and functionality.\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027todo\u0027 usage: todo \u003ctask name\u003e\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Adds a to do task with no deadline.\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: todo Revise lecture 1 content\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027deadline\u0027 usage: deadline \u003ctask name\u003e /by \u003cdeadline\u003e\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Adds a to do task with a deadline.\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tDeadline format: dd/MM/yyyy HHmm\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: deadline Submit iP /by 8/3/2024 2359\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027list\u0027 usage: list\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Lists all recorded tasks.\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tTasks\u0027 task numbers are obtained this way.\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027delete\u0027 usage: delete \u003ctask number\u003e\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Deletes a specified task from the list\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: delete 3\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027event\u0027 usage: event \u003cevent name\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Adds an event with the start and end timings.\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tStart / End time format: dd/MM/yyyy HHmm\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: event lecture /from 8/3/2024 1600 /to 8/3/2024 1800\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tNote: START_TIME cannot be after or the same as END_TIME\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027find\u0027 usage: find \u003ckeyword\u003e\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Searches the list of tasks and prints task names that contains the keyword specified.\\n\" +","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: find apple\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027mark\u0027 usage: mark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Marks \u003ctask number\u003e as completed.\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: mark 1\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027unmark\u0027 usage: unmark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Marks \u003ctask number\u003e as not completed.\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tExample usage: unmark 1\\n\");","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tCommand \u0027bye\u0027 usage: bye\\n\" +","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"cheeseong2001"},"content":"                \"\\tFunction: Ends session with CheeseBot.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"cheeseong2001"},"content":"     * Prints an input prompt to ask user to type into the command line interface. Then waits for user to type a","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"cheeseong2001"},"content":"     * command, then return that input line.","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"cheeseong2001"},"content":"     * @return The string input by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"cheeseong2001"},"content":"    public String printInputPrompt() {","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"cheeseong2001"},"content":"        String inputPrompt \u003d \"\\tPlease input your desired action or type \u0027help\u0027 for a list of commands: \";","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(inputPrompt);","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"cheeseong2001"},"content":"        return SCANNER.nextLine().strip();","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"cheeseong2001"},"content":"     * Invoked when a task is added into the array of tasks. Prints to screen the task added and the updated number of","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"cheeseong2001"},"content":"     * tasks stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"cheeseong2001"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"cheeseong2001"},"content":"     * @param taskName Name of the task added","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"cheeseong2001"},"content":"     * @param numberOfTasks Latest number of tasks in array","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"cheeseong2001"},"content":"    public void printAdded(String taskName, int numberOfTasks) {","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tYou have added: \" + taskName);","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tYou have a total of \" + numberOfTasks + \" completed and uncompleted tasks.\");","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"cheeseong2001"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"cheeseong2001"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"cheeseong2001"},"content":"     * Invoked when a task is deleted from the array of tasks. Prints to screen the task deleted and the updated number","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"cheeseong2001"},"content":"     * of tasks stored.","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"cheeseong2001"},"content":"     * @param deletedTask Task that was deleted","lastModifiedDate":"2024-02-29"},{"lineNumber":114,"author":{"gitId":"cheeseong2001"},"content":"     * @param numberOfTasks Latest number of tasks in array","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"cheeseong2001"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"cheeseong2001"},"content":"    public void printDeleted(Task deletedTask, int numberOfTasks) {","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tDone! I have deleted the following task.\");","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\t\\t\" + deletedTask);","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"cheeseong2001"},"content":"        System.out.println(\"\\tNow you have \" + numberOfTasks + \" tasks in your list\");","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"cheeseong2001"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"cheeseong2001"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"cheeseong2001":121}}]
