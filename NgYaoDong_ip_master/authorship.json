[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NgYaoDong":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"public class Duke {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    public Duke() {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    private void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"        ui.printHi();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":38}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":7}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"        ui.printBye();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"        return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":18}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"public interface Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":11}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    private final String INPUT; //deadline return book /by saturday","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"        this.INPUT \u003d input;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"        if (INPUT.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The description of a deadline task cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"                    \"deadline: Adds a deadline task to task list.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: TASK /by DEADLINE\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: deadline return book /by saturday\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"            String[] words \u003d INPUT.split(\"/by \");","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"            Task newDeadline \u003d new Deadline(words[0], words[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            taskList.add(newDeadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"            String msg \u003d (taskList.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task: \\n\\t   \" + newDeadline","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"                    + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":40}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    private final String INPUT; // event meet friends /from 5pm tdy /to 9pm tdy","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"        this.INPUT \u003d input;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"        if (INPUT.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The description of an event task cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"                    \"event: Adds an event task to task list.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: TASK /from START TIME /to END TIME\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: event meet friends /from 9pm today /to 11pm today\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"            String[] words \u003d INPUT.split(\"/\");","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"            final int FROM_LENGTH \u003d 5;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            final int TO_LENGTH \u003d 3;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"            Task newEvent \u003d new Event(words[0], words[1].substring(FROM_LENGTH), words[2].substring(TO_LENGTH));","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            taskList.add(newEvent);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"            String msg \u003d (taskList.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task: \\n\\t   \" + newEvent","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"                    + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"        String message \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"        message +\u003d (taskList.isEmpty()) ? \"\" : System.lineSeparator();","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"            message +\u003d (\"\\t \" + (i + 1) + \".\" + taskList.get(i).toString()","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"                    + ((i \u003d\u003d taskList.size() - 1) ? \"\" : System.lineSeparator()));","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"    private final int INDEX;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"    public MarkCommand(String index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The index of a task to be marked as done cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"                    \"mark: marks a task in the task list as done.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: INDEX\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: mark 1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"            this.INDEX \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"        if (INDEX \u003c 0 || INDEX \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge.... \\n\\t \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! Unable to mark invalid task as done.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            Task doneTask \u003d taskList.get(INDEX);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"            doneTask.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"            ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t   \" + doneTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":41}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    private final String INPUT;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"        this.INPUT \u003d input;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"        if (INPUT.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The description of a todo task cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"                    \"todo: Adds a todo task to task list.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: TASK\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: todo borrow book\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"            Task newTodo \u003d new Todo(INPUT);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"            taskList.add(newTodo);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            String msg \u003d (taskList.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"            ui.printMessage(\"Got it. I\u0027ve added this task: \\n\\t   \" + newTodo","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"                    + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"    private final int INDEX;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"    public UnmarkCommand(String index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The index of a task to be marked as undone cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"                    \"unmark: marks a task in the task list as undone.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: INDEX\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: unmark 1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"            this.INDEX \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"        if (INDEX \u003c 0 || INDEX \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"Exceed Charge.... \\n\\t \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! Unable to mark invalid task as undone.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            Task undoneTask \u003d taskList.get(INDEX);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"            undoneTask.markAsUndone();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"            ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\\t   \" + undoneTask);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":41}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"        String command \u003d words[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"        String description \u003d (words.length \u003d\u003d 2) ? words[1] : \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"        switch (command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        case \"list\":","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"            return new MarkCommand(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"            return new UnmarkCommand(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            //add todo","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"            //add deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"            return new DeadlineCommand(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"            //add event","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"            return new EventCommand(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"ERROR.... \\n\\t A thousand apologies, but I don\u0027t know what that means.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":41}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"    protected String by;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"NgYaoDong":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"    protected String from;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"    protected String to;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"NgYaoDong":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NgYaoDong":28}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":6}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"NgYaoDong":13}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"    Scanner sc;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"    static final String HORIZONTAL_LINE \u003d \"\\t_____________________________________________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"    public Ui() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"    private String messageFormat(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"        return HORIZONTAL_LINE + \"\\t \" + message + System.lineSeparator() + HORIZONTAL_LINE;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    public void printHi() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(\"Awakening.... \\n\\t Hi! I\u0027m Faiz!\\n\\t What can I do for you?\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"    public void printBye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(\"Reformation.... \\n\\t Bye! Hope to see you again soon!\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(message));","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    public void printError(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(message));","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"mark 0","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"todo","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"event","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"todo borrow book","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"deadline return book /by saturday","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"event meet friends /from 5pm tdy /to 9pm tdy","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"mark 0","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"mark 2","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"unmark 10","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"unmark 2","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"blah","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"mark","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"unmark","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NgYaoDong":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NgYaoDong":2,"-":36}}]
