[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NgYaoDong":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"# FaizBot User Guide","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"FaizBot is a desktop chatbot for managing your task list, optimised for use via a Command Line Interface (CLI). ","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"* [Features](#features)","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"  - [Adding a todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"  - [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"  - [Adding an event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"  - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"  - [Marking task as complete: `mark`](#marking-task-as-complete-mark)","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"  - [Marking task as incomplete: `unmark`](#marking-task-as-incomplete-unmark)","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"  - [Finding tasks by keyword: `find`](#finding-tasks-by-keyword-find)","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"  - [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"  - [Exiting the chatbot: `bye`](#exiting-the-chatbot-bye)","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"* [FAQ](#faq)","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"## Quick Start","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"2. Download the latest `FaizBot.jar` from [here](https://github.com/NgYaoDong/ip/releases).","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"4. Open a command terminal, `cd` into the folder your put the jar file in, and use the `java -jar FaizBot.jar` command to run the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"   The terminal should display something similar to the image below.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"   ![Ui](Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"5. Type the command in the command box and press Enter to execute it. \u003cbr\u003e e.g. typing `list` and pressing Enter will list all tasks in the task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"\u003e \u003cstrong\u003e\u003cimg class\u003d\"emoji\" title\u003d\":information_source:\" alt\u003d\":information_source:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/2139.png\" height\u003d\"20\" width\u003d\"20\"\u003e Notes about the command format: \u003c/strong\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"\u003e * Words in `UPPER_CASE` are the parameters to be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"\u003e e.g. in `todo TASK`, `TASK` is a parameter which can be used as `todo return book`.","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"\u003e ","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"\u003e * Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored. \u003cbr\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"\u003e e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"Adds a todo task that are tasks with neither a specific deadline nor a start/end date.","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"Format: `todo TASK`","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"* `todo complete quiz`","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"* `todo do taxes`","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon successful addition of the todo task.","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"     [T][ ] complete quiz","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"Adds a deadline task that are tasks with a specific deadline.","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"NgYaoDong"},"content":"Format: `deadline TASK /by YYYYMMDD HHMM`","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"NgYaoDong"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":bulb:\" alt\u003d\":bulb:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png\" height\u003d\"20\" width\u003d\"20\"\u003e \u003cstrong\u003eTip: \u003c/strong\u003e If the time `HHMM` is not given, it will be autofilled as 2359 hrs.","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"NgYaoDong"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"NgYaoDong"},"content":"* `deadline watch lecture /by 2024-02-14 1800` Creates a deadline task with the description of `watch lecture` and the deadline by `2024-02-14 1800`.","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"NgYaoDong"},"content":"* `deadline pay bills /by 2024-02-29`","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon successful addition of the deadline task.","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"NgYaoDong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"NgYaoDong"},"content":"     [D][ ] watch lecture (by: Feb 14 2024 1800)","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"NgYaoDong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"NgYaoDong"},"content":"### Adding an event task: `event`","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"NgYaoDong"},"content":"Adds an event task that are tasks with a start and end date/time.","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"NgYaoDong"},"content":"Format: `event TASK /from YYYYMMDD HHMM /to YYYYMMDD HHMM`","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"NgYaoDong"},"content":"\u003e \u003cimg class\u003d\"emoji\" title\u003d\":bulb:\" alt\u003d\":bulb:\" src\u003d\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png\" height\u003d\"20\" width\u003d\"20\"\u003e \u003cstrong\u003eTip: \u003c/strong\u003e If the start/end time `HHMM` is not given, it will be autofilled as 0000 hrs for start and 2359 hrs for end.","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"NgYaoDong"},"content":"Examples:","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"NgYaoDong"},"content":"* `event meet friends /from 2024-11-11 1200 /to 2024-11-11 2300` Creates an event task with the description of `meet friends`, the start date/time as `2024-11-11 1200` and the end date/time as `2024-11-11 2300`.","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"NgYaoDong"},"content":"* `event cruise trip /from 2024-12-01 /to 2025-01-01`","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon successful addition of the deadline task.","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"NgYaoDong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"NgYaoDong"},"content":"     [E][ ] meet friends (from: Nov 11 2024 1200 to: Nov 11 2024 2300)","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"NgYaoDong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"NgYaoDong"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"NgYaoDong"},"content":"Displays all tasks in the task list on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"NgYaoDong"},"content":"Format: `list`","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon input of the `list` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"NgYaoDong"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"NgYaoDong"},"content":"1.[T][ ] complete quiz","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"NgYaoDong"},"content":"2.[D][ ] watch lecture (by: Feb 14 2024 1800)","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"NgYaoDong"},"content":"3.[E][ ] meet friends (from: Nov 11 2024 1200 to: Nov 11 2024 2300)","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"NgYaoDong"},"content":"### Marking task as complete: `mark`","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"NgYaoDong"},"content":"Marks the specified task in the task list as complete.","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"NgYaoDong"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"NgYaoDong"},"content":"* Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"NgYaoDong"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"NgYaoDong"},"content":"* The index must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon input of the `mark 2` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"NgYaoDong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"NgYaoDong"},"content":"     [D][X] watch lecture (by: Feb 14 2024 1800)","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":148,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"NgYaoDong"},"content":"### Marking task as incomplete: `unmark`","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":151,"author":{"gitId":"NgYaoDong"},"content":"Marks the specified task in the task list as incomplete.","lastModifiedDate":"2024-02-17"},{"lineNumber":152,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":153,"author":{"gitId":"NgYaoDong"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-17"},{"lineNumber":154,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":155,"author":{"gitId":"NgYaoDong"},"content":"* Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"NgYaoDong"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"NgYaoDong"},"content":"* The index must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-02-17"},{"lineNumber":158,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":161,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon input of the `unmark 2` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":163,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":164,"author":{"gitId":"NgYaoDong"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-17"},{"lineNumber":165,"author":{"gitId":"NgYaoDong"},"content":"     [D][ ] watch lecture (by: Feb 14 2024 1800)","lastModifiedDate":"2024-02-17"},{"lineNumber":166,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":167,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":168,"author":{"gitId":"NgYaoDong"},"content":"### Finding tasks by keyword: `find`","lastModifiedDate":"2024-02-17"},{"lineNumber":169,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":170,"author":{"gitId":"NgYaoDong"},"content":"Finds all tasks in the task list containing the keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":171,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"NgYaoDong"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"NgYaoDong"},"content":"* The search is case-sensitive. e.g. `BOOK` will not match `book`","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"NgYaoDong"},"content":"* The order of the keywords does matter. e.g. `read book` will not match `book read`","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"NgYaoDong"},"content":"* Only the description is searched.","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon input of the `find friend` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":181,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"NgYaoDong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"NgYaoDong"},"content":"1.[E][ ] meet friends (from: Nov 11 2024 1200 to: Nov 11 2024 2300)","lastModifiedDate":"2024-02-17"},{"lineNumber":185,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":187,"author":{"gitId":"NgYaoDong"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-02-17"},{"lineNumber":188,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"NgYaoDong"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"NgYaoDong"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"NgYaoDong"},"content":"* Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"NgYaoDong"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":195,"author":{"gitId":"NgYaoDong"},"content":"* The index must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-02-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display a message similar to the following upon input of the `delete 1` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"NgYaoDong"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-17"},{"lineNumber":203,"author":{"gitId":"NgYaoDong"},"content":"     [T][ ] complete quiz","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"NgYaoDong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"NgYaoDong"},"content":"### Exiting the chatbot: `bye`","lastModifiedDate":"2024-02-17"},{"lineNumber":208,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":209,"author":{"gitId":"NgYaoDong"},"content":"Exits the chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":210,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":211,"author":{"gitId":"NgYaoDong"},"content":"Format: `bye`","lastModifiedDate":"2024-02-17"},{"lineNumber":212,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":213,"author":{"gitId":"NgYaoDong"},"content":"Expected outcome:","lastModifiedDate":"2024-02-17"},{"lineNumber":214,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":215,"author":{"gitId":"NgYaoDong"},"content":"FaizBot will display the following message upon input of the `bye` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":216,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":217,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":218,"author":{"gitId":"NgYaoDong"},"content":"Deformation....","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"NgYaoDong"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"NgYaoDong"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":222,"author":{"gitId":"NgYaoDong"},"content":"### Saving the data","lastModifiedDate":"2024-02-17"},{"lineNumber":223,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":224,"author":{"gitId":"NgYaoDong"},"content":"FaizBot data are saved in the hard disk automatically after any command that changes the data. \u003cbr\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"NgYaoDong"},"content":"There is no need to save manually.","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":227,"author":{"gitId":"NgYaoDong"},"content":"--------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-02-17"},{"lineNumber":228,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":229,"author":{"gitId":"NgYaoDong"},"content":"## FAQ","lastModifiedDate":"2024-02-17"},{"lineNumber":230,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":231,"author":{"gitId":"NgYaoDong"},"content":"**Q**: How do I transfer my data to another computer? \u003cbr\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":232,"author":{"gitId":"NgYaoDong"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"NgYaoDong":199,"-":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":" * Represents the Duke chatbot application.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":" * Duke is a chatbot that helps with task management.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"public class Duke {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    private final Ui UI;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    public Duke() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"        this.UI \u003d new Ui();","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        this.STORAGE \u003d new Storage(filePath);","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"            this.taskList \u003d this.STORAGE.getTaskList();","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"            UI.printError(e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"            UI.printError(\"ERROR.... \\n\\t OOPS!!! Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * Runs the Duke chatbot, prints welcome message, and execute user commands.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"    private void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"        UI.printHi();","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"                String userInput \u003d UI.readCommand();","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"                command.execute(taskList, UI, STORAGE);","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"                UI.printError(e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"                UI.printError(\"ERROR.... \\n\\t OOPS!!! Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     * The main method for starting the Duke chatbot","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"     * Creates a new Duke object and runs the Duke chatbot","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"     * @param args Command-line arguments","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":66}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":" * Represents an exception for the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new DukeException object with the error message.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":15}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command to exit the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the exit command, displaying the exit message and exiting the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"        ui.printBye();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"     * Returns true since this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     * @return true.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" * Represents a general command of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"public interface Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the respective command.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether the respective command is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     * @return true if it is an exit command, otherwise false.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":31}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for the Deadline task.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    private final String INPUT; //deadline return book /by saturday","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new DeadlineCommand object with user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     * @param input User input of the deadline command.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"        this.INPUT \u003d input.trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by creating a new Deadline object and adding the Deadline task to the task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the added task to the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"        Task newDeadline \u003d getNewDeadline();","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"        storage.addTask(newDeadline.toDisk());","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"        String msg \u003d (taskList.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t   \" + newDeadline","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"                + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the input string into a deadline task.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"     * @return A new deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"    private Task getNewDeadline() throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"        final String EXCEPTION \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"                \"OOPS!!! The description of a deadline task cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"                \"deadline: Adds a deadline task to task list.\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"                \"Parameters: TASK /by DEADLINE (in date: yyyy-mm-dd time: HHmm format)\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"                \"Example: deadline return book /by 2024-05-01 1800\";","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"        String[] details \u003d INPUT.split(\"/by\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"        boolean isEmptyInput \u003d INPUT.isEmpty();","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"        boolean isWrongDeadline \u003d details.length !\u003d 2;","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"        if (isEmptyInput || isWrongDeadline) {","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(EXCEPTION);","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"        String description \u003d details[0].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"        String by \u003d details[1].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"        if (description.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(EXCEPTION);","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":84}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for deleting tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    private final int INDEX;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new DeleteCommand with index of the specified task provided by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If the user did not provide any index of the task to be deleted.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    public DeleteCommand(String index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"            String indexEmptyMsg \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The index of a task to be deleted cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"                    \"delete: deletes a task from the task list.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: INDEX\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: delete 1\";","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(indexEmptyMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"        this.INDEX \u003d Integer.parseInt(index.trim()) - 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by deleting the specified task.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the deleted task on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"        if (INDEX \u003c 0 || INDEX \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"            String indexOutOfBoundsMsg \u003d \"Exceed Charge....\\n\\t OOPS!!! Unable to delete invalid task.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(indexOutOfBoundsMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"        Task deletedTask \u003d taskList.get(INDEX);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"        taskList.remove(INDEX);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"        storage.editTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"        String msg \u003d (taskList.size() \u003d\u003d 1) ? \"task\" : \"tasks\";","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\\t   \" + deletedTask","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"                + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"NgYaoDong":67}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for the Event task.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    private final String INPUT; // event meet friends /from 5pm tdy /to 9pm tdy","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new EventCommand object with user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     * @param input User input of the event command.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"        this.INPUT \u003d input.trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by creating a new Event object and adding the Event task to the task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the added task to the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"        Task newEvent \u003d getNewEvent();","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"        storage.addTask(newEvent.toDisk());","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"        String msg \u003d (taskList.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t   \" + newEvent","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"                + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the input string into an event task.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"     * @return A new event task","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"    private Task getNewEvent() throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"        final String EXCEPTION \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"                \"OOPS!!! The description of an event task cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"                \"event: Adds an event task to task list.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"                \"Parameters: TASK /from START TIME /to END TIME (both in date: yyyy-mm-dd time: HHmm format)\\n\\t \" +","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"                \"Example: event meet friends /from 2024-05-01 0610 /to 2024-06-01 1720\";","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"        String[] details \u003d INPUT.split(\"/from\");","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"        boolean isEmptyInput \u003d INPUT.isEmpty();","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"        boolean isWrongDeadline \u003d details.length !\u003d 2;","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"        boolean isValidInput \u003d isEmptyInput || isWrongDeadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"        if (isValidInput) {","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(EXCEPTION);","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"        boolean isDetailsEmpty \u003d details[1].trim().isEmpty();","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"        if (isDetailsEmpty) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(EXCEPTION);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"        String[] times \u003d details[1].split(\"/to\");","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"NgYaoDong"},"content":"        boolean isTimesEmpty \u003d times.length !\u003d 2;","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"NgYaoDong"},"content":"        boolean isFromEmpty \u003d times[0].trim().isEmpty();","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"NgYaoDong"},"content":"        boolean isToEmpty \u003d times[1].trim().isEmpty();","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"NgYaoDong"},"content":"        boolean isValidTimes \u003d isFromEmpty || isToEmpty;","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"NgYaoDong"},"content":"        if (isTimesEmpty || isValidTimes) {","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(EXCEPTION);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"NgYaoDong"},"content":"        String description \u003d details[0].trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"NgYaoDong"},"content":"        String from \u003d times[0].trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"NgYaoDong"},"content":"        String to \u003d times[1].trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"NgYaoDong"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":95}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for finding tasks with a given keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    private final String KEYWORD;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new FindCommand with keyword of the specified tasks provided by the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     * @param keyword Keyword of the tasks to search for.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If the user did not provide any keyword of the tasks to be searched.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    public FindCommand(String keyword) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"            String exceptionMsg \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The keyword of a task to be found cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"                    \"find: find tasks by searching for a keyword.\\n\\t \" +","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: KEYWORD\\n\\t \" +","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: find book\";","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(exceptionMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"        this.KEYWORD \u003d keyword;","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by searching for the keyword in the taskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the found tasks on the screen.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"        for (Task currTask : taskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"            if (currTask.toString().contains(this.KEYWORD)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"                message.append(\"\\n\\t \").append(count).append(\".\").append(currTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"                count++;","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(String.valueOf(message));","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"NgYaoDong":65}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for listing all tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by iterating through the task list and displaying every task.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"        message.append((taskList.isEmpty()) ? \"\" : System.lineSeparator());","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"            message.append(\"\\t \").append(i + 1).append(\".\").append(taskList.get(i).toString())","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    .append((i \u003d\u003d taskList.size() - 1) ? \"\" : System.lineSeparator());","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(message.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":40}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for marking tasks as complete.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    private final int INDEX;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new MarkCommand with index of the specified task provided by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     * @param index Index of the task to be marked as complete.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If the user did not provide any index of the task to be marked.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    public MarkCommand(String index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"            String indexEmptyMsg \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The index of a task to be marked as done cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"                    \"mark: marks a task in the task list as done.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: INDEX\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: mark 1\";","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(indexEmptyMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"        this.INDEX \u003d Integer.parseInt(index.trim()) - 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by marking the task as complete.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the marked task and its new status on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"        if (INDEX \u003c 0 || INDEX \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"            String indexOutOfBoundsMsg \u003d \"Exceed Charge....\\n\\t OOPS!!! Unable to mark invalid task as done.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(indexOutOfBoundsMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"        Task doneTask \u003d taskList.get(INDEX);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"        storage.editTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t   \" + doneTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":65}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for the Todo task.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    private final String INPUT;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new TodoCommand object with user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     * @param input User input of the todo command.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"        this.INPUT \u003d input.trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by creating a new Todo object and adding the Todo task to the task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the added task to the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"        if (INPUT.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"            String todoEmptyMsg \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The description of a todo task cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"                    \"todo: Adds a todo task to task list.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: TASK\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: todo borrow book\";","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(todoEmptyMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"        Task newTodo \u003d new Todo(INPUT);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"        storage.addTask(newTodo.toDisk());","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"        taskList.add(newTodo);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"        String msg \u003d (taskList.size() \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t   \" + newTodo","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"                + \"\\n\\t Now you have \" + taskList.size() + \" \" + msg + \" in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":65}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":" * Represents a command for marking tasks as incomplete.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    private final int INDEX;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new UnmarkCommand with index of the specified task provided by the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     * @param index Index of the task to be marked as incomplete.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If the user did not provide any index of the task to be marked.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    public UnmarkCommand(String index) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"            String indexEmptyMsg \u003d \"Exceed Charge....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The index of a task to be marked as undone cannot be empty.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"                    \"unmark: marks a task in the task list as undone.\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"                    \"Parameters: INDEX\\n\\t \" +","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: unmark 1\";","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(indexEmptyMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"        this.INDEX \u003d Integer.parseInt(index.trim()) - 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"     * Executes the command by marking the task as incomplete.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the marked task and its new status on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * @param ui The user interface of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     * @param storage The file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"        if (INDEX \u003c 0 || INDEX \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"            String indexOutOfBoundsMsg \u003d \"Exceed Charge....\\n\\t OOPS!!! Unable to mark invalid task as undone.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(indexOutOfBoundsMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"        Task undoneTask \u003d taskList.get(INDEX);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"        undoneTask.markAsUndone();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"        storage.editTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"        ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\\t   \" + undoneTask);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"     * Indicates whether this is an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"     * Returns false since this is not an exit command.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"     * @return false.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":65}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":" * Represents the input parser of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":" * Parses user input into command and details of the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":" * Generates the respective Command objects based on the parsed command keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"     * Parses user input into command and details, and creates the corresponding Command object.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"     * @param input User input to be parsed.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If the user input is not part of the command list.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        String command \u003d words[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"        String details \u003d (words.length \u003d\u003d 2) ? words[1] : \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        switch (command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"            //exit","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"        case \"list\":","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"            //list tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"            //mark task as done","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"            return new MarkCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"            //mark task as undone","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"            return new UnmarkCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"            //delete task","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"            return new DeleteCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"            //add todo","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"            return new TodoCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"            //add deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"            return new DeadlineCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"        case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"            //add event","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"            return new EventCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"        case \"find\":","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"            //find tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"            return new FindCommand(details);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"ERROR.... \\n\\t A thousand apologies, but I don\u0027t know what that means.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":66}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"import java.io.File;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":" * Represents the file storage of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":" * Responsible for loading/saving of the task data from/to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"    private final String FILEPATH;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Storage object with the specified filepath.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     * @param filePath The filepath of the saved text file containing the tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        this.FILEPATH \u003d filePath;","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * Loads the task list from the text file and returns the TaskList.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * @return The TaskList with the loaded tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error loading the tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"    public TaskList getTaskList() throws DukeException, IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(FILEPATH));","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"            String currLine;","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"            while ((currLine \u003d br.readLine()) !\u003d null \u0026\u0026 !currLine.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"                String[] words \u003d currLine.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"                String type \u003d words[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"                String marked \u003d words[1];","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"                String description \u003d words[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"                String timeline \u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"                if (words.length \u003d\u003d 4) {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"                    timeline \u003d words[3];","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"                Task newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"                switch (type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"                case \"T\":","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"                    newTask \u003d new Todo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"                case \"D\":","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"                    newTask \u003d new Deadline(description, timeline);","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"                case \"E\":","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"                    String[] times \u003d timeline.split(\" - \");","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"                    newTask \u003d new Event(description, times[0], times[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"                default:","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"                    throw new DukeException(\"ERROR.... \\n\\t OOPS!!! Invalid task in saved data!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"                taskList.add(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"NgYaoDong"},"content":"                if (marked.equals(\"1\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"NgYaoDong"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"NgYaoDong"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"NgYaoDong"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"NgYaoDong"},"content":"            br.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"NgYaoDong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"NgYaoDong"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"NgYaoDong"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"NgYaoDong"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"NgYaoDong"},"content":"        return taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"NgYaoDong"},"content":"     * Edits and saves the tasks data to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"NgYaoDong"},"content":"     * @param taskList The TaskList containing the tasks to be saved.","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error saving the data.","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"NgYaoDong"},"content":"    public void editTaskList(TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"NgYaoDong"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"NgYaoDong"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILEPATH, false));","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"NgYaoDong"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"NgYaoDong"},"content":"                bw.write(task.toDisk());","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"NgYaoDong"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"NgYaoDong"},"content":"            bw.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"NgYaoDong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(\"ERROR.... \\n\\t OOPS!!! Error occurred: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"NgYaoDong"},"content":"     * Appends the new task to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"NgYaoDong"},"content":"     * @param newLine String representing the new task to be added.","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"NgYaoDong"},"content":"     * @throws IOException If there is an error appending the new task.","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"NgYaoDong"},"content":"    public void addTask(String newLine) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"NgYaoDong"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH, true); // create a FileWriter in append mode","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"NgYaoDong"},"content":"        fw.write(newLine);","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"NgYaoDong"},"content":"        fw.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":114}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":" * Represents the Deadline task of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":" * Deadline tasks are tasks with a specific deadline.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     * @param description Description of the Deadline task","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @param by Deadline of the Deadline task","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"        this.by \u003d convertBy(by);","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the string that the user input as the time into a LocalDateTime variable.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     * @param by String input of deadline","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     * @return Deadline in the correct format as a LocalDateTime variable","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    private LocalDateTime convertBy(String by) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"        int ISOLength \u003d 10;","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"        if (by.length() \u003d\u003d ISOLength) {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"            by +\u003d \" 2359\";","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"        LocalDateTime parsedBy \u003d getParsedBy(by, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"        if (parsedBy.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"            String DeadlineOverMsg \u003d \"Time Out....\\n\\t OOPS!!! Your deadline is long due!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(DeadlineOverMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"        return parsedBy;","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"     * Parses the time string into LocalDateTime.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"     * @param time String input of time","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"     * @param formatter Specified formatter","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"     * @return Date and Time of the specified format","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"    private LocalDateTime getParsedBy(String time, DateTimeFormatter formatter) throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"        LocalDateTime parsedBy;","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"            parsedBy \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"            String exceptionMsg \u003d \"Time Out....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The format of a deadline task is wrong!\\n\\t \" +","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"                    \"TASK /by DEADLINE (in date: yyyy-mm-dd time: HHmm format)\\n\\t \" +","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: deadline return book /by 2024-05-01 1800\";","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(exceptionMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"        return parsedBy;","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Deadline task to the specific format for saving to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Deadline task for saving.","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"NgYaoDong"},"content":"    public String toDisk() {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"NgYaoDong"},"content":"        String byToDisk \u003d this.by.toString().replace(\"T\", \" \").replace(\":\", \"\");","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"NgYaoDong"},"content":"        return \"D\" + super.toDisk() + \" | \" + byToDisk + System.lineSeparator();","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Deadline task to the specific format for displaying on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Deadline task for display.","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"NgYaoDong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"NgYaoDong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"NgYaoDong":91}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":" * Represents the Event task of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":" * Event tasks are tasks with a start and end date/time.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Event object with the specified description, start date/time and end date/time.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @param description Description of the Event task","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     * @param from Start date/time of the Event task","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     * @param to End date/time of the Event task","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        this.from \u003d convertTime(from, true);","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"        this.to \u003d convertTime(to, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"        if (this.to.isBefore(this.from)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"            String wrongEndMsg \u003d \"Time Out....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! Your event ended before it could start!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(wrongEndMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the string that the user input as the time into a LocalDateTime variable.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     * @param time String input of time","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * @param start Whether the time to be converted is the start of the event","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     * @return Time in the correct format as a LocalDateTime variable","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    private LocalDateTime convertTime(String time, boolean start) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"        int ISOLength \u003d 10;","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"        String startTime \u003d \" 0000\";","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"        String endTime \u003d \" 2359\";","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"        if (time.length() \u003d\u003d ISOLength) {","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"            if (start) {","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"                time +\u003d startTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"            } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"                time +\u003d endTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"        LocalDateTime parsedTime \u003d getParsedTime(time, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"        if (parsedTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"            String eventOverMsg \u003d \"Time Out....\\n\\t OOPS!!! Your event is long over!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(eventOverMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"        return parsedTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"     * Parses the time string into LocalDateTime.","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"     * @param time String input of time","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"     * @param formatter Specified formatter","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"     * @return Date and Time of the specified format","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"     * @throws DukeException If there is an error in user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"    private LocalDateTime getParsedTime(String time, DateTimeFormatter formatter) throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"NgYaoDong"},"content":"        LocalDateTime parsedTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"NgYaoDong"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"NgYaoDong"},"content":"            parsedTime \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"NgYaoDong"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"NgYaoDong"},"content":"            String exceptionMsg \u003d \"Time Out....\\n\\t \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"NgYaoDong"},"content":"                    \"OOPS!!! The format of an event task is wrong!\\n\\t \" +","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"NgYaoDong"},"content":"                    \"TASK /from START TIME /to END TIME (both in date: yyyy-mm-dd time: HHmm format)\\n\\t \" +","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"NgYaoDong"},"content":"                    \"Example: event meet friends /from 2024-05-01 0610 /to 2024-06-01 1720\";","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"NgYaoDong"},"content":"            throw new DukeException(exceptionMsg);","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"NgYaoDong"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"NgYaoDong"},"content":"        return parsedTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Event task to the specific format for saving to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Event task for saving.","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"NgYaoDong"},"content":"    public String toDisk() {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"NgYaoDong"},"content":"        String fromToDisk \u003d this.from.toString().replace(\"T\", \" \").replace(\":\", \"\");","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"NgYaoDong"},"content":"        String toToDisk \u003d this.from.toString().replace(\"T\", \" \").replace(\":\", \"\");","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"NgYaoDong"},"content":"        return \"E\" + super.toDisk() + \" | \" + fromToDisk + \" - \" + toToDisk + System.lineSeparator();","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Event task to the specific format for displaying on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Event task for display.","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"NgYaoDong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"NgYaoDong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(formatter)","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"NgYaoDong"},"content":"                + \" to: \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"NgYaoDong":108}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":" * Represents the general Task of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Task object with the specified description and whether it is complete.","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"     * @param description Description of the Task","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     * Returns the status of whether the Task is completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"     * @return String representing the status of the Task","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     * Marks the Task as completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"     * Marks the Task as not completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Task to the specific format for saving to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Task for saving.","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"    public String toDisk() {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"        return \" | \" + (this.isDone ? \"1 | \" : \"0 | \") + this.description;","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Task to the specific format for displaying on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Task for display.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"NgYaoDong":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":" * Represents the lists of tasks of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":" * The TaskList contains all the tasks managed by the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":10}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":" * Represents the Todo task of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":" * Todo tasks are tasks with neither a specific deadline nor a start/end date.","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Todo object with the specified description.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Todo task to the specific format for saving to the text file.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Todo task for saving.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"    public String toDisk() {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"        return \"T\" + super.toDisk() + System.lineSeparator();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"     * Converts the Todo task to the specific format for displaying on the screen.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"     * @return A formatted string containing the Todo task for display.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"NgYaoDong":36}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"package duke.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":" * Represents the user interface for the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":" * Responsible for taking in user input, and displaying messages.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"    Scanner sc;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"    static final String HORIZONTAL_LINE \u003d \"\\t___________________________________________________________\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"            \"__________________________________\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"     * Constructs a new Ui object and initialises the Scanner for taking in user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    public Ui() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"     * Edits the given message into the default message format.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"     * @return Formatted message.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"NgYaoDong"},"content":"    private String messageFormat(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"        return HORIZONTAL_LINE + \"\\t \" + message + System.lineSeparator() + HORIZONTAL_LINE;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the welcome message of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"NgYaoDong"},"content":"    public void printHi() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(\"Awakening....\\n\\t Hi! I\u0027m Faiz!\\n\\t What can I do for you?\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the exit message of the Duke chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"NgYaoDong"},"content":"    public void printBye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(\"Deformation....\\n\\t Bye! Hope to see you again soon!\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"NgYaoDong"},"content":"     * Reads in user input via the Scanner.","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"NgYaoDong"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"NgYaoDong"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"NgYaoDong"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"NgYaoDong"},"content":"     * Displays message of the executed commands.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"NgYaoDong"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"NgYaoDong"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(message));","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"NgYaoDong"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"NgYaoDong"},"content":"     * Displays the error message.","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"NgYaoDong"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"NgYaoDong"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"NgYaoDong"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"NgYaoDong"},"content":"    public void printError(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"NgYaoDong"},"content":"        System.out.print(messageFormat(message));","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"NgYaoDong"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"NgYaoDong"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":71}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"D | 0 | return book | 2024-06-17 2359","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"E | 0 | meet friends | 2024-06-18 1200 - 2024-06-18 1200","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"NgYaoDong":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NgYaoDong"},"content":"mark 0","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"NgYaoDong"},"content":"todo","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"NgYaoDong"},"content":"deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"NgYaoDong"},"content":"event","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"NgYaoDong"},"content":"todo borrow book","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"NgYaoDong"},"content":"deadline return book /by saturday","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"NgYaoDong"},"content":"event meet friends /from 5pm tdy /to 9pm tdy","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"deadline return book /by 2024-06-17","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"event meet friends /from 2025-06-18 1200 /to 2024-06-19 1400","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"NgYaoDong"},"content":"event meet friends /from 2024-06-18 1200 /to 2024-06-19 1400","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"mark 0","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"NgYaoDong"},"content":"mark 2","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"unmark 10","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"unmark 2","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"find book","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"find apple","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"find","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"delete 1","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"NgYaoDong"},"content":"list","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"NgYaoDong"},"content":"blah","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"NgYaoDong"},"content":"mark","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"NgYaoDong"},"content":"unmark","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"NgYaoDong"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"NgYaoDong":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"NgYaoDong"},"content":"if exist .\\data\\duke.txt del .\\data\\duke.txt","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"NgYaoDong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"NgYaoDong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NgYaoDong":4,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"NgYaoDong"},"content":"if [ -e \"data/duke.txt\" ]","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"NgYaoDong"},"content":"then","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"NgYaoDong"},"content":"    rm data/duke.txt","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"NgYaoDong"},"content":"fi","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"NgYaoDong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"NgYaoDong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"NgYaoDong"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NgYaoDong":7,"-":36}}]
