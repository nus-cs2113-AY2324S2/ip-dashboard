[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"# Gary User Guide :book:","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"Gary is a interactive and easy to use Command Line Interface application to manage your available tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"___","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"## Table of Contents","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"- [Features](#features)","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"   * [Adding a Task](#adding-a-task)","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"     - [Todo: `todo`](#1-todo-todo)","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"     - [Deadline: `deadline`](#2-deadline-deadline)","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"     - [Event: `event`](#3-event-event)","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"   * [Listing all Task: `list`](#listing-all-task-list)","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"   * [Marking a task: `mark`](#marking-a-task-mark)","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"   * [Unmarking a task: `unmark`](#unmarking-a-task-unmark)","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"   * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"   * [Finding tasks: `find`](#finding-tasks-find)","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"   * [Exiting the programme: `bye`](#exiting-the-programme-bye)","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"   * [Saving the data](#exiting-the-programme-bye)","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"## Quick Start","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"1. Ensure you have Java `11` installed in your Computer.","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"2. Download the latest `gary.jar` from [here](https://github.com/Elyovs/ip/releases/download/A-Jar-Released/iP.jar).","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"3. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar gary.jar` ","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"command to run the application.","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"    A command line display similar to below will appear:","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"    ```","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"    Hello! I\u0027m Gary","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"                        0   0   ______","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"                        | v | /oooooooo\\","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"                        |   |/OOOOOOOOOO\\","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"                        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"    |   |   |   |   |   |   |   |   |   |   |   |","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"    ```","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"5. Type commands in the terminal and press Enter to execute it.","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"    Some example commands you can try:","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"   * `list`: list all tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"   * `todo do homework`: adds a do homework task with type todo.","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"   * `mark 1`: mark 1st task as done.","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"   * `bye`: exits the programme.","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"Elyovs"},"content":"## Features","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Elyovs"},"content":"### Adding a Task","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Elyovs"},"content":"There are 3 types of tasks that can be added:","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Elyovs"},"content":"### 1. Todo: `todo`","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Elyovs"},"content":"Adds todo task to the list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"Elyovs"},"content":"Format: `todo TODO_DESCRIPTION`","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"Elyovs"},"content":"- Adds the todo task specified in TODO_DESCRIPTION.","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"Elyovs"},"content":"- Description of todo can be in more than 1 word.","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Elyovs"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"Elyovs"},"content":"- `todo exercise`","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Elyovs"},"content":"- `todo read book`","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Elyovs"},"content":"### 2. Deadline: `deadline`","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Elyovs"},"content":"Adds deadline task to the list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"Elyovs"},"content":"Format: `deadline DEADLINE_DESCRIPTION /by yyyy-mm-dd`","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"Elyovs"},"content":"- Adds deadline task specified in `DEADLINE_DESCRIPTION`.","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Elyovs"},"content":"- `DEADLINE_DESCRIPTION` can be in more than 1 word.","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"Elyovs"},"content":"- Format **must** include `/by`.","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Elyovs"},"content":"- Date specified after `/by` **must** follow the format of `yyyy-mm-dd`.","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"Elyovs"},"content":"  * `yyyy`: year (example: `2024`)","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"Elyovs"},"content":"  * `mm`: months (example: `01` for January)","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"Elyovs"},"content":"  * `dd`: day (example: `15`)","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"Elyovs"},"content":"- `DEADLINE_DESCRIPTION` and `yyyy-mm-dd` **cannot** be empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Elyovs"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Elyovs"},"content":"- `deadline homework /by 2024-02-25`","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"Elyovs"},"content":"- `deadline CS2113 project /by 2024-03-08`","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"Elyovs"},"content":"### 3. Event: `event`","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"Elyovs"},"content":"Adds event task to the list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"Elyovs"},"content":"Format: `event EVENT_DESCRIPTION /from START_TIME /to END_TIME`","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"Elyovs"},"content":"- Adds event task specified in `EVENT_DESCRIPTION`.","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"Elyovs"},"content":"- `EVENT_DESCRIPTION`, `START_TIME`, and `END_TIME` can be in more than 1 word.","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"Elyovs"},"content":"- Format **must** include `/from` and `/to`.","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Elyovs"},"content":"- `EVENT_DESCRIPTION`, `START_TIME`, and `END_TIME` **cannot** be empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"Elyovs"},"content":"Examples:","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Elyovs"},"content":"- `event lecture /from 4pm /to 6pm`","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"Elyovs"},"content":"- `event play games /from morning /to afternoon` ","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Elyovs"},"content":"### Listing all Task: `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Elyovs"},"content":"Shows a list of tasks that is available in the list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Elyovs"},"content":"Format: `list`","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Elyovs"},"content":"### Marking a task: `mark`","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"Elyovs"},"content":"Marks a task from the list of tasks as done.","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Elyovs"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Elyovs"},"content":"- Marks the task represented by `TASK_NUMBER` as shown in the list as done.","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"Elyovs"},"content":"- `TASK_NUMBER` **must** be in positive integer and cannot exceed the total number of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"Elyovs"},"content":"Example: ","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"Elyovs"},"content":"- `mark 3`","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Elyovs"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"Elyovs"},"content":"Unmarks a task from the list of tasks as not done.","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"Elyovs"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Elyovs"},"content":"- Unmarks the task represented by `TASK_NUMBER` as shown in the list as not done.","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Elyovs"},"content":"- `TASK_NUMBER` **must** be in positive integer and cannot exceed the total number of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"Elyovs"},"content":"Example:","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Elyovs"},"content":"- `unmark 8`","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"Elyovs"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"Elyovs"},"content":"Deletes a task from the list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Elyovs"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"Elyovs"},"content":"- Delete the task represented by `TASK_NUMBER` as shown in the list.","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Elyovs"},"content":"- `TASK_NUMBER` **must** be in positive integer and cannot exceed the total number of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"Elyovs"},"content":"Example:","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"Elyovs"},"content":"- `delete 2`","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"Elyovs"},"content":"### Finding tasks: `find`","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"Elyovs"},"content":"Shows all the tasks that contain the given keyword.","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"Elyovs"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"Elyovs"},"content":"- Filters and shows tasks containing the `KEYWORD`.","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"Elyovs"},"content":"- `KEYWORD` takes in String and can be in more than 1 word.","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"Elyovs"},"content":"Example:","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"Elyovs"},"content":"- `find task`","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"Elyovs"},"content":"- `find do homework`","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"Elyovs"},"content":"### Exiting the programme: `bye`","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"Elyovs"},"content":"Exits the programme.","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"Elyovs"},"content":"Format: `bye`","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"Elyovs"},"content":"- Programme exits as long as command contains `bye`.","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"Elyovs"},"content":"example:","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"Elyovs"},"content":"- `bye`","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"Elyovs"},"content":"- `Byeee`","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"Elyovs"},"content":"### Saving the data","lastModifiedDate":"2024-03-01"},{"lineNumber":154,"author":{"gitId":"Elyovs"},"content":"List of tasks are saved in local hard disk automatically after any command that modify the data.","lastModifiedDate":"2024-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"Elyovs"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"Elyovs"},"content":"## FAQ","lastModifiedDate":"2024-03-01"},{"lineNumber":159,"author":{"gitId":"Elyovs"},"content":"\u003e Q: Can I access the tasks I previously added when I restart the programme?","lastModifiedDate":"2024-03-01"},{"lineNumber":160,"author":{"gitId":"Elyovs"},"content":"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":161,"author":{"gitId":"Elyovs"},"content":"\u003e A: Yes, all data are saved in local hard disk, and all the data will be ","lastModifiedDate":"2024-03-01"},{"lineNumber":162,"author":{"gitId":"Elyovs"},"content":"read and loaded everytime the programme is restarted. ","lastModifiedDate":"2024-03-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"Elyovs"},"content":"\u003e Q: How do I transfer my data to another computer?","lastModifiedDate":"2024-03-01"},{"lineNumber":165,"author":{"gitId":"Elyovs"},"content":"\u003e ","lastModifiedDate":"2024-03-01"},{"lineNumber":166,"author":{"gitId":"Elyovs"},"content":"\u003e A: Copy the `/gary.txt` file to another computer and paste it in the same ","lastModifiedDate":"2024-03-01"},{"lineNumber":167,"author":{"gitId":"Elyovs"},"content":"\u003e folder inside `gary.jar`","lastModifiedDate":"2024-03-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":169,"author":{"gitId":"Elyovs"},"content":"---","lastModifiedDate":"2024-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":171,"author":{"gitId":"Elyovs"},"content":"## Command Summary","lastModifiedDate":"2024-03-01"},{"lineNumber":172,"author":{"gitId":"Elyovs"},"content":"| Command  | Format                                                  |","lastModifiedDate":"2024-03-01"},{"lineNumber":173,"author":{"gitId":"Elyovs"},"content":"|----------|---------------------------------------------------------|","lastModifiedDate":"2024-03-01"},{"lineNumber":174,"author":{"gitId":"Elyovs"},"content":"| todo     | `todo TODO_DESCRIPTION`                                 |","lastModifiedDate":"2024-03-01"},{"lineNumber":175,"author":{"gitId":"Elyovs"},"content":"| deadline | `deadline DEADLINE_DESCRIPTION /by yyyy-mm-dd`          |","lastModifiedDate":"2024-03-01"},{"lineNumber":176,"author":{"gitId":"Elyovs"},"content":"| event    | `event EVENT_DESCRIPTION /from START_TIME /to END_TIME` |","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"Elyovs"},"content":"| list     | `list`                                                  |","lastModifiedDate":"2024-03-01"},{"lineNumber":178,"author":{"gitId":"Elyovs"},"content":"| mark     | `mark TASK_NUMBER`                                      |","lastModifiedDate":"2024-03-01"},{"lineNumber":179,"author":{"gitId":"Elyovs"},"content":"| unmark   | `unmark TASK_NUMBER`                                    |","lastModifiedDate":"2024-03-01"},{"lineNumber":180,"author":{"gitId":"Elyovs"},"content":"| delete   | `delete TASK_NUMBER`                                    |","lastModifiedDate":"2024-03-01"},{"lineNumber":181,"author":{"gitId":"Elyovs"},"content":"| find     | `find KEYWORD`                                          |","lastModifiedDate":"2024-03-01"},{"lineNumber":182,"author":{"gitId":"Elyovs"},"content":"| exit     | `bye`                                                   |","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"-":20,"Elyovs":162}},{"path":"gary.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"DEADLINE | 1 | task 2  | friday","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"EVENT | 0 | lecture  | 4pm  | 6pm","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"EVENT | 0 | task 3  | today  | tomorrow","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"TODO | 1 | task 1","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"EVENT | 1 | tutorial  | today  | tomorrow","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"DEADLINE | 0 | ip  | march","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"DEADLINE | 1 | task 5  | 5th","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"DEADLINE | 0 | task 6  | Jan 01 2024","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":8}},{"path":"src/main/java/gary/Gary.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.storage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import gary.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"public class Gary {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"        Ui.greetings();","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"        File file \u003d Storage.createFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"        tasks \u003d Storage.readFileStorage(file);","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"        String line;","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"        // Handle all user commands in loop until exit","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"        Parser.runCommand(line, file, in, tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"Elyovs":28}},{"path":"src/main/java/gary/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.exception.UnknownCommandException;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingEventToException;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingEventFromException;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingEventDescriptionException;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingDeadlineByException;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingDeadlineDescriptionException;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingTodoDescriptionException;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"import gary.storage.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":" * AddCommand class is used to handle user commands to add Tasks. Tasks can","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":" * be Todo, Deadline, or Event","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"    private String line;","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"    private File file;","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"    private String command;","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"     * Constructor for AddCommand class, taking in line, file, todos, and command as parameter.","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"     * @param command type of task user wants to add.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"    public AddCommand(String line, File file, ArrayList\u003cTask\u003e tasks, String command) {","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"        this.line \u003d line;","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"     * Handles users\u0027 command to add task. If user command is unknown or missing details,","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"     * error is handled and message is printed out.","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"            int tasksCount \u003d this.tasks.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Elyovs"},"content":"            TaskList.processAddTask(this.command, this.tasks, this.line);","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"Elyovs"},"content":"            tasksCount +\u003d 1;","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Elyovs"},"content":"            this.tasks.get(tasksCount - 1).printAdd(tasksCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"Elyovs"},"content":"            Storage.writeTaskToTxt(file, tasksCount, this.tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Elyovs"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"Elyovs"},"content":"        } catch (MissingTodoDescriptionException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! The description of a todo cannot be empty\");","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"Elyovs"},"content":"        } catch (MissingDeadlineByException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! Deadline must contain \u0027/by\u0027 and its date\");","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"Elyovs"},"content":"        } catch (MissingDeadlineDescriptionException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! The description of a deadline cannot be empty\");","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"Elyovs"},"content":"        } catch (MissingEventFromException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! Event must contain \u0027/from\u0027 and its description\");","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"Elyovs"},"content":"        } catch (MissingEventToException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! Event must contain \u0027/to\u0027 and its description\");","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"Elyovs"},"content":"        } catch (MissingEventDescriptionException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! The description of an event cannot be empty\");","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"Elyovs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! Deadline \u0027/by\u0027 date must be in yyyy-mm-dd format\");","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":74}},{"path":"src/main/java/gary/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"    public abstract void handleCommand();","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"Elyovs":5}},{"path":"src/main/java/gary/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.storage.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":" * DeleteCommand class is used to handle users\u0027 command to delete a task previously added.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"    private File file;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"    private String[] lineWords;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"     * Constructor for DeleteCommand, taking in file, todos array list, and lineWords as parameter.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"     * Parameters will be used to handle users\u0027 command.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"     * @param lineWords user input to the terminal, that has been split into array.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"    public DeleteCommand(File file, ArrayList\u003cTask\u003e tasks, String[] lineWords) {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"        this.lineWords \u003d lineWords;","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"     * Handles users\u0027 command to delete task. task deleted is taken from users\u0027 input in the","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"     * form of number. If users try to delete task that is not in the list or use a wrong format,","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"     * the programme handles the error.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"            int todosCount \u003d this.tasks.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"            TaskList.processDelete(this.tasks, this.lineWords, todosCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"            todosCount -\u003d 1;","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"            Storage.writeTaskToTxt(this.file, todosCount, this.tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! You don\u0027t have that much task\");","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! input after \u0027delete\u0027 must be a number\");","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":50}},{"path":"src/main/java/gary/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.ui.Ui;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":" * ExitCommand class is called to exit the programme.","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"        Ui.exitProgramme();","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":17}},{"path":"src/main/java/gary/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":" * FindCommand class is to handle users command related to finding a keyword in tasks description.","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"    public static final int FIND_KEYWORD_START_INDEX \u003d 5;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"    private String line;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"     * Constructor for FindCommand class, taking in ArrayList of task and users\u0027 input.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"    public FindCommand(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"        this.line \u003d line;","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     * Handles users\u0027 command to find tasks that contain a given keyword. If keyword is not given","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     * error is handled.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"        String keyword;","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"            keyword \u003d line.substring(FIND_KEYWORD_START_INDEX);","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"            if (keyword.isBlank()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"                throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! Find keyword cannot be empty\");","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"            return;","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"        TaskList.processFind(keyword, tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":45}},{"path":"src/main/java/gary/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":" * ListCommand class is used to handle users\u0027 command to list all the available tasks that","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":" * have been added previously.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"     * Constructor for ListCommand to take in the array list of tasks available.","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"    public ListCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"        int tasksCount \u003d this.tasks.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"        TaskList.processList(tasksCount, this.tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":28}},{"path":"src/main/java/gary/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.storage.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":" * MarkCommand class is to handle users\u0027 command to mark their task as done.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"    private File file;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"    private String[] lineWords;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"     * Constructor of MarkCommand class, which takes in file storing all the tasks that","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"     * need to be updated, todos, and lineWords as parameter.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"     * @param lineWords user input to the terminal, that has been split into array.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"    public MarkCommand(File file, ArrayList\u003cTask\u003e tasks, String[] lineWords) {","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"        this.lineWords \u003d lineWords;","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"     * Handles users\u0027 command to mark task as done. It handles errors in users\u0027 input if","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"     * users try to mark task that does not exist or users\u0027 input is in a wrong format.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"            int tasksCount \u003d this.tasks.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"            TaskList.processMark(this.tasks, this.lineWords);","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"            Storage.writeTaskToTxt(this.file, tasksCount, this.tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! You don\u0027t have that much task\");","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! input after \u0027mark\u0027 must be a number\");","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":48}},{"path":"src/main/java/gary/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.command;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.storage.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":" * UnmarkCommand class is to handle users\u0027 command to unmark their task as done, that is,","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":" * to mark their task as not done.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    private File file;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"    private String[] lineWords;","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"     * Constructor of UnmarkCommand class, which takes in file storing all the tasks that","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"     * need to be updated, todos, and lineWords as parameter.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"     * @param lineWords user input to the terminal, that has been split into array.","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"    public UnmarkCommand(File file, ArrayList\u003cTask\u003e tasks, String[] lineWords) {","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"        this.lineWords \u003d lineWords;","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"     * Handles users\u0027 command to unmark task as done. It handles errors in users\u0027 input if","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"     * users try to unmark task that does not exist or users\u0027 input is in a wrong format.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"            int tasksCount \u003d this.tasks.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"            TaskList.processUnmark(this.tasks, this.lineWords);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"            Storage.writeTaskToTxt(this.file, tasksCount, this.tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! You don\u0027t have that much task\");","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"OOPS!!! input after \u0027unmark\u0027 must be a number\");","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"Elyovs":49}},{"path":"src/main/java/gary/exception/MissingDeadlineByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class MissingDeadlineByException extends Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/exception/MissingDeadlineDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class MissingDeadlineDescriptionException extends Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/exception/MissingEventDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class MissingEventDescriptionException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/exception/MissingEventFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class MissingEventFromException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/exception/MissingEventToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class MissingEventToException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/exception/MissingTodoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class MissingTodoDescriptionException extends Exception{","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Elyovs":4}},{"path":"src/main/java/gary/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.command.AddCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.command.DeleteCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import gary.command.ExitCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import gary.command.FindCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import gary.command.ListCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"import gary.command.MarkCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"import gary.command.UnmarkCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":" * Parser class deals with making sense of user commands, such that the programme can","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":" * process the command and output accordingly.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"public class Parser {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"     * Takes in users command in a loop until the users choose to exit the programme.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"     * Users\u0027 input is processed according to what command is given.","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     * @param in terminal scanner to take in user input.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"    public static void runCommand(String line, File file, Scanner in, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"        String[] lineWords;","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"        String command;","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"        Command userCommand;","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"        while (!(line.toUpperCase().contains(\"BYE\"))) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"            lineWords \u003d line.split(\" \");","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"            command \u003d lineWords[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"            if (line.equalsIgnoreCase(\"LIST\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"                userCommand \u003d new ListCommand(tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"            } else if (command.equalsIgnoreCase(\"MARK\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"                userCommand \u003d new MarkCommand(file, tasks, lineWords);","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"            } else if (command.equalsIgnoreCase(\"UNMARK\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"                userCommand \u003d new UnmarkCommand(file, tasks, lineWords);","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"            } else if (command.equalsIgnoreCase(\"DELETE\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"                userCommand \u003d new DeleteCommand(file, tasks, lineWords);","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"            } else if (command.equalsIgnoreCase(\"FIND\")) {","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"                userCommand \u003d new FindCommand(line, tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"            } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"                userCommand \u003d new AddCommand(line, file, tasks, command);","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"Elyovs"},"content":"            userCommand.handleCommand();","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"Elyovs"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"Elyovs"},"content":"        userCommand \u003d new ExitCommand();","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"Elyovs"},"content":"        userCommand.handleCommand();","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"Elyovs":60}},{"path":"src/main/java/gary/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.task.Deadline;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.task.Event;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import gary.task.Todo;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import gary.task.TaskType;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":" * Storage class deals with storing users\u0027 tasks and its details when users add or modify tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":" * into a txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"public class Storage {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"    public static final String FILE_PATH \u003d \"./gary.txt\";","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"     * Create a txt file at a given file path when file doesn\u0027t exist, or","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     * open the existing txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"     * @return txt file.","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"    public static File createFile() {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"            Boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"FILE NOT CREATED\");","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"        return file;","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"     * Read txt files that store users\u0027 tasks and store in ArrayList to be processed while","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"     * programme is running.","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"     * @return ArrayList consisting of all tasks users have.","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"    public static ArrayList\u003cTask\u003e readFileStorage(File file) {","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"Elyovs"},"content":"            String lineText \u003d fileReader.readLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"Elyovs"},"content":"            String[] lineWords;","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"Elyovs"},"content":"            String command;","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"Elyovs"},"content":"            int tasksCount \u003d 0;","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"Elyovs"},"content":"            while (lineText !\u003d null) {","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"Elyovs"},"content":"                // convert each line into TASK_todo/deadline/event, then store in the array list todos","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"Elyovs"},"content":"                lineWords \u003d lineText.split(\" \\\\| \");","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"Elyovs"},"content":"                command \u003d lineWords[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"Elyovs"},"content":"                String description \u003d lineWords[2];","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"Elyovs"},"content":"                if (command.equalsIgnoreCase(\"TODO\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"Elyovs"},"content":"                    tasks.add(new Todo(description));","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Elyovs"},"content":"                } else if (command.equalsIgnoreCase(\"DEADLINE\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"Elyovs"},"content":"                    String by \u003d lineWords[3];","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"Elyovs"},"content":"                    tasks.add(new Deadline(description, by));","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"Elyovs"},"content":"                } else if (command.equalsIgnoreCase(\"EVENT\")){","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"Elyovs"},"content":"                    String from \u003d lineWords[3];","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"Elyovs"},"content":"                    String to \u003d lineWords[4];","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"Elyovs"},"content":"                    tasks.add(new Event(description, from, to));","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"Elyovs"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"Elyovs"},"content":"                tasksCount +\u003d 1;","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"Elyovs"},"content":"                // Update task status in array list todos","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"Elyovs"},"content":"                String taskStatus \u003d lineWords[1];","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"Elyovs"},"content":"                if (taskStatus.equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"Elyovs"},"content":"                    Task currentTask \u003d tasks.get(tasksCount - 1);","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"Elyovs"},"content":"                    currentTask.markAsDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"Elyovs"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"Elyovs"},"content":"                lineText \u003d fileReader.readLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"Elyovs"},"content":"            fileReader.close();","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"Elyovs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"FILE NOT FOUND!!!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"Elyovs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"Failed to read file\");","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"Elyovs"},"content":"        return tasks;","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"Elyovs"},"content":"     * Write the tasks inside the ArrayList todos into the txt file. Handles error","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"Elyovs"},"content":"     * if file trying to be written to doesn\u0027t exist or there\u0027s failure when writing the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"Elyovs"},"content":"     * @param file txt file to store the tasks.","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"Elyovs"},"content":"     * @param tasksCount number of tasks in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"Elyovs"},"content":"    public static void writeTaskToTxt(File file, int tasksCount, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"Elyovs"},"content":"            BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(file, false));","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"Elyovs"},"content":"            for (int i \u003d 0; i \u003c tasksCount; i +\u003d 1) {","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"Elyovs"},"content":"                writeFormattedString(tasks, i, fileWriter);","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"Elyovs"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"Elyovs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"FILE NOT FOUND!!!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"Elyovs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"Elyovs"},"content":"            System.out.println(\"Failed to write to file\");","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":116,"author":{"gitId":"Elyovs"},"content":"     * Format the task stored in ArrayList and write it into the given txt file. Throws","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"Elyovs"},"content":"     * exception when writing process failed.","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"Elyovs"},"content":"     * @param taskIndex index of task.","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"Elyovs"},"content":"     * @param fileWriter txt file opened as write.","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"Elyovs"},"content":"     * @throws IOException if writing process failed or interrupted.","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"Elyovs"},"content":"    private static void writeFormattedString(ArrayList\u003cTask\u003e tasks, int taskIndex, BufferedWriter fileWriter)","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Elyovs"},"content":"            throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":126,"author":{"gitId":"Elyovs"},"content":"        Task currentTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"Elyovs"},"content":"        String description \u003d currentTask.getTaskDescription();","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"Elyovs"},"content":"        String taskStatus \u003d currentTask.getTaskStatus() ? \"1\" : \"0\";","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"Elyovs"},"content":"        TaskType taskType \u003d currentTask.getTaskType();","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"Elyovs"},"content":"        switch(taskType) {","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"Elyovs"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"Elyovs"},"content":"            Deadline deadline \u003d (Deadline) currentTask;","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"Elyovs"},"content":"            String by \u003d deadline.getBy();","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"Elyovs"},"content":"            fileWriter.write(taskType + \" | \" + taskStatus + \" | \"","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"Elyovs"},"content":"                    + description + \" | \" + by + \"\\n\");","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"Elyovs"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"Elyovs"},"content":"        case EVENT:","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"Elyovs"},"content":"            Event event \u003d (Event) currentTask;","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"Elyovs"},"content":"            String from \u003d event.getFrom();","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"Elyovs"},"content":"            String to \u003d event.getTo();","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"Elyovs"},"content":"            fileWriter.write(taskType + \" | \" + taskStatus + \" | \"","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"Elyovs"},"content":"                    + description + \" | \" + from + \" | \" + to + \"\\n\");","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"Elyovs"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"Elyovs"},"content":"        case TODO:","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"Elyovs"},"content":"            fileWriter.write(taskType + \" | \" + taskStatus + \" | \" + description + \"\\n\");","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"Elyovs"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"Elyovs":150}},{"path":"src/main/java/gary/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":" * Deadline class deals with task with deadline as the type, performing functions specifically","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":" * for a deadline task.","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"    protected String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"    public Deadline(String taskDescription, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"        super(taskDescription);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"     * Take the task and get its deadline by to be returned.","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"     * @return deadline by of task","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"        return this.by;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"     * print messages when user adds a task with deadline type.","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     * @param tasksCount number of tasks in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"    public void printAdd(int tasksCount) {","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"  [D][ ] \"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"                + this.getTaskDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"                + \"(by: \" + this.by + \")\");","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Now you have \" + tasksCount + \" tasks in your list.\");","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"     * print task in a certain format with its details, including the deadline description and by.","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"     * @param taskNumber task number in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"    public void printTask(int taskNumber) {","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"        System.out.println((taskNumber + 1)","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"                + \".[D]\"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"                + \"[\" + (this.getTaskStatus() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"                + this.getTaskDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"                + \"(by: \" + this.by + \")\");","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Elyovs":52}},{"path":"src/main/java/gary/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":" * Event class deals with task with event as the type, performing functions specifically","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":" * for an event task.","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"    protected String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"    protected String to;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"    public Event(String taskDescription, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"        super(taskDescription);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"     * Take the task and get its event start to be returned.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"     * @return event starting (from).","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"        return this.from;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"     * Take the task and get its event end to be returned.","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     * @return event end (to).","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"        return this.to;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"     * print message when user adds a task with event type.","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"     * @param tasksCount number of tasks in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"    public void printAdd(int tasksCount) {","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"  [E][ ] \"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"                + this.getTaskDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"                + \"(from: \" + this.from + \"to: \" + this.to + \")\");","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Now you have \" + tasksCount + \" tasks in your list.\");","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"     * print task in a certain format with its details, including the event description,","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"     * start (from), and end (to).","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"Elyovs"},"content":"     * @param taskNumber task number in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Elyovs"},"content":"    public void printTask(int taskNumber) {","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"Elyovs"},"content":"        System.out.println((taskNumber + 1)","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Elyovs"},"content":"                + \".[E]\"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Elyovs"},"content":"                + \"[\" + (this.getTaskStatus() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Elyovs"},"content":"                + this.getTaskDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Elyovs"},"content":"                + \"(from: \" + this.from + \"to: \" + this.to + \")\");","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Elyovs":63}},{"path":"src/main/java/gary/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":" * Manages the task, including its description, task type, and status.","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"    private String taskDescription;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"    protected TaskType taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"        this.taskType \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"        return this.taskDescription;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"    public Boolean getTaskStatus() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"    public void printAdd(int todosCount) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"        return;","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"    public void printTask(int todoCount) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"        return;","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"        return this.taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Elyovs":44}},{"path":"src/main/java/gary/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.task;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"import gary.exception.UnknownCommandException;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingTodoDescriptionException;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingDeadlineByException;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingDeadlineDescriptionException;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingEventToException;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingEventFromException;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"import gary.exception.MissingEventDescriptionException;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":" * TaskList class contains methods to add or modify tasks in the ArrayList.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"public class TaskList {","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"    public static final int TODO_DESCRIPTION_START_INDEX \u003d 5;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"    public static final int DEADLINE_DESCRIPTION_START_INDEX \u003d 9;","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"    public static final int DEADLINE_BY_SPACE_LENGTH \u003d 4;","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"    public static final int EVENT_DESCRIPTION_START_INDEX \u003d 6;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"    public static final int EVENT_FROM_SPACE_LENGTH \u003d 6;","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"    public static final int EVENT_TO_SPACE_LENGTH \u003d 4;","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     * list out all the task available in the ArrayList by iterating through every element","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     * in the ArrayList todos.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"     * @param tasksCount number of tasks in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"     * @param todos array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"    public static void processList(int tasksCount, ArrayList\u003cTask\u003e todos) {","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"        for(int i \u003d 0; i \u003c tasksCount; i +\u003d 1) {","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"            todos.get(i).printTask(i);","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"Elyovs"},"content":"     * Process users\u0027 command related to adding new task, including todo, deadline, and event.","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"Elyovs"},"content":"     * Throws exception if users\u0027 command is unknown or missing description.","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"Elyovs"},"content":"     * @param command type of task user wants to add.","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"Elyovs"},"content":"     * @throws UnknownCommandException if command given by user is unknown to programme.","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingTodoDescriptionException if description for todo is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingDeadlineByException if no \"/by\" or no date given for \"/by\" in deadline.","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingDeadlineDescriptionException if description for deadline is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"Elyovs"},"content":"     * @throws DateTimeParseException if date given is not in yyyy-mm-dd format.","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingEventFromException if no \"/from\" or no description given for \"/from\" in event.","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingEventToException if no \"/to\" or no description given for \"/to\" in event.","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingEventDescriptionException if description for event is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"Elyovs"},"content":"    public static void processAddTask(String command, ArrayList\u003cTask\u003e tasks, String line)","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"Elyovs"},"content":"            throws UnknownCommandException, MissingTodoDescriptionException,","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"Elyovs"},"content":"            MissingDeadlineByException, MissingDeadlineDescriptionException, DateTimeParseException,","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"Elyovs"},"content":"            MissingEventFromException, MissingEventToException, MissingEventDescriptionException {","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"Elyovs"},"content":"        if (command.equalsIgnoreCase(\"TODO\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"Elyovs"},"content":"            createNewTodo(tasks, line);","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"Elyovs"},"content":"        } else if (command.equalsIgnoreCase(\"DEADLINE\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"Elyovs"},"content":"            createNewDeadline(tasks, line);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"Elyovs"},"content":"        } else if (command.equalsIgnoreCase(\"EVENT\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"Elyovs"},"content":"            createNewEvent(tasks, line);","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"Elyovs"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"Elyovs"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"Elyovs"},"content":"     * Process users\u0027 command to mark the available task as done. Marked task will be printed","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"Elyovs"},"content":"     * out to give confirmation to users.","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"Elyovs"},"content":"     * @param lineWords user input to the terminal, that has been split into array.","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"Elyovs"},"content":"    public static void processMark(ArrayList\u003cTask\u003e tasks, String[] lineWords) {","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"Elyovs"},"content":"        Task currentTask \u003d tasks.get(Integer.parseInt(lineWords[1]) - 1);","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"Elyovs"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"Elyovs"},"content":"        String taskStatus \u003d currentTask.getTaskStatus() ? \"X\" : \" \";","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"Elyovs"},"content":"        String taskType \u003d getTaskSymbol(currentTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"Elyovs"},"content":"        String taskDescription \u003d currentTask.getTaskDescription();","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\" [\" + taskType + \"][\" + taskStatus + \"] \" + taskDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"Elyovs"},"content":"     * Process users\u0027 command to unmark available task as not done. Task unmaerked will be printed","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"Elyovs"},"content":"     * out to give confirmation to users.","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"Elyovs"},"content":"     * @param lineWords user input to the terminal, that has been split into array.","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"Elyovs"},"content":"    public static void processUnmark(ArrayList\u003cTask\u003e tasks, String[] lineWords) {","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"Elyovs"},"content":"        Task currentTask \u003d tasks.get(Integer.parseInt(lineWords[1]) - 1);","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"Elyovs"},"content":"        currentTask.unmarkAsDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"Elyovs"},"content":"        String taskStatus \u003d currentTask.getTaskStatus() ? \"X\" : \" \";","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"Elyovs"},"content":"        String taskType \u003d getTaskSymbol(currentTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"Elyovs"},"content":"        String taskDescription \u003d currentTask.getTaskDescription();","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\" [\" + taskType + \"][\" + taskStatus + \"] \" + taskDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"Elyovs"},"content":"     * Process users\u0027 command to delete available task. Deletion of task is based on the number","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"Elyovs"},"content":"     * given by users from the list. Deleted task will be printed out and updated number of task","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"Elyovs"},"content":"     * is shown.","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"Elyovs"},"content":"     * @param lineWords user input to the terminal, that has been split into array.","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"Elyovs"},"content":"     * @param taskNumber task number in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"Elyovs"},"content":"    public static void processDelete(ArrayList\u003cTask\u003e tasks, String[] lineWords, int taskNumber) {","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"Elyovs"},"content":"        Task currentTask \u003d tasks.get(Integer.parseInt(lineWords[1]) - 1);","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"Elyovs"},"content":"        int taskIndex \u003d Integer.parseInt(lineWords[1]) - 1;","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"Elyovs"},"content":"        String taskStatus \u003d currentTask.getTaskStatus() ? \"X\" : \" \";","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"Elyovs"},"content":"        String taskType \u003d getTaskSymbol(currentTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"Elyovs"},"content":"        String taskDescription \u003d currentTask.getTaskDescription();","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"Elyovs"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\" [\" + taskType + \"][\" + taskStatus + \"] \" + taskDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Now you have \" + (taskNumber - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"Elyovs"},"content":"     * Process users\u0027 command to find tasks based on a given keyword. Tasks found to have the","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"Elyovs"},"content":"     * keyword is printed.","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"Elyovs"},"content":"     * @param keyword keyword to find in tasks description.","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"Elyovs"},"content":"    public static void processFind(String keyword, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"Elyovs"},"content":"        int findTaskNumber \u003d 0;","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"Elyovs"},"content":"        for (Task currentTask : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"Elyovs"},"content":"            if (!(currentTask.getTaskDescription().contains(keyword))) {","lastModifiedDate":"2024-02-29"},{"lineNumber":140,"author":{"gitId":"Elyovs"},"content":"                continue;","lastModifiedDate":"2024-02-29"},{"lineNumber":141,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":142,"author":{"gitId":"Elyovs"},"content":"            currentTask.printTask(findTaskNumber);","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"Elyovs"},"content":"            findTaskNumber +\u003d 1;","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"Elyovs"},"content":"     * New todo is created by calling Todo class and added to the ArrayList. If todo description","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"Elyovs"},"content":"     * is missing from users\u0027 input, error is caught and more detailed exception is thrown to","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"Elyovs"},"content":"     * be handled.","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingTodoDescriptionException if description for todo is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"Elyovs"},"content":"    private static void createNewTodo(ArrayList\u003cTask\u003e tasks, String line)","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"Elyovs"},"content":"            throws MissingTodoDescriptionException {","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"Elyovs"},"content":"            tasks.add(new Todo(line.substring(TODO_DESCRIPTION_START_INDEX)));","lastModifiedDate":"2024-03-01"},{"lineNumber":160,"author":{"gitId":"Elyovs"},"content":"        } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"Elyovs"},"content":"            throw new MissingTodoDescriptionException();","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"Elyovs"},"content":"     * New deadline is created by calling Deadline class and added to the ArrayList. If deadline","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"Elyovs"},"content":"     * description is not provided, by description is not provided or no \"/by\" in the input,","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"Elyovs"},"content":"     * error is caught and more detailed exception is thrown to be handled.","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":171,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingDeadlineByException if no \"/by\" or no date given for \"/by\" in deadline.","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingDeadlineDescriptionException if description for deadline is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"Elyovs"},"content":"     * @throws DateTimeParseException if date given is not in yyyy-mm-dd format.","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"Elyovs"},"content":"    private static void createNewDeadline(ArrayList\u003cTask\u003e tasks, String line)","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"Elyovs"},"content":"            throws MissingDeadlineByException, MissingDeadlineDescriptionException,","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"Elyovs"},"content":"            DateTimeParseException {","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"Elyovs"},"content":"        if (!(line.contains(\"/by\"))) {","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"Elyovs"},"content":"            throw new MissingDeadlineByException();","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"Elyovs"},"content":"        int bySlashIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2024-02-28"},{"lineNumber":184,"author":{"gitId":"Elyovs"},"content":"        String deadlineDescription \u003d line.substring(DEADLINE_DESCRIPTION_START_INDEX, bySlashIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":185,"author":{"gitId":"Elyovs"},"content":"        if (deadlineDescription.isBlank()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":186,"author":{"gitId":"Elyovs"},"content":"            throw new MissingDeadlineDescriptionException();","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"Elyovs"},"content":"            String deadlineBy \u003d line.substring(bySlashIndex + DEADLINE_BY_SPACE_LENGTH).strip();","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"Elyovs"},"content":"            if (deadlineBy.isBlank()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"Elyovs"},"content":"                throw new MissingDeadlineByException();","lastModifiedDate":"2024-02-28"},{"lineNumber":193,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":194,"author":{"gitId":"Elyovs"},"content":"            LocalDate deadlineByDate \u003d LocalDate.parse(deadlineBy);","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"Elyovs"},"content":"            String formattedDeadlineDate \u003d deadlineByDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"Elyovs"},"content":"            tasks.add(new Deadline(deadlineDescription, formattedDeadlineDate));","lastModifiedDate":"2024-03-01"},{"lineNumber":197,"author":{"gitId":"Elyovs"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":198,"author":{"gitId":"Elyovs"},"content":"            throw new MissingDeadlineByException();","lastModifiedDate":"2024-02-28"},{"lineNumber":199,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":200,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":201,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":202,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":203,"author":{"gitId":"Elyovs"},"content":"     * New event is created by calling Event class and added to the ArrayList. If event description","lastModifiedDate":"2024-02-29"},{"lineNumber":204,"author":{"gitId":"Elyovs"},"content":"     * is not provided, no \"/from\" and its description, or no \"/to\" and its description, error is","lastModifiedDate":"2024-02-29"},{"lineNumber":205,"author":{"gitId":"Elyovs"},"content":"     * caught and more detailed exception is thrown to be handled.","lastModifiedDate":"2024-02-29"},{"lineNumber":206,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":207,"author":{"gitId":"Elyovs"},"content":"     * @param tasks array list that stores and manages the task while programme is running.","lastModifiedDate":"2024-03-01"},{"lineNumber":208,"author":{"gitId":"Elyovs"},"content":"     * @param line user input to the terminal.","lastModifiedDate":"2024-02-29"},{"lineNumber":209,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingEventFromException if no \"/from\" or no description given for \"/from\" in event.","lastModifiedDate":"2024-02-29"},{"lineNumber":210,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingEventToException if no \"/to\" or no description given for \"/to\" in event.","lastModifiedDate":"2024-02-29"},{"lineNumber":211,"author":{"gitId":"Elyovs"},"content":"     * @throws MissingEventDescriptionException if description for event is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":212,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":213,"author":{"gitId":"Elyovs"},"content":"    private static void createNewEvent(ArrayList\u003cTask\u003e tasks, String line)","lastModifiedDate":"2024-03-01"},{"lineNumber":214,"author":{"gitId":"Elyovs"},"content":"            throws MissingEventFromException, MissingEventToException,","lastModifiedDate":"2024-02-28"},{"lineNumber":215,"author":{"gitId":"Elyovs"},"content":"            MissingEventDescriptionException {","lastModifiedDate":"2024-02-28"},{"lineNumber":216,"author":{"gitId":"Elyovs"},"content":"        if (!(line.contains(\"/from\"))) {","lastModifiedDate":"2024-02-28"},{"lineNumber":217,"author":{"gitId":"Elyovs"},"content":"            throw new MissingEventFromException();","lastModifiedDate":"2024-02-28"},{"lineNumber":218,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":219,"author":{"gitId":"Elyovs"},"content":"        if (!(line.contains(\"/to\"))) {","lastModifiedDate":"2024-02-28"},{"lineNumber":220,"author":{"gitId":"Elyovs"},"content":"            throw new MissingEventToException();","lastModifiedDate":"2024-02-28"},{"lineNumber":221,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":222,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":223,"author":{"gitId":"Elyovs"},"content":"        int fromSlashIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2024-02-28"},{"lineNumber":224,"author":{"gitId":"Elyovs"},"content":"        String substringBeforeFrom \u003d line.substring(0, fromSlashIndex + 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":225,"author":{"gitId":"Elyovs"},"content":"        int toSlashIndex \u003d substringBeforeFrom.length()","lastModifiedDate":"2024-02-28"},{"lineNumber":226,"author":{"gitId":"Elyovs"},"content":"                + line.substring(fromSlashIndex + 1).indexOf(\"/\");","lastModifiedDate":"2024-02-28"},{"lineNumber":227,"author":{"gitId":"Elyovs"},"content":"        String eventDescription \u003d line.substring(EVENT_DESCRIPTION_START_INDEX, fromSlashIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":228,"author":{"gitId":"Elyovs"},"content":"        if (eventDescription.isBlank()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":229,"author":{"gitId":"Elyovs"},"content":"            throw new MissingEventDescriptionException();","lastModifiedDate":"2024-02-28"},{"lineNumber":230,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":231,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":232,"author":{"gitId":"Elyovs"},"content":"        String eventFrom \u003d line.substring(fromSlashIndex + EVENT_FROM_SPACE_LENGTH, toSlashIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":233,"author":{"gitId":"Elyovs"},"content":"        if (eventFrom.isBlank()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":234,"author":{"gitId":"Elyovs"},"content":"            throw new MissingEventFromException();","lastModifiedDate":"2024-02-28"},{"lineNumber":235,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":236,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":237,"author":{"gitId":"Elyovs"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":238,"author":{"gitId":"Elyovs"},"content":"            String eventTo \u003d line.substring(toSlashIndex + EVENT_TO_SPACE_LENGTH);","lastModifiedDate":"2024-02-28"},{"lineNumber":239,"author":{"gitId":"Elyovs"},"content":"            if (eventTo.isBlank()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":240,"author":{"gitId":"Elyovs"},"content":"                throw new MissingEventToException();","lastModifiedDate":"2024-02-28"},{"lineNumber":241,"author":{"gitId":"Elyovs"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":242,"author":{"gitId":"Elyovs"},"content":"            tasks.add(new Event(eventDescription, eventFrom, eventTo));","lastModifiedDate":"2024-03-01"},{"lineNumber":243,"author":{"gitId":"Elyovs"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":244,"author":{"gitId":"Elyovs"},"content":"            throw new MissingEventToException();","lastModifiedDate":"2024-02-28"},{"lineNumber":245,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":246,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":247,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":248,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":249,"author":{"gitId":"Elyovs"},"content":"     * Take in the task, and return the task type symbol.","lastModifiedDate":"2024-02-29"},{"lineNumber":250,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":251,"author":{"gitId":"Elyovs"},"content":"     * @param currentTask a task of todo, deadline, or event.","lastModifiedDate":"2024-02-29"},{"lineNumber":252,"author":{"gitId":"Elyovs"},"content":"     * @return symbol of task in string.","lastModifiedDate":"2024-02-29"},{"lineNumber":253,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":254,"author":{"gitId":"Elyovs"},"content":"    private static String getTaskSymbol(Task currentTask) {","lastModifiedDate":"2024-02-28"},{"lineNumber":255,"author":{"gitId":"Elyovs"},"content":"        String taskSymbol \u003d null;","lastModifiedDate":"2024-02-28"},{"lineNumber":256,"author":{"gitId":"Elyovs"},"content":"        switch(currentTask.getTaskType()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":257,"author":{"gitId":"Elyovs"},"content":"        case TODO:","lastModifiedDate":"2024-02-28"},{"lineNumber":258,"author":{"gitId":"Elyovs"},"content":"            taskSymbol \u003d \"T\";","lastModifiedDate":"2024-02-28"},{"lineNumber":259,"author":{"gitId":"Elyovs"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":260,"author":{"gitId":"Elyovs"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-28"},{"lineNumber":261,"author":{"gitId":"Elyovs"},"content":"            taskSymbol \u003d \"D\";","lastModifiedDate":"2024-02-28"},{"lineNumber":262,"author":{"gitId":"Elyovs"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":263,"author":{"gitId":"Elyovs"},"content":"        case EVENT:","lastModifiedDate":"2024-02-28"},{"lineNumber":264,"author":{"gitId":"Elyovs"},"content":"            taskSymbol \u003d \"E\";","lastModifiedDate":"2024-02-28"},{"lineNumber":265,"author":{"gitId":"Elyovs"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":266,"author":{"gitId":"Elyovs"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":267,"author":{"gitId":"Elyovs"},"content":"        return taskSymbol;","lastModifiedDate":"2024-02-28"},{"lineNumber":268,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":269,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"Elyovs":269}},{"path":"src/main/java/gary/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Elyovs":5}},{"path":"src/main/java/gary/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"/**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":" * Todo class deals with task with todo as the type, performing functions specifically","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":" * for an todo task.","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":" */","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"        super(taskDescription);","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"        this.taskType \u003d TaskType.TODO;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"     * print message when user adds a task with todo type.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"     * @param tasksCount number of tasks in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Elyovs"},"content":"    public void printAdd(int tasksCount) {","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Got it! I\u0027ve added this task: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"  [T][ ] \" + this.getTaskDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Now you have \" + tasksCount + \" tasks in your list.\");","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Elyovs"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"Elyovs"},"content":"     * print task in a certain format with its details, including the todo description.","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Elyovs"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"Elyovs"},"content":"     * @param taskNumber task number in the array list.","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"Elyovs"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"Elyovs"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Elyovs"},"content":"    public void printTask(int taskNumber) {","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"Elyovs"},"content":"        System.out.println((taskNumber + 1)","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"Elyovs"},"content":"                + \".[T]\"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Elyovs"},"content":"                + \"[\" + (this.getTaskStatus() ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Elyovs"},"content":"                + this.getTaskDescription());","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Elyovs":37}},{"path":"src/main/java/gary/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"package gary.ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"public class Ui {","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"    public static void greetings() {","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Hello! I\u0027m Gary\");","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"                    0   0   ______\");","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"                    | v | /oooooooo\\\\\");","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"                    |   |/OOOOOOOOOO\\\\\");","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"                    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"|   |   |   |   |   |   |   |   |   |   |   |\");","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"Elyovs"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"Elyovs"},"content":"    public static void exitProgramme() {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"Elyovs"},"content":"        System.out.println(\"Bye. Hope to see you again!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"Elyovs"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"Elyovs":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Elyovs"},"content":"todo do CS2113","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Elyovs"},"content":"deadline CS2113 iP /by today","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Elyovs"},"content":"event CS2113 lecture /from 4 /to 6 pm","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Elyovs"},"content":"mark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Elyovs"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Elyovs"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Elyovs":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Elyovs"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\gary\\*.java ..\\src\\main\\java\\gary\\exception\\*.java ..\\src\\main\\java\\gary\\task\\*.java","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Elyovs"},"content":"java -classpath ..\\bin gary.Gary \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Elyovs":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Elyovs"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/gary/*.java ../src/main/java/gary/exception/*.java ../src/main/java/gary/task/*.java","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Elyovs"},"content":"java -classpath ../bin gary.Gary \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Elyovs":2}}]
