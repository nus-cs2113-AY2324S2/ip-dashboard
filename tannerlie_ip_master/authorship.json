[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"# Krot","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"Krot Chatbot is a task tracking app for managing your everyday tasks, optimised for the CLI. Perfect for those who likes to type away. ","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"Try it out for yourself and keep your tasks in order.","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":"## Quickstart","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"Prerequisites: JDK 11","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"1. Download the latest Krot.jar from [here](https://github.com/tannerlie/ip/releases).","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"2. Copy the file to the folder you want to use as the home folder for your Krot Task Manager.","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"3. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar Krot.jar command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"   A GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"![Screenshot of Krot GUI](https://raw.githubusercontent.com/tannerlie/ip/master/assets/Screenshot%20of%20Krot%20GUI.png)","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"4. Type the command in the command box and press Enter to execute it. e.g. typing ```commands``` and pressing Enter will open the command window.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"   Some example commands you can try.","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"   1. ```list```: Lists all the current tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"   2. ```todo \u003ctask\u003e```: Creates a task to do.","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"   3. ```deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e```: Creates a task with a deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"   4. ```event \u003ctask\u003e /from \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e /to \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e```: Creates an event with a duration.","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"   5. ```bye```: Exits the app.","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"5. Refer to the [Features](#Features) below for details of each command.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"## Features","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"1. Note on the format of the commands","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"2. The commands are always the first word.","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"3. The data that the user has to input are in the form ```\u003ctext\u003e``` where the whole","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"thing has to be replaced","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"4. For commands with dates like ``\u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e`` it has the format of ","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"the year in 4 digits, the month in 2 digits and day in 2 digits, followed by a capital T","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"and the 24hr time e.g. for the 2nd Mar 24, 5pm it will be in the format ```2024-03-02T17:00```.","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"5. Many commands may also have initializers such as ```/intitializers```. Do include a space between ","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"the input and initializers e.g ```deadline Assignment /by 2024-03-02T17:00```.","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"6. Please follow the commands strictly. The order and format of the commands matters.","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"### Open the commands list: ```commands``` \u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"Shows a list of all the commands accepted.\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"Format: ```commands```","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"### See your list of tasks: ```list``` \u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"Shows a list of all the tasks in you list.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"Format: ```list```","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"### Add a task to the list: ```todo \u003ctask\u003e```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"Adds a new task to do to the list.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"Format: ```todo \u003ctask\u003e```\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"- Replace ```\u003ctask\u003e``` with your task to do.","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"- e.g: ```todo buy groceries```","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"### Add a task with deadline to the list: ```deadline```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"Adds a new task with a deadline to the list.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"Format: ```deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e```\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"- Replace ```\u003ctask\u003e``` with your task and ```\u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e``` the date and time of the Task due.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"- e.g: ```deadline Assignment /by \u003c2024-03-26\u003eT\u003c23:59\u003e```","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"### Add an event to the list: ```event```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"Adds a new event and its duration to the list.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"Format: ```event \u003cevent name\u003e /from \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e /to YYYY-MM-DD\u003eT\u003cHH:MM\u003e```\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"- Replace ```\u003cevent name\u003e``` with your task and ```\u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e``` the date and time of the event start and end.","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"tannerlie"},"content":"- e.g: ```event CS2113 Lecture /from 2024-03-05T12:00 /to 2024-03-05T14:00```","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"tannerlie"},"content":"### Mark the tasks as done: ```mark```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"tannerlie"},"content":"Marks the task as done.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"tannerlie"},"content":"Format: ```mark \u003ctaskNumber\u003e```","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"tannerlie"},"content":"### Unmark the tasks as done: ```unmark```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"tannerlie"},"content":"Un-marks the task.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"tannerlie"},"content":"Format:```unmask \u003ctaskNumber\u003e```","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"tannerlie"},"content":"### Delete the task: ```delete```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"tannerlie"},"content":"Deletes the task specified.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"tannerlie"},"content":"Format:```delete \u003ctaskNumber\u003e```","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"tannerlie"},"content":"### Find all the tasks in the list: ```find```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"tannerlie"},"content":"Searches the list for the task by title or date.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"tannerlie"},"content":"Format:```find /title \u003ctitle\u003e``` or ```find /date \u003cYYYY-MM-DD\u003e```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"tannerlie"},"content":"- Finds the task in the list that corresponds to either the title or date.","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"tannerlie"},"content":"- The search by title is not case-sensitive.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"tannerlie"},"content":"Examples\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"tannerlie"},"content":"![Screenshot of find by title](https://raw.githubusercontent.com/tannerlie/ip/master/assets/Screenshot%20of%20Find.png)","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"tannerlie"},"content":"### End the chat session: ```bye```\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"tannerlie"},"content":"Ends the Chatbot and saves your list data.\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"tannerlie"},"content":"Format:```bye```","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"tannerlie"},"content":"### Saving the tasks data \u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"tannerlie"},"content":"Saving the date occurs everytime a command is given.","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"tannerlie"},"content":"## FAQ","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"tannerlie"},"content":"Q. How is my data saved for future use?\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"tannerlie"},"content":"A. The list of tasks will be saved whenever there is a change in your tasks details/tasks added.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"tannerlie"},"content":"Q. How do I transfer my data to another computer? \u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"tannerlie"},"content":"A. Install the app on another computer and replace the taskList.txt file in the new computer with the old one.","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"tannerlie"},"content":"## Command Summary","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"tannerlie"},"content":"| Action                 | Format                                                                      |","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"tannerlie"},"content":"|------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"tannerlie"},"content":"| Commands               | ```commands```                                                              |","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"tannerlie"},"content":"| List                   | ```list```                                                                  |","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"tannerlie"},"content":"| Add task todo          | ```todo \u003ctask\u003e```                                                           |","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"tannerlie"},"content":"| Add task with deadline | ```deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e```                              |","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"tannerlie"},"content":"| Add event              | ```event \u003cevent name\u003e /from \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e /to YYYY-MM-DD\u003eT\u003cHH:MM\u003e``` |","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"tannerlie"},"content":"| Mark                   | ```mark  \u003ctaskNumber\u003e```                                                    |","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"tannerlie"},"content":"| Unmark                 | ```unmask \u003ctaskNumber\u003e```                                                   |","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"tannerlie"},"content":"| Delete                 | ```delete  \u003ctaskNumber\u003e```                                                  |","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"tannerlie"},"content":"| Find                   | ```find /title \u003ctitle\u003e``` or ```find /date \u003cYYYY-MM-DD\u003e```                  |","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"tannerlie"},"content":"| End                    | ```bye```                                                                   |","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"tannerlie":104}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":" * Deadline task class.","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":" * @param end The due date of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":" * @param taskType Specify what type of task it is.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"    protected String taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"    public Deadline(String task, LocalDateTime end, String taskType) {","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"        super(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"    /** Returns the task type */","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"        return taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"    /** Returns the due date for the task */","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"        return end;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"tannerlie":30}},{"path":"src/main/java/DirectoryCannotBeMadeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"/** Exception if directory cannot be made in local folder */","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"public class DirectoryCannotBeMadeException extends Exception{","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"    public DirectoryCannotBeMadeException (String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"        super(message);","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tannerlie":6}},{"path":"src/main/java/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"/** Exception if the needed inputs are left empty */","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"public class EmptyInputException extends Exception{","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"    public EmptyInputException (String s) {","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"        super(s);","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tannerlie":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":" * Event task class.","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":" * @param start The start date of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":" * @param end The due date of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" * @param taskType Specify what type of task it is.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"    protected String taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    public Event(String task, LocalDateTime start, LocalDateTime end, String taskType) {","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"        super(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"    /** Returns the task type */","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"        return taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"    /** Returns the task start date */","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"        return start;","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"    /** Returns the task end date */","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"        return end;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"tannerlie":39}},{"path":"src/main/java/FileReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" * Class that reads the tasks stored in local storage.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":" * @param path Relative file path of the file.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":" * @param tasks List of tasks loaded.","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"public class FileReader {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"    public FileReader (String path) {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"     * Returns task list after looping over all the lines in the .txt file storage is read and tasks are created.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"     * @throws IOException If file cannot be read.","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"     * @throws DirectoryCannotBeMadeException If Directory cannot be made on local.","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cTask\u003e getTasks() throws IOException, DirectoryCannotBeMadeException {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"        // Reads the txt file to get the tasks stored in local","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"            createNewFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"            String[] taskSegments \u003d line.split(\"\\\\|\"); // Split based of |","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"            if (taskSegments[0].equalsIgnoreCase(\"T\")) { // Checks task type","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"                Task task \u003d new Todo(taskSegments[2], taskSegments[0]);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"                if (taskSegments[1].equals(\"1\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"                    task.markDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"            } else if (taskSegments[0].equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"                Task task \u003d new Deadline(taskSegments[2], LocalDateTime.parse(taskSegments[3]), taskSegments[0]);","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"                if (taskSegments[1].equals(\"1\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"                    task.markDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"                Task task \u003d new Event(taskSegments[2], LocalDateTime.parse(taskSegments[3]), LocalDateTime.parse(taskSegments[4]), taskSegments[0]);","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"                if (taskSegments[1].equals(\"1\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"                    task.markDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"        return tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"tannerlie"},"content":"     * Creates a new file if there is no storage file detected.","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"tannerlie"},"content":"     * @throws DirectoryCannotBeMadeException If Directory cannot be made on local.","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"tannerlie"},"content":"     * @throws IOException If file cannot be read.","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"tannerlie"},"content":"    public void createNewFile() throws DirectoryCannotBeMadeException, IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"tannerlie"},"content":"        // Creates a new file in the desired file path","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"tannerlie"},"content":"        boolean isDirMade \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"tannerlie"},"content":"        boolean isFileMade \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"tannerlie"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"tannerlie"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"tannerlie"},"content":"            isDirMade \u003d directory.mkdir();","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"tannerlie"},"content":"        if (!isDirMade) {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"tannerlie"},"content":"            throw new DirectoryCannotBeMadeException(\"Data directory could not be made\");","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"tannerlie"},"content":"        File tasksData \u003d new File(filePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"tannerlie"},"content":"        if (!tasksData.exists()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"tannerlie"},"content":"            isFileMade \u003d tasksData.createNewFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tannerlie":83}},{"path":"src/main/java/FileWrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":" * Class that writes the tasks from a list to local storage.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" * @param path Relative file path of the file.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":" * @param tasks List of tasks loaded.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"public class FileWrite {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    public FileWrite(String filePath, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"     * Loops through the list and writes to a .txt file in storage.","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"     * @throws IOException If it cannot be written.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"    public void writeToFile() throws IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"        // Writes the task list to file to store in local files","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"            fw.write(task.getTaskType()","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"                    + \"|\" + (task.isDone ? 1 : 0)","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"                    + \"|\" + task.task","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"                    + (task.getStart() \u003d\u003d null ? \"\" : \"|\" + task.getStart())","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"                    + (task.getEnd() \u003d\u003d null ? \"\" : \"|\" + task.getEnd()) + System.lineSeparator());","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"        fw.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tannerlie":37}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"/** Exception if the needed inputs are invalid format */","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"    public InvalidInputException(String s) {","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"        super(s);","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tannerlie":6}},{"path":"src/main/java/Krot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":" * Krot class which is the class for Krot, our chatbot.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":" * @param ui UI class responsible for generating responses.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":" * @param parser Parser class responsible for managing user inputs.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":" * @param storage Storage class responsible for reading and writing.","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":" * @param taskList TaskList class responsible for creating a list of tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"public class Krot {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    private static final String FILE_PATH \u003d \"./data/taskList.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"    private UI ui;","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"    private Parser parser;","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"    public Krot() {","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"            taskList \u003d new TaskList(storage.readDb());","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"     * Calls and handles the respective methods based off commands given by user.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"     * @param key Command initializer.","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"     * @param line Line of input generated by user.","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"    public void generateResponse(String key, String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"        Task task;","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"        switch (key) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"            ui.hasEnded \u003d true;","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"        case \"commands\":","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"            ui.printUserGuide();","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"            ui.listTasks(taskList.getTasks());","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"                int index \u003d parser.parseIndexToMark(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"                task \u003d taskList.markTask(key, index);","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"                ui.printMarkMessage(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"tannerlie"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"tannerlie"},"content":"                String title \u003d parser.todoParser(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"tannerlie"},"content":"                task \u003d taskList.createTodo(title);","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"tannerlie"},"content":"                ui.printCreateTaskMessage(task, taskList.getTasks().size());","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"tannerlie"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"tannerlie"},"content":"                ArrayList\u003cObject\u003e deadlineDetails \u003d parser.deadlineParser(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"tannerlie"},"content":"                task \u003d taskList.createDeadline((String)deadlineDetails.get(0), (LocalDateTime)deadlineDetails.get(1));","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"tannerlie"},"content":"                ui.printCreateTaskMessage(task, taskList.getTasks().size());","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) { // Catches if wrong initializer","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"tannerlie"},"content":"        case \"event\":","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"tannerlie"},"content":"                ArrayList\u003cObject\u003e eventDetails \u003d parser.eventParser(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"tannerlie"},"content":"                task \u003d taskList.createEvent((String)eventDetails.get(0),","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"tannerlie"},"content":"                        (LocalDateTime)eventDetails.get(1), (LocalDateTime)eventDetails.get(2));","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"tannerlie"},"content":"                ui.printCreateTaskMessage(task, taskList.getTasks().size());","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) { // Catches if wrong initializer is used","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"tannerlie"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"tannerlie"},"content":"                int listIndex \u003d parser.deleteParser(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"tannerlie"},"content":"                task \u003d taskList.deleteTask(listIndex - 1);","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"tannerlie"},"content":"                ui.printDeleteMessage(task, listIndex, taskList.getTasks().size());","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"tannerlie"},"content":"        case \"find\":","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"tannerlie"},"content":"                if (line.contains(\"/title\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"tannerlie"},"content":"                    String title \u003d parser.findFromTitleParser(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"tannerlie"},"content":"                    ArrayList\u003cTask\u003e filteredList \u003d taskList.findFromTitle(title);","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"tannerlie"},"content":"                    if (filteredList.isEmpty()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"tannerlie"},"content":"                        ui.printError(new EmptyInputException(\"There\u0027s no task with that title :(\").getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"tannerlie"},"content":"                    } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"tannerlie"},"content":"                        ui.listTasks(filteredList);","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"tannerlie"},"content":"                    }","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"tannerlie"},"content":"                } else if (line.contains(\"/date\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"tannerlie"},"content":"                    try {","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"tannerlie"},"content":"                        LocalDate date \u003d parser.findParser(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"tannerlie"},"content":"                        ArrayList\u003cTask\u003e filteredList \u003d taskList.findByDate(date);","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"tannerlie"},"content":"                        ui.listTasks(filteredList);","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"tannerlie"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":114,"author":{"gitId":"tannerlie"},"content":"                        ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"tannerlie"},"content":"                    }","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"tannerlie"},"content":"                } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"tannerlie"},"content":"                    ui.printError(new InvalidInputException(","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"tannerlie"},"content":"                            \"Enter a valid key or date with the initializer /title \u003ckeyword\u003e or /date \u003cYYYY-MM-DD\u003e\").getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"tannerlie"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"tannerlie"},"content":"            break;","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"tannerlie"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"tannerlie"},"content":"            ui.printError(new UnknownCommandException(\"I\u0027m sorry I didnt quite catch that\").getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"tannerlie"},"content":"    /** Runs the chatbot until user logs off */","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"tannerlie"},"content":"    public void run() {","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"tannerlie"},"content":"        // Runs the bot","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"tannerlie"},"content":"        String line;","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"tannerlie"},"content":"        ui.printSeparator();","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"tannerlie"},"content":"        ui.greeting();","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"tannerlie"},"content":"        ui.printUserGuide();","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"tannerlie"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"tannerlie"},"content":"        while (!ui.hasEnded) {","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"tannerlie"},"content":"            ui.printSeparator();","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"tannerlie"},"content":"            ui.printUser();","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"tannerlie"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"tannerlie"},"content":"            ui.printSeparator();","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"tannerlie"},"content":"            ui.printName();","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"tannerlie"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"tannerlie"},"content":"                String key \u003d parser.checkKey(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"tannerlie"},"content":"                generateResponse(key, line);","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"tannerlie"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"tannerlie"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"tannerlie"},"content":"            storage.saveList(taskList.getTasks());","lastModifiedDate":"2024-03-03"},{"lineNumber":150,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":151,"author":{"gitId":"tannerlie"},"content":"        ui.endChat();","lastModifiedDate":"2024-03-03"},{"lineNumber":152,"author":{"gitId":"tannerlie"},"content":"        in.close();","lastModifiedDate":"2024-03-03"},{"lineNumber":153,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"tannerlie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"tannerlie"},"content":"        new Krot().run();","lastModifiedDate":"2024-03-03"},{"lineNumber":157,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tannerlie":159}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":"/** Parser class that handles and interprets all the user\u0027s inputs */","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"public class Parser {","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"    private static final int BY_PADDING \u003d 3;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"    private static final int FROM_PADDING \u003d 5;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"    private static final int TITLE_PADDING \u003d 6;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"     * Extracts the command from user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"     * @param line Line generated by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"     * @return Key for the command.","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"    public String checkKey(String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"        String[] phrases \u003d line.split(\" \", 2);","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"        return phrases[0].toLowerCase();","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"     * Finds and parses the string to obtain the index to mark/unmark.","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"     * @param line Line generated by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"     * @return Index of the task to mark.","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"     * @throws ArrayIndexOutOfBoundsException If index is left empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"     * @throws NumberFormatException If the index is not a valid number.","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"    public int parseIndexToMark(String line) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"        int index;","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"            index \u003d parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Which task are u referring to\");","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"            throw new NumberFormatException(\"Enter a proper task number to mark\");","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"        return index;","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"     * Interprets and parses the date keyed by user into LocalDateTime object.","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"     * @param line Line to be parsed into LocalDateTime object.","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"     * @return The date and time.","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"    public LocalDateTime dateAndTimeParser(String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"        LocalDateTime date;","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"            date \u003d LocalDateTime.parse(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"            throw new DateTimeParseException(\"Enter a date in the format \u003cYYYY-MM-DD\u003eT\u003cHH-MM\u003e\", e.getParsedString(), e.getErrorIndex());","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"        return date;","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"tannerlie"},"content":"     * Interprets and parses the date keyed by user into LocalDate object.","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"tannerlie"},"content":"     * @param line Line to be parsed into LocalDateTime object","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"tannerlie"},"content":"     * @return The date","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"tannerlie"},"content":"    public LocalDate dateParser(String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"tannerlie"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"tannerlie"},"content":"            date \u003d LocalDate.parse(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"tannerlie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"tannerlie"},"content":"            throw new DateTimeParseException(\"Enter a date in the format \u003cYYYY-MM-DD\u003e\", e.getParsedString(), e.getErrorIndex());","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"tannerlie"},"content":"        return date;","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"tannerlie"},"content":"     * Extracts the task title from the user inputs.","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"tannerlie"},"content":"     * @param line Line keyed by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"tannerlie"},"content":"     * @return Task title.","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"tannerlie"},"content":"     * @throws ArrayIndexOutOfBoundsException If the title is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"tannerlie"},"content":"    public String todoParser(String line) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"tannerlie"},"content":"        String title;","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"tannerlie"},"content":"            title \u003d line.split(\" \", 2)[1];","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"tannerlie"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"tannerlie"},"content":"            throw new ArrayIndexOutOfBoundsException(\"What task are you trying to add??? Please enter a task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"tannerlie"},"content":"        return title;","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"tannerlie"},"content":"     * Extracts the task title and due date from the user inputs.","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"tannerlie"},"content":"     * @param line Line keyed by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"tannerlie"},"content":"     * @return Task title and the due date in a list.","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"tannerlie"},"content":"     * @throws ArrayIndexOutOfBoundsException If the title is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"tannerlie"},"content":"     * @throws EmptyInputException If any of the required inputs is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cObject\u003e deadlineParser(String line) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"tannerlie"},"content":"        String title;","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"tannerlie"},"content":"        LocalDateTime end;","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"tannerlie"},"content":"            title \u003d line.split(\"/\")[0].split(\" \", 2)[1].strip();","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"tannerlie"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"tannerlie"},"content":"            throw new ArrayIndexOutOfBoundsException(\"What task are you trying to add??? Please enter a task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"tannerlie"},"content":"        if (title.isBlank()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"tannerlie"},"content":"            throw new EmptyInputException(\"Why is the task description blank!\"); // Throws exception if task is blank","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"tannerlie"},"content":"        int byIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2024-03-03"},{"lineNumber":114,"author":{"gitId":"tannerlie"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"tannerlie"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Enter a due date with the initializer /by \u003cYYYY-MM-DD\u003eT\u003cHH-MM\u003e\"); // Throws exception if initializer not found","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"tannerlie"},"content":"        end \u003d dateAndTimeParser(line.substring(byIndex + BY_PADDING).strip());","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"tannerlie"},"content":"        ArrayList\u003cObject\u003e parsed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"tannerlie"},"content":"        parsed.add(title);","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"tannerlie"},"content":"        parsed.add(end);","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"tannerlie"},"content":"        return parsed;","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":125,"author":{"gitId":"tannerlie"},"content":"     * Extracts the task title, start date and due date from the user inputs.","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"tannerlie"},"content":"     * @param line Line keyed by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"tannerlie"},"content":"     * @return Task title, start date and the due date in a list.","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"tannerlie"},"content":"     * @throws ArrayIndexOutOfBoundsException If the title is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"tannerlie"},"content":"     * @throws EmptyInputException If any of the required inputs is empty.","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"tannerlie"},"content":"     * @throws StringIndexOutOfBoundsException If any of the initializers /from or /to is missing.","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cObject\u003e eventParser(String line) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"tannerlie"},"content":"        String title;","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"tannerlie"},"content":"        LocalDateTime start;","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"tannerlie"},"content":"        LocalDateTime end;","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"tannerlie"},"content":"            title \u003d line.split(\"/\")[0].split(\" \", 2)[1].strip();","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"tannerlie"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"tannerlie"},"content":"            throw new ArrayIndexOutOfBoundsException(\"What task are you trying to add??? Please enter a task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"tannerlie"},"content":"        int fromIndex \u003d line.indexOf(\"/from\");","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"tannerlie"},"content":"        int toIndex \u003d line.indexOf(\"/to\");","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"tannerlie"},"content":"        if (title.isBlank()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"tannerlie"},"content":"            throw new EmptyInputException(\"Why is the task description blank!\"); // Throws exception if task is blank","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"tannerlie"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"tannerlie"},"content":"            throw new StringIndexOutOfBoundsException(\"Enter the duration with the initializer /from \u003cYYYY-MM-DD\u003eT\u003cHH-MM\u003e /to \u003cYYYY-MM-DD\u003eT\u003cHH-MM\u003e or don\u0027t try at all\"); // Throws exception if initializers not found","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":150,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"tannerlie"},"content":"            String startString \u003d line.substring(fromIndex + FROM_PADDING, toIndex).strip();","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"tannerlie"},"content":"            String endString \u003d line.substring(line.indexOf(\"/to\") + BY_PADDING).strip();","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"tannerlie"},"content":"            if (startString.isBlank()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"tannerlie"},"content":"                throw new EmptyInputException(\"Please fill in the start date\");","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"tannerlie"},"content":"            } else if (endString.isBlank()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"tannerlie"},"content":"                throw new EmptyInputException(\"Please fill in the end date\");","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"tannerlie"},"content":"            start \u003d dateAndTimeParser(startString);","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"tannerlie"},"content":"            end \u003d dateAndTimeParser(endString);","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"tannerlie"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"tannerlie"},"content":"            throw new StringIndexOutOfBoundsException(\"Please enter the /from date before /to date\");","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"tannerlie"},"content":"        ArrayList\u003cObject\u003e parsed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-03"},{"lineNumber":164,"author":{"gitId":"tannerlie"},"content":"        parsed.add(title);","lastModifiedDate":"2024-03-03"},{"lineNumber":165,"author":{"gitId":"tannerlie"},"content":"        parsed.add(start);","lastModifiedDate":"2024-03-03"},{"lineNumber":166,"author":{"gitId":"tannerlie"},"content":"        parsed.add(end);","lastModifiedDate":"2024-03-03"},{"lineNumber":167,"author":{"gitId":"tannerlie"},"content":"        return parsed;","lastModifiedDate":"2024-03-03"},{"lineNumber":168,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":169,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":170,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"tannerlie"},"content":"     * Extracts the task index to delete and validates if it is a number.","lastModifiedDate":"2024-03-03"},{"lineNumber":172,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":173,"author":{"gitId":"tannerlie"},"content":"     * @param line Line keyed by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":174,"author":{"gitId":"tannerlie"},"content":"     * @return Number of the task in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":175,"author":{"gitId":"tannerlie"},"content":"     * @throws IndexOutOfBoundsException If the task number is not a number.","lastModifiedDate":"2024-03-03"},{"lineNumber":176,"author":{"gitId":"tannerlie"},"content":"     * @throws ArrayIndexOutOfBoundsException If the task number is not specified.","lastModifiedDate":"2024-03-03"},{"lineNumber":177,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":178,"author":{"gitId":"tannerlie"},"content":"    public int deleteParser(String line) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":179,"author":{"gitId":"tannerlie"},"content":"        Pattern pattern \u003d Pattern.compile(\"^[0-9]+$\");","lastModifiedDate":"2024-03-03"},{"lineNumber":180,"author":{"gitId":"tannerlie"},"content":"        String taskNumber;","lastModifiedDate":"2024-03-03"},{"lineNumber":181,"author":{"gitId":"tannerlie"},"content":"        int taskIndex;","lastModifiedDate":"2024-03-03"},{"lineNumber":182,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":183,"author":{"gitId":"tannerlie"},"content":"            taskNumber \u003d line.split(\" \", 2)[1];","lastModifiedDate":"2024-03-03"},{"lineNumber":184,"author":{"gitId":"tannerlie"},"content":"            if (!pattern.matcher(taskNumber).matches()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":185,"author":{"gitId":"tannerlie"},"content":"                throw new InvalidInputException(\"That\u0027s not valid number, enter a proper task number\");","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":187,"author":{"gitId":"tannerlie"},"content":"            taskIndex \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2024-03-03"},{"lineNumber":188,"author":{"gitId":"tannerlie"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":189,"author":{"gitId":"tannerlie"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Which task you trying to delete?\");","lastModifiedDate":"2024-03-03"},{"lineNumber":190,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":191,"author":{"gitId":"tannerlie"},"content":"        return taskIndex;","lastModifiedDate":"2024-03-03"},{"lineNumber":192,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":193,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":194,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":195,"author":{"gitId":"tannerlie"},"content":"     *Extracts the date from the user input and parse it into LocalDate object.","lastModifiedDate":"2024-03-03"},{"lineNumber":196,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":197,"author":{"gitId":"tannerlie"},"content":"     * @param line Line keyed by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":198,"author":{"gitId":"tannerlie"},"content":"     * @return Date to filter tasks to match from the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":199,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":200,"author":{"gitId":"tannerlie"},"content":"    public LocalDate findParser(String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":201,"author":{"gitId":"tannerlie"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-03"},{"lineNumber":202,"author":{"gitId":"tannerlie"},"content":"        int index \u003d line.indexOf(\"/date\") + 5;","lastModifiedDate":"2024-03-03"},{"lineNumber":203,"author":{"gitId":"tannerlie"},"content":"        date \u003d dateParser(line.substring(index).strip());","lastModifiedDate":"2024-03-03"},{"lineNumber":204,"author":{"gitId":"tannerlie"},"content":"        return date;","lastModifiedDate":"2024-03-03"},{"lineNumber":205,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":206,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":207,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":208,"author":{"gitId":"tannerlie"},"content":"     *Extracts the title from the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":209,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":210,"author":{"gitId":"tannerlie"},"content":"     * @param line Line keyed by the user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":211,"author":{"gitId":"tannerlie"},"content":"     * @return Date to task title to match from the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":212,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":213,"author":{"gitId":"tannerlie"},"content":"    public String findFromTitleParser(String line) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":214,"author":{"gitId":"tannerlie"},"content":"        if (line.contains(\"/title\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":215,"author":{"gitId":"tannerlie"},"content":"            int index \u003d line.indexOf(\"/title\") + TITLE_PADDING;","lastModifiedDate":"2024-03-03"},{"lineNumber":216,"author":{"gitId":"tannerlie"},"content":"            String title \u003d line.substring(index).strip();","lastModifiedDate":"2024-03-03"},{"lineNumber":217,"author":{"gitId":"tannerlie"},"content":"            if (title.isBlank()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":218,"author":{"gitId":"tannerlie"},"content":"                throw new EmptyInputException(\"What task are you searching for?\");","lastModifiedDate":"2024-03-03"},{"lineNumber":219,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":220,"author":{"gitId":"tannerlie"},"content":"            return title;","lastModifiedDate":"2024-03-03"},{"lineNumber":221,"author":{"gitId":"tannerlie"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":222,"author":{"gitId":"tannerlie"},"content":"            throw new InvalidInputException(\"Enter a valid title with the initializer /title \u003ckeyword\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":223,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":224,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":225,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"tannerlie":225}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":" * Storage class to read and write to the local .txt file.","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":" * @param File_PATH Relative file path to the local database.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"public class Storage {","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"     * Returns the tasks read from the local .txt file.","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"     * @return Task List.","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"     * @throws Exception Exceptions passed from getting the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cTask\u003e readDb() throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"        // Reads from the local txt file to obtain tasks","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"        FileReader fileReader \u003d new FileReader(FILE_PATH);","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"            return fileReader.getTasks();","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"            throw e;","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"     * Writes the task list to the local .txt file using file write.","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"     * @param taskList Task List.","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"    public void saveList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"        // Calls the FileWrite class to sae task list","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"        FileWrite fw \u003d new FileWrite(FILE_PATH, taskList);","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"            fw.writeToFile();","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"tannerlie":46}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":" * Task class responsible to the task methods and params.","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":" * @param task Title of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":" * @param isDone Whether the task is marked done or not.","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"    protected String task;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"    public Task (String task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"/** Marks or unmarks the task as done */","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"        this.isDone \u003d !isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"    /** Returns the type of task */","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"        return \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"    /** Returns null as no start date */","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"        return null;","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"    /** Returns null as no end date */","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"        return null;","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"tannerlie":37}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":" * TaskList class responsible for all the methods relating to modifying the taskList.","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":" * @param tasks Task list.","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"public class TaskList {","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"    /** Returns the list of tasks */","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"        return tasks;","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"     * Marks the task specified as either done or not done.","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"     * @param key Command keyed in by user input.","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"     * @param index Index of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"     * @return Task marked/unmarked.","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"     * @throws IndexOutOfBoundsException If the task doesn\u0027t exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"     * @throws TaskMarkerException If the task is already marked/unmarked.","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"    public Task markTask(String key, int index) throws Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"        // Marks or unmarks tasks","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"        Task t;","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"            t \u003d tasks.get(index);","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"            throw new IndexOutOfBoundsException(\"That task doesn\u0027t exist...\");","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"        if (t.isDone) {","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"            if (key.equalsIgnoreCase(\"mark\")) { // Catch if the task is already marked","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"                throw new TaskMarkerException(\"Task \" + (index + 1) + \" is already marked done\");","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"            if (key.equalsIgnoreCase(\"unmark\")) { // Catch if the task is already unmarked","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"                throw new TaskMarkerException(\"Task \" + (index + 1) + \" is already unmarked\");","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"        t.markDone();","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"        return t;","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"     * Creates an event task and adds it to the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"     * @param title Title of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"     * @param start Start date of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"     * @param end End date of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"     * @return New event task created.","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"tannerlie"},"content":"    public Task createEvent(String title, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"tannerlie"},"content":"        // Creates new event","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"tannerlie"},"content":"        Task task;","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"tannerlie"},"content":"        task \u003d new Event(title, start, end, \"E\");","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"tannerlie"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"tannerlie"},"content":"        return task;","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"tannerlie"},"content":"     * Creates a deadline task and adds it to the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"tannerlie"},"content":"     * @param title Title of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"tannerlie"},"content":"     * @param dueDate Due date of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"tannerlie"},"content":"     * @return New Deadline task created.","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"tannerlie"},"content":"    public Task createDeadline(String title, LocalDateTime dueDate) {","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"tannerlie"},"content":"        // Creates new deadline task","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"tannerlie"},"content":"        Task task;","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"tannerlie"},"content":"        task \u003d new Deadline(title, dueDate, \"D\");","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"tannerlie"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"tannerlie"},"content":"        return task;","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"tannerlie"},"content":"     * Creates a to do task and adds it to the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"tannerlie"},"content":"     * @param title Title of the task.","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"tannerlie"},"content":"     * @return New to do task created.","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"tannerlie"},"content":"    public Task createTodo(String title) {","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"tannerlie"},"content":"        // Creates new task to do","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"tannerlie"},"content":"        Task task;","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"tannerlie"},"content":"        task \u003d new Todo(title, \"T\");","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"tannerlie"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"tannerlie"},"content":"        return task;","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"tannerlie"},"content":"     * Deletes the task from the task list based off of the index.","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"tannerlie"},"content":"     * @param index Index of the task to delete.","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"tannerlie"},"content":"     * @return Task deleted.","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"tannerlie"},"content":"     * @throws IndexOutOfBoundsException If task number keyed in by user is not in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"tannerlie"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"tannerlie"},"content":"        // Deletes task from the list","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"tannerlie"},"content":"        Task task;","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"tannerlie"},"content":"            task \u003d tasks.get(index);","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"tannerlie"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"tannerlie"},"content":"        catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":114,"author":{"gitId":"tannerlie"},"content":"            throw new IndexOutOfBoundsException(\"I can\u0027t delete a task that isn\u0027t there...\");","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"tannerlie"},"content":"        return task;","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"tannerlie"},"content":"     * Finds and filters the list of task based off of the date keyed in by user inputs.","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"tannerlie"},"content":"     * @param date Date to file the list by.","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"tannerlie"},"content":"     * @return The filtered List.","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":125,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cTask\u003e findByDate(LocalDate date) throws NullPointerException{","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"tannerlie"},"content":"        // Finds the tasks in the list that matches date","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"tannerlie"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"tannerlie"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"tannerlie"},"content":"            for(Task task : this.tasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"tannerlie"},"content":"                if (task.getEnd() \u003d\u003d null) {","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"tannerlie"},"content":"                    continue;","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"tannerlie"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"tannerlie"},"content":"                if (task.getEnd().toLocalDate().isEqual(date) || task.getEnd().toLocalDate().isBefore(date)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"tannerlie"},"content":"                    filteredList.add(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"tannerlie"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"tannerlie"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"tannerlie"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"tannerlie"},"content":"            throw new NullPointerException(\"You have no tasks due by this date\");","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"tannerlie"},"content":"        return filteredList;","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"tannerlie"},"content":"     * Finds and filters the list of task based off of the keyword keyed in by user inputs.","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"tannerlie"},"content":"     * @param keyword Keyword to file the list by.","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"tannerlie"},"content":"     * @return The filtered List.","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"tannerlie"},"content":"    public ArrayList\u003cTask\u003e findFromTitle(String keyword) {","lastModifiedDate":"2024-03-03"},{"lineNumber":150,"author":{"gitId":"tannerlie"},"content":"        // Finds the tasks in the list that matches title","lastModifiedDate":"2024-03-03"},{"lineNumber":151,"author":{"gitId":"tannerlie"},"content":"        Pattern pattern \u003d Pattern.compile(Pattern.quote(keyword), Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"tannerlie"},"content":"        return (ArrayList\u003cTask\u003e)tasks.stream().filter(task -\u003e pattern.matcher(task.task).find()).collect(Collectors.toList());","lastModifiedDate":"2024-03-04"},{"lineNumber":154,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":155,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"tannerlie":155}},{"path":"src/main/java/TaskMarkerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"/** Exception if the task is already marked/unmarked */","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"public class TaskMarkerException extends Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"    public TaskMarkerException(String message) {","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"        super(message);","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"tannerlie":6}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":" * Todo task class","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":" *","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":" * @param taskType Specify what type of task it is.","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"    protected String taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":"    public Todo (String task, String taskType) {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"        super(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"    /** Returns the task type */","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"        return taskType;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"tannerlie":18}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"/** UI class responsible for generating all responses to the CLI */","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"public class UI {","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"    protected static final String NAME \u003d \"Krot\"; // Static variable for the bot\u0027s name","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":"    protected boolean hasEnded; // Static variable to end the chatbot","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"    public UI () {","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"        this.hasEnded \u003d false;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"    /** Prints the User Guide for a list of commands */","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"    public void printUserGuide() {","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"        // Prints user guide","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"Here\u0027s a list of commands that I take:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tOpen the commands list: commands\");","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tSee your list of tasks: list\");","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tAdd a task to the list: todo \u003ctask\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tAdd a task with deadline to the list: deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e\");","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tAdd an event to the list: event \u003cevent name\u003e /from \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e /to \u003cYYYY-MM-DD\u003eT\u003cHH:MM\u003e\");","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tMark the tasks as done: mark \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tUnmark the tasks as done: unmark \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tDelete the task: delete \u003ctaskNumber\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tFind all the tasks in the list: find /date \u003cYYYY-MM-DD\u003e or find /title \u003ctask\u003e\");","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"\\tEnd the chat session: bye\");","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"    public void printUser() {","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"        // Prints user","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"You:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"    public void printName() {","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"        // Prints the name of bot when replying","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"        System.out.println(NAME + \":\");","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"    public void greeting() {","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"        // Prints out the standard greeting","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"Hello! I\u0027m \" + NAME);","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"    public void printSeparator() {","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"        // Prints line separators","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"-\");","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"    public void printError(String message) {","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"        // Prints error message","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"    public void endChat() {","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"        // Prints closing message","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"        hasEnded \u003d true;","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"tannerlie"},"content":"     * Prints the list of tasks as a numbered list.","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"tannerlie"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"tannerlie"},"content":"    public void listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"tannerlie"},"content":"        // Prints the list of tasks","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"tannerlie"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"tannerlie"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"tannerlie"},"content":"            System.out.println(\"There\u0027s no tasks to do! :)\");","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"tannerlie"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"tannerlie"},"content":"            System.out.print(i + \".\");","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"tannerlie"},"content":"            printTask(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"tannerlie"},"content":"            i +\u003d 1;","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"tannerlie"},"content":"     * Prints an individual task in the proper format.","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"tannerlie"},"content":"     * @param task Task to print.","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"tannerlie"},"content":"    public void printTask(Task task) {","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"tannerlie"},"content":"        // Prints specified task","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"[\"","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"tannerlie"},"content":"                + task.getTaskType() + \"]\"","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"tannerlie"},"content":"                + \"[\"","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"tannerlie"},"content":"                + (task.isDone ? \"X\" : \" \")","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"tannerlie"},"content":"                + \"] \"","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"tannerlie"},"content":"                + task.task","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"tannerlie"},"content":"                + (task.getTaskType().equalsIgnoreCase(\"E\") ? \" (from: \" + reformatDate(task.getStart()) + \" \" : \"\")","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"tannerlie"},"content":"                + (task.getTaskType().equalsIgnoreCase(\"E\") ? \"to: \" + reformatDate(task.getEnd()) + \")\" :","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"tannerlie"},"content":"                task.getTaskType().equalsIgnoreCase(\"D\") ? \" (by: \" + reformatDate(task.getEnd()) + \")\" : \"\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"tannerlie"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"tannerlie"},"content":"     * Formats the date keyed by user and prints it in alternative way.","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"tannerlie"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"tannerlie"},"content":"     * @param date Date keyed in by user.","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"tannerlie"},"content":"     * @return Returns the reformatted date.","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"tannerlie"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"tannerlie"},"content":"    public String reformatDate(LocalDateTime date) {","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"tannerlie"},"content":"        // Formats date into different format","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"tannerlie"},"content":"        String dateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"tannerlie"},"content":"        dateTime \u003d date.format(DateTimeFormatter.ofPattern(\"dd MMM yy hh:mma\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"tannerlie"},"content":"        return dateTime;","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"tannerlie"},"content":"    /** Prints the response message after marking/unmarking a task */","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"tannerlie"},"content":"    public void printMarkMessage(Task task) {","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"tannerlie"},"content":"        // Prints response message after marking","lastModifiedDate":"2024-03-03"},{"lineNumber":114,"author":{"gitId":"tannerlie"},"content":"        if (task.isDone) {","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"tannerlie"},"content":"            System.out.println(\"Wow good job at clearing a task! I,ve marked this task as done:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"tannerlie"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"tannerlie"},"content":"            System.out.println(\"More to do? I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"tannerlie"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"tannerlie"},"content":"        printTask(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"tannerlie"},"content":"    /** Prints the response message after creating a task */","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"tannerlie"},"content":"    public void printCreateTaskMessage(Task task, int size) {","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"tannerlie"},"content":"        // Prints response message after creating a task","lastModifiedDate":"2024-03-03"},{"lineNumber":125,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"More tasks to do! I\u0027ve added:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"tannerlie"},"content":"        printTask(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"Get to working, you now have \" + size + \" tasks in the list!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"tannerlie"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"tannerlie"},"content":"    /** Prints the response message after deleting a task */","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"tannerlie"},"content":"    public void printDeleteMessage(Task task, int index, int size) {","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"tannerlie"},"content":"        // Prints response message after deleting a task","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"Deleted task \" + index + \" from the list.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"tannerlie"},"content":"        printTask(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"tannerlie"},"content":"        System.out.println(\"You now have \" + size + \" tasks to complete.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"tannerlie":137}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"/** Exception if the initial command is unknown */","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"public class UnknownCommandException extends Exception{","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"        super(message);","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"tannerlie":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tannerlie"},"content":"commands","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"tannerlie"},"content":"to","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tannerlie"},"content":"todo","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tannerlie"},"content":"todo read book","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tannerlie"},"content":"deadline","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tannerlie"},"content":"deadline      /by 2024-06-06T13:00","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"tannerlie"},"content":"deadline assignment","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tannerlie"},"content":"deadline assignment /hgu","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tannerlie"},"content":"deadline assignment /by","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tannerlie"},"content":"deadline assignment /by 2024-06-06T13:0","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"tannerlie"},"content":"deadline assignment /by 2024-06-06T13:00","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"tannerlie"},"content":"event","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tannerlie"},"content":"event birthday party","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tannerlie"},"content":"event birthday party /fff /bee","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tannerlie"},"content":"event birthday party /from /to","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tannerlie"},"content":"event birthday party /from 2024-12-07T18:00 /to","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"tannerlie"},"content":"event birthday party /to 2024-12-07T22:00 /from 2024-12-07T18:00","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"tannerlie"},"content":"event birthday party /from 2024-12-0718:00 /to 2024-12-07T22:00","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"tannerlie"},"content":"event birthday party /from 2024-12-07T18:00/to 2024-12-07T2200","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"tannerlie"},"content":"event birthday party /from 2024-12-07T18:00/to 2024-12-07T22:00","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"tannerlie"},"content":"event birthday party /from2024-12-07T18:00 /to2024-12-07T22:00","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"tannerlie"},"content":"event birthday party /from2024-12-07T18:00/to2024-12-07T22:00","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"event birthday party /from 2024-12-07T18:00 /to 2024-12-07T22:00","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"tannerlie"},"content":"list","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"tannerlie"},"content":"mark","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"mark number one","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"tannerlie"},"content":"mark 1","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tannerlie"},"content":"mark 2","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tannerlie"},"content":"mark 1","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"tannerlie"},"content":"mark %%%%","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"tannerlie"},"content":"mark 100","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"tannerlie"},"content":"unmark","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tannerlie"},"content":"unmark number one","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"tannerlie"},"content":"unmark 1","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"tannerlie"},"content":"unmark 1","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tannerlie"},"content":"unmark 1.05","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"tannerlie"},"content":"unmark 100","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"tannerlie"},"content":"delete","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tannerlie"},"content":"delete the task","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tannerlie"},"content":"delete 10","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tannerlie"},"content":"delete 1/0","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"tannerlie"},"content":"delete 1.0","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"tannerlie"},"content":"delete 1","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tannerlie"},"content":"list","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tannerlie"},"content":"find","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"tannerlie"},"content":"find /time","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"tannerlie"},"content":"find /date","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"tannerlie"},"content":"find /date random","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"tannerlie"},"content":"find /date 2024-06-06","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"tannerlie"},"content":"find /date 2025-06-06","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"tannerlie"},"content":"find /date2024-06-06","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"tannerlie"},"content":"find /date 2025-06-06T11:00","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"tannerlie"},"content":"find","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"tannerlie"},"content":"find /jfj","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"tannerlie"},"content":"find /title","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"tannerlie"},"content":"find /title ijefi","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"tannerlie"},"content":"find /title party","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"tannerlie"},"content":"find /title PArTY","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"tannerlie"},"content":"find /titleparty","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"tannerlie"},"content":"bye","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"tannerlie":60}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tannerlie"},"content":"java -classpath ../bin Krot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"tannerlie"},"content":"cmp ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tannerlie":2,"-":32}}]
