[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"    protected String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"        return \"D|\" + (isDone ? 1 : 0) + \"|\" + description + \"|\" + by;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"    public static Task fromFileString(String line) {","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"        String[] items \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"        Deadline deadline \u003d new Deadline(items[2], items[3]);","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"        if(items[1].equals(\"1\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"            deadline.setIsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"        return deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Haotian199":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"     * Adds a task to the task list based on the input line.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"     * This method determines the type of task (event, deadline, or todo) by parsing the input line,","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"     * creates the task, and then adds it to the task list. It handles missing parameters by catching","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"     * {@code MissingParameterException} and printing an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"     * After successfully adding the task, it prints a confirmation along with the task\u0027s details","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"     * and the total number of tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"     * @param line The input line containing the task description and any required parameters.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"    public static void addTask(String line) {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"        Task task;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"            if(Parser.getCommand(line).equals(\"event\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"                task \u003d Parser.getEvent(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"            } else if(Parser.getCommand(line).equals(\"deadline\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"                task \u003d Parser.getDeadline(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"            } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"                task \u003d Parser.getTodo(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"        } catch(MissingParameterException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"            return;","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"        TaskList.addTask(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"        ui.printNumTasks(TaskList.getSize());","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"     * Validates the given description for errors.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"     * This method checks for invalid commands or empty descriptions and prints an error message if any issues are found.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"     * @param description The task description to validate.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"    public static void validate(String description) {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"            checkForError(description);","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Haotian199"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"Haotian199"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Haotian199"},"content":"     * Checks the given description for any errors that would make it invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Haotian199"},"content":"     * This method throws a {@code DukeException} if the description is either an invalid command or empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Haotian199"},"content":"     * @param description The task description to check.","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Haotian199"},"content":"     * @throws DukeException If the description is invalid due to being an unrecognized command or empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Haotian199"},"content":"    private static void checkForError(String description) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"Haotian199"},"content":"        if(Parser.isInvalidCommand(description)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Haotian199"},"content":"            throw new DukeException(\"Hey, the description is invalid!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"Haotian199"},"content":"        if(Parser.stringIsEmpty(description)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Haotian199"},"content":"            throw new DukeException(\"Hey, the description is invalid!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"Haotian199"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Haotian199"},"content":"        ui.printLogo();","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Haotian199"},"content":"        ui.sayHello();","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Haotian199"},"content":"        String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Haotian199"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Haotian199"},"content":"        while(true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Haotian199"},"content":"            try {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Haotian199"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Haotian199"},"content":"                if (line.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Haotian199"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Haotian199"},"content":"                validate(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"Haotian199"},"content":"                if (Parser.getCommand(line).equals(\"list\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Haotian199"},"content":"                    ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Haotian199"},"content":"                    TaskList.printList();","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Haotian199"},"content":"                    ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Haotian199"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Haotian199"},"content":"                if (Parser.getCommand(line).equals(\"mark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Haotian199"},"content":"                    int indexToMark \u003d Parser.getTaskIndex(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Haotian199"},"content":"                    if (TaskList.isWithinBounds(TaskList.getSize(), indexToMark) \u0026\u0026 indexToMark \u003e\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Haotian199"},"content":"                        Task taskToMark \u003d TaskList.getTask(indexToMark);","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Haotian199"},"content":"                        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Haotian199"},"content":"                        taskToMark.setIsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Haotian199"},"content":"                        Storage.save(TaskList.tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Haotian199"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Haotian199"},"content":"                        System.out.println(taskToMark);","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"Haotian199"},"content":"                        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Haotian199"},"content":"                    }","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"Haotian199"},"content":"                    continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"Haotian199"},"content":"                if (Parser.getCommand(line).equals(\"unmark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Haotian199"},"content":"                    int indexToUnmark \u003d Parser.getTaskIndex(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Haotian199"},"content":"                    if (TaskList.isWithinBounds(TaskList.getSize(), indexToUnmark) \u0026\u0026 indexToUnmark \u003e\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Haotian199"},"content":"                        Task taskToUnmark \u003d TaskList.getTask(indexToUnmark);","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Haotian199"},"content":"                        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Haotian199"},"content":"                        taskToUnmark.setIsNotDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Haotian199"},"content":"                        Storage.save(TaskList.tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Haotian199"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"Haotian199"},"content":"                        System.out.println(taskToUnmark);","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Haotian199"},"content":"                        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Haotian199"},"content":"                    }","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"Haotian199"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Haotian199"},"content":"                if (Parser.getCommand(line).equals(\"delete\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Haotian199"},"content":"                    int indexToDelete \u003d Parser.getTaskIndex(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Haotian199"},"content":"                    if (TaskList.isWithinBounds(TaskList.getSize(), indexToDelete) \u0026\u0026 indexToDelete \u003e\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Haotian199"},"content":"                        Task taskToDelete \u003d TaskList.getTask(indexToDelete);","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Haotian199"},"content":"                        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Haotian199"},"content":"                        TaskList.deleteTask(indexToDelete);","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Haotian199"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"Haotian199"},"content":"                        System.out.println(taskToDelete);","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"Haotian199"},"content":"                        ui.printNumTasks(TaskList.getSize());","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Haotian199"},"content":"                        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Haotian199"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"Haotian199"},"content":"                    continue;","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Haotian199"},"content":"                if (Parser.getCommand(line).equals(\"find\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"Haotian199"},"content":"                    String stringToFind \u003d Parser.getStringToFind(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"Haotian199"},"content":"                    TaskList.searchTasks(stringToFind);","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Haotian199"},"content":"                if (Parser.isTask(line)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"Haotian199"},"content":"                    addTask(line);","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"Haotian199"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Haotian199"},"content":"            } catch(DukeException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"Haotian199"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Haotian199"},"content":"        ui.sayBye();","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Haotian199":138,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"        super(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Haotian199":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"    protected String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"    protected String to;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"     * Converts the Event object into a string representation suitable for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"     * The format of the string is \"E|isDone|description|from|to\", where:","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"     * - \"E\" indicates the type of task (Event),","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"     * - \"isDone\" is 1 if the event is marked as done, and 0 otherwise,","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"     * - \"description\" is the event\u0027s description,","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"     * - \"from\" is the start date/time of the event,","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"     * - \"to\" is the end date/time of the event.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"        return \"E|\" + (isDone ? 1 : 0) + \"|\" + description + \"|\" + from + \"|\" + to;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"     * Creates an Event object from a string representation that was stored in a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"     * The expected format of the string is \"E|isDone|description|from|to\", where each part is separated by a \"|\".","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"     * The method parses the string, creates a new Event object with the specified details, and marks it as done if applicable.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"     * @param line The string representation of an Event, read from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"     * @return An Event object with properties set according to the parsed string.","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"    public static Task fromFileString(String line) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"        String[] items \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"        Event event \u003d new Event(items[2], items[3], items[4]);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"        if(items[1].equals(\"1\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"            event.setIsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"        return event;","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Haotian199":49}},{"path":"src/main/java/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class MissingParameterException extends Exception {","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"    public MissingParameterException(String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"        super(\"Hey, the description of \" + message + \" is missing\");","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"Haotian199":6}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"     * Extracts and returns the first word from the input line as the command.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"     * @param line The input string from which the command is extracted.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"     * @return The first word of the input string, interpreted as the command.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"    public static String getCommand(String line) { //get the command at the start of input","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"        return line.split(\" \")[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"     * Checks if the input string is empty or contains only whitespace characters.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"     * @param line The string to be checked.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"     * @return true if the string is empty or contains only whitespace, false otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"    public static boolean stringIsEmpty(String line) {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"        return line.trim().isEmpty();","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"     * Determines if the provided description contains an invalid command.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"     * @param description The command description to be evaluated.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"     * @return true if the command is not one of the recognized commands, false otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"    public static boolean isInvalidCommand(String description) { //check for invalid commands to throw exception in main","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"        return !description.contains(\"list\") \u0026\u0026 !description.contains(\"event\") \u0026\u0026 !description.contains(\"deadline\")","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"                \u0026\u0026 !description.contains(\"todo\") \u0026\u0026 !description.contains(\"mark\")","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"                \u0026\u0026 !description.contains(\"delete\") \u0026\u0026 !description.contains(\"find\");","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"     * Extracts the task index from the end of the description and adjusts it to a zero-based index.","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"     * @param description The command description from which to extract the task index.","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"     * @return The zero-based index of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"     * @throws DukeException If the description does not end with a number or the number is less than 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"    public static int getTaskIndex(String description) throws DukeException {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"        String indexToMark \u003d description.substring(description.lastIndexOf(\" \") + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"            Integer.parseInt(indexToMark);","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"        catch (NumberFormatException n) {","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Haotian199"},"content":"            throw new DukeException(\"Hey, the description is empty!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Haotian199"},"content":"        int taskIndex \u003d Integer.parseInt(indexToMark) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Haotian199"},"content":"        if(taskIndex \u003c 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Haotian199"},"content":"            throw new DukeException(\"Hey, the index is out of bounds!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Haotian199"},"content":"        return taskIndex;","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Haotian199"},"content":"     * Checks if the description starts with a task command (todo, event, or deadline).","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Haotian199"},"content":"     * @param description The command description to be evaluated.","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Haotian199"},"content":"     * @return true if the description starts with a task command, false otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Haotian199"},"content":"    public static boolean isTask(String description) {","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Haotian199"},"content":"        return description.startsWith(\"todo\") || description.startsWith(\"event\") || description.startsWith(\"deadline\");","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Haotian199"},"content":"     * Creates a Todo task from the given line.","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Haotian199"},"content":"     * @param line The command line input specifying the todo task.","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Haotian199"},"content":"     * @return A new Todo object with the specified name.","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Haotian199"},"content":"     * @throws MissingParameterException If the todo name is missing.","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Haotian199"},"content":"    public static Task getTodo(String line) throws MissingParameterException {","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Haotian199"},"content":"        String todo \u003d line.replace(\"todo\", \"\");","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Haotian199"},"content":"        String todoName \u003d todo.trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Haotian199"},"content":"        if(todoName.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"todo\");","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Haotian199"},"content":"        return new Todo(todoName);","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Haotian199"},"content":"     * Creates an Event task from the given line.","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Haotian199"},"content":"     * @param line The command line input specifying the event task.","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Haotian199"},"content":"     * @return A new Event object with the specified name and timing.","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Haotian199"},"content":"     * @throws MissingParameterException If any of the event parameters are missing.","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Haotian199"},"content":"    public static Task getEvent(String line) throws MissingParameterException {","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Haotian199"},"content":"        String event \u003d line.replace(\"event\", \"\");","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Haotian199"},"content":"        String[] segments \u003d event.split(\"/from\");","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Haotian199"},"content":"        if(segments.length \u003c 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"event\");","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Haotian199"},"content":"        String eventName \u003d segments[0].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Haotian199"},"content":"        if(eventName.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"event\");","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Haotian199"},"content":"        segments \u003d segments[1].split(\"/to\");","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"Haotian199"},"content":"        if(segments.length \u003c 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"event\");","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Haotian199"},"content":"        String from \u003d segments[0].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Haotian199"},"content":"        String to \u003d segments[1].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Haotian199"},"content":"        if(from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"event\");","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"Haotian199"},"content":"        return new Event(eventName, from, to);","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Haotian199"},"content":"     * Creates a Deadline task from the given line.","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Haotian199"},"content":"     * @param line The command line input specifying the deadline task.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"Haotian199"},"content":"     * @return A new Deadline object with the specified name and deadline.","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Haotian199"},"content":"     * @throws MissingParameterException If any of the deadline parameters are missing.","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Haotian199"},"content":"    public static Task getDeadline(String line) throws MissingParameterException {","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Haotian199"},"content":"        String deadline \u003d line.replace(\"deadline\", \"\");","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Haotian199"},"content":"        String[] segments \u003d deadline.split(\"/by\");","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Haotian199"},"content":"        if(segments.length \u003c 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"deadline\");","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Haotian199"},"content":"        String deadlineName \u003d segments[0].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Haotian199"},"content":"        String by \u003d segments[1].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"Haotian199"},"content":"        if(deadlineName.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"Haotian199"},"content":"            throw new MissingParameterException(\"deadline\");","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"Haotian199"},"content":"        return new Deadline(deadlineName, by);","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"Haotian199"},"content":"     * Extracts and returns the string to find from the input line.","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"Haotian199"},"content":"     * @param line The input line containing the find command and the string to find.","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"Haotian199"},"content":"     * @return The string to find.","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"Haotian199"},"content":"    public static String getStringToFind(String line) {","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"Haotian199"},"content":"        return line.split(\" \")[1];","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Haotian199":142}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"import java.io.File;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"        Ui greet \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"        if(!folder.exists()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"            boolean ret \u003d folder.mkdir();","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"            if(!ret) {","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"                return;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"        try(FileWriter fw \u003d new FileWriter(\"./data/duke.txt\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"            for(Task task : tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"                fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"        } catch(IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"            greet.printFormat();","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"task cannot be saved\");","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"            greet.printFormat();","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"        Ui greet \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"        File f \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"        if(!f.exists()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"            return tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"        Scanner s \u003d null;","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"            greet.printFormat();","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"task cannot be saved\");","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"            greet.printFormat();","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"        while (true) {","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"            assert s !\u003d null;","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"            if (!s.hasNext()) break;","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"Haotian199"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"Haotian199"},"content":"            if(line.startsWith(\"T\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Haotian199"},"content":"                tasks.add(Todo.fromFileString(line));","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Haotian199"},"content":"            } else if(line.startsWith(\"D\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Haotian199"},"content":"                tasks.add(Deadline.fromFileString(line));","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Haotian199"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Haotian199"},"content":"                tasks.add(Event.fromFileString(line));","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"Haotian199"},"content":"        return tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"Haotian199":59}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"import java.lang.String;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"     * If the task is marked as done, it returns \"X\"; otherwise, it returns a space.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"     * @return A string \"X\" if the task is done, or a space \" \" if not.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"     * Marks the task as done by setting the {@code isDone} flag to true.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"    public void setIsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"     * Marks the task as not done by setting the {@code isDone} flag to false.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"    public void setIsNotDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"        return null;","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"     * The completion status is represented by an \"X\" for done tasks, and a space for tasks that are not done.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"     * @return A string that combines the task\u0027s completion status and its description.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Haotian199"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Haotian199"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Haotian199":53}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"    static final ArrayList\u003cTask\u003e tasks \u003d Storage.load();","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"     * @param indexToDelete The index of the task to be deleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"     * Note: This method also updates the storage with the current state of the tasks list after deletion.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"    public static void deleteTask(int indexToDelete) {","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"        tasks.remove(indexToDelete);","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"        Storage.save(tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"     * Note: This method also updates the storage with the current state of the tasks list after adding the new task.","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"        Storage.save(tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"    public static int getSize() {","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"        return tasks.size();","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"     * Prints the list of tasks to the console. Each task is prefixed with its index in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"     * Note: If a null task is encountered, the printing terminates early.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"    public static void printList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"        for(Task t:tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"            if(t \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"                return;","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Haotian199"},"content":"            count++;","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Haotian199"},"content":"            System.out.print(count + \".\");","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Haotian199"},"content":"            System.out.println(t);","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Haotian199"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Haotian199"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Haotian199"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Haotian199"},"content":"    public static Task getTask(int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Haotian199"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Haotian199"},"content":"     * Searches for and prints tasks that contain the specified string.","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Haotian199"},"content":"     * @param stringToFind The string to search for within task descriptions.","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Haotian199"},"content":"     * Note: This method prints a formatted list of matching tasks to the console.","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Haotian199"},"content":"    public static void searchTasks(String stringToFind) {","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Haotian199"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Haotian199"},"content":"        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Haotian199"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Haotian199"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Haotian199"},"content":"        for(Task t:tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Haotian199"},"content":"            if(t \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Haotian199"},"content":"                return;","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Haotian199"},"content":"            if(t.toString().contains(stringToFind)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Haotian199"},"content":"                System.out.print(count + \". \");","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Haotian199"},"content":"                System.out.println(t);","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Haotian199"},"content":"                count++;","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Haotian199"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Haotian199"},"content":"        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Haotian199"},"content":"     * Checks if the specified index is within the bounds of the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Haotian199"},"content":"     * @param currentIndex The current index being checked.","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Haotian199"},"content":"     * @param index The index to check against the list size.","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Haotian199"},"content":"     * @return true if the index is within bounds, false otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Haotian199"},"content":"     * Note: This method also prints messages to the console indicating if the index is out of bounds.","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Haotian199"},"content":"    public static boolean isWithinBounds(int currentIndex, int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Haotian199"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Haotian199"},"content":"        if(index \u003c currentIndex \u0026\u0026 currentIndex \u003e\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Haotian199"},"content":"            return true;","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Haotian199"},"content":"        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Haotian199"},"content":"        if(index \u003d\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"Hey, the index is out of bounds!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Haotian199"},"content":"        if(currentIndex \u003d\u003d 0) {","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"Hey, you have no tasks added yet!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Haotian199"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"Hey, you don\u0027t have that many tasks!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Haotian199"},"content":"        ui.printFormat();","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Haotian199"},"content":"        return false;","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Haotian199":115}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"     * Converts the Todo object into a string representation suitable for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"     * The format of the string is \"T|isDone|description\", where:","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"     * - \"T\" indicates the type of task (Todo),","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"     * - \"isDone\" is 1 if the todo is marked as done, and 0 otherwise,","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"     * - \"description\" is the todo\u0027s description.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"     * @return A string representation of the Todo object for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"        return \"T|\" + (isDone ? 1 : 0) + \"|\" + description;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"     * Creates a Todo object from its string representation stored in a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"     * The expected format of the string is \"T|isDone|description\", where each part is separated by \"|\".","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"     * This method parses the string, constructs a new Todo object with the specified description,","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"     * and sets its completion status according to the parsed value.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"     * @param line The string representation of a Todo, read from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"     * @return A Todo object with properties set according to the parsed string.","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"    public static Task fromFileString(String line) {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"        String[] items \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"        Todo todo \u003d new Todo(items[2]);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"        if(items[1].equals(\"1\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"            todo.setIsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"        return todo;","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Haotian199":44}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Haotian199"},"content":"public class Ui {","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Haotian199"},"content":"    public void printLogo() {","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Haotian199"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Haotian199"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Haotian199"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Haotian199"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Haotian199"},"content":"                + \"|____/ \\\\__\\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Haotian199"},"content":"                \"    },_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Haotian199"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Haotian199"},"content":"    public void printFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Haotian199"},"content":"        for(int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Haotian199"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Haotian199"},"content":"        System.out.println();","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Haotian199"},"content":"    public void sayHello() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Haotian199"},"content":"        printFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Haotian199"},"content":"        System.out.println(\"Hello! I\u0027m Atlas\");","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Haotian199"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Haotian199"},"content":"        printFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Haotian199"},"content":"    public void sayBye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Haotian199"},"content":"        printFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"Haotian199"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Haotian199"},"content":"        printFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Haotian199"},"content":"    public void printNumTasks(int numTasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Haotian199"},"content":"        if(numTasks \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"Now you have \" + numTasks + \" task in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Haotian199"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Haotian199"},"content":"            System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Haotian199"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Haotian199"},"content":"    public void printError(String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"Haotian199"},"content":"        printFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"Haotian199"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"Haotian199"},"content":"        printFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"Haotian199"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"Haotian199"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Haotian199"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Haotian199":47}}]
