[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"# Carrot  User Guide","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"Carrot is a **task management application**, designed for use through a **command-line interface (CLI)**","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"    - Add a task","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"        - [todo task: `todo`](#todo---add-a-todo-task)","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"        - [deadline task: `deadline`](#deadline---add-a-deadline-task)","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"        - [event task: `event`](#event---add-an-event-task)","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    - Mark task completion","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"        - [mark completed: `mark`](#mark---mark-a-task-as-completed)","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"        - [mark uncompleted: `unmark`](#unmark---mark-a-task-as-not-completed)","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    - [Delete a task: `delete`](#delete---delete-a-task-item-from-the-list)","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"    - [Locate task by name: `find`](#find---locate-a-recorded-task-by-word)","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"    - [Show all recorded tasks: `list`](#list---shows-all-recorded-task)","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"    - [View command list: `help`](#help---shows-list-of-commands-in-cli)","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    - [Exit program: `exit`](#bye---exits-the-application)","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"- [Saving Data](#saving-data)","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"***","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"## Quick Start","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"1. Ensure you have `java 11` or above installed on your computer","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"2. Download the latest `carrot.jar` from [here](https://github.com/sxfoo/ip/releases)","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"3. Copy the file `carrot.jar` to a new empty folder","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"4. Open a command terminal, `cd` to the path of the folder, and use `java -jar carrot.jar` to run the application","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"5. Type commands into the CLI and press enter to execute them. ","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"   - Some example commands are:","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"        - `todo homework`: Adds a todo task for homework","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"        - `list`: Shows all the recorded task so far","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"        - `bye`: Exits the application","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"6. Refer to [**Command Summary**](#command-summary) for the list of commands available. ","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"7. Alternatively, head to [**Features**](#features) right below for more details on each command.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"\u003e   e.g. in`event DESCRIPTION /FROM /TO`, `DESCRIPTION`, `FROM`, `TO` are the parameters ","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"\u003e required from the user","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"\u003e - Parameters are to be given in a fixed order. ","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"\u003e - Some commands require using the `/` key as a delimitter","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"\u003e ","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"\u003e - To prevent potential formatting issues, avoid using `/` when typing your own parameters.","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"Adds a todo task to the task list. ","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"Todo tasks are tasks which only requires a task description.","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"Example of usage: `todo homework`, `todo fold clothes`","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"Example outcome: ","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"\t[T][ ] homework","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"sxfoo"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"sxfoo"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"sxfoo"},"content":"Adds a deadline task to the task list. ","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"sxfoo"},"content":"Deadline tasks are tasks which requires ","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"sxfoo"},"content":"a task description as well as a deadline time/date (in string format).","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"sxfoo"},"content":"Format: `deadline DESCRIPTION /BY`","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"sxfoo"},"content":"Example of usage: `deadline cook dinner /6pm`, `deadline return book /23 March 2024`","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"sxfoo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"sxfoo"},"content":"\t[D][ ] cook dinner (by: 6pm)","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"sxfoo"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"sxfoo"},"content":"### `event` - Add an event task","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"sxfoo"},"content":"Adds an event task to the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"sxfoo"},"content":"Event tasks are tasks which requires","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"sxfoo"},"content":"a task description, a start and an end date/time (in string format).","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"sxfoo"},"content":"Format: `event DESCRIPTION /FROM /TO`","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"sxfoo"},"content":"Example of usage: `event birthday party /23|03|24 9am /23|03|24 4pm`, `event basketball game /6pm /8pm`","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"sxfoo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"sxfoo"},"content":"\t[E][ ] birthday party (from: 23|03|24 9am || to: 23|03|24 4pm)","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"sxfoo"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"sxfoo"},"content":"### `mark` - Mark a task as completed","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"sxfoo"},"content":"Puts a checkmark on a specified task item to indicate its completed status.","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"sxfoo"},"content":"`TASKINDEX` refers to the position order of the task item in the list. ","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"sxfoo"},"content":"This can be viewed using `list` command","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"sxfoo"},"content":"Format: `mark TASKINDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"sxfoo"},"content":"Example of usage: `mark 1`, `mark 2`","lastModifiedDate":"2024-02-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"sxfoo"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-29"},{"lineNumber":117,"author":{"gitId":"sxfoo"},"content":"\t[T][X] homework","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"sxfoo"},"content":"### `unmark` - Mark a task as not completed","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"sxfoo"},"content":"Puts a checkmark on a specified task item to indicate its uncompleted status.","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"sxfoo"},"content":"`TASKINDEX` refers to the position order of the task item in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"sxfoo"},"content":"This can be viewed using `list` command","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":126,"author":{"gitId":"sxfoo"},"content":"Format: `unmark TASKINDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":127,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":128,"author":{"gitId":"sxfoo"},"content":"Example of usage: `unmark 1`, `unmark 2`","lastModifiedDate":"2024-02-29"},{"lineNumber":129,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":130,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":131,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":132,"author":{"gitId":"sxfoo"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-29"},{"lineNumber":133,"author":{"gitId":"sxfoo"},"content":"\t[T][ ] homework","lastModifiedDate":"2024-02-29"},{"lineNumber":134,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":136,"author":{"gitId":"sxfoo"},"content":"### `delete` - Delete a task item from the list","lastModifiedDate":"2024-02-29"},{"lineNumber":137,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":138,"author":{"gitId":"sxfoo"},"content":"Removes a specified task item from the list of recorded task. ","lastModifiedDate":"2024-02-29"},{"lineNumber":139,"author":{"gitId":"sxfoo"},"content":"`TASKINDEX` refers to the position order of the task item in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":140,"author":{"gitId":"sxfoo"},"content":"This can be viewed using `list` command","lastModifiedDate":"2024-02-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":142,"author":{"gitId":"sxfoo"},"content":"Format: `delete TASKINDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"sxfoo"},"content":"Example of usage: `delete 1`, `delete 2`","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"sxfoo"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"sxfoo"},"content":"\t[T][ ] homework","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"sxfoo"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"sxfoo"},"content":"### `find` - Locate a recorded task by word","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"sxfoo"},"content":"Search and show recorded tasks that contains the specified `WORD`.","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"sxfoo"},"content":"This command searches in all the recorded tasks","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"sxfoo"},"content":"Format: `find WORD`","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"sxfoo"},"content":"Example of usage: `find dinner`, `find book`","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"sxfoo"},"content":"Here are the task(s) that contains \"dinner\" in your list:","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"sxfoo"},"content":"1.[D][ ] cook dinner (by: 6pm)","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"sxfoo"},"content":"### `list` - Shows all recorded task","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"sxfoo"},"content":"Displays all tasks that was recorded by the user.","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"sxfoo"},"content":"Format: `list`","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"sxfoo"},"content":"Example of usage: `list`","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"sxfoo"},"content":"Here are the task(s) in your list:","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"sxfoo"},"content":"1.[D][ ] cook dinner (by: 6pm)","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"sxfoo"},"content":"2.[E][ ] birthday party (from: 23|03|24 9am || to: 23|03|24 4pm)","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"sxfoo"},"content":"### `help` - Shows list of commands in CLI","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"sxfoo"},"content":"Displays the available commands that can be used in the Command Line Interface (CLI).","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"sxfoo"},"content":"Format: `help`","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"sxfoo"},"content":"Example of usage: `help`","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"sxfoo"},"content":"Available Commands:","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"sxfoo"},"content":"1. todo \u003ctaskdescription\u003e - Add a new todo task","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"sxfoo"},"content":"2. deadline \u003ctaskdescription\u003e /\u003cby\u003e - Add a new task with a deadline \u003cby\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"sxfoo"},"content":"3. event \u003ctaskdescription\u003e /\u003cfrom\u003e /\u003cto\u003e - Add a new task that starts \u003cfrom\u003e and ends \u003cto\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"sxfoo"},"content":"4. mark \u003ctaskindex\u003e - Mark a task as done","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"sxfoo"},"content":"5. unmark \u003ctaskindex\u003e - Mark a task as not done","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"sxfoo"},"content":"6. delete \u003ctaskindex\u003e - delete a task from the list","lastModifiedDate":"2024-02-29"},{"lineNumber":200,"author":{"gitId":"sxfoo"},"content":"7. find \u003cword\u003e - search a task from the list that contains \u003cword\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":201,"author":{"gitId":"sxfoo"},"content":"8. list - List all tasks recorded","lastModifiedDate":"2024-02-29"},{"lineNumber":202,"author":{"gitId":"sxfoo"},"content":"9. bye - Exit the program","lastModifiedDate":"2024-02-29"},{"lineNumber":203,"author":{"gitId":"sxfoo"},"content":"10. help - Show available commands","lastModifiedDate":"2024-02-29"},{"lineNumber":204,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":205,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":206,"author":{"gitId":"sxfoo"},"content":"### `bye` - Exits the application","lastModifiedDate":"2024-02-29"},{"lineNumber":207,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":208,"author":{"gitId":"sxfoo"},"content":"Terminates the program","lastModifiedDate":"2024-02-29"},{"lineNumber":209,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":210,"author":{"gitId":"sxfoo"},"content":"Format: `bye`","lastModifiedDate":"2024-02-29"},{"lineNumber":211,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":212,"author":{"gitId":"sxfoo"},"content":"Example of usage: `bye`","lastModifiedDate":"2024-02-29"},{"lineNumber":213,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":214,"author":{"gitId":"sxfoo"},"content":"Example outcome:","lastModifiedDate":"2024-02-29"},{"lineNumber":215,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":216,"author":{"gitId":"sxfoo"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-29"},{"lineNumber":217,"author":{"gitId":"sxfoo"},"content":"```","lastModifiedDate":"2024-02-29"},{"lineNumber":218,"author":{"gitId":"sxfoo"},"content":"***","lastModifiedDate":"2024-02-29"},{"lineNumber":219,"author":{"gitId":"sxfoo"},"content":"## Saving Data","lastModifiedDate":"2024-02-29"},{"lineNumber":220,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":221,"author":{"gitId":"sxfoo"},"content":"Task data are automatically saved to a text file located at","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"sxfoo"},"content":"`data/listOfTasks.txt` (with reference to jar file path)","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":224,"author":{"gitId":"sxfoo"},"content":"In the event where the app is unable to start as the text file data is corrupted, ","lastModifiedDate":"2024-02-29"},{"lineNumber":225,"author":{"gitId":"sxfoo"},"content":"please delete the text file and rerun the program.","lastModifiedDate":"2024-02-29"},{"lineNumber":226,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":227,"author":{"gitId":"sxfoo"},"content":"***","lastModifiedDate":"2024-02-29"},{"lineNumber":228,"author":{"gitId":"sxfoo"},"content":"## Command Summary","lastModifiedDate":"2024-02-29"},{"lineNumber":229,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":230,"author":{"gitId":"sxfoo"},"content":"| Command    | Description                           | Format                        |","lastModifiedDate":"2024-02-29"},{"lineNumber":231,"author":{"gitId":"sxfoo"},"content":"|------------|---------------------------------------|-------------------------------|","lastModifiedDate":"2024-02-29"},{"lineNumber":232,"author":{"gitId":"sxfoo"},"content":"| `todo`     | Adds a todo task to the task list.    | `todo DESCRIPTION`            |","lastModifiedDate":"2024-02-29"},{"lineNumber":233,"author":{"gitId":"sxfoo"},"content":"| `deadline` | Adds a deadline task to the task list | `deadline DESCRIPTION /BY`    |","lastModifiedDate":"2024-02-29"},{"lineNumber":234,"author":{"gitId":"sxfoo"},"content":"| `event`    | Adds an event task to the task list   | `event DESCRIPTION /FROM /TO` |","lastModifiedDate":"2024-02-29"},{"lineNumber":235,"author":{"gitId":"sxfoo"},"content":"| `mark`     | Mark a task as completed              | `mark TASKINDEX`              |","lastModifiedDate":"2024-02-29"},{"lineNumber":236,"author":{"gitId":"sxfoo"},"content":"| `unmark`   | Mark a task as not completed          | `unmark TASKINDEX`            |","lastModifiedDate":"2024-02-29"},{"lineNumber":237,"author":{"gitId":"sxfoo"},"content":"| `delete`   | Delete a task item from the list      | `delete TASKINDEX`            |","lastModifiedDate":"2024-02-29"},{"lineNumber":238,"author":{"gitId":"sxfoo"},"content":"| `find`     | Locate a recorded task by word        | `find WORD`                   |","lastModifiedDate":"2024-02-29"},{"lineNumber":239,"author":{"gitId":"sxfoo"},"content":"| `list`     | Shows all recorded task               | `list`                        |","lastModifiedDate":"2024-02-29"},{"lineNumber":240,"author":{"gitId":"sxfoo"},"content":"| `help`     | Shows list of commands in CLI         | `help`                        |","lastModifiedDate":"2024-02-29"},{"lineNumber":241,"author":{"gitId":"sxfoo"},"content":"| `bye`      | Exits the application                 | `bye`                         |","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"sxfoo":211,"-":30}},{"path":"src/main/java/Carrot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"import carrot.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"public class Carrot {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"     * The entry point of the Carrot (Chatbot) application.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     * This method initializes the application, greets the user, and provides initial instructions.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * It then enters a loop to continuously process user commands until the application is terminated.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * @param args the command-line arguments (not used in this application)","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        Ui.greetUser();","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"        Ui.printHelpCommand();","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"        while (true) {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"            try {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"                String userInput \u003d Ui.readUserInput();","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"                Command command \u003d Parser.getCommandType(userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"                command.execute(userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"                Ui.printScannerInputError();","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"                Ui.getScanner().close();","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sxfoo":33,"-":2}},{"path":"src/main/java/CarrotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"public class CarrotException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"    public CarrotException(String errorMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"sxfoo":5}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":" * Represents an abstract command.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":" * This is the superclass for other command types such as Todo, List, Delete, Exit Commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"     * Executes the command based on the provided user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the command and any arguments","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    public abstract void execute(String userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":15}},{"path":"src/main/java/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"public enum CommandType {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"    MARK,","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"    UNMARK,","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"    DELETE,","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"    LIST,","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"    TODO,","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"    FIND,","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    EVENT,","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"    HELP,","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"    EXIT,","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    INVALID","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sxfoo":15}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" * Represents a command to add a new deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * Executes the deadline command, adding a new deadline task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the deadline command, description of task and deadline date","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"        String[] commandArguments \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(CommandType.DEADLINE, userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"        Task task \u003d new Deadline(commandArguments[0], commandArguments[1]);","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"        TaskList.addTask(task);","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":27}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     * Executes the delete command, removing a task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * If an invalid task index is provided or an error occurs during deletion,","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * an error message is printed.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the delete command and task index","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"        String taskIndex \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(carrot.command.CommandType.DELETE, userInput)[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"        int taskIndexInt \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"                Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"            TaskList.deleteTask(taskIndexInt);","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"            Ui.printInvalidTaskIndexError();","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":34}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" * Represents a command to add a new event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * Executes the event command, adding a new event task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the event command, task description, from date and to date.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"        String[] commandArguments \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(CommandType.EVENT, userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"        Task task \u003d new Event(commandArguments[0], commandArguments[1], commandArguments[2]);","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"        TaskList.addTask(task);","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":27}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"     * Executes the exit command, closing the scanner, printing a goodbye message,","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     * and terminating the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string (not used in this command)","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        Ui.getScanner().close();","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"        Ui.sayGoodbye();","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":23}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"        String[] commandArguments \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(CommandType.FIND, userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"        String wordToCheck \u003d commandArguments[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d TaskList.getTaskList();","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        Ui.printFindTaskOutput(listOfTasks, wordToCheck);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":21}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" * Represents a command to display help information.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     * Executes the help command, printing the available commands and their syntax.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string (not used in this command)","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        Ui.printHelpCommand();","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":21}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" * Represents a command to handle invalid user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     * Executes the invalid command, printing an error message for invalid user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the invalid user input string (not used in this command)","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        Ui.printInvalidCommand();","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":21}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * Executes the list command, printing all tasks in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string (not used in this command)","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"        ArrayList\u003cTask\u003e taskList \u003d TaskList.getTaskList();","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"        Ui.printListItems(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":26}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * Executes the mark command, marking the specified task as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * If an invalid task index is provided or an error occurs during status change,","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     * an error message is printed.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the mark command and task index","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"        String taskIndex \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(CommandType.MARK, userInput)[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"        int taskIndexInt \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"                Integer.parseInt(taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"            TaskList.changeTaskStatus(true, taskIndexInt);","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"            Ui.printInvalidTaskIndexError();","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":35}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Todo;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" * Represents a command to add a new todo task.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * Executes the todo command, adding a new todo task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the todo command and the task description","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"        String[] commandArguments \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(CommandType.TODO, userInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"        Task task \u003d new Todo(commandArguments[0]);","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"        TaskList.addTask(task);","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":27}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":" * Extends the {@link Command} abstract class.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * Executes the unmark command, marking the specified task as not done.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * If an invalid task index is provided or an error occurs during status change,","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     * an error message is printed.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string containing the unmark command and task index","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"    public void execute(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"        String taskIndex \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"                Parser.getCommandArguments(CommandType.UNMARK, userInput)[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"        int taskIndexInt \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"                Integer.parseInt(taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"            TaskList.changeTaskStatus(false, taskIndexInt);","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"            Ui.printInvalidTaskIndexError();","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":35}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Todo;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"import carrot.command.CommandType;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"import carrot.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"import carrot.command.HelpCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"import carrot.command.TodoCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"import carrot.command.DeadlineCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"import carrot.command.FindCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"import carrot.command.EventCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"import carrot.command.MarkCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"import carrot.command.UnmarkCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"import carrot.command.ListCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"import carrot.command.DeleteCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"import carrot.command.ExitCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"import carrot.command.InvalidCommand;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"import java.util.Map;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":" * Parses user input from input scanner and text file storage,","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":" * and provides methods to extract command types and command arguments","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"public class Parser {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"    // Regular expressions for parsing user commands from Scanner input","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern MARK_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"mark (?\u003ctaskIndex\u003e\\\\d+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern UNMARK_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"unmark (?\u003ctaskIndex\u003e\\\\d+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern DELETE_PATTERN \u003d","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"delete (?\u003ctaskIndex\u003e\\\\d+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern LIST_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"list\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern TODO_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"todo (?\u003ctaskDescription\u003e.+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern FIND_PATTERN \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"find (?\u003ctaskDescription\u003e.+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern DEADLINE_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"deadline (?\u003ctaskDescription\u003e.+) /(?\u003cby\u003e.+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern EVENT_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"event (?\u003ctaskDescription\u003e.+) /(?\u003cfrom\u003e.+) /(?\u003cto\u003e.+)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern HELP_PATTERN \u003d","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"help\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern EXIT_PATTERN \u003d","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"bye\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"    // Regular expressions for parsing task data from text file storage lines","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern TODO_DATA_PATTERN \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"T \\\\| (?\u003cisDone\u003etrue|false) \\\\| \\\"(?\u003cdescription\u003e.+?)\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern DEADLINE_DATA_PATTERN \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"D \\\\| (?\u003cisDone\u003etrue|false) \\\\| \\\"(?\u003cdescription\u003e.+?)\\\" \\\\| \\\"(?\u003cby\u003e.+?)\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"    private static final Pattern EVENT_DATA_PATTERN \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"            Pattern.compile(\"E \\\\| (?\u003cisDone\u003etrue|false) \\\\| \\\"(?\u003cdescription\u003e.+?)\\\" \\\\| \" +","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"                    \"\\\"(?\u003cfrom\u003e.+?)\\\" \\\\| \\\"(?\u003cto\u003e.+?)\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"    // Maps command types to corresponding regular expressions and command objects","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"    private static Map\u003cCommandType, Pattern\u003e commandPatternMap \u003d initCommandPatternMap();","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"sxfoo"},"content":"    private static Map\u003cCommandType, Command\u003e commandClassMap \u003d initCommandClassMap();","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"sxfoo"},"content":"    private static Map\u003cCommandType, String[]\u003e commandGroupMap \u003d initCommandGroupMap();","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"sxfoo"},"content":"    private static Map\u003cCommandType, Pattern\u003e initCommandPatternMap() {","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"sxfoo"},"content":"        Map\u003cCommandType, Pattern\u003e commandPatternMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.EXIT, EXIT_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.HELP, HELP_PATTERN);","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.MARK, MARK_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.UNMARK, UNMARK_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.DELETE, DELETE_PATTERN);","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.LIST, LIST_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.TODO, TODO_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.FIND, FIND_PATTERN);","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.DEADLINE, DEADLINE_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"sxfoo"},"content":"        commandPatternMap.put(CommandType.EVENT, EVENT_PATTERN);","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"sxfoo"},"content":"        return commandPatternMap;","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"sxfoo"},"content":"    private static Map\u003cCommandType, Command\u003e initCommandClassMap() {","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"sxfoo"},"content":"        Map\u003cCommandType, Command\u003e commandClassMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.HELP, new HelpCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.LIST, new ListCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.TODO, new TodoCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.DEADLINE, new DeadlineCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.EVENT, new EventCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.DELETE, new DeleteCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.MARK, new MarkCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.UNMARK, new UnmarkCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.FIND, new FindCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.EXIT, new ExitCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"sxfoo"},"content":"        commandClassMap.put(CommandType.INVALID, new InvalidCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"sxfoo"},"content":"        return commandClassMap;","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"sxfoo"},"content":"    private static Map\u003cCommandType, String[]\u003e initCommandGroupMap() {","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"sxfoo"},"content":"        Map\u003cCommandType, String[]\u003e commandGroupMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.MARK, new String[]{\"taskIndex\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.UNMARK, new String[]{\"taskIndex\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.DELETE, new String[]{\"taskIndex\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.TODO, new String[]{\"taskDescription\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.FIND, new String[]{\"taskDescription\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.DEADLINE, new String[]{\"taskDescription\", \"by\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"sxfoo"},"content":"        commandGroupMap.put(CommandType.EVENT, new String[]{\"taskDescription\", \"from\", \"to\"});","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"sxfoo"},"content":"        return commandGroupMap;","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"sxfoo"},"content":"     * Parses the user input and returns the corresponding Command class.","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"sxfoo"},"content":"     * @return an instance of the command class corresponding to the user input","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":125,"author":{"gitId":"sxfoo"},"content":"    public static Command getCommandType(String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"sxfoo"},"content":"        for (Map.Entry\u003cCommandType, Pattern\u003e entry : commandPatternMap.entrySet()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"sxfoo"},"content":"            // Retrieve the Pattern associated with the command in the entry","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"sxfoo"},"content":"            Pattern commandPattern \u003d entry.getValue();","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"sxfoo"},"content":"            // Create a Matcher object using the current Pattern and the user input","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"sxfoo"},"content":"            Matcher matcher \u003d commandPattern.matcher(userInput);","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"sxfoo"},"content":"            // Check if the entire input sequence matches the pattern","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"sxfoo"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"sxfoo"},"content":"                // If there is a match, return the corresponding Command","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"sxfoo"},"content":"                CommandType commandtype \u003d entry.getKey();","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"sxfoo"},"content":"                Command command \u003d commandClassMap.getOrDefault(commandtype, new InvalidCommand());","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"sxfoo"},"content":"                return command;","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"sxfoo"},"content":"        return new InvalidCommand();","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"sxfoo"},"content":"     * Parses the command arguments from the user input based on the command type.","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"sxfoo"},"content":"     * @param command   the command type in enum format","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"sxfoo"},"content":"     * @param userInput the user input string","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"sxfoo"},"content":"     * @return an array of command arguments that corresponds to the command","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"sxfoo"},"content":"    public static String[] getCommandArguments(CommandType command, String userInput) {","lastModifiedDate":"2024-02-28"},{"lineNumber":153,"author":{"gitId":"sxfoo"},"content":"        Matcher matcher \u003d commandPatternMap.get(command).matcher(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"sxfoo"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"sxfoo"},"content":"            return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"sxfoo"},"content":"        String[] groupNames \u003d commandGroupMap.get(command);","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"sxfoo"},"content":"        String[] arguments \u003d new String[groupNames.length];","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"sxfoo"},"content":"        for (int i \u003d 0; i \u003c groupNames.length; i++) {","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"sxfoo"},"content":"            arguments[i] \u003d matcher.group(groupNames[i]);","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"sxfoo"},"content":"        return arguments;","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"sxfoo"},"content":"     * Parses a task from the storage text file line.","lastModifiedDate":"2024-02-28"},{"lineNumber":170,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":171,"author":{"gitId":"sxfoo"},"content":"     * @param line the text file line representing a task","lastModifiedDate":"2024-02-28"},{"lineNumber":172,"author":{"gitId":"sxfoo"},"content":"     * @return the parsed task object","lastModifiedDate":"2024-02-28"},{"lineNumber":173,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":174,"author":{"gitId":"sxfoo"},"content":"    public static Task parseTaskFromTextFileLine(String line) {","lastModifiedDate":"2024-02-28"},{"lineNumber":175,"author":{"gitId":"sxfoo"},"content":"        Pattern[] dataPatterns \u003d {TODO_DATA_PATTERN, DEADLINE_DATA_PATTERN, EVENT_DATA_PATTERN};","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"sxfoo"},"content":"        for (int i \u003d 0; i \u003c dataPatterns.length; i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"sxfoo"},"content":"            Pattern pattern \u003d dataPatterns[i];","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"sxfoo"},"content":"            Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"sxfoo"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"sxfoo"},"content":"                boolean isDone \u003d Boolean.parseBoolean(matcher.group(\"isDone\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"sxfoo"},"content":"                String description \u003d matcher.group(\"description\");","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"sxfoo"},"content":"                switch (i) {","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"sxfoo"},"content":"                case 0: // Index of TODO_DATA_PATTERN","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"sxfoo"},"content":"                    return new Todo(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"sxfoo"},"content":"                case 1: // Index of DEADLINE_DATA_PATTERN","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"sxfoo"},"content":"                    String by \u003d matcher.group(\"by\");","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"sxfoo"},"content":"                    return new Deadline(description, by, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"sxfoo"},"content":"                case 2: // Index of EVENT_DATA_PATTERN","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"sxfoo"},"content":"                    String from \u003d matcher.group(\"from\");","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"sxfoo"},"content":"                    String to \u003d matcher.group(\"to\");","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"sxfoo"},"content":"                    return new Event(description, from, to, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"sxfoo"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"sxfoo"},"content":"                break;","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"sxfoo"},"content":"        return null;","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sxfoo":201}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import java.io.File;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":" * Provides methods to handle loading and saving tasks to storage.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"public class Storage {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    private static String textFilePath \u003d \"data/listOfTasks.txt\";","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"    private static String directoryPath \u003d \"data\";","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"     * Loads the list of tasks from the text file storage.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"     * @return the list of tasks loaded from storage in ArrayList format","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"    public static ArrayList\u003cTask\u003e loadListOfTasks() {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"        File textFile \u003d new File(textFilePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"            if (!textFile.exists()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"                textFile.createNewFile();","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"            Scanner s \u003d new Scanner(textFile);","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"                Task task \u003d Parser.parseTaskFromTextFileLine(line);","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"Unable to load from storage.Storage: \" + e.getMessage());","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"        return listOfTasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"     * Writes all tasks from ArrayList to text file storage.","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"     * @param listOfTasks the list of tasks to be written to storage","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"    public static void writeAllTasksToStorage(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(textFilePath));","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"            for (Task task : listOfTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"                bw.write(task.toFileFormat());","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"sxfoo"},"content":"            bw.close();","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"sxfoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"Unable to save task.Task Data: \" + e.getMessage());","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"sxfoo":73}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.task;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":" * Represents a deadline task, a type of task that requires a description and a specific due date.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":" * A deadline task inherits properties and behaviors from the {@link Task} class.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"    protected String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     * Constructs a deadline task with the specified description and due date.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * @param by          the due date of the deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"     * Constructs a deadline task with the specified description, due date, and completion status.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"     * @param by          the due date of the deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"     * @param isDone      the completion status of the deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"     * The string includes the task type indicator \"[D]\" followed by the status icon,","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"     * description, and due date of the deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"     * Returns the deadline task in a format suitable for storing in a file.","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"     * The deadline task is formatted with the task type indicator \"D\" followed by the format of the parent task","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"     * and the due date.","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"     * Any double quotes in the due date are escaped to prevent interference with the file format.","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"     * @return the deadline task in file format","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"        // Escape characters: usertyped \" would not interfere with file format","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"        String escapedBy \u003d by.replace(\"\\\"\", \"\\\\\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"        return \"D\" + super.toFileFormat() + \" | \\\"\" + by + \"\\\"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sxfoo":65}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.task;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":" * Represents an event task, a type of task requires a description, a specific start and end time.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":" * An event task inherits properties and behaviors from the {@link Task} class.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"    protected String from;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    protected String to;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     * Constructs an event task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the event task","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     * @param from        the start time of the event","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"     * @param to          the end time of the event","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"     * Constructs an event task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the event task","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"     * @param from        the start time of the event","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"     * @param to          the end time of the event","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"     * @param isDone      the completion status of the event task","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"     * The string includes the task type indicator \"[E]\" followed by the status icon,","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"     * description, start time, and end time of the event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"     * @return a string representation of the event task","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" || to: \" + to + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"     * Returns the event task in a format suitable for storing in a file.","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"     * The event task is formatted with the task type indicator \"E\" followed by the format of the parent task,","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"     * start time, and end time.","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"     * Any double quotes in the start time and end time are escaped to prevent interference","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"     * with the file format.","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"     * @return the event task in file format","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"        // Escape characters: usertyped \" would not interfere with file format","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"sxfoo"},"content":"        String escapedFrom \u003d from.replace(\"\\\"\", \"\\\\\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"sxfoo"},"content":"        String escapedTo \u003d to.replace(\"\\\"\", \"\\\\\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"sxfoo"},"content":"        return \"E\" + super.toFileFormat() + \" | \\\"\" + escapedFrom + \"\\\" | \\\"\" + escapedTo + \"\\\"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sxfoo":72}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.task;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":" * This is a the base superclass for other task formats, such as Todo,Event,Deadline","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":" * Each task has a description indicating the task\u0027s details and a completion status","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" * indicating whether the task has been marked as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"     * Constructs a task with the specified description and completion status.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"     * @param isDone      the completion status of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"     * The status icon is \"X\" if the task is marked as done, otherwise it is a space (blank).","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"     * @return the status icon of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"     * @param mark the completion status to set for the task","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"    public void setStatus(boolean mark) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"        isDone \u003d mark;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"     * The String format is [\"statusIcon\"] \"description\"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"     * Returns the task in a format suitable for storing in a file.","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"sxfoo"},"content":"     * The task is formatted with the completion status and the description enclosed in double quotes.","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"sxfoo"},"content":"     * Any double quotes in the description are escaped to prevent interference with the file format.","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"sxfoo"},"content":"     * @return the task in file format","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"sxfoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"sxfoo"},"content":"        // Escape characters: usertyped \" would not interfere with file format","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"sxfoo"},"content":"        String escapedDescription \u003d description.replace(\"\\\"\", \"\\\\\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"sxfoo"},"content":"        return \" | \" + isDone + \" | \\\"\" + description + \"\\\"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"sxfoo":79}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.task;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.storage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"import carrot.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":" * Represents a collection of tasks and provides methods to manipulate the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"public class TaskList {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"    private static ArrayList\u003cTask\u003e listOfTasks \u003d Storage.loadListOfTasks();;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"        Storage.writeAllTasksToStorage(listOfTasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"        Ui.printAddedTask(task, listOfTasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"    public static void deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"            Task taskToRemove \u003d listOfTasks.get(taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"            listOfTasks.remove(taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"            Storage.writeAllTasksToStorage(listOfTasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"            Ui.printDeletedTask(taskToRemove, listOfTasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"            Ui.printInvalidTaskIndexError();","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"     * Changes the completion status of a task in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"     * @param isDone    the new completion status of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"     * @param taskIndex the index of the task whose status is to be changed","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"    public static void changeTaskStatus(boolean isDone, int taskIndex) {","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"        // listOfTasks is indexed from 0.","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"        // taskIndex is indexed from 1, as how the user sees the list is ordered","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"        Task task \u003d listOfTasks.get(taskIndex - 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"        task.setStatus(isDone);","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"        Storage.writeAllTasksToStorage(listOfTasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"        Ui.printChangedTaskStatus(isDone, task);","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"     * @return the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"        return listOfTasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":66}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.task;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":" * Represents a todo task, a type of task that requires only a description","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":" * A todo task inherits properties and behaviors from the {@link Task} class.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"     * Constructs a todo task with the specified description.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"     * Constructs a todo task with the specified description and completion status.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"     * @param isDone      the completion status of the todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"     * The string includes the task type indicator \"[T]\" followed by the status icon and description of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"     * @return a string representation of the todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"     * Returns the todo task in a format suitable for storing in a file.","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"     * The todo task is formatted with the task type indicator \"T\" and then follows the format of the parent task.","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"     * @return the todo task in file format","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"        return \"T\" + super.toFileFormat();","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"sxfoo":52}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sxfoo"},"content":"package carrot.ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"sxfoo"},"content":"import carrot.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"sxfoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"sxfoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"sxfoo"},"content":"public class Ui {","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"sxfoo"},"content":"    private static final String logo \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"sxfoo"},"content":"            \"   _____                     _   \\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"sxfoo"},"content":"            \"  / ____|                   | |  \\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"sxfoo"},"content":"            \" | |     __ _ _ __ _ __ ___ | |_ \\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"sxfoo"},"content":"            \" | |    / _` | \u0027__| \u0027__/ _ \\\\| __|\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"sxfoo"},"content":"            \" | |___| (_| | |  | | | (_) | |_ \\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"sxfoo"},"content":"            \"  \\\\_____\\\\__,_|_|  |_|  \\\\___/ \\\\__|\\n\";","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"sxfoo"},"content":"    private static final String MESSAGE_DIVIDER \u003d \"-------------------------------------\";","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"sxfoo"},"content":"    private static final String COMMAND_LIST \u003d","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"sxfoo"},"content":"            \"Available Commands:\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"sxfoo"},"content":"                    \"1. todo \u003ctaskdescription\u003e - Add a new todo task\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"sxfoo"},"content":"                    \"2. deadline \u003ctaskdescription\u003e /\u003cby\u003e - Add a new task with a deadline \u003cby\u003e\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"sxfoo"},"content":"                    \"3. event \u003ctaskdescription\u003e /\u003cfrom\u003e /\u003cto\u003e - Add a new task that starts \u003cfrom\u003e and ends \u003cto\u003e\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"sxfoo"},"content":"                    \"4. mark \u003ctaskindex\u003e - Mark a task as done\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"sxfoo"},"content":"                    \"5. unmark \u003ctaskindex\u003e - Mark a task as not done\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"sxfoo"},"content":"                    \"6. delete \u003ctaskindex\u003e - delete a task from the list\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"sxfoo"},"content":"                    \"7. find \u003cword\u003e - search a task from the list that contains \u003cword\u003e\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"sxfoo"},"content":"                    \"8. list - List all tasks recorded\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"sxfoo"},"content":"                    \"9. bye - Exit the program\\n\" +","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"sxfoo"},"content":"                    \"10. help - Show available commands\";","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"sxfoo"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"sxfoo"},"content":"     * A method to get the instance of the Ui scanner","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"sxfoo"},"content":"     * @return Scanner instance","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"sxfoo"},"content":"    public static Scanner getScanner() {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"sxfoo"},"content":"        return scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"sxfoo"},"content":"     * Greets the user and displays the welcome message.","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"sxfoo"},"content":"     * This method prints a welcome message to the standard output, including the Carrot logo,","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"sxfoo"},"content":"     * a greeting message, and a prompt for user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"sxfoo"},"content":"    public static void greetUser() {","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Hello! I\u0027m Carrot!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"sxfoo"},"content":"    public static String readUserInput() {","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"sxfoo"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"sxfoo"},"content":"     * Prints the help command and syntax to the standard output.","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"sxfoo"},"content":"     * This method prints the list of available commands and their syntax to the standard output.","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"sxfoo"},"content":"    public static void printHelpCommand() {","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"sxfoo"},"content":"        System.out.println(COMMAND_LIST);","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"sxfoo"},"content":"     * Prints a standard error message for an invalid command.","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"sxfoo"},"content":"     * This method prints an error message to the standard output indicating","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"sxfoo"},"content":"     * that the entered command is of invalid format.","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"sxfoo"},"content":"     * It provides guidance on how to view available commands and their syntax by typing \"help\".","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"sxfoo"},"content":"    public static void printInvalidCommand() {","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Invalid command\");","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Type \\\"help\\\" to view available commands and syntax\");","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"sxfoo"},"content":"     * Prints an error message for an invalid task index.","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"sxfoo"},"content":"     * This method prints an error message to the standard output indicating that the entered task index is not valid.","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"sxfoo"},"content":"     * Non Valid indices are non integer values within the range of tasklist","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"sxfoo"},"content":"     * It provides guidance on how to view available task indices by typing \"list\",","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"sxfoo"},"content":"     * along with the correct usage syntax for commands requiring a task index.","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"sxfoo"},"content":"    public static void printInvalidTaskIndexError() {","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"ERROR: Invalid task index. \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"sxfoo"},"content":"                \"Type \\\"list\\\" to see available task indices\\n\" +","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"sxfoo"},"content":"                \"Usage: \\\"delete/mark/unmark \u003ctaskIndex\u003e\\\"\");","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"sxfoo"},"content":"     * Prints a message indicating the status change of a task.","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"sxfoo"},"content":"     * This method prints a message to the standard output indicating the marked status of a specified task","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"sxfoo"},"content":"     * The message includes the task details","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"sxfoo"},"content":"     * @param isDone a boolean flag indicating whether the task is marked as done","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"sxfoo"},"content":"     * @param task   the task whose status has been changed","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"sxfoo"},"content":"    public static void printChangedTaskStatus(boolean isDone, Task task) {","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"sxfoo"},"content":"        if (isDone \u003d\u003d true) {","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"sxfoo"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"sxfoo"},"content":"     * Prints a message confirming the addition of a task.","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"sxfoo"},"content":"     * This method prints a message to the standard output indicating that a task has been added successfully.","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"sxfoo"},"content":"     * @param task       the task that has been added","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"sxfoo"},"content":"     * @param listOfTasks the list of tasks after the addition","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"sxfoo"},"content":"    public static void printAddedTask(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"sxfoo"},"content":"        System.out.printf(\"Now you have %d task(s) in the list.%n\", listOfTasks.size());","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"sxfoo"},"content":"     * Prints a message confirming the deletion of a task.","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"sxfoo"},"content":"     * This method prints a message to the standard output indicating that a task has been deleted successfully.","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"sxfoo"},"content":"     * @param task       the task that has been deleted","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"sxfoo"},"content":"     * @param listOfTasks the list of tasks after the deletion","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"sxfoo"},"content":"    public static void printDeletedTask(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"sxfoo"},"content":"        System.out.printf(\"Now you have %d task(s) in the list.%n\", listOfTasks.size());","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":153,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":155,"author":{"gitId":"sxfoo"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":156,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":157,"author":{"gitId":"sxfoo"},"content":"     * This method prints the list of tasks to the standard output, along with their indices.","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"sxfoo"},"content":"     * If the list is empty, it prints a message indicating that no tasks have been added.","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"sxfoo"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"sxfoo"},"content":"     * @param listOfTasks the list of tasks to be printed","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"sxfoo"},"content":"    public static void printListItems(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"sxfoo"},"content":"        int numberOfTasks \u003d listOfTasks.size();","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"sxfoo"},"content":"        if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"No tasks added\");","lastModifiedDate":"2024-02-28"},{"lineNumber":168,"author":{"gitId":"sxfoo"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"Here are the task(s) in your list:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":170,"author":{"gitId":"sxfoo"},"content":"            for (int i \u003d 1; i \u003c\u003d numberOfTasks; i++) {","lastModifiedDate":"2024-02-28"},{"lineNumber":171,"author":{"gitId":"sxfoo"},"content":"                System.out.println(i + \".\" + listOfTasks.get(i - 1));","lastModifiedDate":"2024-02-28"},{"lineNumber":172,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":173,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":174,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":175,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":176,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":177,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":178,"author":{"gitId":"sxfoo"},"content":"     * Prints an error message for failed input reading.","lastModifiedDate":"2024-02-28"},{"lineNumber":179,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"sxfoo"},"content":"     * This method prints an error message to the standard output indicating that reading input has failed,","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"sxfoo"},"content":"     * resulting in the program\u0027s termination.","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"sxfoo"},"content":"     * It is typically used to handle scenarios such as reaching the end of input.","lastModifiedDate":"2024-02-28"},{"lineNumber":184,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":185,"author":{"gitId":"sxfoo"},"content":"    public static void printFindTaskOutput(ArrayList\u003cTask\u003e listOfTasks, String word) {","lastModifiedDate":"2024-02-28"},{"lineNumber":186,"author":{"gitId":"sxfoo"},"content":"        int numberOfTasks \u003d listOfTasks.size();","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"sxfoo"},"content":"        if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"sxfoo"},"content":"            System.out.println(\"No tasks added. Add a task before using \\\"find\\\" command\");","lastModifiedDate":"2024-02-28"},{"lineNumber":191,"author":{"gitId":"sxfoo"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"sxfoo"},"content":"            boolean foundMatch \u003d false;","lastModifiedDate":"2024-02-28"},{"lineNumber":193,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":194,"author":{"gitId":"sxfoo"},"content":"            for (int i \u003d 1; i \u003c\u003d numberOfTasks; i++) {","lastModifiedDate":"2024-02-28"},{"lineNumber":195,"author":{"gitId":"sxfoo"},"content":"                String task \u003d listOfTasks.get(i-1).toString().toLowerCase();","lastModifiedDate":"2024-02-28"},{"lineNumber":196,"author":{"gitId":"sxfoo"},"content":"                String matchingWord \u003d word.toLowerCase();","lastModifiedDate":"2024-02-28"},{"lineNumber":197,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":198,"author":{"gitId":"sxfoo"},"content":"                if (task.contains(matchingWord)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":199,"author":{"gitId":"sxfoo"},"content":"                    if (!foundMatch) {","lastModifiedDate":"2024-02-28"},{"lineNumber":200,"author":{"gitId":"sxfoo"},"content":"                        System.out.printf(\"Here are the task(s) that contains \\\"%s\\\" in your list:\\n\", word);","lastModifiedDate":"2024-02-28"},{"lineNumber":201,"author":{"gitId":"sxfoo"},"content":"                        foundMatch \u003d true;","lastModifiedDate":"2024-02-28"},{"lineNumber":202,"author":{"gitId":"sxfoo"},"content":"                    }","lastModifiedDate":"2024-02-28"},{"lineNumber":203,"author":{"gitId":"sxfoo"},"content":"                    System.out.println(i + \".\" + listOfTasks.get(i - 1));","lastModifiedDate":"2024-02-28"},{"lineNumber":204,"author":{"gitId":"sxfoo"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":205,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":206,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":207,"author":{"gitId":"sxfoo"},"content":"            if (!foundMatch) {","lastModifiedDate":"2024-02-28"},{"lineNumber":208,"author":{"gitId":"sxfoo"},"content":"                System.out.printf(\"There is no matching task that contains \\\"%s\\\"\\n\", word);","lastModifiedDate":"2024-02-28"},{"lineNumber":209,"author":{"gitId":"sxfoo"},"content":"                System.out.println(\"Use \\\"list\\\" command to view all tasks available\");","lastModifiedDate":"2024-02-28"},{"lineNumber":210,"author":{"gitId":"sxfoo"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":211,"author":{"gitId":"sxfoo"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":212,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":213,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":214,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":215,"author":{"gitId":"sxfoo"},"content":"    public static void printScannerInputError() {","lastModifiedDate":"2024-02-28"},{"lineNumber":216,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":217,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Failed to read input. Exiting Program...\");","lastModifiedDate":"2024-02-28"},{"lineNumber":218,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":219,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":220,"author":{"gitId":"sxfoo"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":221,"author":{"gitId":"sxfoo"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":222,"author":{"gitId":"sxfoo"},"content":"     * Prints a farewell message.","lastModifiedDate":"2024-02-28"},{"lineNumber":223,"author":{"gitId":"sxfoo"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":224,"author":{"gitId":"sxfoo"},"content":"     * This method prints a farewell message to the standard output, indicating the program\u0027s termination.","lastModifiedDate":"2024-02-28"},{"lineNumber":225,"author":{"gitId":"sxfoo"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":226,"author":{"gitId":"sxfoo"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2024-02-28"},{"lineNumber":227,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":228,"author":{"gitId":"sxfoo"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":229,"author":{"gitId":"sxfoo"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2024-02-28"},{"lineNumber":230,"author":{"gitId":"sxfoo"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":231,"author":{"gitId":"sxfoo"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"sxfoo":231}}]
