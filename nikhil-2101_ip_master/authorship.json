[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Hello! I\u0027m LeoDas\");","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        while (true) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"            if (\"bye\".equalsIgnoreCase(userInput)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"                break; // Exit the loop if the user types \"bye\"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"            if (\"list\".equalsIgnoreCase(userInput)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"                    System.out.println((i + 1) + \".[\" + task.getStatusIcon() + \"] \" + task.description);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"            } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"                processTask(userInput, tasks, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"            } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"                processTask(userInput, tasks, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"added: \" + userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"                tasks.add(new Task(userInput));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"    public static void processTask(String userInput, ArrayList\u003cTask\u003e tasks, boolean mark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"        int taskNumber;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"            taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"            if (mark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"                task.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"                task.unmarkAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"  [\" + task.getStatusIcon() + \"] \" + task.description);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Please provide a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"That task doesn\u0027t exist!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nikhil-2101":62,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"public class Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"    protected String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"nikhil-2101":21}}]
