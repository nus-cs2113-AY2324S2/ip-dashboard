[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"T|cs2113|0","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"T|sleep|0","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"T|eat|0","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"D|return book|0|2019-12-02T18:00","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"nikhil-2101":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"# User Guide for LeoDas","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"### Task Listing (list)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"This feature allows users to view the list of tasks they have added.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"### Task Marking (mark)","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"Users can mark a task as done using this feature.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"### Task Unmarking (unmark)","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"This feature enables users to mark a completed task as not done.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"### Adding Todo (todo)","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"Users can add a new Todo task with a specified description.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"### Adding Event (event)","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"This feature allows users to delete a specific task from the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"### Finding Tasks(find)","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"This feature allows users to search for tasks containing a specific keyword in their descriptions.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"### Exiting the Application (bye)","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"Users can exit the application by typing \"bye.\"","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"### `list` - View tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"Displays the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"`list`","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"Displays task numbers, descriptions, and completion status.","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"1.[ ] Sample Todo Task","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"2.[X] Completed Deadline Task (by: Feb 28, 2024 18:00)","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"3.[ ] Incomplete Event Task (from: Mar 1, 2024 12:00, to: Mar 1, 2024 15:00)","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"Marks a specified task as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"`mark 1`","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"The task\u0027s completion status is updated, and users receive confirmation.","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"  [X] Sample Todo Task","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"nikhil-2101"},"content":"### `unmark` - Mark a task as not done","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"nikhil-2101"},"content":"Marks a completed task as not done.","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"nikhil-2101"},"content":"`unmark 2`","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"nikhil-2101"},"content":"The task\u0027s completion status is reversed, and users receive confirmation.","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"nikhil-2101"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"nikhil-2101"},"content":"  [ ] Completed Deadline Task (by: Feb 28, 2024 18:00)","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"nikhil-2101"},"content":"### `todo` - Add a new Todo task","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"nikhil-2101"},"content":"Adds a new Todo task with a specified description.","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"nikhil-2101"},"content":"`todo Complete Java assignment`","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"nikhil-2101"},"content":"Confirms the addition and displays the updated number of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"nikhil-2101"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"nikhil-2101"},"content":"[T][ ] Complete Java assignment","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"nikhil-2101"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"nikhil-2101"},"content":"### `deadline` - Add a task with a deadline","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"nikhil-2101"},"content":"Adds a task with a specified description and deadline.","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"nikhil-2101"},"content":"`deadline Submit project report /by Mar 5, 2024 23:59`","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"nikhil-2101"},"content":"Confirms the addition and displays the updated number of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"nikhil-2101"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"nikhil-2101"},"content":"  [ ] Submit project report (by: Mar 5, 2024 23:59)","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"nikhil-2101"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"nikhil-2101"},"content":"### `event` - Add an event with a specified duration","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"nikhil-2101"},"content":"Adds an event with a specified description and duration.","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"nikhil-2101"},"content":"`event Team meeting /from Mar 8, 2024 14:00 /to Mar 8, 2024 16:00`","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"nikhil-2101"},"content":"Confirms the addition and displays the updated number of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"nikhil-2101"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"nikhil-2101"},"content":"  [ ] Team meeting (from: Mar 8, 2024 14:00, to: Mar 8, 2024 16:00)","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"nikhil-2101"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"nikhil-2101"},"content":"### `delete` - Delete a specific task","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"nikhil-2101"},"content":"Deletes a specified task from the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"nikhil-2101"},"content":"`delete 3`","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"nikhil-2101"},"content":"Provides confirmation and displays the updated number of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"nikhil-2101"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"nikhil-2101"},"content":"  [ ] Incomplete Event Task (from: Mar 1, 2024 12:00, to: Mar 1, 2024 15:00)","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"nikhil-2101"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"nikhil-2101"},"content":"### `find` - Search for tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"nikhil-2101"},"content":"Finds tasks containing a specified keyword in their descriptions","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"nikhil-2101"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"nikhil-2101"},"content":"`find assignment`","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"nikhil-2101"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"nikhil-2101"},"content":"Upon using the find command with the keyword \"assignment,\" the expected outcome is the display of matching tasks in the user\u0027s list, including their task numbers and descriptions.","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"nikhil-2101"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"nikhil-2101"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"nikhil-2101"},"content":"1.[ ] Complete Java assignment","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"nikhil-2101"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"nikhil-2101"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"nikhil-2101"},"content":"### `bye` - Exit the application","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"nikhil-2101"},"content":"Exits the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"nikhil-2101"},"content":"`bye`","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"nikhil-2101"},"content":"Ends the interaction with the task management system.","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":189,"author":{"gitId":"nikhil-2101"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"nikhil-2101":171,"-":19}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":" * Command class is an abstract class representing the command to be executed in the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the command based on the given TaskList, Ui, and Storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"     * @return true if it is an exit command, false otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"        return false;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":" * EventCommand class represents a command to add an event task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"class EventCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    private String content;","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for EventCommand class.","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"     * @param content User input content for the event task.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"    public EventCommand(String content) {","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"        this.content \u003d content;","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the EventCommand to add an event task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"        String[] parts \u003d content.split(\"/from | /to \");","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Please use the format: event [description] /from [start time] /to [end time]\");","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"        ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\" \" + newEvent);","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":" * DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"nikhil-2101"},"content":"class DeleteCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"nikhil-2101"},"content":"    private int taskNumber;","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for DeleteCommand class.","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"nikhil-2101"},"content":"     * @param taskNumber Index of the task to be deleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"nikhil-2101"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"nikhil-2101"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the DeleteCommand to delete a task from the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"nikhil-2101"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.getTasks().size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"nikhil-2101"},"content":"        Task deletedTask \u003d tasks.getTasks().get(taskNumber - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"nikhil-2101"},"content":"        tasks.deleteTask(taskNumber - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"nikhil-2101"},"content":"        ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\" \" + deletedTask);","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"nikhil-2101"},"content":" * ExitCommand class represents a command to exit the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"nikhil-2101"},"content":"class ExitCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the ExitCommand to exit the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"nikhil-2101"},"content":"        // Implementation of the execute method for exiting the application","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"nikhil-2101"},"content":"        // ...","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"nikhil-2101"},"content":"     * Overrides the isExit method to indicate that this command is an exit command.","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"nikhil-2101"},"content":"     * @return true, as this is an exit command.","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"nikhil-2101"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"nikhil-2101"},"content":"        return true;","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":133,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"nikhil-2101"},"content":" * DeadlineCommand class represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"nikhil-2101"},"content":"class DeadlineCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"nikhil-2101"},"content":"    private final String content;","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for DeadlineCommand class.","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"nikhil-2101"},"content":"     * @param content User input content for the deadline task.","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"nikhil-2101"},"content":"    public DeadlineCommand(String content) {","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"nikhil-2101"},"content":"        this.content \u003d content;","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the DeadlineCommand to add a deadline task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":159,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"nikhil-2101"},"content":"        int index \u003d content.indexOf(\"/by\");","lastModifiedDate":"2024-03-05"},{"lineNumber":161,"author":{"gitId":"nikhil-2101"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-03-05"},{"lineNumber":162,"author":{"gitId":"nikhil-2101"},"content":"            String description \u003d content.substring(0, index).trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"nikhil-2101"},"content":"            String by \u003d content.substring(index + 4).trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"nikhil-2101"},"content":"            Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-03-05"},{"lineNumber":165,"author":{"gitId":"nikhil-2101"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"nikhil-2101"},"content":"            ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\" \" + newDeadline);","lastModifiedDate":"2024-03-05"},{"lineNumber":169,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":170,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Please use \u0027/by\u0027 to specify the deadline time.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"nikhil-2101"},"content":" * ListCommand class represents a command to list all tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"nikhil-2101"},"content":"class ListCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":180,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the ListCommand to display all tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":189,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":190,"author":{"gitId":"nikhil-2101"},"content":"        ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"nikhil-2101"},"content":"        ui.greeting();","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"nikhil-2101"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":193,"author":{"gitId":"nikhil-2101"},"content":"        while (i \u003c tasks.getTasks().size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":194,"author":{"gitId":"nikhil-2101"},"content":"            Task task \u003d tasks.getTasks().get(i);","lastModifiedDate":"2024-03-05"},{"lineNumber":195,"author":{"gitId":"nikhil-2101"},"content":"            ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println((i + 1) + \".\" + task);","lastModifiedDate":"2024-03-05"},{"lineNumber":197,"author":{"gitId":"nikhil-2101"},"content":"            i++;","lastModifiedDate":"2024-03-05"},{"lineNumber":198,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":199,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":200,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":201,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":202,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"nikhil-2101"},"content":" * MarkCommand class represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"nikhil-2101"},"content":"class MarkCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":206,"author":{"gitId":"nikhil-2101"},"content":"    private int taskNumber;","lastModifiedDate":"2024-03-05"},{"lineNumber":207,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":208,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for MarkCommand class.","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"nikhil-2101"},"content":"     * @param taskNumber Index of the task to be marked as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"nikhil-2101"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-03-05"},{"lineNumber":214,"author":{"gitId":"nikhil-2101"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-03-05"},{"lineNumber":215,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":216,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":217,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the MarkCommand to mark a task as done in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":222,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":223,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":224,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":225,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":226,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":227,"author":{"gitId":"nikhil-2101"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.getTasks().size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":228,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":229,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":230,"author":{"gitId":"nikhil-2101"},"content":"        tasks.getTasks().get(taskNumber - 1).markAsDone();","lastModifiedDate":"2024-03-05"},{"lineNumber":231,"author":{"gitId":"nikhil-2101"},"content":"        ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":233,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\" [\" + tasks.getTasks().get(taskNumber - 1).getStatusIcon() + \"] \" + tasks.getTasks().get(taskNumber - 1).description);","lastModifiedDate":"2024-03-05"},{"lineNumber":234,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":235,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":236,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":237,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":238,"author":{"gitId":"nikhil-2101"},"content":" * UnmarkCommand class represents a command to unmark a task as done in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":239,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":240,"author":{"gitId":"nikhil-2101"},"content":"class UnmarkCommand extends Command {","lastModifiedDate":"2024-03-06"},{"lineNumber":241,"author":{"gitId":"nikhil-2101"},"content":"    private int taskNumber;","lastModifiedDate":"2024-03-06"},{"lineNumber":242,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":243,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":244,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for UnmarkCommand class.","lastModifiedDate":"2024-03-06"},{"lineNumber":245,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":246,"author":{"gitId":"nikhil-2101"},"content":"     * @param taskNumber Index of the task to be unmarked as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":247,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":248,"author":{"gitId":"nikhil-2101"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-03-06"},{"lineNumber":249,"author":{"gitId":"nikhil-2101"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-03-06"},{"lineNumber":250,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":251,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":252,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":253,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the UnmarkCommand to unmark a task as done in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":254,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":255,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":256,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":257,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":258,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":259,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":260,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":261,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-06"},{"lineNumber":262,"author":{"gitId":"nikhil-2101"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.getTasks().size()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":263,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":264,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":265,"author":{"gitId":"nikhil-2101"},"content":"        tasks.getTasks().get(taskNumber - 1).unmarkAsDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":266,"author":{"gitId":"nikhil-2101"},"content":"        ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":267,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":268,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\" [\" + tasks.getTasks().get(taskNumber - 1).getStatusIcon() + \"] \" + tasks.getTasks().get(taskNumber - 1).description);","lastModifiedDate":"2024-03-06"},{"lineNumber":269,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":270,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-06"},{"lineNumber":271,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":272,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":273,"author":{"gitId":"nikhil-2101"},"content":" * TodoCommand class represents a command to add a todo task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":274,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":275,"author":{"gitId":"nikhil-2101"},"content":"class TodoCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":276,"author":{"gitId":"nikhil-2101"},"content":"    private String description;","lastModifiedDate":"2024-03-05"},{"lineNumber":277,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":278,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":279,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for TodoCommand class.","lastModifiedDate":"2024-03-06"},{"lineNumber":280,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":281,"author":{"gitId":"nikhil-2101"},"content":"     * @param description User input description for the todo task.","lastModifiedDate":"2024-03-06"},{"lineNumber":282,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":283,"author":{"gitId":"nikhil-2101"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-03-05"},{"lineNumber":284,"author":{"gitId":"nikhil-2101"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-05"},{"lineNumber":285,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":286,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":287,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":288,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the TodoCommand to add a todo task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":289,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":290,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks   TaskList object containing the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":291,"author":{"gitId":"nikhil-2101"},"content":"     * @param ui      Ui object for user interface interactions.","lastModifiedDate":"2024-03-06"},{"lineNumber":292,"author":{"gitId":"nikhil-2101"},"content":"     * @param storage Storage object for file storage and retrieval.","lastModifiedDate":"2024-03-06"},{"lineNumber":293,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-03-06"},{"lineNumber":294,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":295,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":296,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":297,"author":{"gitId":"nikhil-2101"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":298,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"OOPSSSSSSS!!! The task\u0027s description is empty! Please do specify!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":299,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":300,"author":{"gitId":"nikhil-2101"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-03-05"},{"lineNumber":301,"author":{"gitId":"nikhil-2101"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2024-03-05"},{"lineNumber":302,"author":{"gitId":"nikhil-2101"},"content":"        ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":303,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":304,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\" \" + newTodo);","lastModifiedDate":"2024-03-05"},{"lineNumber":305,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":306,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":307,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"},{"lineNumber":308,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":309,"author":{"gitId":"nikhil-2101"},"content":"class FindCommand extends Command {","lastModifiedDate":"2024-03-06"},{"lineNumber":310,"author":{"gitId":"nikhil-2101"},"content":"    private String keyword;","lastModifiedDate":"2024-03-06"},{"lineNumber":311,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":312,"author":{"gitId":"nikhil-2101"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":313,"author":{"gitId":"nikhil-2101"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-06"},{"lineNumber":314,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":315,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":316,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":317,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-06"},{"lineNumber":318,"author":{"gitId":"nikhil-2101"},"content":"        ArrayList\u003cTask\u003e match_input \u003d tasks.find_input(keyword);","lastModifiedDate":"2024-03-06"},{"lineNumber":319,"author":{"gitId":"nikhil-2101"},"content":"        if (match_input.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":320,"author":{"gitId":"nikhil-2101"},"content":"            ui.error(\"There are no tasks found that match the keyword: \" + keyword);","lastModifiedDate":"2024-03-06"},{"lineNumber":321,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":322,"author":{"gitId":"nikhil-2101"},"content":"            ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":323,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":324,"author":{"gitId":"nikhil-2101"},"content":"            for (int i \u003d 0; i \u003c match_input.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":325,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println((i + 1) + \".\" + match_input.get(i));","lastModifiedDate":"2024-03-06"},{"lineNumber":326,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":327,"author":{"gitId":"nikhil-2101"},"content":"            ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":328,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":329,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":330,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"nikhil-2101":330}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * Deadline class represents a task with a specific deadline, extending the Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    protected String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     * Returns a formatted string representation of the Deadline task.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     * @return Formatted string representing the Deadline task.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"     * Returns a formatted string representation of the Deadline task for saving to a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"     * @return Formatted string representing the Deadline task for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"        return \"D|\" + super.toFileString() + \"|\" + by;","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"nikhil-2101":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * Duke class represents the main application that manages tasks using a command-line interface.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     * @param filePath File path for storing and loading tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"            ui.loading_error();","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"     * Runs the Duke application, processing user commands until the exit command is given.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"    public void run() {","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"        ui.greeting();","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"                String fullCommand \u003d ui.read_input();","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"                ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"                storage.save(tasks.getTasks());","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"                ui.error(e.getMessage());","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"            } finally {","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"                ui.line();","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"     * Main method to start the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"        new Duke(\"out/tasks.txt\").run();","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"nikhil-2101":53,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * DukeException class represents an exception specific to the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" * It extends the standard Exception class.","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     * @param message The detailed error message for the exception.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        super(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"nikhil-2101":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * Event class represents a task with a specific event duration, extending the Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    protected String from;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    protected String to;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for Event class.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     * @param to End time of the event.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     * Returns a formatted string representation of the Event task.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"     * @return Formatted string representing the Event task.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"     * Returns a formatted string representation of the Event task for saving to a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"     * @return Formatted string representing the Event task for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"        return \"E|\" + super.toFileString() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"nikhil-2101":40}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * Parser class handles the parsing of user commands for the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class Parser {","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     * @param fullCommand Full user input command.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     * @return Command object based on the parsed input.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during parsing or if the command is unknown.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"        // Split the full command into parts","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"        String[] parts \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"        // Determine the type of command and create the appropriate Command object","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"        switch (command) {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"        case \"list\":","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"            return new ListCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        case \"mark\":","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"            return new MarkCommand(Integer.parseInt(parts[1]));","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"        case \"unmark\":","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"            return new UnmarkCommand(Integer.parseInt(parts[1]));","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"        case \"todo\":","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"            return new TodoCommand(fullCommand.substring(4).trim());","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"        case \"deadline\":","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"            return new DeadlineCommand(fullCommand.substring(8).trim());","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"        case \"event\":","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"            return new EventCommand(fullCommand.substring(5).trim());","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"            return new DeleteCommand(Integer.parseInt(parts[1]));","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"        case \"bye\":","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"        case \"find\":","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"            return new FindCommand(fullCommand.substring(4).trim());","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"        default:","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Unknown command.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nikhil-2101":43}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"import java.io.*;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":" * Storage class handles loading and saving tasks from/to a file for the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"public class Storage {","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    /** File path for storing and loading tasks. */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    private String filePath;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"     * @param filePath File path for storing and loading tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"     * @return ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during file reading or if the file is not found.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"            String line;","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"                Task task \u003d Task.fromString(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"File cannot be found.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Error loading tasks from file.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"        return tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"     * Saves tasks to the file specified by the file path.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks ArrayList of tasks to be saved to the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"     * @throws DukeException If an error occurs during file writing.","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"            throw new DukeException(\"Error saving tasks to file.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nikhil-2101":62}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    protected String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"     * @return Status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"     * Converts the task to a string representation for display.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"     * Converts the task to a string representation for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"     * @return String representation of the task for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"        return description + \"|\" + (isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"    // Author: PradeepM","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"     * Creates a Task object from the string representation read from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"     * @param fileString String representation of the task from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"     * @return Task object created from the fileString.","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"    public static Task fromString(String fileString) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"        String description \u003d parts[1];","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":"        boolean isDone \u003d parts[2].equals(\"1\");","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"nikhil-2101"},"content":"        Task task;","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"nikhil-2101"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"        case \"D\":","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"            task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"nikhil-2101"},"content":"        case \"E\":","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"nikhil-2101"},"content":"            task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"nikhil-2101"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"nikhil-2101"},"content":"        case \"T\":","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"nikhil-2101"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"nikhil-2101"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"nikhil-2101"},"content":"        default:","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"nikhil-2101"},"content":"            task \u003d null;","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"nikhil-2101"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"nikhil-2101"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"nikhil-2101"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"nikhil-2101"},"content":"        return task;","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"nikhil-2101"},"content":"    // Author: PradeepM","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"nikhil-2101":96}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":" * TaskList class represents a list of tasks for the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"public class TaskList {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    /** ArrayList to store tasks. */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"     * Default constructor for TaskList class, initializes an empty task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for TaskList class with an existing ArrayList of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"     * @param tasks ArrayList of tasks to initialize the TaskList.","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"     * Returns the ArrayList of tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"     * @return ArrayList of tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"        return tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"     * Deletes a task from the task list based on the specified index.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"    public ArrayList\u003cTask\u003e find_input(String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"            if (task.description.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"        return matchingTasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nikhil-2101":66}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":" * Todo class represents a task with no specific deadline or event time.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":" * It is a subtype of the Task class.","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"     * Converts the todo task to a string representation for display.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"     * Converts the todo task to a string representation for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"     * @return String representation of the todo task for file storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"        return \"T|\" + super.toFileString();","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"nikhil-2101":35}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":" * Ui class handles the user interface interactions for the Duke application.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"public class Ui {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"     * Displays a greeting message when the Duke application starts.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    public void greeting() {","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Hello! I\u0027m LeoDas\");","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"     * Displays a line separator for better visual separation in the console.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"    public void line() {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"     * Displays an error message when there is an issue loading tasks from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"    public void loading_error() {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Error loading tasks from file. Starting with an empty list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"     * Displays an error message with proper formatting.","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"    public void error(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"     * Reads user input from the console.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"     * @return The user input as a String.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"    public String read_input() {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nikhil-2101":52}},{"path":"src/main/java/out/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"T|cs2113|1","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"E|NUS open house|0|12pm|6pm","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"T|sleep|0","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"T|more work|0","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"nikhil-2101":4}}]
