[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"E | 0 | work /from 2pm /to 4pm","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"T | 0 | hi","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"D | 0 | run24k /by 2024-12-05 1830","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"D | 0 | run12k /by Sunday 2359","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"D | 0 | Run42KM /by 2024-12-31 0530","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nur-haziq":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"# Mona User Guide","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"Mona is a Command Line Interface (CLI) chatbot application designed to streamline task management with speed and simplicity. Named after the intuitive and resourceful character \u0027Mona\u0027 from the beloved TV series \u0027Nanalan\u0027, our application embodies the efficiency and helpfulness that Mona showcased in her adventures.","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"- [Features](#features)","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"  - [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"  - [Adding a task](#adding-a-task)","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"    - [Adding a todo: `todo`](#adding-a-todo-todo)","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    - [Adding a deadline: `deadline`](#adding-a-deadline-deadline)","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"    - [Adding an event: `event`](#adding-an-event-event)","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"  - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"  - [Locating a task by description: `find`](#locating-a-task-by-description-find)","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"  - [Deleting a Task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"  - [Marking a Task as Done: `mark`](#marking-a-task-as-done-mark)","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"  - [Marking a Task as Not Done: `unmark`](#marking-a-task-as-not-done-unmark)","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"  - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"## Quick Start","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"2. Download the latest version of Mona from [GitHub](https://github.com/nur-haziq/ip).","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"3. Open a terminal and navigate to the folder where you downloaded Mona.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"4. Run the application by entering `java -jar Mona.jar` in the terminal.","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"5. Type `help` to see a list of available commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"\u003e ","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"\u003e - Words in `UPPER_CASE` are the parameters that must be supplied by the user. These parameters CANNOT be left empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"\u003e   e.g., in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo borrow book`.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"\u003e ","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, and `bye`) will be ignored.","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"\u003e   e.g., if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"\u003e ","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"\u003e - If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"### Viewing Help: `help`","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"Shows a list of all available commands and their usage.","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"**Format:** `help`","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"### Adding a Task","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"There are three types of tasks you can add: `todo`, `deadline`, and `event`.","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"1. **ToDos**: These are tasks that do not have a specific date or time associated with them. They represent tasks that do not have a scheduled time for completion.","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"2. **Deadlines**: These tasks have a specific due date and time. They represent tasks that you need to complete by a certain deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"3. **Events**: These are tasks that occur over a range of time, having both a start date/time and an end date/time.","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"#### Adding a ToDo: `todo`","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"Adds a ToDo task to your task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"**Format:** `todo DESCRIPTION`","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"- `DESCRIPTION`: The description of the todo task.","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"- `todo Pick up groceries`","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"  Adds a task with the description \"Pick up groceries\" to your list. There is no specific date or time associated with a ToDo task. It is assumed that you can complete this task at any time.","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"#### Adding a Deadline: `deadline`","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"Adds a deadline task to your task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"**Format:** `deadline /by DATE`","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"- `DESCRIPTION`: The description of the deadline task.","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"- `DATE`: The due date of the deadline task.","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"nur-haziq"},"content":"- `deadline Submit final project /by 20/12/2024`","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"nur-haziq"},"content":"  Adds a task with the description \"Submit final project\" that has a due date of December 20, 2024. A deadline task specifies when it needs to be completed.","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"nur-haziq"},"content":"\u003e **Pro tip:** If you enter the date in the `yyyy-MM-dd HHmm` format (e.g., `2024-12-31 1830`), the due date will be stored as a `LocalDateTime` object, allowing for precise date and time tracking.","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"nur-haziq"},"content":"  ","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"nur-haziq"},"content":"#### Adding an Event: `event`","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"nur-haziq"},"content":"Adds an event task to your task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"nur-haziq"},"content":"**Format:** `event /from FROM_DATE /to TO_DATE`","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"nur-haziq"},"content":"- `DESCRIPTION`: The description of the event task.","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"nur-haziq"},"content":"- `FROM_DATE`: The date/time of the START of the event.","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"nur-haziq"},"content":"- `TO_DATE`: The date/time of the END of the event.","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"nur-haziq"},"content":"- The `event`, `/from`, and `/to` flags must be in the correct order.","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"nur-haziq"},"content":"- `event Sister\u0027s wedding /from 12/12/2024 11am /to 12/12/2024 3pm`  ","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"nur-haziq"},"content":"  Adds an event with the description \"Sisters wedding\". The event starts at 11 AM and ends at 3 PM on December 12, 2024.","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"nur-haziq"},"content":"### Listing All Tasks: `list`","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"nur-haziq"},"content":"Shows a list of all tasks in your task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"nur-haziq"},"content":"**Format:** `list`","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"nur-haziq"},"content":"### Locating a Task by description: `find`","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"nur-haziq"},"content":"Finds tasks whose descriptions contain the given keyword as a substring.","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"nur-haziq"},"content":"**Format:** `find KEYWORD`","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"nur-haziq"},"content":"- `KEYWORD`: The keyword to search for within the task descriptions.","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"nur-haziq"},"content":"- The search is not case-sensitive, meaning it will find tasks regardless of whether the keyword is in uppercase or lowercase. For example, `find meet` will return \"meeting\", \"Meet\", \"meetings\", and \"Meetings\".","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"nur-haziq"},"content":"\u003e **Note:** The indexes of the tasks found may not be sequential as they correspond to their positions in the original complete list of tasks. For example, if three tasks contain a given keyword, they might be indexed as 2, 4, 6, (instead of 1, 2, 3) to reflect their original order. This helps you identify the correct index for other commands like `delete`, `mark`, or `unmark`.","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"nur-haziq"},"content":"- `find budget`  ","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"nur-haziq"},"content":"  This will return tasks with descriptions containing \"budget\", \"Budget\", \"budgeting\", or \"Budgeting\".","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"nur-haziq"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"nur-haziq"},"content":"Deletes a task from your task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"nur-haziq"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"nur-haziq"},"content":"- `INDEX`: The index of the task to be deleted.","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"nur-haziq"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"nur-haziq"},"content":"- The index must be a positive integer (1, 2, 3, ...).","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"nur-haziq"},"content":"- The index must not be out of bounds (not more than the total number of tasks stored).","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"nur-haziq"},"content":"- `list` followed by `delete 3`  ","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"nur-haziq"},"content":"  This will delete the 3rd task in the list displayed by the `list` command.","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":158,"author":{"gitId":"nur-haziq"},"content":"### Marking a Task as Done: `mark`","lastModifiedDate":"2024-03-05"},{"lineNumber":159,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"nur-haziq"},"content":"Marks a task as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":161,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":162,"author":{"gitId":"nur-haziq"},"content":"**Format:** `mark INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"nur-haziq"},"content":"- `INDEX`: The index of the task to be marked as done, as shown by the `list` command.","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"nur-haziq"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":165,"author":{"gitId":"nur-haziq"},"content":"- The index must be a positive integer (1, 2, 3, ...).","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"nur-haziq"},"content":"- The index must not be out of bounds (not more than the total number of tasks stored).","lastModifiedDate":"2024-03-05"},{"lineNumber":167,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":169,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":170,"author":{"gitId":"nur-haziq"},"content":"- `list` followed by `mark 2`  ","lastModifiedDate":"2024-03-05"},{"lineNumber":171,"author":{"gitId":"nur-haziq"},"content":"  This will mark the 2nd task in the task list as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"nur-haziq"},"content":"### Marking a Task as Not Done: `unmark`","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":177,"author":{"gitId":"nur-haziq"},"content":"Marks a task as not done.","lastModifiedDate":"2024-03-05"},{"lineNumber":178,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":179,"author":{"gitId":"nur-haziq"},"content":"**Format:** `unmark INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":180,"author":{"gitId":"nur-haziq"},"content":"- `INDEX`: The index of the task to be marked as not done, as shown by the `list` command.","lastModifiedDate":"2024-03-05"},{"lineNumber":181,"author":{"gitId":"nur-haziq"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":182,"author":{"gitId":"nur-haziq"},"content":"- The index must be a positive integer (1, 2, 3, ...).","lastModifiedDate":"2024-03-05"},{"lineNumber":183,"author":{"gitId":"nur-haziq"},"content":"- The index must not be out of bounds (not more than the total number of tasks stored).","lastModifiedDate":"2024-03-05"},{"lineNumber":184,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":185,"author":{"gitId":"nur-haziq"},"content":"**Examples:**","lastModifiedDate":"2024-03-05"},{"lineNumber":186,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":187,"author":{"gitId":"nur-haziq"},"content":"- `list` followed by `unmark 4`  ","lastModifiedDate":"2024-03-05"},{"lineNumber":188,"author":{"gitId":"nur-haziq"},"content":"  Marks the 4th task in the task list as not done.","lastModifiedDate":"2024-03-05"},{"lineNumber":189,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":190,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"nur-haziq"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-03-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":194,"author":{"gitId":"nur-haziq"},"content":"Exits the application.","lastModifiedDate":"2024-03-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":196,"author":{"gitId":"nur-haziq"},"content":"**Format:** `bye`","lastModifiedDate":"2024-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"nur-haziq"},"content":"### Saving the Data","lastModifiedDate":"2024-03-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"nur-haziq"},"content":"The data is saved automatically after any command that modifies the task list (e.g., `add`, `delete`, `mark`, `unmark`). There is no need to save manually.","lastModifiedDate":"2024-03-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"nur-haziq"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":206,"author":{"gitId":"nur-haziq"},"content":"## Command Summary","lastModifiedDate":"2024-03-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"nur-haziq"},"content":"| Command   | Usage                                             |","lastModifiedDate":"2024-03-05"},{"lineNumber":209,"author":{"gitId":"nur-haziq"},"content":"|-----------|---------------------------------------------------|","lastModifiedDate":"2024-03-05"},{"lineNumber":210,"author":{"gitId":"nur-haziq"},"content":"| `help`    | `help`                                            |","lastModifiedDate":"2024-03-05"},{"lineNumber":211,"author":{"gitId":"nur-haziq"},"content":"| `todo`    | `todo DESCRIPTION`                                |","lastModifiedDate":"2024-03-05"},{"lineNumber":212,"author":{"gitId":"nur-haziq"},"content":"| `deadline`| `deadline DESCRIPTION /by DATE`                   |","lastModifiedDate":"2024-03-05"},{"lineNumber":213,"author":{"gitId":"nur-haziq"},"content":"| `event`   | `event DESCRIPTION /from FROM_DATE /to TO_DATE`   |","lastModifiedDate":"2024-03-05"},{"lineNumber":214,"author":{"gitId":"nur-haziq"},"content":"| `list`    | `list`                                            |","lastModifiedDate":"2024-03-05"},{"lineNumber":215,"author":{"gitId":"nur-haziq"},"content":"| `find`    | `find KEYWORD`                                    |","lastModifiedDate":"2024-03-05"},{"lineNumber":216,"author":{"gitId":"nur-haziq"},"content":"| `delete`  | `delete INDEX`                                    |","lastModifiedDate":"2024-03-05"},{"lineNumber":217,"author":{"gitId":"nur-haziq"},"content":"| `mark`    | `mark INDEX`                                      |","lastModifiedDate":"2024-03-05"},{"lineNumber":218,"author":{"gitId":"nur-haziq"},"content":"| `unmark`  | `unmark INDEX`                                    |","lastModifiedDate":"2024-03-05"},{"lineNumber":219,"author":{"gitId":"nur-haziq"},"content":"| `bye`     | `bye`                                             |","lastModifiedDate":"2024-03-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":23,"nur-haziq":198}},{"path":"src/main/java/Mona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"import mona.input.Parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"import mona.input.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.output.ConsolePrint;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"import mona.manager.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"import mona.storage.Storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":" * The main class of the Mona application, responsible for initializing the application.","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"public class Mona {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Mona. Initializes the user interface, storage,","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"     * and task list components of the application.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"    public Mona() {","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"        this.storage \u003d new Storage(Constants.DATA_FILE_PATH);","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"        this.taskList \u003d new TaskList((this.storage).loadData());","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"     * Runs the Mona application, accepting user commands, parsing and","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"     * executing them until the \"bye\" command is received.","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"    public void run() {","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"        String userCommand \u003d ui.getUserInput();","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"        Parser inputParser \u003d new Parser(userCommand);","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"        while (inputParser.isNotByeCommand()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"            if (inputParser.isValidInput()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"                taskList.executeCommand(inputParser.getCommandTypeAndParams());","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"                storage.saveToStorage(taskList.getTasks());","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"            userCommand \u003d ui.getUserInput();","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"            inputParser \u003d new Parser(userCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"        ConsolePrint.exit();","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"     * The main entry point of the Mona application.","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"        new Mona().run();","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"nur-haziq":53}},{"path":"src/main/java/mona/exception/MonaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.exception;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"public class MonaException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"    public MonaException(String errorMessage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"nur-haziq":8}},{"path":"src/main/java/mona/input/InputValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.input;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import mona.manager.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":" * Validates the input commands.","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":" * Ensures that the commands adhere to the expected format and constraints of each command type.","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"public class InputValidator {","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"    public InputValidator() {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"     * Checks if the \u0027todo\u0027 command has a non-empty description.","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"     * @param commandTypeAndParams String array containing the command type and its parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"     * @throws MonaException If the description is empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"    public void checkTodoCommand(String[] commandTypeAndParams) throws MonaException {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"        if (commandTypeAndParams[Constants.INDEX_DESCRIPTION].isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"            throw new MonaException(Constants.EMPTY_FIELDS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"     * Checks if the \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027 command has a valid task number.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"     * @param commandTypeAndParams String array containing the command type and its parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"     * @throws MonaException If the task number is out of bounds. (eg. if there are 3 tasks in TaskList,","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"     * an invalid input would be -1, 0, 4, 5 etc.)","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"     * @throws NumberFormatException If the task number is not a \u0027parse-able\u0027 string. (eg. \u0027three\u0027)","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"    public void checkMarkUnmarkDeleteCommand(String[] commandTypeAndParams) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"            MonaException, NumberFormatException {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"        // Checking if number provided can be converted to an integer","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"            Integer.parseInt(commandTypeAndParams[Constants.INDEX_DESCRIPTION]);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"            throw new MonaException(Constants.INVALID_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"        // Checking if number provided is out of bounds (negative or more than the number of tasks stored)","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"        int markUnmarkIndex \u003d Integer.parseInt(commandTypeAndParams[Constants.INDEX_DESCRIPTION]) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"        if (markUnmarkIndex \u003c 0 || markUnmarkIndex \u003e\u003d TaskList.noOfTasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"            throw new MonaException(Constants.INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"     * Checks if the \u0027deadline\u0027 command has a non-empty description and deadline.","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"     * @param commandTypeAndParams String array containing the command type and its parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"     * @throws MonaException If any of the required fields are empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"    public void checkDeadlineCommand(String[] commandTypeAndParams) throws MonaException {","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"        if (commandTypeAndParams[Constants.INDEX_DESCRIPTION].isEmpty()","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"                || commandTypeAndParams[Constants.INDEX_DEADLINE].isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"            throw new MonaException(Constants.EMPTY_FIELDS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"     * Checks if the \u0027event\u0027 command has a non-empty description, start value, and end value.","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"     * @param commandTypeAndParams String array containing the command type and its parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"     * @throws MonaException If any of the required fields are empty.","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"    public void checkEventCommand(String[] commandTypeAndParams) throws MonaException {","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"        if (commandTypeAndParams[Constants.INDEX_DESCRIPTION].isEmpty()","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"                || commandTypeAndParams[Constants.INDEX_FROM_DATE].isEmpty()","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"                || commandTypeAndParams[Constants.INDEX_TO_DATE].isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"            throw new MonaException(Constants.EMPTY_FIELDS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"     * Checks if the \u0027find\u0027 command has a non-empty description.","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"     * @param commandTypeAndParams String array containing the command type and its parameters.","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"     * @throws MonaException If the description is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"    public void checkFindCommand(String[] commandTypeAndParams) throws MonaException {","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"        if (commandTypeAndParams[Constants.INDEX_DESCRIPTION].isEmpty()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"            throw new MonaException(Constants.EMPTY_FIELDS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"nur-haziq":91}},{"path":"src/main/java/mona/input/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.input;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"import mona.output.ConsolePrint;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":" * Parses and validates user input commands for the task manager application.","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":" * Stores the input commands in a String array, \u0027commandTypeAndParams\u0027.","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":" * Elements of this array can be accessed via indexing.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"public class Parser {","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    protected String[] commandTypeAndParams;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"    protected String line;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"    protected boolean isValidInput;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"    protected InputValidator inputValidator;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"    protected boolean isNotByeCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Parser. Initializes the \u0027commandTypeAndParams\u0027 String array, input line,","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"     * input validation status, and the input validator. Parses the input line.","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line to be parsed.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"    public Parser(String line) {","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"        this.commandTypeAndParams \u003d new String[4];","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"        this.line \u003d line;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"        this.isValidInput \u003d true; // set to true initially, any error caught will set it to false","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"        this.isNotByeCommand \u003d true; // set to true initially","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"        this.inputValidator \u003d new InputValidator();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"        this.parseInput(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"    public String[] getCommandTypeAndParams() {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"        return commandTypeAndParams;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"    public boolean isNotByeCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"        return isNotByeCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"    public boolean isValidInput() {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"        return isValidInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"     * Extracts the command type from the input line. The command type is the first word of the input line.","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line from which the command type is to be extracted.","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"    public void extractCommandTypeFromString(String line) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"        switch(line) {","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"        case(\"list\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"            commandTypeAndParams[Constants.INDEX_COMMAND_TYPE] \u003d \"list\";","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"            return;","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"        case(\"bye\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"            commandTypeAndParams[Constants.INDEX_COMMAND_TYPE] \u003d \"bye\";","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"            return;","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"        case(\"help\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"            commandTypeAndParams[Constants.INDEX_COMMAND_TYPE] \u003d \"help\";","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"            return;","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"        default:","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"                int endIndex \u003d line.indexOf(\" \");","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"                this.commandTypeAndParams[Constants.INDEX_COMMAND_TYPE] \u003d line.substring(0, endIndex).trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"                ConsolePrint.printErrorMessage(Constants.INVALID_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"                isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"     * Extracts details for \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027 commands from the input line.","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"     * The detail to be extracted is a number, which corresponds to a specific task in the TaskList.","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line from which the details are to be extracted.","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"    public void extractDetailsFromMarkUnmarkDeleteString(String line) {","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"            int descriptionIndex \u003d line.indexOf(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_DESCRIPTION] \u003d line.substring(descriptionIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"            inputValidator.checkMarkUnmarkDeleteCommand(commandTypeAndParams);","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"        } catch (MonaException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"nur-haziq"},"content":"     * Extracts details for \u0027todo\u0027 commands from the input line. The detail to be extracted","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"nur-haziq"},"content":"     * is the description of the \u0027todo\u0027 command.","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line from which the details are to be extracted.","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"nur-haziq"},"content":"    public void extractDetailsFromTodoString(String line) {","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"nur-haziq"},"content":"            int descriptionIndex \u003d line.indexOf(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_DESCRIPTION] \u003d line.substring(descriptionIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"nur-haziq"},"content":"            inputValidator.checkTodoCommand(commandTypeAndParams);","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"nur-haziq"},"content":"        } catch (MonaException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"nur-haziq"},"content":"     * Extracts details for \u0027deadline\u0027 commands from the input line. The details to be extracted are","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"nur-haziq"},"content":"     * 1) the description of the deadline task, and","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"nur-haziq"},"content":"     * 2) the due date, prefixed with a \u0027/by\u0027.","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line from which the details are to be extracted.","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"nur-haziq"},"content":"    public void extractDetailsFromDeadlineString(String line) {","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"nur-haziq"},"content":"            int descriptionIndex \u003d line.indexOf(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"nur-haziq"},"content":"            int deadlineIndex \u003d line.indexOf(Constants.BY_PREFIX);","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_DESCRIPTION] \u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"nur-haziq"},"content":"                    line.substring(descriptionIndex, deadlineIndex).trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_DEADLINE] \u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"nur-haziq"},"content":"                    line.substring(deadlineIndex + Constants.BY_PREFIX.length()).trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"nur-haziq"},"content":"            inputValidator.checkDeadlineCommand(commandTypeAndParams);","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"nur-haziq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(Constants.MISSING_BY_PREFIX_IN_DEADLINE_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"nur-haziq"},"content":"        } catch (MonaException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"nur-haziq"},"content":"     * Extracts details for \u0027event\u0027 commands from the input line. The details to be extracted are","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"nur-haziq"},"content":"     * 1) the description of the event task,","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"nur-haziq"},"content":"     * 2) the start date, prefixed with a \u0027/from\u0027, and","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"nur-haziq"},"content":"     * 3) the end date, prefixed with a \u0027/to\u0027.","lastModifiedDate":"2024-03-01"},{"lineNumber":145,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line from which the details are to be extracted.","lastModifiedDate":"2024-03-01"},{"lineNumber":147,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"nur-haziq"},"content":"    public void extractDetailsFromEventString(String line) {","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"nur-haziq"},"content":"            int descriptionIndex \u003d line.indexOf(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"nur-haziq"},"content":"            int fromIndex \u003d line.indexOf(Constants.FROM_PREFIX);","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"nur-haziq"},"content":"            int toIndex \u003d line.indexOf(Constants.TO_PREFIX);","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_DESCRIPTION] \u003d line.substring(descriptionIndex, fromIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_FROM_DATE] \u003d line.substring(fromIndex","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"nur-haziq"},"content":"                    + Constants.FROM_PREFIX.length(), toIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_TO_DATE] \u003d line.substring(toIndex","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"nur-haziq"},"content":"                    + Constants.TO_PREFIX.length()).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"nur-haziq"},"content":"            inputValidator.checkEventCommand(commandTypeAndParams);","lastModifiedDate":"2024-02-27"},{"lineNumber":161,"author":{"gitId":"nur-haziq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(Constants.IMPROPER_FLAGS_IN_EVENT_ERROR);","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"nur-haziq"},"content":"        } catch (MonaException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":171,"author":{"gitId":"nur-haziq"},"content":"     * Extracts details for \u0027find\u0027 commands from the input line. The detail to be extracted","lastModifiedDate":"2024-03-02"},{"lineNumber":172,"author":{"gitId":"nur-haziq"},"content":"     * is the keyword or phrase to be searched for.","lastModifiedDate":"2024-03-02"},{"lineNumber":173,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-02"},{"lineNumber":174,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line from which the details are to be extracted.","lastModifiedDate":"2024-03-02"},{"lineNumber":175,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":176,"author":{"gitId":"nur-haziq"},"content":"    public void extractDetailsFromFindString(String line) {","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"nur-haziq"},"content":"            int descriptionIndex \u003d line.indexOf(\" \");","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"nur-haziq"},"content":"            this.commandTypeAndParams[Constants.INDEX_DESCRIPTION] \u003d line.substring(descriptionIndex).trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"nur-haziq"},"content":"            inputValidator.checkFindCommand(commandTypeAndParams);","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"nur-haziq"},"content":"        } catch (MonaException e) {","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":190,"author":{"gitId":"nur-haziq"},"content":"     * Parses the input line and extracts the command type and details.","lastModifiedDate":"2024-03-01"},{"lineNumber":191,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":192,"author":{"gitId":"nur-haziq"},"content":"     * @param line The input line to be parsed.","lastModifiedDate":"2024-03-01"},{"lineNumber":193,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":194,"author":{"gitId":"nur-haziq"},"content":"    public void parseInput(String line) {","lastModifiedDate":"2024-02-09"},{"lineNumber":195,"author":{"gitId":"nur-haziq"},"content":"        extractCommandTypeFromString(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":196,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"nur-haziq"},"content":"        // if Command Type cannot be detected, stop parsing input for further details","lastModifiedDate":"2024-02-14"},{"lineNumber":198,"author":{"gitId":"nur-haziq"},"content":"        if (!isValidInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":199,"author":{"gitId":"nur-haziq"},"content":"            return;","lastModifiedDate":"2024-02-14"},{"lineNumber":200,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":201,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"nur-haziq"},"content":"        String commandType \u003d commandTypeAndParams[Constants.INDEX_COMMAND_TYPE];","lastModifiedDate":"2024-02-12"},{"lineNumber":203,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"nur-haziq"},"content":"        switch(commandType) {","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"nur-haziq"},"content":"        case (\"mark\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"nur-haziq"},"content":"            //fallthrough","lastModifiedDate":"2024-02-09"},{"lineNumber":207,"author":{"gitId":"nur-haziq"},"content":"        case (\"unmark\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":208,"author":{"gitId":"nur-haziq"},"content":"            //fallthrough","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"nur-haziq"},"content":"        case(\"delete\"):","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"nur-haziq"},"content":"            extractDetailsFromMarkUnmarkDeleteString(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":211,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"nur-haziq"},"content":"        case (\"todo\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"nur-haziq"},"content":"            extractDetailsFromTodoString(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":215,"author":{"gitId":"nur-haziq"},"content":"        case (\"deadline\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"nur-haziq"},"content":"            extractDetailsFromDeadlineString(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":218,"author":{"gitId":"nur-haziq"},"content":"        case (\"event\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"nur-haziq"},"content":"            extractDetailsFromEventString(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"nur-haziq"},"content":"        case(\"find\"):","lastModifiedDate":"2024-02-29"},{"lineNumber":222,"author":{"gitId":"nur-haziq"},"content":"            extractDetailsFromFindString(line);","lastModifiedDate":"2024-02-29"},{"lineNumber":223,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-29"},{"lineNumber":224,"author":{"gitId":"nur-haziq"},"content":"        case(\"list\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":225,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":226,"author":{"gitId":"nur-haziq"},"content":"        case(\"help\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":227,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":228,"author":{"gitId":"nur-haziq"},"content":"        case(\"bye\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":229,"author":{"gitId":"nur-haziq"},"content":"            this.isNotByeCommand \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":230,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":231,"author":{"gitId":"nur-haziq"},"content":"        // default case is for invalid commands","lastModifiedDate":"2024-02-27"},{"lineNumber":232,"author":{"gitId":"nur-haziq"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":233,"author":{"gitId":"nur-haziq"},"content":"            isValidInput \u003d false;","lastModifiedDate":"2024-02-27"},{"lineNumber":234,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printErrorMessage(Constants.INVALID_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":235,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":236,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":237,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nur-haziq":237}},{"path":"src/main/java/mona/input/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.input;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.output.ConsolePrint;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":" * Handles user interface interactions, mainly input operations.","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"public class Ui {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"    protected Scanner in;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Ui. Initializes the Scanner and displays a greeting message.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"    public Ui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"        ConsolePrint.greet();","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"     * Reads and returns the user\u0027s input from the console, trimming any leading and trailing whitespace.","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"     * @return A trimmed string of the user\u0027s input.","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"nur-haziq":30}},{"path":"src/main/java/mona/manager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.manager;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.output.ConsolePrint;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Event;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Todo;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":" * Manages the list of tasks. Contains methods to update the values in the list, based on the","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":" * user commands.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"public class TaskList {","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"    public static int noOfTasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"        return tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"        noOfTasks \u003d tasks.size();","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"     * Executes the given command to update the task list accordingly.","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"     * @param commandTypeAndParams A String array containing the command type and its parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"    public void executeCommand(String[] commandTypeAndParams) {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"        String commandType \u003d commandTypeAndParams[Constants.INDEX_COMMAND_TYPE];","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"        case (\"mark\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"            int markIndex \u003d Integer.parseInt(commandTypeAndParams[Constants.INDEX_DESCRIPTION]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"            tasks.get(markIndex).markAsDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printMarkStatement(tasks.get(markIndex));","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"        case (\"unmark\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"            int unmarkIndex \u003d Integer.parseInt(commandTypeAndParams[Constants.INDEX_DESCRIPTION]) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"            tasks.get(unmarkIndex).markAsNotDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printUnmarkStatement(tasks.get(unmarkIndex));","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"        case (\"list\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printList(tasks);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"        case (\"todo\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"            Task newTodo \u003d new Todo(commandTypeAndParams[Constants.INDEX_DESCRIPTION]);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printAddTaskStatement(newTodo, noOfTasks + 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"            noOfTasks +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"        case (\"deadline\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"            Task newDeadline \u003d new Deadline(commandTypeAndParams[Constants.INDEX_DESCRIPTION],","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"                    commandTypeAndParams[Constants.INDEX_DEADLINE]);","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printAddTaskStatement(newDeadline, noOfTasks + 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"            noOfTasks +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"        case (\"event\"):","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"            Task newEvent \u003d new Event(commandTypeAndParams[Constants.INDEX_DESCRIPTION],","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"                    commandTypeAndParams[Constants.INDEX_FROM_DATE],","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"                    commandTypeAndParams[Constants.INDEX_TO_DATE]);","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printAddTaskStatement(newEvent, noOfTasks + 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"            noOfTasks +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"        case(\"delete\"):","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"            int deleteIndex \u003d Integer.parseInt(commandTypeAndParams[Constants.INDEX_DESCRIPTION]) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"            Task deletedTask \u003d tasks.get(deleteIndex);","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"            tasks.remove(deleteIndex);","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printDeleteTaskStatement(deletedTask, noOfTasks - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"            noOfTasks -\u003d 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"        case(\"find\"):","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"            String keyword \u003d commandTypeAndParams[Constants.INDEX_DESCRIPTION];","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"            ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e)tasks.stream()","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"                    .filter(t -\u003e t.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printFilteredList(filteredTasks, tasks, keyword);","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"        case(\"help\"):","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"            ConsolePrint.printHelpMessage();","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"        default:","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"nur-haziq"},"content":"            //doNothing?","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nur-haziq":95}},{"path":"src/main/java/mona/output/ConsolePrint.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.output;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"public class ConsolePrint {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"        for (int i \u003d 0; i \u003c 59; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(\"_\");","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"    public static void printUnmarkStatement(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.UNMARK_TASK_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"    public static void printMarkStatement(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.MARK_TASK_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"    public static void printAddTaskStatement(Task task, int noOfTasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.ADD_TASK_MESSAGE + System.lineSeparator() + task);","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(\"Now you have \" + Integer.toString(noOfTasks) + \" tasks in the list.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"    public static void printDeleteTaskStatement(Task task, int noOfTasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.DELETE_TASK_MESSAGE + System.lineSeparator() + task);","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(\"Now you have \" + Integer.toString(noOfTasks) + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.LIST_TASKS_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"                System.out.println(Integer.toString(index) + \".\" + task);","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"                index +\u003d 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"    public static void printFilteredList(ArrayList\u003cTask\u003e filteredTasks, ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"            System.out.printf(Constants.NO_TASKS_FOUND_MESSAGE, keyword);","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"            System.out.println();","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"        } else {","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"            System.out.println(Constants.TASKS_FOUND_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"            for (Task task: filteredTasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"                    int index \u003d tasks.indexOf(task) + 1;","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"                    System.out.println(Integer.toString(index) + \".\" + task);","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"                }","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"nur-haziq"},"content":"    public static void greet() {","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(\"Hello from\\n\" + Constants.ASCII_LOGO);","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(\"Hello! I\u0027m Mona\");","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"nur-haziq"},"content":"    public static void exit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.EXIT_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"nur-haziq"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"nur-haziq"},"content":"        System.out.println(Constants.HELP_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"nur-haziq"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nur-haziq":121}},{"path":"src/main/java/mona/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"import mona.exception.MonaException;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"import mona.input.Parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"import mona.task.Todo;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":" * Handles storage operations, such as saving and loading tasks to and from a .txt file.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"public class Storage {","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Storage. Initializes the relative file path for storage.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"     * @param filePath The relative path to the .txt file where tasks are stored.","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"     * Saves the list of tasks to the storage (.txt) file.","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"    public void saveToStorage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"        String textToSave \u003d generateTextToSave(tasks);","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"            fw.write(textToSave);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"            fw.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"        catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"     * Generates a string representation of the list of tasks for storage. It does so by","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"     * calling the \u0027generateSavedTaskFormat\u0027 method for each task in the list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"     * @param tasks The list of tasks to be converted into a string.","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"     * @return The string representation of the tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"    public static String generateTextToSave(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"                textToAdd +\u003d generateSavedTaskFormat(task) + System.lineSeparator();","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"     * Generates a string representation of a single task for storage.","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"     * For example, the task \u0027todo work\u0027 that is not yet done will be converted into: \" T | 0 | hi \"","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"     * T -\u003e indicating a \u0027todo\u0027 task","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"     * 0 -\u003e indicating that it is not done","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"     * hi -\u003e the description of this \u0027todo\u0027 task","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"     * @param task The task to be converted into a string.","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"    public static String generateSavedTaskFormat(Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"        String isDone \u003d \"0\";","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"            isDone \u003d \"1\";","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"        if (task instanceof Deadline){","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"            output +\u003d \"D | \";","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"            output +\u003d \"E | \";","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"        } else if (task instanceof Todo) {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"nur-haziq"},"content":"            output +\u003d \"T | \";","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"nur-haziq"},"content":"        output +\u003d isDone + \" | \" + task.getDescription();","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"nur-haziq"},"content":"        return output;","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"nur-haziq"},"content":"     * Loads tasks from the storage file into a list.","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"nur-haziq"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"nur-haziq"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"nur-haziq"},"content":"        ArrayList\u003cTask\u003e taskList \u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"nur-haziq"},"content":"            ArrayList\u003cString\u003e dataItems \u003d readFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"nur-haziq"},"content":"            taskList \u003d parse(dataItems);","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"nur-haziq"},"content":"        } catch (IOException | MonaException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"nur-haziq"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"nur-haziq"},"content":"        return taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"nur-haziq"},"content":"     * Reads the storage file and returns its contents as a list of strings, where each line is","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"nur-haziq"},"content":"     * treated as a String object.","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"nur-haziq"},"content":"     * @return The list of strings read from the file.","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"nur-haziq"},"content":"     * @throws MonaException If there is an issue creating the data directory or file.","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"nur-haziq"},"content":"     * @throws IOException If there is an issue reading the file.","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"nur-haziq"},"content":"    private ArrayList\u003cString\u003e readFile() throws MonaException, IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"nur-haziq"},"content":"        File dataFolder \u003d new File(Constants.DATA_FOLDER_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"nur-haziq"},"content":"        File dataFile \u003d new File(dataFolder, Constants.DATA_FILE_NAME);","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"nur-haziq"},"content":"        // Check if the \u0027data\u0027 directory exists, if not create it","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"nur-haziq"},"content":"        if (!dataFolder.exists()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"nur-haziq"},"content":"            boolean wasDirectoryMade \u003d dataFolder.mkdirs();","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"nur-haziq"},"content":"            if (!wasDirectoryMade) {","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"nur-haziq"},"content":"                throw new MonaException(\"Could not create data directory.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"nur-haziq"},"content":"        // Check if the \u0027tasks.txt\u0027 file exists, if not create it","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"nur-haziq"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"nur-haziq"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"nur-haziq"},"content":"                boolean wasFileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"nur-haziq"},"content":"                if (!wasFileCreated) {","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"nur-haziq"},"content":"                    throw new MonaException(\"Could not create data file.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"nur-haziq"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"nur-haziq"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"nur-haziq"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"nur-haziq"},"content":"        ArrayList\u003cString\u003e dataItems \u003d (ArrayList\u003cString\u003e)","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"nur-haziq"},"content":"                Files.readAllLines(dataFile.toPath(), Charset.defaultCharset());","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"nur-haziq"},"content":"        return dataItems;","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"nur-haziq"},"content":"     * Parses a list of strings (obtained from the \u0027readFile\u0027 method) into a list of tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":154,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":155,"author":{"gitId":"nur-haziq"},"content":"     * @param dataItems The list of strings to be parsed.","lastModifiedDate":"2024-03-01"},{"lineNumber":156,"author":{"gitId":"nur-haziq"},"content":"     * @return The list of tasks parsed from the strings.","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":158,"author":{"gitId":"nur-haziq"},"content":"    private ArrayList\u003cTask\u003e parse(ArrayList\u003cString\u003e dataItems) {","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"nur-haziq"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"nur-haziq"},"content":"        for (String line : dataItems) {","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"nur-haziq"},"content":"            if (line \u003d\u003d null) {","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"nur-haziq"},"content":"                break;","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"nur-haziq"},"content":"            String[] commandTypeAndParams \u003d getCommandTypeAndParams(line);","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"nur-haziq"},"content":"            boolean isTaskDone \u003d getTaskDoneStatus(line);","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"nur-haziq"},"content":"            String taskType \u003d commandTypeAndParams[Constants.INDEX_COMMAND_TYPE];","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"nur-haziq"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"nur-haziq"},"content":"            case(\"todo\"):","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"nur-haziq"},"content":"                Task newTodo \u003d new Todo(commandTypeAndParams[Constants.INDEX_DESCRIPTION]);","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"nur-haziq"},"content":"                if (isTaskDone) {","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"nur-haziq"},"content":"                    newTodo.markAsDone();","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"nur-haziq"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"nur-haziq"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2024-02-26"},{"lineNumber":174,"author":{"gitId":"nur-haziq"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"nur-haziq"},"content":"            case(\"deadline\"):","lastModifiedDate":"2024-02-26"},{"lineNumber":176,"author":{"gitId":"nur-haziq"},"content":"                Task newDeadline \u003d new Deadline(commandTypeAndParams[Constants.INDEX_DESCRIPTION],","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"nur-haziq"},"content":"                        commandTypeAndParams[Constants.INDEX_DEADLINE]);","lastModifiedDate":"2024-02-26"},{"lineNumber":178,"author":{"gitId":"nur-haziq"},"content":"                if (isTaskDone) {","lastModifiedDate":"2024-02-26"},{"lineNumber":179,"author":{"gitId":"nur-haziq"},"content":"                    newDeadline.markAsDone();","lastModifiedDate":"2024-02-26"},{"lineNumber":180,"author":{"gitId":"nur-haziq"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"nur-haziq"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2024-02-26"},{"lineNumber":182,"author":{"gitId":"nur-haziq"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":183,"author":{"gitId":"nur-haziq"},"content":"            case(\"event\"):","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"nur-haziq"},"content":"                Task newEvent \u003d new Event(commandTypeAndParams[Constants.INDEX_DESCRIPTION],","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"nur-haziq"},"content":"                        commandTypeAndParams[Constants.INDEX_FROM_DATE],","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"nur-haziq"},"content":"                        commandTypeAndParams[Constants.INDEX_TO_DATE]);","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"nur-haziq"},"content":"                if (isTaskDone) {","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"nur-haziq"},"content":"                    newEvent.markAsDone();","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"nur-haziq"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"nur-haziq"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"nur-haziq"},"content":"                break;","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"nur-haziq"},"content":"            default:","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"nur-haziq"},"content":"                System.out.println(\"Unknown task encountered. Skipping\");","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"nur-haziq"},"content":"                break;","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"nur-haziq"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":197,"author":{"gitId":"nur-haziq"},"content":"        return tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":199,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":200,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":201,"author":{"gitId":"nur-haziq"},"content":"     * Determines the completion status of a task from its string representation (the representation","lastModifiedDate":"2024-03-01"},{"lineNumber":202,"author":{"gitId":"nur-haziq"},"content":"     * in the .txt file)","lastModifiedDate":"2024-03-01"},{"lineNumber":203,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":204,"author":{"gitId":"nur-haziq"},"content":"     * @param inputLine The string representation of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":205,"author":{"gitId":"nur-haziq"},"content":"     * @return True if the task is marked as done, false otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":206,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":207,"author":{"gitId":"nur-haziq"},"content":"    private static boolean getTaskDoneStatus(String inputLine) {","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"nur-haziq"},"content":"        String[] inputElements \u003d inputLine.split(\"\\\\|\");","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"nur-haziq"},"content":"        if (inputElements[1].trim().equals(\"1\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"nur-haziq"},"content":"            return true;","lastModifiedDate":"2024-02-26"},{"lineNumber":212,"author":{"gitId":"nur-haziq"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":213,"author":{"gitId":"nur-haziq"},"content":"            return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":217,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":218,"author":{"gitId":"nur-haziq"},"content":"     * Extracts the command type and parameters from the string representation of a task (the representation","lastModifiedDate":"2024-03-01"},{"lineNumber":219,"author":{"gitId":"nur-haziq"},"content":"     * in the .txt file)","lastModifiedDate":"2024-03-01"},{"lineNumber":220,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":221,"author":{"gitId":"nur-haziq"},"content":"     * @param inputLine The string representation of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":222,"author":{"gitId":"nur-haziq"},"content":"     * @return An array containing the command type and parameters.","lastModifiedDate":"2024-03-01"},{"lineNumber":223,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":224,"author":{"gitId":"nur-haziq"},"content":"    private static String[] getCommandTypeAndParams(String inputLine) {","lastModifiedDate":"2024-02-26"},{"lineNumber":225,"author":{"gitId":"nur-haziq"},"content":"        String[] inputElements \u003d inputLine.split(\"\\\\|\");","lastModifiedDate":"2024-02-26"},{"lineNumber":226,"author":{"gitId":"nur-haziq"},"content":"        String command \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":227,"author":{"gitId":"nur-haziq"},"content":"        String taskType \u003d inputElements[0].trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":228,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":229,"author":{"gitId":"nur-haziq"},"content":"        switch(taskType) {","lastModifiedDate":"2024-02-26"},{"lineNumber":230,"author":{"gitId":"nur-haziq"},"content":"        case(\"T\"):","lastModifiedDate":"2024-02-26"},{"lineNumber":231,"author":{"gitId":"nur-haziq"},"content":"            command \u003d \"todo \" + inputElements[2].trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":232,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-26"},{"lineNumber":233,"author":{"gitId":"nur-haziq"},"content":"        case(\"D\"):","lastModifiedDate":"2024-02-26"},{"lineNumber":234,"author":{"gitId":"nur-haziq"},"content":"            command \u003d \"deadline \" + inputElements[2].trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":235,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-26"},{"lineNumber":236,"author":{"gitId":"nur-haziq"},"content":"        case(\"E\"):","lastModifiedDate":"2024-02-26"},{"lineNumber":237,"author":{"gitId":"nur-haziq"},"content":"            command \u003d \"event \" + inputElements[2].trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":238,"author":{"gitId":"nur-haziq"},"content":"            break;","lastModifiedDate":"2024-02-26"},{"lineNumber":239,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":240,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":241,"author":{"gitId":"nur-haziq"},"content":"        Parser inputParser \u003d new Parser(command);","lastModifiedDate":"2024-02-27"},{"lineNumber":242,"author":{"gitId":"nur-haziq"},"content":"        return inputParser.getCommandTypeAndParams();","lastModifiedDate":"2024-02-26"},{"lineNumber":243,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":244,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"nur-haziq":244}},{"path":"src/main/java/mona/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"import mona.util.Constants;","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":" * Represents a deadline task with a description and a due date,","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":" * which can possibly be stored as a LocalDateTime object.","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"    protected String by;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"    protected boolean isLocalDateTimeStored;","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"    protected DateTimeFormatter inputFormatter;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"    protected DateTimeFormatter outputFormatter;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Deadline. Initializes the task with a description and a due date,","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"     * and attempts to parse the due date as a LocalDateTime.","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"     * @param by The due date of the deadline task, in the format specified by Constants.DATE_TIME_INPUT_FORMAT.","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"        this.isLocalDateTimeStored \u003d true; // set to true by default, exceptions will set it to false.","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"        this.inputFormatter \u003d DateTimeFormatter.ofPattern(Constants.DATE_TIME_INPUT_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"        this.outputFormatter \u003d DateTimeFormatter.ofPattern(Constants.DATE_TIME_OUTPUT_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"            this.dateTime \u003d LocalDateTime.parse(by, inputFormatter);","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"            this.isLocalDateTimeStored \u003d false;","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"     * Returns a string representation of the deadline task, including its type, status, description, and due date.","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"     * If the due date is stored as a LocalDateTime object, it is formatted according","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"     *  to Constants.DATE_TIME_OUTPUT_FORMAT.","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"        String output \u003d \"[D]\" + super.toString() + \" \" +  \"(\" + \"by: \";","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"        if (!isLocalDateTimeStored) {","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"            output +\u003d this.by + \")\";","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"        } else {","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"            output +\u003d this.dateTime.format(outputFormatter) + \")\";","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"        return output;","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"     * Returns the full description of the deadline task, including its description and due date.","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"     * @return The full description of the deadline task.","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"        return super.getDescription() + \" \"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"                + \"/by \" + this.by;","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"nur-haziq":72}},{"path":"src/main/java/mona/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":" * Represents an event task with a description, start date/time, and end date/time. The Event class","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":" * is a subclass of the Task class.","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"    protected String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"    protected String to;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Event. Initializes the task with a description, start date/time, and end date/time.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"     * Returns a string representation of the event task, including its type, status, description,","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"     *  start date/time, and end date/time.","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"        return \"[E]\" + super.toString() + \" \" +  \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"     * Returns the full description of the event task, including its description, start date/time, and end date/time.","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"     * @return The full description of the event task.","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"        return super.getDescription() + \" \"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"                + \"/from \" + this.from + \" \"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"                + \"/to \" + this.to;","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"nur-haziq":47}},{"path":"src/main/java/mona/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":" * Represents a task with a description and a completion status. The Task class is a superclass of the","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":" * Deadline, Event and Todo classes.","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Task. Initializes the task with a description and sets its completion","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"     * status to not done by default.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"        return description;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"        return isDone;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"     * Returns a string representation of the task, including its completion status and description.","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"     * Returns a symbol representing the completion status of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with \"X\"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"nur-haziq":57}},{"path":"src/main/java/mona/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":" * Represents a Todo task with a description. The Todo class","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":" * is a subclass of the Task class.","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"     * Constructor for Todo. Initializes the Todo task with a description.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"     * Returns a string representation of the Todo task, including its type and description.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"nur-haziq":27}},{"path":"src/main/java/mona/util/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"package mona.util;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"public final class Constants {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"    // Private constructor to prevent instantiation","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"    private Constants() {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"    // These are the prefix strings to define the various data types of a command parameter.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"    public static final String TODO_PREFIX \u003d \"todo\";","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"    public static final String MARK_PREFIX \u003d \"mark\";","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"    public static final String UNMARK_PREFIX \u003d \"unmark\";","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"    public static final String DEADLINE_PREFIX \u003d \"deadline\";","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"    public static final String EVENT_PREFIX \u003d \"event\";","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"    public static final String LIST_PREFIX \u003d \"list\";","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nur-haziq"},"content":"    public static final String BY_PREFIX \u003d \"/by\";","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"nur-haziq"},"content":"    public static final String FROM_PREFIX \u003d \"/from\";","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"    public static final String TO_PREFIX \u003d \"/to\";","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"nur-haziq"},"content":"    /* Given that we use a String array (of 4 elements) to store details of a command,","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"nur-haziq"},"content":"     * the constants given below are the indexes for the different data elements of a command.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"     * For example, the command type (eg. list, mark, unmark etc.) is stored as the 0th element","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"nur-haziq"},"content":"     * in the String array.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"nur-haziq"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"nur-haziq"},"content":"    public static final int INDEX_COMMAND_TYPE \u003d 0;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"nur-haziq"},"content":"    public static final int INDEX_DESCRIPTION \u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"nur-haziq"},"content":"    public static final int INDEX_DEADLINE \u003d 2;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"nur-haziq"},"content":"    public static final int INDEX_FROM_DATE \u003d 2;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"nur-haziq"},"content":"    public static final int INDEX_TO_DATE \u003d 3;","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"nur-haziq"},"content":"    public static final String ASCII_LOGO \u003d","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"nur-haziq"},"content":"            \"___  ___                  \\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"nur-haziq"},"content":"            + \"|  \\\\/  |                  \\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"nur-haziq"},"content":"            + \"| .  . | ___  _ __   __ _ \\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"nur-haziq"},"content":"            + \"| |\\\\/| |/ _ \\\\| \u0027_ \\\\ / _` |\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"nur-haziq"},"content":"            + \"| |  | | (_) | | | | (_| |\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"nur-haziq"},"content":"            + \"\\\\_|  |_/\\\\___/|_| |_|\\\\__,_|\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"nur-haziq"},"content":"    public static final String DATA_FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"nur-haziq"},"content":"    public static final String DATA_FOLDER_PATH \u003d \"./data/\";","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"nur-haziq"},"content":"    public static final String DATA_FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"nur-haziq"},"content":"    public static final String DATE_TIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"nur-haziq"},"content":"    public static final String DATE_TIME_OUTPUT_FORMAT \u003d \"MMM dd YYYY, hh:mm a\";","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"nur-haziq"},"content":"    // Thees are the error messages printed when a user enters an invalid command.","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"nur-haziq"},"content":"    public static final String INVALID_COMMAND_ERROR_MESSAGE \u003d \"Hmm, Mona didn\u0027t quite catch that. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"nur-haziq"},"content":"            \"Could you try again? Or type \u0027help\u0027 to see what Mona can do!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"nur-haziq"},"content":"    public static final String EMPTY_FIELDS_ERROR_MESSAGE \u003d \"Oh no, looks like something\u0027s missing. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"nur-haziq"},"content":"            \"Mona needs all the pieces to help you out!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"nur-haziq"},"content":"    public static final String MISSING_BY_PREFIX_IN_DEADLINE_ERROR_MESSAGE \u003d \"Mona needs to know when! \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"nur-haziq"},"content":"            \"Please add \u0027/by\u0027 followed by the deadline so Mona can remind you in time!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"nur-haziq"},"content":"    public static final String IMPROPER_FLAGS_IN_EVENT_ERROR \u003d \"Hmm, Mona\u0027s a bit confused. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"nur-haziq"},"content":"            \"Make sure to include both \u0027/from\u0027 and \u0027/to\u0027 flags \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"nur-haziq"},"content":"            \"in the right order to tell Mona when the event starts and ends!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"nur-haziq"},"content":"    public static final String INVALID_NUMBER_ERROR_MESSAGE \u003d \"Whoops! Mona\u0027s looking for a number. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"nur-haziq"},"content":"            \"Mind giving it another go?\";","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"nur-haziq"},"content":"    public static final String INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE \u003d \"Mona\u0027s scratching her head. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"nur-haziq"},"content":"            \"She can\u0027t find a task with that number! \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"nur-haziq"},"content":"            \"Perhaps you could double-check the task index using the \u0027list\u0027 command and try again?\";","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"nur-haziq"},"content":"    public static final String HELP_MESSAGE \u003d \"Need some help? Mona\u0027s got you covered! Here\u0027s what I can do: \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"nur-haziq"},"content":"            System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"nur-haziq"},"content":"            \"1. todo DESCRIPTION - Add a new to-do task.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"nur-haziq"},"content":"            \"2. deadline DESCRIPTION /by DATE - Add a task with a deadline.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"nur-haziq"},"content":"            \"3. event DESCRIPTION /from DATE /to DATE - Add an event with its start and end date.\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"nur-haziq"},"content":"            System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"nur-haziq"},"content":"            \"4. list - Display all your tasks.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"nur-haziq"},"content":"            \"5. mark INDEX - Mark a task as completed using its list index.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"nur-haziq"},"content":"            \"6. unmark INDEX - Mark a task as not completed using its list index.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"nur-haziq"},"content":"            \"7. delete INDEX - Remove a task using its list index.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"nur-haziq"},"content":"            \"8. find KEYWORD - Search for tasks containing a specific word.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"nur-haziq"},"content":"            \"9. help - Show this list of commands again.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"nur-haziq"},"content":"            \"10. bye - Exit the application.\" + System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"nur-haziq"},"content":"            System.lineSeparator() +","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"nur-haziq"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"nur-haziq"},"content":"            \"Use the commands exactly as shown. Words in ALL CAPS are for you to fill in with your details. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"nur-haziq"},"content":"            \"Let\u0027s get things done together!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"nur-haziq"},"content":"    public static final String ADD_TASK_MESSAGE \u003d \"Got it! I\u0027ve added that task for you.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"nur-haziq"},"content":"    public static final String DELETE_TASK_MESSAGE \u003d \"Consider it gone! That task is deleted.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"nur-haziq"},"content":"    public static final String MARK_TASK_MESSAGE \u003d \"Woohoo! That task is now marked as done.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"nur-haziq"},"content":"    public static final String UNMARK_TASK_MESSAGE \u003d \"No worries! Mona has marked that task as not done. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"nur-haziq"},"content":"            \"There\u0027s always next time!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"nur-haziq"},"content":"    public static final String LIST_TASKS_MESSAGE \u003d \"Here\u0027s all the tasks you\u0027ve got lined up:\";","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"nur-haziq"},"content":"    public static final String TASKS_FOUND_MESSAGE \u003d \"Here\u0027s what I found! Ready to take a look?\";","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"nur-haziq"},"content":"    public static final String NO_TASKS_FOUND_MESSAGE \u003d \"Hmm, I couldn\u0027t find any tasks that match the keyword \u0027%s\u0027. \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"nur-haziq"},"content":"            \"Maybe try a different word?\";","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"nur-haziq"},"content":"    public static final String EXIT_MESSAGE \u003d \"Bye-bye! Mona will miss you. Come back soon!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"nur-haziq"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"nur-haziq":91}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"T | 1 | borrow book","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"D | 0 | return book /by Sunday","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"E | 0 | project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"nur-haziq":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nur-haziq"},"content":"todo borrow book","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nur-haziq"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nur-haziq"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nur-haziq"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nur-haziq"},"content":"mark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nur-haziq"},"content":"mark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nur-haziq"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"unmark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nur-haziq"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nur-haziq"},"content":"todo","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"nur-haziq"},"content":"deadline","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"nur-haziq"},"content":"event","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"nur-haziq"},"content":"mark","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"nur-haziq"},"content":"unmark","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"nur-haziq"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nur-haziq":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"nur-haziq"},"content":"if exist .\\data\\tasks.txt del .\\data\\tasks.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"nur-haziq"},"content":"java -classpath ..\\bin Mona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"nur-haziq":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nur-haziq"},"content":"java -classpath ../bin Mona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"nur-haziq":1}}]
