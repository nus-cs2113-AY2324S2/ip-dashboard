[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"        // Printing the logo and greeting message","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"        String logo \u003d \"  _________   _____      _____   \\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"                \" /   _____/  /  _  \\\\    /     \\\\  \\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"                \" \\\\_____  \\\\  /  /_\\\\  \\\\  /  \\\\ /  \\\\ \\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"                \" /        \\\\/    |    \\\\/    Y    \\\\\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"                \"/_______  /\\\\____|__  /\\\\____|__  /\\n\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"                \"        \\\\/         \\\\/         \\\\/ \";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Hello! I\u0027m SAM\\n\" + logo + \"\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        // Initializing scanner to read user input","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        // Array to store tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        Task[] records \u003d new Task[100];","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        int numItems \u003d 0; // Number of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        int listIndex; // Index for tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        // Main loop","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            // Checking user input","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            if (\"list\".equals(line)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"                // Listing tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"                for (int j \u003d 0; j \u003c numItems; j++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"                    System.out.println((j + 1) + \".\" + \"[\" + (records[j].isDone ? \"X\" : \" \") + \"]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"                            + records[j].description);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"                // Marking a task as done","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"                listIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"                records[listIndex].isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"[x]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"                        + records[listIndex].description);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"            } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"                // Marking a task as not done","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"                listIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"                records[listIndex].isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \"[ ]\"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"                        + records[listIndex].description);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"                // Adding a new task","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"                records[numItems] \u003d new Task(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"                numItems++;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"        // Exiting message","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CerealMiller":56,"-":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"    // Fields to store task information","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"    protected String description; // Description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"    protected boolean isDone; // Flag to indicate if the task is done","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to initialize a task with a description","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d false; // By default, task is not done","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    // Method to get the status icon of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        return (isDone ? \"X\" : \" \"); // Return \"X\" if the task is done, otherwise return \" \"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"    // Method to set the status of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    // Takes an integer parameter: 0 for not done, 1 for done","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    public void setStatus(int x){","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d (x \u003d\u003d 0 ? false : true); // Set isDone based on the value of x","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CerealMiller":22}}]
