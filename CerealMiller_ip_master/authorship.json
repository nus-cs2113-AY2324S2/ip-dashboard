[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"# Contributors","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":9}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"# Duke project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"## Setting up in Intellij","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"   1. Click `Open`.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"   ```","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"   Hello from","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    ____        _        ","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"   ```","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"# User Guide","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"## Features ","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"### Feature-ABC","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"Description of the feature.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"### Feature-XYZ","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"Description of the feature.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"## Usage","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"Describe the action and its outcome.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"Example of usage: ","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"Expected outcome:","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"Description of the outcome.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"expected output","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":29}},{"path":"src/main/java/Sam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"public class Sam {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"        // Printing the logo and greeting message","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"        String logo \u003d \"  _________   _____      _____   \\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"                \" /   _____/  /  _  \\\\    /     \\\\  \\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"                \" \\\\_____  \\\\  /  /_\\\\  \\\\  /  \\\\ /  \\\\ \\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"                \" /        \\\\/    |    \\\\/    Y    \\\\\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"                \"/_______  /\\\\____|__  /\\\\____|__  /\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"                \"        \\\\/         \\\\/         \\\\/ \";","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Hello! I\u0027m SAM\\n\" + logo + \"\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        // Initializing scanner to read user input","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        // Array to store tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        Task[] records \u003d new Task[100];","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        int numItems \u003d 0; // Number of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        int listIndex; // Index for tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        // Main loop","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            // Checking user input","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            if (\"list\".equals(line)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"                // Listing tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"                for (int j \u003d 0; j \u003c numItems; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"                    System.out.println((j + 1) + \".\" + \"[\" + (records[j].isDone ? \"X\" : \" \") + \"]\"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"                            + records[j].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            } else if (words[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"                // Marking a task as done","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"                listIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"                records[listIndex].isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"[x]\"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"                        + records[listIndex].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"            } else if (words[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"                // Marking a task as not done","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"                listIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"                records[listIndex].isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + \"[ ]\"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"                        + records[listIndex].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"                // Adding a new task","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"                records[numItems] \u003d new Task(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"                numItems++;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"        // Exiting message","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":62}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"    // Fields to store task information","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"    protected String description; // Description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"    protected boolean isDone; // Flag to indicate if the task is done","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to initialize a task with a description","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d false; // By default, task is not done","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    // Method to get the status icon of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        return (isDone ? \"X\" : \" \"); // Return \"X\" if the task is done, otherwise return \" \"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"    // Method to set the status of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    // Takes an integer parameter: 0 for not done, 1 for done","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    public void setStatus(int x){","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d (x \u003d\u003d 0 ? false : true); // Set isDone based on the value of x","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"@ECHO OFF","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"REM delete output from previous run","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    exit /b 1","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":")","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"REM compare the output to the expected output","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"then","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    mkdir ../bin","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"fi","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"# delete output from previous run","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"then","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"fi","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"then","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    exit 1","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"fi","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"# convert to UNIX format","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"then","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"    exit 0","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"else","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"    exit 1","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"fi","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"CerealMiller":38}}]
