[{"path":"data/sam-DESKTOP-73DNE3I.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"T | 1 | fuck this","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"# Sam User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"![](https://i.ibb.co/4j2FWkD/Sam.png)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"Welcome to SAM (Simple Task Manager) - a command-line task management application designed to help you stay organized and on top of your tasks. SAM offers a variety of features to streamline your task management process. This user guide will walk you through the key functionalities of SAM and provide examples to help you get started.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"To add a deadline task in SAM, you can use the deadline command followed by the description of the task and the deadline end using the /by keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"Example 1: `deadline Submit report /by 2024-03-15`","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"Expected Outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"[D] [ ] Submit report (by: Mar 15 2024)","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"Example 2: `deadline Return book /by Friday night`","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"[D][ ] Return book (by: Friday night)","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"## Adding event","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"To add an event task in SAM, you can use the event command followed by the description of the task, the event start using the /from keyword, then the event end using the /to keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"Example 1: `event Attend EE2026 lecture /from 2024-03-07 0900 /to 2024-03-07 1030`","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"Expected Outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"[E][ ] Attend EE2026 lecture (Mar 7 2024 0900 to Mar 7 2024 1030)","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"Example 2: `event EE2211 Midterms /from 2024-03-16 10am /to 11am`","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"[E][ ] EE2211 Midterms (Mar 16 2024 10am to 11am)","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"## Adding todo","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"To add a todo, you can use todo followed by the description.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"Example 1: `todo buy milk`","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"Expected Outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"[T][ ] buy milk","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"## List tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"You can show all current tasks with the list command.","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"Example 1: `list`","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"1.[D][ ] Return book (by: Friday night)","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"CerealMiller"},"content":"2.[E][ ] Attend EE2026 lecture (Mar 7 2024 0900 to Mar 7 2024 1030)","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"CerealMiller"},"content":"3.[E][ ] EE2211 Midterms (Mar 16 2024 10am to 11am)","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"4.[T][ ] buy milk","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"CerealMiller"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"CerealMiller"},"content":"## Find tasks by keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"If you are looking for a certain task, use find to filter to tasks containing a keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"CerealMiller"},"content":"Example 1: `find EE`","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"Here are the tasks matching your search:","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"2.[E][ ] Attend EE2026 lecture (Mar 7 2024 0900 to Mar 7 2024 1030)","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"3.[E][ ] EE2211 Midterms (Mar 16 2024 10am to 11am)","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"Now you have 2 tasks in the search list.","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"## Tasks saved between use","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"Tasks created in a previous sessions are saved and are available in future sessions.","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"![](https://i.ibb.co/hg1fp99/Save-feature.png)","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"## Mark/Unmark tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"You can mark/unmark tasks by their list index to reflect their status.","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"Example 1: `mark 4`","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"CerealMiller"},"content":"[T][X] buy milk","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"CerealMiller"},"content":"Example 2: `unmark 4`","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"CerealMiller"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"CerealMiller"},"content":"[T][ ] buy milk","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"CerealMiller"},"content":"## Delete tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"CerealMiller"},"content":"You can delete tasks from the list by their list index, or delete all to clear all tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"CerealMiller"},"content":"Example 1: `delete 1`","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":120,"author":{"gitId":"CerealMiller"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"CerealMiller"},"content":"[D][ ] Return book (by: Friday night)","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"CerealMiller"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"CerealMiller"},"content":"Example 2: `delete all`","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"CerealMiller"},"content":"You sure you want to completely clear your task list? Enter \u0027y\u0027/\u0027Y\u0027 to confirm","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"CerealMiller"},"content":"Option 1: Enter: `y` or `Y`","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"CerealMiller"},"content":"Confirmed, I deleted your entire list.","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"CerealMiller"},"content":"Option 2: Enter: `\u003canything else\u003e`","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":139,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"CerealMiller"},"content":"Understood, I won\u0027t clear your list.","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"CerealMiller"},"content":"## Close program","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"CerealMiller"},"content":"Say bye to Sam to exit","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"CerealMiller"},"content":"`bye`","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"CerealMiller"},"content":"Hope to see you again soon!","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"CerealMiller"},"content":"  _____             ____            __","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"CerealMiller"},"content":" / ___/__  ___  ___/ / /  __ _____ / /","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"CerealMiller"},"content":"/ (_ / _ \\/ _ \\/ _  / _ \\/ // / -_)_/ ","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"CerealMiller"},"content":"\\___/\\___/\\___/\\_,_/_.__/\\_, /\\__(_)  ","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"CerealMiller"},"content":"                        /___/         ","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"CerealMiller":129,"-":27}},{"path":"src/main/java/AddTask/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package AddTask;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Deadline;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"public class AddDeadline extends AddTask{","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    public AddDeadline (ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        super(tasks);","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public void execute(String description) throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        // Split the description into parts","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        String[] deadlineParts \u003d description.split(\"/by\");","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You messed up the deadline format: deadline \u003cdescription\u003e /by \u003cdate\u003e\"); // Throw exception if deadline format is incorrect","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        deadlineParts[0] \u003d deadlineParts[0].trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        deadlineParts[1] \u003d deadlineParts[1].trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        if (deadlineParts[0].equals(\"\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You forgot to add a description for this task.\"); // Throw exception if description is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        if (deadlineParts[1].equals(\"\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You forgot to add a deadline for this task.\"); // Throw exception if deadline is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        deadlineParts[1] \u003d parseStringToDate(deadlineParts[1]); // Parse date string to desired format","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        tasks.add(new Deadline(deadlineParts[0], deadlineParts[1])); // Add deadline task to the task list","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1)); // Print confirmation message","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":33}},{"path":"src/main/java/AddTask/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package AddTask;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Event;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"public class AddEvent extends AddTask{","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    public AddEvent (ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        super(tasks);","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public void execute(String description) throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        // Split the description into parts","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        String[] eventParts \u003d description.split(\"/from|/to\");","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        if (eventParts.length \u003c 3) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You messed up the event format: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\"); // Throw exception if event format is incorrect","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        eventParts[0] \u003d eventParts[0].trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        eventParts[1] \u003d eventParts[1].trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        eventParts[2] \u003d eventParts[2].trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        if (eventParts[0].equals(\"\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You forgot to add a description for this task.\"); // Throw exception if description is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        if (eventParts[1].equals(\"\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You forgot to add a start date for this task.\"); // Throw exception if start date is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        if (eventParts[2].equals(\"\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You forgot to add an end date for this task.\"); // Throw exception if end date is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        eventParts[1] \u003d parseStringToDate(eventParts[1]); // Parse start date string to desired format","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        eventParts[2] \u003d parseStringToDate(eventParts[2]); // Parse end date string to desired format","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"        tasks.add(new Event(eventParts[0], eventParts[1], eventParts[2])); // Add event task to the task list","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1)); // Print confirmation message","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":40}},{"path":"src/main/java/AddTask/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package AddTask;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"public abstract class AddTask {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public String parseStringToDate(String dateString) throws SamException {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        String[] parts \u003d dateString.split(\" \");","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        for(int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"            try {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(parts[i]);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"                parts[i] \u003d parsedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"                // If parsing fails, keep the original part as it is","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        return String.join(\" \", parts); // Return formatted date string","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    public AddTask(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"    public void execute() throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":34}},{"path":"src/main/java/AddTask/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package AddTask;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Todo;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"public class AddTodo extends AddTask{","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    public AddTodo (ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        super(tasks);","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public void execute(String description) throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        description \u003d description.trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You forgot to add a description for this task.\"); // Throw exception if description is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        tasks.add(new Todo(description)); // Add todo task to the task list","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1)); // Print confirmation message","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":23}},{"path":"src/main/java/ListCommands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package ListCommands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    protected void indexCheck(int index) throws SamException {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"                throw new SamException(\"No can do, the list starts at 1.\"); // Throw exception if index is less than 0","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"            } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"                throw new SamException(\"Hey lil bro, you have only \" + tasks.size() + \" things in the list.\"); // Throw exception if index is out of bounds","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    public Command(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    public void execute() throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":28}},{"path":"src/main/java/ListCommands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package ListCommands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public DeleteTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        super(tasks);","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    public void execute(String indexStr) throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"            index \u003d Integer.parseInt(indexStr) - 1; // Convert index string to integer","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"            throw new SamException(\"You can only delete a within bounds list index of \u0027all\u0027 to delete the entire list\"); // Throw exception if index is invalid","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        indexCheck(index); // Check if index is valid","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + tasks.get(index)); // Print confirmation message","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        tasks.remove(index); // Remove task from the task list","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\"); // Print total number of tasks","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"    public void deleteAllTasks(){","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"You sure you want to completely clear your task list? Enter \u0027y\u0027/\u0027Y\u0027 to confirm\");","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        String confirmation \u003d in.nextLine();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        confirmation \u003d confirmation.toLowerCase();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        if (confirmation.equals(\"y\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"Confirmed, I deleted your entire list.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"            while (!tasks.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"                tasks.remove(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Understood, I won\u0027t clear your list.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":41}},{"path":"src/main/java/ListCommands/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package ListCommands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"public class ListTasks extends Command{","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    public ListTasks(ArrayList\u003cTask\u003e tasks){super(tasks);}","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    public void execute(){","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        // Listing tasks","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"Your list is completely empty.\"); // Print message if task list is empty","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"            System.out.println((j + 1) + \".\" + tasks.get(j)); // Print each task with index","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\"); // Print total number of tasks","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":23}},{"path":"src/main/java/ListCommands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package ListCommands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"public class MarkTask extends Command{","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    public MarkTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"        super(tasks);","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public void execute(String indexStr) throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        int index \u003d Integer.parseInt(indexStr) - 1; // Convert index string to integer","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        indexCheck(index); // Check if index is valid","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        tasks.get(index).setStatus(true); // Mark the task as done","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(index)); // Print confirmation message","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":19}},{"path":"src/main/java/ListCommands/SamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package ListCommands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"// Custom exception class for Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"public class SamException extends Exception {","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to create a Commands.SamException with an error message","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    public SamException(String errorMessage) {","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"        if (errorMessage !\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"            // Print the error message if not null","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        // Print a generic error message","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"Please try again.\");","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"CerealMiller":14}},{"path":"src/main/java/ListCommands/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package ListCommands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"public class UnmarkTask extends Command{","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    public UnmarkTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"        super(tasks);","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public void execute(String indexStr) throws SamException{","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        int index \u003d Integer.parseInt(indexStr) - 1; // Convert index string to integer","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        indexCheck(index); // Check if index is valid","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        tasks.get(index).setStatus(false); // Mark the task as done","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.get(index)); // Print confirmation message","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"CerealMiller":19}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import AddTask.AddDeadline;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"import AddTask.AddEvent;","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import AddTask.AddTodo;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.*;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Deadline;","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Event;","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Todo;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"// Parser class to parse user commands and task information","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"class Parser {","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"\t// Method to parse user commands","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"\tpublic static void parseCommand(String line, TaskList taskList) throws SamException {","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"\t\tString[] words \u003d line.split(\" \"); // Split the input line into words","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"\t\tswitch (words[0]) { // Check the first word to determine the command","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"list\":","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"\t\t\t/*taskList.listTasks(); // Execute list command to display tasks*/","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"\t\t\tListTasks listTasks \u003d new ListTasks(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"\t\t\tlistTasks.execute();","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"mark\":","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"\t\t\t/*taskList.markTask(words[1]); // Execute mark command to mark a task as done*/","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"\t\t\tMarkTask markTask \u003d new MarkTask(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"\t\t\tmarkTask.execute(words[1]);","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"unmark\":","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"\t\t\t/*taskList.unmarkTask(words[1]); // Execute unmark command to mark a task as not done*/","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"\t\t\tUnmarkTask unmarkTask \u003d new UnmarkTask(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"\t\t\tunmarkTask.execute(words[1]);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"todo\":","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"\t\t\tAddTodo addTodo \u003d new AddTodo(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"\t\t\taddTodo.execute(line.replace(\"todo\", \"\")); // Execute todo command to add a todo task","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"deadline\":","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"\t\t\tAddDeadline addDeadline \u003d new AddDeadline(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"\t\t\taddDeadline.execute(line.replace(\"deadline\", \"\")); // Execute todo command to add a todo task","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"event\":","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"\t\t\tAddEvent addEvent \u003d new AddEvent(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"\t\t\taddEvent.execute(line.replace(\"event\", \"\")); // Execute todo command to add a todo task","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"delete\":","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"\t\t\ttry {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tDeleteTask deleteTask \u003d new DeleteTask(taskList.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tif (words[1].equals(\"all\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tdeleteTask.deleteAllTasks(); // Execute delete command to delete all tasks","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t} else {","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tdeleteTask.execute(words[1]); // Execute delete command to delete a specific task","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t}","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tthrow new SamException(\"You have to delete an index or delete all.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"find\":","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"\t\t\ttaskList.findTask(line.replace(\"find\", \"\")); // Execute find command to search for tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"\t\tdefault:","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println(\"No valid command detected.\"); // Print error message for invalid command","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println(\"Please try again.\");","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"\t// Method to parse task information from a string","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"\tpublic static Task parseTask(String line) throws SamException {","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"\t\tString[] parts \u003d line.split(\"\\\\|\"); // Split the input line using pipe symbol","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"\t\tif (parts.length \u003c 3) {","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"\t\t\tthrow new SamException(\"Invalid task format in file.\"); // Throw exception for invalid task format","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":70,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":71,"author":{"gitId":"CerealMiller"},"content":"\t\tString type \u003d parts[0].trim(); // Get the type of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"\t\tboolean isDone \u003d parts[1].trim().equals(\"1\"); // Check if the task is done","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"CerealMiller"},"content":"\t\tString description \u003d parts[2].trim(); // Get the description of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":75,"author":{"gitId":"CerealMiller"},"content":"\t\tswitch (type) { // Create a task object based on the task type","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"T\":","lastModifiedDate":"2024-03-02"},{"lineNumber":77,"author":{"gitId":"CerealMiller"},"content":"\t\t\treturn new Todo(description); // Create a Todo task","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"D\":","lastModifiedDate":"2024-03-02"},{"lineNumber":79,"author":{"gitId":"CerealMiller"},"content":"\t\t\tif (parts.length \u003c 4) {","lastModifiedDate":"2024-03-02"},{"lineNumber":80,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tthrow new SamException(\"Invalid deadline task format in file.\"); // Throw exception for invalid deadline task format","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString by \u003d parts[3].trim(); // Get the deadline of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"\t\t\treturn new Deadline(description, by); // Create a Deadline task","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"\t\tcase \"E\":","lastModifiedDate":"2024-03-02"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"\t\t\tif (parts.length \u003c 4) {","lastModifiedDate":"2024-03-02"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tthrow new SamException(\"Invalid event task format in file.\"); // Throw exception for invalid event task format","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString from \u003d parts[3].trim(); // Get the start time of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString to \u003d parts[4].trim(); // Get the end time of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"CerealMiller"},"content":"\t\t\treturn new Event(description, from, to); // Create an Event task","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"\t\tdefault:","lastModifiedDate":"2024-03-02"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"\t\t\tthrow new SamException(\"Unknown task type in file.\"); // Throw exception for unknown task type","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"CerealMiller":95}},{"path":"src/main/java/Sam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"// Main class of the Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"public class Sam {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    // File path for storing task data","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"    private static final String FILE_PATH \u003d \"data/sam.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    // Instances of UI, Storage, and TaskList classes","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to initialize the Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    public Sam() {","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        ui \u003d new Ui(); // Initialize user interface","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        storage \u003d new Storage(FILE_PATH); // Initialize storage for task data","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        try {","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"            taskList \u003d new TaskList(storage.load()); // Load tasks from file into task list","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        } catch (SamException e) {","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"            ui.showLoadingError(); // Display error message if loading tasks fails","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"            taskList \u003d new TaskList(); // Initialize an empty task list","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"    // Method to start the Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    public void run() {","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        ui.printGreeting(); // Display greeting message","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        ui.printTasks(taskList); // Display tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        Scanner in \u003d new Scanner(System.in); // Create scanner to read user input","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        String line \u003d in.nextLine(); // Read user input line by line","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        while (!line.equals(\"bye\")) { // Continue loop until user inputs \"bye\"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"            try {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"                ui.printLine(); // Print separator line","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"                Parser.parseCommand(line, taskList); // Parse and execute user command","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"                storage.saveTasks(taskList.getTasks()); // Save tasks to file","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"                ui.printLine(); // Print separator line","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"                line \u003d in.nextLine(); // Read next user input","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"            } catch (SamException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"                ui.printLine(); // Print separator line","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"                line \u003d in.nextLine(); // Read next user input","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"        ui.printFarewell(); // Display farewell message when user exits the application","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"    // Main method to run the Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"        Sam sam \u003d new Sam(); // Create instance of Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"        sam.run(); // Start the Sam application","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"CerealMiller":52,"-":2}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import java.io.*;","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"// Class to handle storage operations for tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"class Storage {","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"\tprivate String filePath; // File path to store tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"\t// Constructor to initialize Storage object with file path","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"\t\tthis.filePath \u003d filePath; // Set the file path","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"\t// Method to load tasks from file","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"\tpublic ArrayList\u003cTask\u003e load() throws SamException {","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // Create an ArrayList to store tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"\t\tFile file \u003d new File(filePath); // Create a File object with the file path","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"\t\t// Create the file and directory if they don\u0027t exist","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"\t\tif (!file.exists()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"\t\t\ttry {","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tFile directory \u003d new File(\"data\"); // Create a directory for storing data files","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tif (!directory.exists()) {","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tdirectory.mkdir(); // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tfile.createNewFile(); // Create the file","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} catch (IOException e) {","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tthrow new SamException(\"Error creating the file: \" + e.getMessage()); // Throw an exception if file creation fails","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"\t\ttry (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString line;","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"\t\t\twhile ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tTask task \u003d Parser.parseTask(line); // Parse each line of the file into a Task object","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\ttasks.add(task); // Add the Task object to the ArrayList","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"\t\t\tthrow new SamException(\"Error reading tasks from file: \" + e.getMessage()); // Throw an exception if reading from file fails","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"\t\treturn tasks; // Return the ArrayList of tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"\t// Method to save tasks to file","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"\tpublic void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"\t\ttry (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"\t\t\tfor (Task task : tasks) {","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tbw.write(task.saveTask()); // Write each task to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tbw.newLine(); // Add a newline character after each task","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println(\"Error saving tasks to file: \" + e.getMessage()); // Print error message if saving to file fails","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"CerealMiller":56}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.SamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"import sam.task.Task;","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"// Manages the list of tasks and performs various operations on them","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"class TaskList {","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"\tprivate ArrayList\u003cTask\u003e tasks; // Stores the list of tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"\t// Constructor to create TaskList object with existing tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"\tpublic TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"\t\tthis.tasks \u003d tasks; // Initialize tasks ArrayList with existing tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"\t// Default constructor to create an empty TaskList object","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"\tpublic TaskList() {","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"\t\tthis.tasks \u003d new ArrayList\u003c\u003e(); // Initialize an empty tasks ArrayList","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"\t// Retrieves the list of tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"\tpublic ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"\t\treturn tasks; // Returns the tasks ArrayList","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"\t// Finds tasks matching a search term","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"\tpublic void findTask(String findTerm) throws SamException {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"\t\tfindTerm \u003d findTerm.trim(); // Remove leading and trailing whitespaces","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"\t\tif (findTerm.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"\t\t\tthrow new SamException(\"You forgot to enter a search term.\"); // Throw exception if search term is empty","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"\t\tArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e(); // List to store found tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"\t\tArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e(); // List to store indices of found tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString description \u003d tasks.get(i).getDescription(); // Get description of task","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"\t\t\tif (description.toLowerCase().contains(findTerm.toLowerCase())) { // Check if description contains search term","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tfindList.add(tasks.get(i)); // Add task to findList if description matches search term","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tindexList.add(i + 1); // Add index of task to indexList","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"\t\tif (findList.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println(\"Sorry, I couldn\u0027t find any tasks matching your search.\"); // Print message if no tasks found","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"\t\t} else {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println(\"Here are the tasks matching your search:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"\t\t\tfor (int j \u003d 0; j \u003c findList.size(); j++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(indexList.get(j) + \".\" + findList.get(j)); // Print matching tasks with indices","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println(\"Now you have \" + findList.size() + (findList.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the search list.\"); // Print total number of matching tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"CerealMiller":50}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import ListCommands.ListTasks;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"// Handles user interface interactions","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"class Ui {","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"\t// Prints the greeting message","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"\tpublic void printGreeting() {","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"\t\t// Printing the logo and greeting message","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"\t\tString logo \u003d \"   _____\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"  / ____|\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\" | (___   __ _ _ __ ___\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"  \\\\___ \\\\ / _` | \u0027_ ` _ \\\\\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"  ____) | (_| | | | | | |\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\" |_____/ \\\\__,_|_| |_| |_|\\n\" +","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"\";","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Hello! I\u0027m SAM\\n\" + logo + \"\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"\t// Prints the list of tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"\tpublic void printTasks(TaskList tasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"\t\t// Printing tasks","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Here\u0027s what you got saved:\");","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"\t\tListTasks listTasks \u003d new ListTasks(tasks.getTasks());","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"\t\tlistTasks.execute();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"\t\tprintLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"\t// Prints an error message","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"\tpublic void printErrorMessage(String message) {","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"\t\t// Printing error message","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(message);","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"\t// Prints the farewell message","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"\tpublic void printFarewell() {","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"\t\t// Printing farewell message","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Hope to see you again soon!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"  _____             ____            __\\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\" / ___/__  ___  ___/ / /  __ _____ / /\\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"/ (_ / _ \\\\/ _ \\\\/ _  / _ \\\\/ // / -_)_/ \\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"\\\\___/\\\\___/\\\\___/\\\\_,_/_.__/\\\\_, /\\\\__(_)  \\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"                        /___/         \");","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"\t\tprintLine();","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"\t// Shows an error message for loading tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"\tpublic void showLoadingError() {","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"\t\t// Showing loading error message","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"\t// Prints a line separator","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"\tpublic void printLine() {","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"CerealMiller":55}},{"path":"src/main/java/sam/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package sam.task;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"// Represents a task with a deadline, inherits from Task class","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"    // Deadline time","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    protected String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to create a Deadline task with description and deadline","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"        super(description); // Call constructor of parent class to set description","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d false; // Initialize task as not done","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        this.by \u003d by; // Set the deadline time","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    // Setter method to update the deadline time","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    public void setBy(String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    // Getter method to retrieve the deadline time","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        return by;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    // Override toString method to represent Deadline task as a string","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        // Return string representation of Deadline task with its status, description, and deadline","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        return \"[D]\" + getStatusIcon() + \" \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"    // Override saveTask method to format Deadline task for saving to file","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        // Return formatted string to represent Deadline task for saving","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"        return \"D | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CerealMiller":38}},{"path":"src/main/java/sam/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package sam.task;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"// Represents an event task, inherits from Task class","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"    // Attributes to store start and end time of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    private String start;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    private String end;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to create an Event task with description, start time, and end time","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        super(description); // Call constructor of parent class to set description","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        this.start \u003d start; // Set the start time of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"        this.end \u003d end; // Set the end time of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    // Override toString method to represent Event task as a string","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        // Return string representation of Event task with its status, description, start time, and end time","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        return \"[E]\" + getStatusIcon() + \" \" + description + \" (\" + start + \" to \" + end + \")\";","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"    // Override saveTask method to format Event task for saving to file","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        // Return formatted string to represent Event task for saving","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CerealMiller":29}},{"path":"src/main/java/sam/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package sam.task;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"// Represents a generic task","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"public class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"    // Fields to store task information","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    protected String description; // Description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    protected boolean isDone; // Flag to indicate if the task is done or not","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    // Method to set the status of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public void setStatus(boolean x) {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d x;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to initialize a task with a description","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d false; // By default, task is not done","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    // Method to check if the task is done","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        return isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    // Method to get the status icon of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        return (this.isDone() ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"    // Method to save the task information","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        return description; // Return task description","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"    // Method to get the description of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"        return this.description; // Return task description","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CerealMiller":39}},{"path":"src/main/java/sam/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package sam.task;","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"// Represents a todo task, inherits from Task class","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to create a Todo task with description","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"        super(description); // Call constructor of parent class to set description","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"        isDone \u003d false; // Initialize task as not done","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    // Override toString method to represent Todo task as a string","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        // Return string representation of Todo task with its status and description","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    // Override saveTask method to format Todo task for saving to file","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        // Return formatted string to represent Todo task for saving","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        return \"T | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CerealMiller":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"todo one","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"deadline two /by later","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"event three /from present /to future","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"mark 0","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"unmark 2113","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"avengers assemble","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"todomistake","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"deadline /by missing description","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"event no end /from now","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"CerealMiller":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"java -classpath ..\\bin Sam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CerealMiller":2,"-":19}}]
