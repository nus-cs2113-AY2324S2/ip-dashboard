[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"    protected String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    public void setBy(String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        return by;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        return \"[D]\" + getStatusIcon() + description + \" (by: \" + by +\")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CerealMiller":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"    private String description;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"    private String start;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"    private String end;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"        super(\"\"); // Call the constructor of Task with an empty string or the appropriate arguments","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        return \"[E]\" + getStatusIcon() + description + \" (\" + start + \" to \" + end + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CerealMiller":23}},{"path":"src/main/java/Sam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"import java.io.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"public class Sam {","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"\tprivate static final String FILE_PATH \u003d \"data/sam.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"\t\t// Load tasks from file when the program starts up","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"\t\tArrayList\u003cTask\u003e records \u003d loadTasksFromFile();","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"\t\tint numItems \u003d countTasks(records);","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"\t\t// Printing the logo and greeting message","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"\t\tString logo \u003d \"   _____\\n\" +","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"  / ____|\\n\" +","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\" | (___   __ _ _ __ ___\\n\" +","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"  \\\\___ \\\\ / _` | \u0027_ ` _ \\\\\\n\" +","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"  ____) | (_| | | | | | |\\n\" +","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\" |_____/ \\\\__,_|_| |_| |_|\\n\" +","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\"\";","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Hello! I\u0027m SAM\\n\" + logo + \"\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Here\u0027s what you got saved:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"\t\tfor (int j \u003d 0; j \u003c numItems; j++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"\t\t\tSystem.out.println((j + 1) + \".\" + records.get(j));","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"\t\tprintLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"\t\t// Initializing scanner to read user input","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"\t\tScanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"\t\tString line \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"\t\t// Array to store tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"\t\tint listIndex; // Index for tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"\t\t// Main loop","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"\t\twhile (!line.equals(\"bye\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString[] words \u003d line.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"\t\t\tprintLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"\t\t\ttry {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t// Checking user input","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tswitch (words[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Listing tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tfor (int j \u003d 0; j \u003c numItems; j++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t\tSystem.out.println((j + 1) + \".\" + records.get(j));","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t}","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Now you have \" + numItems + (numItems \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Marking a task as done","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tlistIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tindexCheck(listIndex, numItems);","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.get(listIndex).setStatus(true);","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + records.get(listIndex));","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Marking a task as not done","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tlistIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tindexCheck(listIndex, numItems);","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.get(listIndex).setStatus(false);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + records.get(listIndex));","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Adding a new todo task","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tString todoDescription \u003d line.substring(5); // Extracting description","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.add(numItems, new Todo(todoDescription));","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\\n\" + records.get(numItems));","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tnumItems++;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Adding a new deadline task","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tString deadlineDescription \u003d line.substring(9); // Extracting description","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tString[] deadlineParts \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.add(numItems, new Deadline(deadlineParts[0], deadlineParts[1]));","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\\n\" + records.get(numItems));","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tnumItems++;","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Adding a new event task","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tString eventDescription \u003d line.substring(6); // Extracting description","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tString[] eventParts \u003d eventDescription.split(\" /from | /to \");","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.add(numItems, new Event(eventParts[0], eventParts[1], eventParts[2]));","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\\n\" + records.get(numItems));","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tnumItems++;","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"delete\":","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Deleting a task","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tlistIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tindexCheck(listIndex, numItems);","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\\n\" + records.get(listIndex));","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Shift remaining tasks to fill the gap","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tfor (int i \u003d listIndex; i \u003c numItems - 1; i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t\trecords.set(i, records.get(i + 1));","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tnumItems--;","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"Now you have \" + numItems + (numItems \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tdefault:","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\t// Invalid command","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"No valid command detected, please try again.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t}","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tsaveTasksToFile(records, numItems);","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tprintLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tline \u003d in.nextLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} catch (SamException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(\"Try again!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tprintLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tline \u003d in.nextLine(); // Prompt for new input","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(\"That\u0027s not a number!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tprintLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tline \u003d in.nextLine(); // Prompt for new input","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tswitch (words[0]) {","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"todo\":","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"I am expecting: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"deadline\":","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"I am expecting: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tcase \"event\":","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tSystem.out.println(\"I am expecting: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tdefault:","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t}","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(\"Try again!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tprintLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tline \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"CerealMiller"},"content":"\t\t// Exiting message","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"CerealMiller"},"content":"\t\tprintLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"CerealMiller"},"content":"\tprivate static void saveTasksToFile(ArrayList\u003cTask\u003e records, int numItems) {","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"CerealMiller"},"content":"\t\ttry (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"CerealMiller"},"content":"\t\t\tfor (int i \u003d 0; i \u003c numItems; i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tbw.write(records.get(i).saveTask());","lastModifiedDate":"2024-03-01"},{"lineNumber":146,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tbw.newLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"CerealMiller"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"CerealMiller"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"CerealMiller"},"content":"\tprivate static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-03-01"},{"lineNumber":154,"author":{"gitId":"CerealMiller"},"content":"\t\tArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-01"},{"lineNumber":155,"author":{"gitId":"CerealMiller"},"content":"\t\tFile file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"CerealMiller"},"content":"\t\t// Check if the directory and file exist, create them if they don\u0027t","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"CerealMiller"},"content":"\t\tif (!file.exists()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"CerealMiller"},"content":"\t\t\ttry {","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tFile directory \u003d new File(\"data\");","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tif (!directory.exists()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\tdirectory.mkdir();","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tfile.createNewFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(\"Error creating the file: \" + e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"CerealMiller"},"content":"\t\ttry (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"CerealMiller"},"content":"\t\t\tString line;","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"CerealMiller"},"content":"\t\t\tint i \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"CerealMiller"},"content":"\t\t\twhile ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tString[] words \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tif (words[0].equals(\"E\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.set(i, new Event(words[2], words[3], words[4]));","lastModifiedDate":"2024-03-01"},{"lineNumber":177,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t} else if (words[0].equals(\"D\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.set(i, new Deadline(words[2], words[3]));","lastModifiedDate":"2024-03-01"},{"lineNumber":179,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t} else if (words[0].equals(\"T\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t\trecords.set(i, new Todo(words[2]));","lastModifiedDate":"2024-03-01"},{"lineNumber":181,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\trecords.get(i).setStatus(words[1].equals(\"1\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":183,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\ti++;","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"CerealMiller"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"CerealMiller"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"CerealMiller"},"content":"\t\treturn records;","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"CerealMiller"},"content":"\tstatic int countTasks(ArrayList\u003cTask\u003e records) {","lastModifiedDate":"2024-03-01"},{"lineNumber":193,"author":{"gitId":"CerealMiller"},"content":"\t\tint numItems \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"CerealMiller"},"content":"\t\tfor (Task record : records) {","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"CerealMiller"},"content":"\t\t\tif (record !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tnumItems++;","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"CerealMiller"},"content":"\t\treturn numItems;","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"CerealMiller"},"content":"\tprivate static void indexCheck(int listIndex, int numItems) throws SamException {","lastModifiedDate":"2024-03-01"},{"lineNumber":203,"author":{"gitId":"CerealMiller"},"content":"\t\tif (listIndex \u003c 0 || listIndex \u003e\u003d numItems) {","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"CerealMiller"},"content":"\t\t\tif (listIndex \u003c 0) {","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(\"No can do, the list starts at 1.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"CerealMiller"},"content":"\t\t\t} else {","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"CerealMiller"},"content":"\t\t\t\tSystem.out.println(\"Hey lil bro, you have only \" + numItems + \" things in the list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":208,"author":{"gitId":"CerealMiller"},"content":"\t\t\t}","lastModifiedDate":"2024-02-17"},{"lineNumber":209,"author":{"gitId":"CerealMiller"},"content":"\t\t\tthrow new SamException();","lastModifiedDate":"2024-03-01"},{"lineNumber":210,"author":{"gitId":"CerealMiller"},"content":"\t\t}","lastModifiedDate":"2024-02-17"},{"lineNumber":211,"author":{"gitId":"CerealMiller"},"content":"\t}","lastModifiedDate":"2024-02-17"},{"lineNumber":212,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":213,"author":{"gitId":"CerealMiller"},"content":"\tprivate static void printLine() {","lastModifiedDate":"2024-02-17"},{"lineNumber":214,"author":{"gitId":"CerealMiller"},"content":"\t\tSystem.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\t}","lastModifiedDate":"2019-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"CerealMiller":213,"-":3}},{"path":"src/main/java/SamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class SamException extends Exception{","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"CerealMiller":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"    // Fields to store task information","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"    protected String description; // Description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"    protected boolean isDone; // Flag to indicate if the task is done or not","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    public void setStatus(boolean x) {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d x;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    // Constructor to initialize a task with a description","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"        this.isDone \u003d false; // By default, task is not done","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        return isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    // Method to get the status icon of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        return (this.isDone() ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        return description;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"CerealMiller":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"        return \"[T]\" + getStatusIcon() + description;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    public String saveTask(){","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        return \"T | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"CerealMiller":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"todo one","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"deadline two /by later","lastModifiedDate":"2024-03-01"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"event three /from present /to future","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"delete 1","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"mark 0","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"unmark 2113","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"avengers assemble","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"todomistake","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"deadline /by missing description","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"event no end /from now","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"CerealMiller":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"java -classpath ..\\bin Sam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CerealMiller":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"java -classpath ../bin Sam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CerealMiller":1,"-":37}}]
