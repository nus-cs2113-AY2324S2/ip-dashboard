[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                            ____        _   ","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"                           |  _ \\      | |  ","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"     __ _ _ __   ___  _ __ | |_) | ___ | |_ ","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    / _` | \u0027_ \\ / _ \\| \u0027_ \\|  _ \u003c / _ \\| __|","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"   | (_| | | | | (_) | | | | |_) | (_) | |_","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    \\__,_|_| |_|\\___/|_| |_|____/ \\___/ \\__|","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"annoy-o-mus":5,"-":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"    // ASCII Art Generated from: https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dBig\u0026t\u003danonBot","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String LOGO \u003d \"                          ____        _   \\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"            + \"                         |  _ \\\\      | |  \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"            + \"   __ _ _ __   ___  _ __ | |_) | ___ | |_ \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"            + \"  / _` | \u0027_ \\\\ / _ \\\\| \u0027_ \\\\|  _ \u003c / _ \\\\| __|\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"            + \" | (_| | | | | (_) | | | | |_) | (_) | |_ \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"            + \"  \\\\__,_|_| |_|\\\\___/|_| |_|____/ \\\\___/ \\\\__|\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String SECTION_BAR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"     * Splits the user\u0027s command into individual words. Space-delimited.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"     * @param userInput Command from the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"     * @return String array containing space-delimited words.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static String[] getCommandArguments(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"        return userInput.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * Takes user inputs as commands and process them.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     * If the input is not one of the supported commands below, the input shall be seen as a new task.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * Tasks are NOT saved when the program exits.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Possible commands:","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * 1. `bye`, `exit` - Exits the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * 2. `list` - Lists out all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     * 3. `mark \u003ctask_number\u003e - Marks specific task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"     * 4. `unmark` \u003ctask_number\u003e - Marks specific task as undone.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"    private static void parseUserInputs() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        String userInput;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        String[] commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        int taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        while (true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"            commands \u003d getCommandArguments(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            switch (commands[0]) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            case \"exit\":","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                // fallthrough","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"                printGoodbye();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                Task.printTaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"                if (commands.length \u003e\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"                    taskNumber \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"                    Task taskToMark \u003d Task.getTask(taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"                    if (taskToMark !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"                        taskToMark.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"                if (commands.length \u003e\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"                    taskNumber \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"                    Task taskToUnmark \u003d Task.getTask(taskNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"                    if (taskToUnmark !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"                        taskToUnmark.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"                new Task(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(\"Added: \" + userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"                System.out.println(SECTION_BAR + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"     * Prints greeting messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"    private static void printGreetings() {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Hello! I\u0027m anonBot\");","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(SECTION_BAR + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"     * Prints goodbye message.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"    private static void printGoodbye() {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"See ya!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(SECTION_BAR);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"     * Greets the user and process user inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"     * @param args List of command-line arguments.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        printGreetings();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        parseUserInputs();","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"annoy-o-mus":110,"-":5}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"    private static final int MAX_TASKS \u003d 128;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    private String taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    private boolean isTaskDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates a new Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"     * An associated task number is assigned to the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"     * The created Task is also added to the taskList (at the end) for tracking.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"        setTaskDescription(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        setTaskNumber();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        setTaskStatus(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        totalTasks++;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"        taskList.add(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        return taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     * Sets the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    private void setTaskDescription(String taskDescription) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"     * Give the newly created task an associated task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    private void setTaskNumber() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        this.taskNumber \u003d totalTasks + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"     * Sets the status of the associated task.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"     * @param isTaskDone Whether the task has been marked completed.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"    private void setTaskStatus(boolean isTaskDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        this.isTaskDone \u003d isTaskDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"     * Prints out the whole list of tasks that have been added so far.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"    public static void printTaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Here are the tasks at hand:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.format(\"%d.[%c] %s\\n\", t.taskNumber, t.isTaskDone ? \u0027X\u0027 : \u0027 \u0027, t.taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"     * Retrieves the task associated by its task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"     * @param taskNumber The task number to retrieve.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The task associated with the task number. `null` if the task is not found.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"    public static Task getTask(int taskNumber) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"            if (task.taskNumber \u003d\u003d taskNumber) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"                return task;","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        setTaskStatus(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Cool, this task is now done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.format(\"    [%c] %s\\n\", this.isTaskDone ? \u0027X\u0027 : \u0027 \u0027, this.taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        setTaskStatus(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Oh okay, this task is now marked as undone:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.format(\"    [%c] %s\\n\", this.isTaskDone ? \u0027X\u0027 : \u0027 \u0027, this.taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"annoy-o-mus":105}}]
