[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |        Name         | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"---|:-------------------:|:---:|:---:","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Hiko LiYan      | [Github](https://github.com/HikoHikoHiko) | [Homepage](https://github.com/HikoHikoHiko)","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HikoHikoHiko":2,"-":7}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"# Hiko","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"Hiko is a chatbot that has many functionalities.","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"Join and discover more uses of Hiko !!!","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"# Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"1.Download the release package hiko.jar.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"2.Run by right-clicking and selecting “open in terminal”.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"2.Run by right-clicking and selecting “open in terminal”. ","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"3.Type in the following: java -jar hiko.jar","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"4.Strart using Hiko !","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"## Features","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"Hiko has following Features","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"### 1.Store \"ToDo\" tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"- By typing (todo + task descriptions), hiko will auto record down the task that you have to do.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"### 2.Store \"Event\" tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"- By typing (event + event name + /from start time + /to end time) ,hiko will auto record down the event with start and end time.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"### 3.Store \"DeadLine\" tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"- By typing (deadline + task name + /by end time) ,hiko will auto record down the task with its deadline.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"### 4.Auto write in.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"- Hiko will auto record down the tasks that you have input in the .txt file under /docs folder.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"\u003e Setting up Intellij.","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"3. After that, locate the `src/main/java/Hiko.java` file, right-click it, and choose `Run Hiko.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   Hello from ","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"```","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":" __ __  ____  __  _   ___  ","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  ||    ||  |/ ] /   \\","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  | |  | |  \u0027 / |     |","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"|  _  | |  | |    \\ |  O  |","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  | |  | |     \\|     |","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  | |  | |  .  ||     |","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"|__|__||____||__|\\_| \\___/","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"# Updates","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"08/03/2024 Finalize Hiko.","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"HikoHikoHiko":49,"-":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"# Hiko","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"Hiko is a chatbot that has many functionalities.","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"Join and discover more uses of Hiko !!!","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"# Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"1.Download the release package hiko.jar.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"2.Run by right-clicking and selecting “open in terminal”.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"3.Type in the following: java -jar hiko.jar","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"4.Strart using Hiko !","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"## Features","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"Hiko has following Features","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"### 1.Store \"ToDo\" tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"- By typing (todo + task descriptions), hiko will auto record down the task that you have to do.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"### 2.Store \"Event\" tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"- By typing (event + event name + /from start time + /to end time) ,hiko will auto record down the event with start and end time.","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"### 3.Store \"DeadLine\" tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"- By typing (deadline + task name + /by end time) ,hiko will auto record down the task with its deadline.","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"### 4.Auto write in.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"- Hiko will auto record down the tasks that you have input in the .txt file under /docs folder.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"\u003e Setting up Intellij.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"   1. Click `Open`.","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"3. After that, locate the `src/main/java/Hiko.java` file, right-click it, and choose `Run Hiko.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"   Hello from ","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":" __ __  ____  __  _   ___  ","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  ||    ||  |/ ] /   \\","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  | |  | |  \u0027 / |     |","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"|  _  | |  | |    \\ |  O  |","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  | |  | |     \\|     |","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"|  |  | |  | |  .  ||     |","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"|__|__||____||__|\\_| \\___/","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"# Updates","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"08/03/2024 Finalize Hiko.","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"HikoHikoHiko":44,"-":17}},{"path":"docs/dukebot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"T | 0 | todo sdad","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":1}},{"path":"src/main/java/Commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store; // Add a reference to the Store","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an AddCommand with the specified command word, parameter, and Store reference.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * The command word determines the type of task to be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word indicating the type of task to add (\"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The parameter(s) provided for creating the task, such as the description or dates.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for persisting changes to the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"    public AddCommand(String commandWord, String parameter, Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store; // Initialize the Store reference","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the command by adding a new task of the specified type to the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * The specific task type and its details are determined by the command word and parameters.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * After adding the task, changes are saved to persistent storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList to which the new task will be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for interacting with the user and displaying messages.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"todo\":","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            handleAddTodo(tasks, ui);","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"deadline\":","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"            handleAddDeadline(tasks, ui);","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"event\":","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"            handleAddEvent(tasks, ui);","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"        default:","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.defaultmsg(); // Show default message for unknown command","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"        store.saveTasks(); // Save tasks after adding","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     * Handles adding a new todo task.","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList to which the new todo will be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance for user interaction.","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"    private void handleAddTodo(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"        if (parameter.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.defaultmsg(); // Updated to use UI\u0027s default message method for consistency","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"            Task newToDo \u003d new ToDo(parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"            tasks.addTask(newToDo);","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showAddTask(newToDo);","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"     * Handles adding a new deadline task.","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList to which the new deadline will be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance for user interaction.","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"HikoHikoHiko"},"content":"    private void handleAddDeadline(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"HikoHikoHiko"},"content":"            Task newDeadline \u003d new Deadline(parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"HikoHikoHiko"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showAddTask(newDeadline);","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.defaultmsg(); // Use UI\u0027s default message for input errors","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"HikoHikoHiko"},"content":"     * Handles adding a new event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList to which the new event will be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance for user interaction.","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"HikoHikoHiko"},"content":"    private void handleAddEvent(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"HikoHikoHiko"},"content":"            Task newEvent \u003d new Event(parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"HikoHikoHiko"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showAddTask(newEvent);","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.defaultmsg(); // Use UI\u0027s default message for input errors","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether executing this command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as adding a task does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":114}},{"path":"src/main/java/Commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"public class ClearCommand extends Command{","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a ClearCommand with the specified command word, parameter, and store reference.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * The command word and parameter are used by the superclass. The store is used for data persistence.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with this command, typically \"clear\".","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The parameter(s) provided with the command. Not used in this command but required for compatibility with the superclass.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for persisting changes to the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"    public ClearCommand(String commandWord, String parameter, Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the clear command by removing all tasks from the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * It then saves the updated (empty) task list to persistent storage and","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * displays a message to the user confirming that the tasks have been cleared.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList from which all tasks will be cleared.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for interacting with the user and displaying messages.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            tasks.clearAllTasks();","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"            store.saveTasks(); // Persist the updated task list to the storage","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"            Ui.showClearMsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showErrorMsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showErrorMsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether executing this command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as the clear command does not cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":61}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"    protected String commandWord;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    protected String parameter;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a Command instance with a specified command word and parameters.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word that identifies the type of command.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The additional information or parameters required to execute the command.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"    public Command(String commandWord, String parameter) {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"        this.parameter \u003d parameter;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the command. This method should be implemented by concrete command classes","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * to define specific behaviors when the command is executed. Depending on the command,","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * this may involve manipulating tasks, interacting with the user, or altering application state.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing all tasks managed by the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for any required interaction with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute (TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"     * Determines if the execution of this command should signal the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"     * This method must be implemented by concrete command classes to indicate whether","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     * their execution results in the application terminating.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return true if executing this command should terminate the application; false otherwise.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":49}},{"path":"src/main/java/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a Command instance with a specified command keyword and parameters.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command keyword associated with this command.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The parameter(s) provided with the command.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"    public DeleteCommand(String commandWord, String parameter, Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the delete command. It removes the specified task from the task list,","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * displays a confirmation message, and persists the updated task list to storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * If the specified index is invalid, it displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList from which the task will be deleted.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The UI interface for interacting with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            int taskNumber \u003d Integer.parseInt(parameter) - 1;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"            Task taskToDelete \u003d tasks.getTask(taskNumber); // Get the task to delete","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"            tasks.removeTask(taskNumber); // Remove the task from the list","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showDeleteTask(taskToDelete); // Display confirmation message to the user","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"            store.saveTasks(); // Persist the updated task list to the storage","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showErrorMsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.showErrorMsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false, as DeleteCommand does not cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":60}},{"path":"src/main/java/Commands/ExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"public class ExceptionCommand extends Command{","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an ExceptionCommand with a specific command word and any associated parameters.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * This constructor allows for the initialization of the command with details about the","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * exceptional situation or the unrecognized command.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with the exceptional command, typically indicating the type of exception or error.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param Parameter The parameter(s) associated with the command, if any, providing additional details about the exceptional situation.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"    public ExceptionCommand(String commandWord, String Parameter) {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord,Parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the exception handling behavior of this command. Typically, it notifies the user","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * that an unrecognized or improper command was entered by displaying a default message.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * Additional suggestions or help information could also be provided to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList, not directly used by this command but required by the execute method signature.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for interacting with the user, displaying messages or instructions.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.defaultmsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should cause the application to exit. For ExceptionCommand,","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"     * it typically does not cause the application to exit but rather provides feedback about an error or unexpected situation.","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as ExceptionCommand does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":49}},{"path":"src/main/java/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an ExitCommand with the specified command word, parameter,","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * and a reference to the Store for persisting changes.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with this command, typically \"exit\".","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter Any parameters that come with the command. Typically unused for exit commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for saving changes to the task list before exiting.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    public ExitCommand(String commandWord, String parameter, Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store;// Ensure this matches the Command constructor.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the exit command. This method saves all current tasks to the store","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * and then signals the application to close by displaying a goodbye message to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing the tasks to be saved. Not directly used in this command","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     *              but required by the execute method signature.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for interacting with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"        store.saveTasks(); // Saves tasks before exiting.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"        ui.sayGoodbye(); // Informs the user that the application is exiting.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should trigger the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return true always, indicating that this command results in application termination.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"        return true; // Properly overrides isExit to indicate this command exits the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":50}},{"path":"src/main/java/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a FindCommand with the specified command word and search parameter.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with this command, typically \"find\".","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The search keyword used to find matching tasks in the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"    public FindCommand(String commandWord, String parameter){super(commandWord,parameter);};","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the find command. It searches the task list for tasks whose descriptions","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * contain the search keyword specified in the parameter. Matching tasks are then","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * displayed to the user via the UI.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing the tasks to search through.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for interacting with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"        ArrayList\u003cTask\u003e matchingTask;","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"            matchingTask \u003d iterateTask(tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"            Ui.showFindList(matchingTask);","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"No such Task found !\");","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"     * Searches through the provided task list and returns a list of tasks whose descriptions","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"     * contain the search keyword specified in the parameter.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList to search through.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return An ArrayList containing the matching tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"    public ArrayList\u003cTask\u003e iterateTask(TaskList tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"        if (parameter.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"            parameter \u003d null;","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"        ArrayList\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTotalTasks(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"            if (tasks.getTask(i).getDescription().contains(parameter)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"                matchingTask.add(tasks.getTask(i));","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"        return matchingTask;","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as FindCommand does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":76}},{"path":"src/main/java/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a ListCommand with the specified command word and parameter.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * The parameter is not used in this command but is included to match the constructor","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * signature of the superclass.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with this command, typically \"list\".","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter Any parameters that come with the command, not used in ListCommand.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    public ListCommand(String commandWord, String parameter){super(commandWord,parameter);};","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the list command. This method retrieves all tasks from the task list","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"     * and displays them to the user via the UI. The method leverages the Ui class\u0027s","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"     * static method for displaying the list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for interacting with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute (TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.showList(tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"     * Since ListCommand only displays tasks, it does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as ListCommand does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":44}},{"path":"src/main/java/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a MarkCommand with the specified parameters and a reference to the Store.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with this command, expected to be \"mark\".","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The parameter passed with the command, expected to be the task number to mark as done.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for saving changes to the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"    public MarkCommand(String commandWord, String parameter, Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord,parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the command to mark a specific task as done based on the provided task number.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * Updates the task\u0027s status to completed and saves the updated task list to the store.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * If the specified task number is invalid or does not exist, it will catch and handle exceptions by notifying the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing the tasks to be modified.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui object used for interacting with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"            int taskNumber \u003d Integer.parseInt(parameter) - 1;","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            if (commandWord.equals(\"mark\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"                tasks.getTask(taskNumber).markAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"                System.out.println(\"Got it! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(tasks.getTask(taskNumber).toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"            store.saveTasks();","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"No such Task in the List\");","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"Please input correct Task Number\");","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as MarkCommand does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":60}},{"path":"src/main/java/Commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"public class UnknownCommand extends Command{","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an UnknownCommand with the unrecognized command word and any parameters that were entered.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word that was not recognized.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter Any additional parameters that were provided with the unrecognized command.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"    public UnknownCommand(String commandWord, String parameter){super(commandWord,parameter);};","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the behavior for an unknown command by displaying a default message indicating","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     * the command was not recognized, providing a hint to type \u0027help\u0027, and then showing the help message","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"     * with available commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList, not used in this command but required by the execute method signature.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui instance used for displaying messages to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.defaultmsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.hint();","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.helpmsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as UnknownCommand does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":42}},{"path":"src/main/java/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an UnmarkCommand with a specified command word, parameter indicating the task number,","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * and a reference to the Store for persisting changes.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param commandWord The command word associated with this command, typically \"unmark\".","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param parameter The parameter passed with the command, expected to be the task number to unmark.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for saving changes to the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"    public UnmarkCommand(String commandWord, String parameter,Store store){","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"        super(commandWord,parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * Executes the unmark command. It tries to unmark the specified task as not completed based on the task number provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * After unmarking the task, it saves the updated task list to the store. If the specified task number is invalid","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     * or does not exist, it will catch and handle the exception by notifying the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing the tasks to be modified.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui object used for interacting with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            int taskNumber \u003d Integer.parseInt(parameter) - 1;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"            if (commandWord.equals(\"mark\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"                tasks.getTask(taskNumber).unmarkAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"                System.out.println(\"Got it! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(tasks.getTask(taskNumber).toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"            store.saveTasks();","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"No such Task in the List\");","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"Please input correct Task Number\");","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"     * Indicates whether this command should cause the application to exit.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return false always, as UnmarkCommand does not terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":62}},{"path":"src/main/java/Events/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"    protected String by; // Due date/time","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a Deadline task by parsing the input string to extract the task\u0027s description and its due date/time.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input The full input string containing the task description followed by \"/by\" and the due date/time.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    public Deadline(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"        super(extractDescription(input));","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"        this.by \u003d extractBy(input);","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * Extracts the task description from the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input The full input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The extracted task description.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"     * @throws IllegalArgumentException If the input format is invalid and does not contain \"/by\".","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"    private static String extractDescription(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"        if (!input.contains(\" /by \")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"            throw new IllegalArgumentException(\"Invalid deadline format. Ensure you use \u0027 /by \u0027 to specify the deadline.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"        return input.substring(0, input.indexOf(\" /by \")).trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * Extracts the \u0027by\u0027 (deadline) part from the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input The full input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The extracted deadline (due date/time).","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"     * @throws IllegalArgumentException If the input format is invalid and does not contain \"/by\".","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    private static String extractBy(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"        if (!input.contains(\" /by \")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"            throw new IllegalArgumentException(\"Invalid deadline format. Ensure you use \u0027 /by \u0027 to specify the deadline.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"        return input.substring(input.indexOf(\" /by \") + 5).trim(); // \"+ 5\" to skip past \" /by \"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns a string representation of the Deadline task, including its type, status, description, and due date/time.","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toString() {","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description+ \" by \" +by ;","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"     * Formats the Deadline task for file storage, including its type, status, description, and due date/time.","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | by \" + by;","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":65}},{"path":"src/main/java/Events/Echo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Parsers.parsers;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import Commands.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store; // Import Store for persistence","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"public class Echo {","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store; // Add a Store reference for command persistence","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an Echo object with a specified UI and Store.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param ui The Ui object used for interaction with the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for persisting task changes.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"    public Echo(Ui ui, Store store) { // Adjust constructor to receive Store","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        this.ui \u003d ui;  // Initialize it in the constructor","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store; // Initialize Store","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * Starts the main interaction loop of the application. The loop prompts for user commands,","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * processes them, and executes the corresponding actions until an exit command is given.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList that contains all tasks and is manipulated by user commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"    public void HikoStart(TaskList tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"        ui.showHiko();","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"        ui.sayhi(); // Call on instance `ui`","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"        Command input;","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        do {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            String line \u003d ui.UserInput(); // Use `ui` instance to get user input","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.divider(); // Call on instance `ui`","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"            input \u003d parsers.parse(line, store); // Adjust `parsers` method to accept `Store` and correct method name if necessary","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"            input.execute(tasks, ui);","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"            ui.divider(); // Call on instance `ui`","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"        } while (!input.isExit()); // Check if the command is an exit command","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":46}},{"path":"src/main/java/Events/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"public class Event extends Task {","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"    private String from;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"    private String to;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs an Event task by parsing the input string to extract the description,","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"     * start time/date, and end time/date.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input A string containing the event description and timing information,","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     *              expected to follow the format \"description /from start /to end\".","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"    public Event(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"        super(extractDescription(input));","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"        this.from \u003d extractFrom(input);","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"        this.to \u003d extractTo(input);","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"     * Extracts the description part of the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input The full input string containing an event description and timing.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The extracted event description.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * @throws IllegalArgumentException If the input string does not contain the required","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     *      *                                  \u0027/from\u0027 and \u0027/to\u0027 parts for extracting event timing information.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"    private static String extractDescription(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"        if (!input.contains(\" /from \")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"            throw new IllegalArgumentException(\"Invalid event format. Ensure you use \u0027 /from \u0027 to specify the start date/time.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"        return input.substring(0, input.indexOf(\" /from \")).trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"     * Extracts the \u0027from\u0027 part (start time/date) from the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input The full input string containing timing information.","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The extracted start time/date of the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"    private static String extractFrom(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        if (!input.contains(\" /from \") || !input.contains(\" /to \")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"            throw new IllegalArgumentException(\"Invalid event format. Ensure you use \u0027 /from \u0027 and \u0027 /to \u0027 to specify the event period.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"        return input.substring(input.indexOf(\" /from \") + 7, input.indexOf(\" /to \")).trim(); // \"+ 7\" to skip past \" /from \"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"     * Extracts the \u0027to\u0027 part (end time/date) from the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param input The full input string containing timing information.","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The extracted end time/date of the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    private static String extractTo(String input) {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"        if (!input.contains(\" /to \")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"            throw new IllegalArgumentException(\"Invalid event format. Ensure you use \u0027 /to \u0027 to specify the end date/time.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"        return input.substring(input.indexOf(\" /to \") + 5).trim(); // \"+ 5\" to skip past \" /to \"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns a string representation of the Event task, including its type, completion status,","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"     * description, and timing information.","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toString() {","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description+ \" from \" + from + \" to \" + to ;","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"     * Formats the Event task for file storage, including its type, completion status,","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"     * description, and timing information.","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"HikoHikoHiko"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | from\" + from + \" | to \" + to;","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":84}},{"path":"src/main/java/Events/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import javax.swing.table.TableRowSorter;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"public class Task {","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"    protected String description;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"    protected boolean isTodo;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"    protected boolean isEvent;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"    protected boolean isDDL;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a new Task instance with the specified description. Initializes the task as not done and not of any specific type (ToDo, Event, Deadline).","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"    public Task(String description) {","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"        this.isTodo \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        this.isEvent \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        this.isDDL \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     * Marks the task as a ToDo.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    public void markAsToDo() {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        isTodo \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"     * Marks the task as a Deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"    public void markAsDDL() {","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"        isDDL \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"     * Marks the task as an Event.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"    public void markAsEvent() {","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"        isEvent \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     * Unmarks the task as completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns a symbol representing the completion status of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return \"X\" if the task is completed, otherwise a space character.","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns a symbol representing the type of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return \"D\" for Deadlines, \"T\" for ToDos, \"E\" for Events, otherwise a space character.","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"    public String getTypeIcon() { return isDDL? \"D\" :( isTodo ? \"T\" :( isEvent ? \"E\" : \" \"));};","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns a string representation of the task, currently just its description.","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toString() {","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"HikoHikoHiko"},"content":"        return description;","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns the task\u0027s description.","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"HikoHikoHiko"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"HikoHikoHiko"},"content":"        return this.description;","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"HikoHikoHiko"},"content":"     * Formats the task for file storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"HikoHikoHiko"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":104}},{"path":"src/main/java/Events/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import java.io.File;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"public class TaskList {","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store; // Reference to the Store for saving changes","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a new TaskList instance. Initializes the internal list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"     * Associates a Store object with this TaskList for data persistence.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object to be used for saving task changes.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"    public void setStore(Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store;","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"    public static int getTotalTasks(){","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"        return list.size();","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     * Retrieves a task by its position in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"    public Task getTask(int index){","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"        return list.get(index);","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return true if the list is empty, false otherwise.","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"        return (list.isEmpty());","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"     * Removes a task from the list at a specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"    public void removeTask(int index) {list.remove(index);","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"     * Clears all tasks from the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"    public void clearAllTasks() {","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"        this.list.clear(); // Assuming the internal task list is named \u0027list\u0027","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"     * Adds a task to the list and persists changes if a Store is associated.","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param task The Task object to add to the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"HikoHikoHiko"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"HikoHikoHiko"},"content":"        list.add(task);","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"HikoHikoHiko"},"content":"        if (store !\u003d null) store.saveTasks();","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.divider();","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Added: \" + task);","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.divider();","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"HikoHikoHiko"},"content":"     * Retrieves the current list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return An ArrayList containing all tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"HikoHikoHiko"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"HikoHikoHiko"},"content":"        return list;","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":98}},{"path":"src/main/java/Events/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Events;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a new ToDo task with the specified description.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"     * The completion status is set to false by default (in the Task superclass).","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"        super(description);","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     * Returns a string representation of the ToDo task, including its type,","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * completion status, and description. The representation follows the format:","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     * \"[T][status] description\", where status is either \"X\" (for completed tasks)","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"     * or \" \" (for tasks that are not completed).","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"    public String toString() {","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":28}},{"path":"src/main/java/Exceptions/HikoExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"public class HikoExceptions extends Exception{","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a new HikoException with the specified detail message.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"     * The detail message is saved for later retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param message the detail message. The detail message is saved for","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"     *                later retrieval by the {@link #getMessage()} method.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    public HikoExceptions(String message){","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"        super(message);","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":15}},{"path":"src/main/java/Hiko.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Echo;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"public class Hiko {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a Hiko Object","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     * Initializes the user interface and task list.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param filePath The filepath of the data.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    public Hiko(String filePath) {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"        ui \u003d new Ui(); // Initializes the UI component","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"        store \u003d new Store(filePath); // Initializes the Store with the file path for task persistence","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"        tasks \u003d new TaskList(); // Initializes the TaskList","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"        store.setTaskList(tasks); // Links the TaskList with the Store for loading and saving","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * Initilize the bot with UI","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * Start the Echo interaction loop","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"    public void start() {","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"        Echo echo \u003d new Echo(ui, store); // Initializes the Echo component with UI","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"        echo.HikoStart(tasks); // Starts the Echo interaction loop","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"     * The mian method to start the Hiko application","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param args The command line takes in arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        String filePath \u003d \"./data/duke.txt\"; // Define the file path for storing tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"        Hiko hiko \u003d new Hiko(filePath); // Create an instance of Hiko with the specified file path","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"        hiko.start(); // Start the chatbot","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"HikoHikoHiko":49}},{"path":"src/main/java/HikoUi/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package HikoUi;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"import HikoUi.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"    static final String break_line \u003d \"----------------------------------------\";","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"    private final Scanner sc;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a new Ui instance, initializing the scanner for reading user input.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"    public Ui() {","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return The user\u0027s input line as a String.","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"    public String UserInput() {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays the Hiko application logo and a welcome message.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showHiko() {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"        String logo \u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"                \"  \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"                        \" __ __  ____  __  _   ___  \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"|  |  ||    ||  |/ ] /   \\\\ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"|  |  | |  | |  \u0027 / |     |\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"|  _  | |  | |    \\\\ |  O  |\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"|  |  | |  | |     \\\\|     |\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"|  |  | |  | |  .  ||     |\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"|__|__||____||__|\\\\_| \\\\___/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"                        \"                            \";","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Hello from  \\n\" + logo);","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"     * Prints a greeting message to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void sayhi() {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"How can Hiko help you today?\");","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a hint message suggesting the user type \u0027help\u0027 for a list of commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void hint() {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Type \u0027help\u0027 for list of instructions.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"     * Prints a divider line to the console.","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void divider() {","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(break_line);","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a help message listing all available commands and their descriptions.","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void helpmsg() {","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.divider();","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027bye\u0027 to exit \");","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027list\u0027 to display the list\");","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027clearlist\u0027 to clear the list \");","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027mark\u0027 plus a number to mark that task as done\");","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027unmark\u0027 plus a number to unmark that task.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027help\u0027 for list of instructions.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027todo [description]\u0027 to add a new Events.ToDo task\");","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027deadline [description] /by [time]\u0027 to add a new Events.Deadline\");","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027event [description] /from [start time] /to [end time]\u0027 to add a new Events.Event\");","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"\u0027delete\u0027 plus a number to delete that task.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.divider();","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a default message when an unknown command is entered.","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void defaultmsg() {","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.divider();","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Sorry, Hiko doesn\u0027t understand that command.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Type \u0027help\u0027 for a list of valid commands.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"HikoHikoHiko"},"content":"        Ui.divider();","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a goodbye message to the user and exits the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Thank you for using our task manager. Goodbye!\");","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"HikoHikoHiko"},"content":"        System.exit(0);","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"HikoHikoHiko"},"content":"     * Shows the list of tasks currently in the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The TaskList containing the tasks to display.","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showList(TaskList tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"HikoHikoHiko"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"There are no Tasks in Your list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"HikoHikoHiko"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"HikoHikoHiko"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTotalTasks(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"HikoHikoHiko"},"content":"                System.out.println(i + 1 + \".\" + tasks.getTask(i).toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"HikoHikoHiko"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a list of tasks that match a search query.","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks An ArrayList of Task objects that match the search criteria.","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showFindList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"HikoHikoHiko"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"Which task are you looking for ?\");","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"HikoHikoHiko"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"HikoHikoHiko"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"HikoHikoHiko"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"HikoHikoHiko"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a message confirming the addition of a new task.","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The Task that was added.","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showAddTask(Task tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Now you have \" + TaskList.getTotalTasks() + \" tasks in the list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays an error message for invalid command or number input.","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showErrorMsg() {","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"I guess You have input a wrong number or command\");","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a message confirming the deletion of a task.","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param tasks The Task that was removed.","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showDeleteTask(Task tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"Now you have \" + (TaskList.getTotalTasks() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"HikoHikoHiko"},"content":"     * Displays a message confirming that all tasks have been cleared from the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"HikoHikoHiko"},"content":"    public static void showClearMsg() {","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"HikoHikoHiko"},"content":"        System.out.println(\"I have cleared all the tasks in the list ! \");","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":186}},{"path":"src/main/java/Parsers/parsers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Parsers;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Commands.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Storage.Store;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"public class parsers {","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"    private Store store; // Add a reference to the Store","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"     * Constructs a parser with a reference to the Store.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object used for data persistence, passed to commands that require it.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"    public parsers(Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"        this.store \u003d store; // Initialize the Store reference","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"     * Parses a string description of a command into an executable Command object.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     * This method determines the type of command based on the input string,","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"     * initializes the command with necessary parameters, and returns the Command object.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"     * Commands related to task modification or querying are provided with a Store","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"     * object to enable data persistence.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param description The full command string input by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param store The Store object for commands that require data persistence.","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A Command object ready to be executed by the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"    public static Command parse(String description, Store store) {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"        String command;","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"        Command commandObject;","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"        int index \u003d description.indexOf(\" \");","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"        String parameter \u003d \"\";","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"            command \u003d description.substring(0, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"            parameter \u003d description.substring(index + 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"            command \u003d description;","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"        switch (command) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"todo\":","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"deadline\":","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"event\":","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new AddCommand(command, parameter, store); // Pass the store instance to AddCommand","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"bye\":","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new ExitCommand(command, parameter, store);","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"list\":","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new ListCommand(command, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"mark\":","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new MarkCommand(command, parameter,store);","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"unmark\":","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new UnmarkCommand(command, parameter,store);","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new DeleteCommand(command, parameter,store);","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"find\":","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new FindCommand(command, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"        case \"clearlist\":","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new ClearCommand(command, parameter,store);","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"        default:","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"            commandObject \u003d new UnknownCommand(command, parameter);","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"            break;","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"        return commandObject;","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":77}},{"path":"src/main/java/Storage/Store.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"package Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"HikoHikoHiko"},"content":"import Events.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"HikoHikoHiko"},"content":"import Exceptions.HikoExceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"HikoHikoHiko"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"HikoHikoHiko"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"HikoHikoHiko"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.List;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"HikoHikoHiko"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"HikoHikoHiko"},"content":"public class Store {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"HikoHikoHiko"},"content":"    private String filePath;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"HikoHikoHiko"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"HikoHikoHiko"},"content":"     * Instance of the function","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param filePath Takes in the filepath","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"HikoHikoHiko"},"content":"    public Store(String filePath) {","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"HikoHikoHiko"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"HikoHikoHiko"},"content":"     * Sets the TaskList object for this store and loads tasks from the file.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"HikoHikoHiko"},"content":"     * @param taskList The TaskList instance to which loaded tasks will be added.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"HikoHikoHiko"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"HikoHikoHiko"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"HikoHikoHiko"},"content":"        loadTasks();","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"HikoHikoHiko"},"content":"     * Loads tasks from the file specified by filePath. If the file does not exist,","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"HikoHikoHiko"},"content":"     * it creates the file and directories as needed. Loaded tasks are added to the","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"HikoHikoHiko"},"content":"     * TaskList associated with this Store.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"HikoHikoHiko"},"content":"    private void loadTasks() {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"HikoHikoHiko"},"content":"            List\u003cTask\u003e tasks \u003d readTasks();","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"HikoHikoHiko"},"content":"            tasks.forEach(task -\u003e taskList.addTask(task));","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"HikoHikoHiko"},"content":"     * Reads tasks from the file and returns them as a List.","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"HikoHikoHiko"},"content":"     * Tasks are parsed based on a predefined format.","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"HikoHikoHiko"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"HikoHikoHiko"},"content":"     * @return A List of Task objects read from the file.","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"HikoHikoHiko"},"content":"     * @throws IOException If an IO error occurs reading from the file.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"HikoHikoHiko"},"content":"    private List\u003cTask\u003e readTasks() throws IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"HikoHikoHiko"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"HikoHikoHiko"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"HikoHikoHiko"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"HikoHikoHiko"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"HikoHikoHiko"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"HikoHikoHiko"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"HikoHikoHiko"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"HikoHikoHiko"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"HikoHikoHiko"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"HikoHikoHiko"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"HikoHikoHiko"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"HikoHikoHiko"},"content":"                case \"T\":","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"HikoHikoHiko"},"content":"                    task \u003d new ToDo(parts[2]);","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"HikoHikoHiko"},"content":"                    break;","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"HikoHikoHiko"},"content":"                case \"D\":","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"HikoHikoHiko"},"content":"                    task \u003d new Deadline(parts[2] + \" /by \" + parts[3]);","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"HikoHikoHiko"},"content":"                    break;","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"HikoHikoHiko"},"content":"                case \"E\":","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"HikoHikoHiko"},"content":"                    task \u003d new Event(parts[2] + \" /from \" + parts[3] + \" /to \" + parts[4]);","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"HikoHikoHiko"},"content":"                    break;","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"HikoHikoHiko"},"content":"                }","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"HikoHikoHiko"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"HikoHikoHiko"},"content":"                    if (parts[1].equals(\"1\")) task.markAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"HikoHikoHiko"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"HikoHikoHiko"},"content":"                }","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"HikoHikoHiko"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"HikoHikoHiko"},"content":"                System.out.println(\"An error occurred while parsing a task: \" + e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"HikoHikoHiko"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"HikoHikoHiko"},"content":"        return tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"HikoHikoHiko"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"HikoHikoHiko"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"HikoHikoHiko"},"content":"     * Saves all tasks from the TaskList to the file in a specified format.","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"HikoHikoHiko"},"content":"     * If saving fails, an error message is printed to the console.","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"HikoHikoHiko"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"HikoHikoHiko"},"content":"    public void saveTasks() {","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"HikoHikoHiko"},"content":"        List\u003cString\u003e lines \u003d taskList.getTasks().stream()","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"HikoHikoHiko"},"content":"                .map(Task::toFileFormat)","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"HikoHikoHiko"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"HikoHikoHiko"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"HikoHikoHiko"},"content":"            Files.write(Paths.get(this.filePath), lines);","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"HikoHikoHiko"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"HikoHikoHiko"},"content":"            System.out.println(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"HikoHikoHiko"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"HikoHikoHiko"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"HikoHikoHiko"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"HikoHikoHiko":111}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HikoHikoHiko"},"content":"hello","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"HikoHikoHiko":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"HikoHikoHiko"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"HikoHikoHiko"},"content":"java -classpath ..\\bin Hiko \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HikoHikoHiko":2,"-":19}}]
