[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"# Huan","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"A simple, easy to use chatbot for task managing.","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"Its name\u0027s Huan, btw","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Geinzit":3,"-":1}},{"path":"src/main/java/huan/main/Huan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.main;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":" * Main Class","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"public class Huan {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"     * Main function","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"     * @param args unused","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"        UI.displayWelcomeMessage();","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"        Storage.readFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"        Parser.parseCommands();","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Geinzit":17,"-":2}},{"path":"src/main/java/huan/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.main;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"import huan.task.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":" * Class for parsing all user commands","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"     * Method for parsing command inputs","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"    public static void parseCommands() {","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"        while(true) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"            UI.displaySeparator();","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"            String inputCommand \u003d scanner.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"            String[] words \u003d inputCommand.split(\" \");","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"            String firstWord \u003d words[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"            String suffixWord;","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"            if(words.length \u003e 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"                suffixWord \u003d inputCommand.substring(words[0].length() + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"            else {","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"                suffixWord \u003d \"\";","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"            switch (firstWord) {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"            case (\"bye\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"                if(!suffixWord.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027bye\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Geinzit"},"content":"                UI.displayByeMessage();","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Geinzit"},"content":"                return;","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Geinzit"},"content":"            case (\"list\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Geinzit"},"content":"                if(!suffixWord.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027list\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Geinzit"},"content":"                UI.listTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Geinzit"},"content":"            case (\"mark\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Geinzit"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Geinzit"},"content":"                    int markIndex \u003d Integer.parseInt(suffixWord);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Geinzit"},"content":"                    if (!TaskList.isIndexValid(markIndex)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Geinzit"},"content":"                        UI.displayIndexError();","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Geinzit"},"content":"                    } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Geinzit"},"content":"                        TaskList.tasks.get(markIndex - 1).setIsDone(true);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Geinzit"},"content":"                        UI.displayMarkTaskSuccess(markIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Geinzit"},"content":"                        Storage.writeFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Geinzit"},"content":"                    }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Geinzit"},"content":"                } catch (Exception e){","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027mark *n\u0027, where n is the index of the task you wish to mark as finished\");","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Geinzit"},"content":"            case (\"unmark\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Geinzit"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Geinzit"},"content":"                    int unmarkIndex \u003d Integer.parseInt(suffixWord);","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Geinzit"},"content":"                    if (!TaskList.isIndexValid(unmarkIndex)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Geinzit"},"content":"                        UI.displayIndexError();","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Geinzit"},"content":"                    } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Geinzit"},"content":"                        TaskList.tasks.get(unmarkIndex - 1).setIsDone(false);","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Geinzit"},"content":"                        UI.displayUnmarkTaskSuccess(unmarkIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Geinzit"},"content":"                        Storage.writeFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Geinzit"},"content":"                    }","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Geinzit"},"content":"                } catch (Exception e){","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027unmark *n\u0027, where n is the index of the task you wish to mark as unfinished.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Geinzit"},"content":"            case (\"todo\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Geinzit"},"content":"                if(suffixWord.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027todo *task_name\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Geinzit"},"content":"                TodoTask todoTask \u003d parseTodoTask(suffixWord, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Geinzit"},"content":"                TaskList.addTask(todoTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Geinzit"},"content":"                UI.displayAddTodoSuccess(todoTask.getName());","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Geinzit"},"content":"                Storage.writeFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Geinzit"},"content":"            case (\"event\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Geinzit"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Geinzit"},"content":"                    EventTask eventTask \u003d parseEventTask(suffixWord, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Geinzit"},"content":"                    TaskList.addTask(eventTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Geinzit"},"content":"                    UI.displayAddEventSuccess(eventTask.getName());","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Geinzit"},"content":"                    Storage.writeFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Geinzit"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027event *event_name /from *start_time /to *end_time\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Geinzit"},"content":"            case (\"deadline\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Geinzit"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"Geinzit"},"content":"                    DeadlineTask deadlineTask \u003d parseDeadlineTask(suffixWord, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Geinzit"},"content":"                    TaskList.addTask(deadlineTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Geinzit"},"content":"                    UI.displayAddDeadlineSuccess(deadlineTask.getName());","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Geinzit"},"content":"                    Storage.writeFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"Geinzit"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027deadline *task_name /by *deadline_time\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Geinzit"},"content":"            case (\"delete\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Geinzit"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Geinzit"},"content":"                    int deleteIndex \u003d Integer.parseInt(suffixWord);","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"Geinzit"},"content":"                    if (!TaskList.isIndexValid(deleteIndex)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Geinzit"},"content":"                        UI.displayIndexError();","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Geinzit"},"content":"                    } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Geinzit"},"content":"                        TaskList.tasks.get(deleteIndex - 1).setIsDone(true);","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"Geinzit"},"content":"                        UI.displayDeleteTaskSuccess(deleteIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"Geinzit"},"content":"                        TaskList.tasks.remove(deleteIndex - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"Geinzit"},"content":"                        Storage.writeFile();","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Geinzit"},"content":"                    }","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"Geinzit"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027delete *n\u0027, where n is the index of the task you wish to delete.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Geinzit"},"content":"            case (\"find\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"Geinzit"},"content":"                if(!suffixWord.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"Geinzit"},"content":"                    UI.displayMatchingTasks(suffixWord);","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"Geinzit"},"content":"                } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027find *keyword\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"Geinzit"},"content":"                break;   ","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"Geinzit"},"content":"            case (\"list_deadline\"):","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"Geinzit"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"Geinzit"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"Geinzit"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(suffixWord, formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"Geinzit"},"content":"                    UI.listTaskBeforeDateTime(dateTime);","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"Geinzit"},"content":"                } catch(DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"Geinzit"},"content":"                    UI.displayFormatError(\"\u0027list_deadline yyyy-MM-dd HH:mm:ss\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"Geinzit"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"Geinzit"},"content":"                UI.displayUnrecognizedMessage();","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"Geinzit"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"Geinzit"},"content":"     * Method for parsing a TodoTask from the command","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"Geinzit"},"content":"     * @param suffixWord the command-string to be parsed","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"Geinzit"},"content":"     * @return a parsed TodoTask type object","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"Geinzit"},"content":"    public static TodoTask parseTodoTask(String suffixWord, Boolean isDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"Geinzit"},"content":"        return new TodoTask(suffixWord, isDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"Geinzit"},"content":"     * Method for parsing a DeadlineTask from the command","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"Geinzit"},"content":"     * @param suffixWord the command-string to be parsed","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"Geinzit"},"content":"     * @return a parsed DeadlineTask type object","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"Geinzit"},"content":"     * @throws Exception detect whether the command format is incorrect","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"Geinzit"},"content":"    public static DeadlineTask parseDeadlineTask(String suffixWord, Boolean isDone) throws Exception{","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"Geinzit"},"content":"        StringBuilder ddlTime \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"Geinzit"},"content":"        StringBuilder name \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"Geinzit"},"content":"        String[] words \u003d suffixWord.split(\" \");","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"Geinzit"},"content":"        /*","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"Geinzit"},"content":"          state:","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"Geinzit"},"content":"          0 means currently concatenating name","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"Geinzit"},"content":"          1 means currently concatenating ddlTime","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"Geinzit"},"content":"        */","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"Geinzit"},"content":"        int state \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"Geinzit"},"content":"        for(String word : words) {","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"Geinzit"},"content":"            if (Objects.equals(word, \"/by\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"Geinzit"},"content":"                state +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"Geinzit"},"content":"            else {","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"Geinzit"},"content":"                switch (state) {","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"Geinzit"},"content":"                case (0):","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"Geinzit"},"content":"                    name.append((name.length() \u003d\u003d 0) ? \"\" : \" \").append(word);","lastModifiedDate":"2024-03-06"},{"lineNumber":199,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"Geinzit"},"content":"                case (1):","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"Geinzit"},"content":"                    ddlTime.append((ddlTime.length() \u003d\u003d 0 ? \"\" : \" \")).append(word);","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"Geinzit"},"content":"        if(state !\u003d 1 || name.toString().isEmpty() || ddlTime.toString().isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"Geinzit"},"content":"            throw new Exception();","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"Geinzit"},"content":"        return new DeadlineTask(name.toString(), ddlTime.toString(), isDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"Geinzit"},"content":"     * Method for parsing a EventTask from the command","lastModifiedDate":"2024-03-06"},{"lineNumber":215,"author":{"gitId":"Geinzit"},"content":"     * @param suffixWord the command-string to be parsed","lastModifiedDate":"2024-03-06"},{"lineNumber":216,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":217,"author":{"gitId":"Geinzit"},"content":"     * @return a parsed EventTask type object","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"Geinzit"},"content":"     * @throws Exception detect whether the command format is incorrect","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"Geinzit"},"content":"    public static EventTask parseEventTask(String suffixWord, Boolean isDone) throws Exception{","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"Geinzit"},"content":"        StringBuilder startTime \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":222,"author":{"gitId":"Geinzit"},"content":"        StringBuilder endTime \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":223,"author":{"gitId":"Geinzit"},"content":"        StringBuilder name \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":224,"author":{"gitId":"Geinzit"},"content":"        String[] words \u003d suffixWord.split(\" \");","lastModifiedDate":"2024-03-06"},{"lineNumber":225,"author":{"gitId":"Geinzit"},"content":"        /*","lastModifiedDate":"2024-03-06"},{"lineNumber":226,"author":{"gitId":"Geinzit"},"content":"          state:","lastModifiedDate":"2024-03-06"},{"lineNumber":227,"author":{"gitId":"Geinzit"},"content":"          0 means currently concatenating name","lastModifiedDate":"2024-03-06"},{"lineNumber":228,"author":{"gitId":"Geinzit"},"content":"          1 means currently concatenating startTime","lastModifiedDate":"2024-03-06"},{"lineNumber":229,"author":{"gitId":"Geinzit"},"content":"          2 means currently concatenating endTime","lastModifiedDate":"2024-03-06"},{"lineNumber":230,"author":{"gitId":"Geinzit"},"content":"         */","lastModifiedDate":"2024-03-06"},{"lineNumber":231,"author":{"gitId":"Geinzit"},"content":"        int state \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"Geinzit"},"content":"        for(String word : words) {","lastModifiedDate":"2024-03-06"},{"lineNumber":233,"author":{"gitId":"Geinzit"},"content":"            if (Objects.equals(word, \"/from\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":234,"author":{"gitId":"Geinzit"},"content":"                state +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":235,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":236,"author":{"gitId":"Geinzit"},"content":"            else if (Objects.equals(word, \"/to\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":237,"author":{"gitId":"Geinzit"},"content":"                state +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":238,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":239,"author":{"gitId":"Geinzit"},"content":"            else {","lastModifiedDate":"2024-03-06"},{"lineNumber":240,"author":{"gitId":"Geinzit"},"content":"                switch (state) {","lastModifiedDate":"2024-03-06"},{"lineNumber":241,"author":{"gitId":"Geinzit"},"content":"                case (0):","lastModifiedDate":"2024-03-06"},{"lineNumber":242,"author":{"gitId":"Geinzit"},"content":"                    name.append((name.length() \u003d\u003d 0) ? \"\" : \" \").append(word);","lastModifiedDate":"2024-03-06"},{"lineNumber":243,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":244,"author":{"gitId":"Geinzit"},"content":"                case (1):","lastModifiedDate":"2024-03-06"},{"lineNumber":245,"author":{"gitId":"Geinzit"},"content":"                    startTime.append((startTime.length() \u003d\u003d 0 ? \"\" : \" \")).append(word);","lastModifiedDate":"2024-03-06"},{"lineNumber":246,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":247,"author":{"gitId":"Geinzit"},"content":"                case (2):","lastModifiedDate":"2024-03-06"},{"lineNumber":248,"author":{"gitId":"Geinzit"},"content":"                    endTime.append((endTime.length() \u003d\u003d 0 ? \"\" : \" \")).append(word);","lastModifiedDate":"2024-03-06"},{"lineNumber":249,"author":{"gitId":"Geinzit"},"content":"                    break;","lastModifiedDate":"2024-03-06"},{"lineNumber":250,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":251,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":252,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":253,"author":{"gitId":"Geinzit"},"content":"        if(state !\u003d 2 || name.toString().isEmpty() || startTime.toString().isEmpty() || endTime.toString().isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":254,"author":{"gitId":"Geinzit"},"content":"            throw new Exception();","lastModifiedDate":"2024-03-06"},{"lineNumber":255,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":256,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":257,"author":{"gitId":"Geinzit"},"content":"        return new EventTask(name.toString(), startTime.toString(), endTime.toString(), isDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":258,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":259,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Geinzit":259}},{"path":"src/main/java/huan/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.main;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"import huan.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":" * Class for reading \u0026 writing input/output to file","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"    private static String taskFile \u003d \"tasklist.txt\";","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"     * Method for processing a line of input","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"     * @param line the line to be processed","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"     * @throws Exception exception is thrown whenever the input format is corrupt.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"    public static void processLine(String line) throws Exception{","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"        String suffixWord \u003d line.substring(words[0].length() + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"        if (words[0].length() !\u003d 2 || (words[0].charAt(1) !\u003d \u0027T\u0027 \u0026\u0026 words[0].charAt(1) !\u003d \u0027F\u0027)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"            throw new Exception();","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"        switch (words[0].charAt(0)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"        case (\u0027T\u0027):","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"            TaskList.addTask(Parser.parseTodoTask(suffixWord, words[0].charAt(1) \u003d\u003d \u0027T\u0027));","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"        case (\u0027D\u0027):","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"            TaskList.addTask(Parser.parseDeadlineTask(suffixWord, words[0].charAt(1) \u003d\u003d \u0027T\u0027));","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"        case (\u0027E\u0027):","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"            TaskList.addTask(Parser.parseEventTask(suffixWord, words[0].charAt(1) \u003d\u003d \u0027T\u0027));","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Geinzit"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Geinzit"},"content":"        default:","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Geinzit"},"content":"            throw new Exception();","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Geinzit"},"content":"     * Method for reading the input file","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Geinzit"},"content":"    public static void readFile() {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Geinzit"},"content":"        try (BufferedReader reader\u003d new BufferedReader(new FileReader(taskFile))){","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Geinzit"},"content":"            String line;","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Geinzit"},"content":"            try {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Geinzit"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Geinzit"},"content":"                    processLine(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Geinzit"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Geinzit"},"content":"                TaskList.clearTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Geinzit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Geinzit"},"content":"            TaskList.clearTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Geinzit"},"content":"     * Method for writing the current task list to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Geinzit"},"content":"    public static void writeFile() {","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Geinzit"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Geinzit"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(taskFile));","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Geinzit"},"content":"            for (Task task : TaskList.tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Geinzit"},"content":"                writer.write(task.writeLine());","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Geinzit"},"content":"                writer.newLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Geinzit"},"content":"            writer.flush();","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Geinzit"},"content":"        }catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Geinzit"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Geinzit":78}},{"path":"src/main/java/huan/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.main;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"import huan.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"import java.util.List;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":" * Class for storing the list of tasks, include methods for checking index validity, adding task and clear entire list","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"    public static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"     * Method for checking whether the given index is valid","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"     * @param index the given index, can used for either marking, unmarking, and deleting the indexed tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"     * @return whether the index in within range of the list","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"    public static Boolean isIndexValid(int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"        return index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size();","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"     * Method for adding a task to the List","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"     * @param newTask the task to be added","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"    public static void addTask(Task newTask) {","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"     * Method for clearing the list, in case of corrupt or empty input","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"    public static void clearTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"        tasks.clear();","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Geinzit":38}},{"path":"src/main/java/huan/main/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.main;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"import huan.task.DeadlineTask;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"import huan.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"public class UI {","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"    private static String botName \u003d \"Huan\";","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"     * Display welcome message","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"    public static void displayWelcomeMessage() {","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Hello! I\u0027m \" + botName + \", a chat bot\");","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"     * Display a separator line","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"    public static void displaySeparator() {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"     * Display a message to inform format error, and show the correct format","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"     * @param correctFormat the correct format, as well as any neccessary information","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"    public static void displayFormatError(String correctFormat) {","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Invalid format! Should be \" + correctFormat);","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing an unrecognized message","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"    public static void displayUnrecognizedMessage() {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Unrecognized command, please try again!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success adding a new TodoTask","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Geinzit"},"content":"     * @param taskName name of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Geinzit"},"content":"    public static void displayAddTodoSuccess(String taskName) {","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Added todo type task with name: \" + taskName);","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success adding a new EventTask","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Geinzit"},"content":"     * @param taskName name of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Geinzit"},"content":"    public static void displayAddEventSuccess(String taskName) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Added event type task with name: \" + taskName);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success adding a new DeadlineTask","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Geinzit"},"content":"     * @param taskName","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Geinzit"},"content":"    public static void displayAddDeadlineSuccess(String taskName) {","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Added deadline type task with name: \" + taskName);","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success deleting a new task","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Geinzit"},"content":"     * @param deleteIndex index of the to-be-deleted task","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Geinzit"},"content":"    public static void displayDeleteTaskSuccess(int deleteIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Removed task number \" + deleteIndex + \": \" + TaskList.tasks.get(deleteIndex - 1).getName());","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success marking a Task as completed","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Geinzit"},"content":"     * @param markIndex index of the to-be-marked task","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Geinzit"},"content":"    public static void displayMarkTaskSuccess(int markIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Set task number \" + markIndex + \": \" + TaskList.tasks.get(markIndex - 1).getName() + \" as done.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success unmarking a Task as completed","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Geinzit"},"content":"     * @param unmarkIndex index of the to-be-unmarked task","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Geinzit"},"content":"    public static void displayUnmarkTaskSuccess(int unmarkIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Set task number \" + unmarkIndex + \": \" + TaskList.tasks.get(unmarkIndex - 1).getName() + \" as not done.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing the index input is incorrect","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Geinzit"},"content":"    public static void displayIndexError() {","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Invalid task index!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Geinzit"},"content":"     * Display a goodbye message","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Geinzit"},"content":"    public static void displayByeMessage() {","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Bye! See ya!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Geinzit"},"content":"     * Show the matching tasks in the list, with a given keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Geinzit"},"content":"     * @param keyword the keyword for matching","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Geinzit"},"content":"    public static void displayMatchingTasks(String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Geinzit"},"content":"        int cnt \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Geinzit"},"content":"        for (Task task : TaskList.tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"Geinzit"},"content":"            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Geinzit"},"content":"                cnt +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Geinzit"},"content":"                task.printTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Found \" + cnt + \" matching tasks.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing success in parsing a LocalDateTime","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Geinzit"},"content":"    public static void displayDateTimeParseSuccess() {","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Parsing dateTime success!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Geinzit"},"content":"     * Display a message informing failure in parsing a LocalDateTime","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"Geinzit"},"content":"    public static void displayDateTimeParseError() {","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"Parsing dateTime failed, Use format \u0027yyyy-mm-dd HH:mm:ss\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"Geinzit"},"content":"     * List all tasks in the List","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"Geinzit"},"content":"    public static void listTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"Geinzit"},"content":"        int cnt \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"You have a total of \" + TaskList.tasks.size() + \" tasks.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"Geinzit"},"content":"        for (Task task : TaskList.tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Geinzit"},"content":"            cnt +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"Geinzit"},"content":"            System.out.printf(cnt + \". \");","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"Geinzit"},"content":"            task.printTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"Geinzit"},"content":"     * List all DeadlineTasks before the given date time","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"Geinzit"},"content":"     * @param dateTime the given datetime","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"Geinzit"},"content":"    public static void listTaskBeforeDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"Geinzit"},"content":"        int cnt \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"Geinzit"},"content":"        for (Task task : TaskList.tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"Geinzit"},"content":"            if (task.getTaskType() \u003d\u003d 3) {","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"Geinzit"},"content":"                DeadlineTask ddlTask \u003d (DeadlineTask)task;","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"Geinzit"},"content":"                if(ddlTask.isBefore(dateTime)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"Geinzit"},"content":"                    cnt +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"Geinzit"},"content":"                    ddlTask.printTask();","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"Geinzit"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"Geinzit"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"You have a total of \" + cnt + \" deadlines before \" + dateTime);","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Geinzit":162}},{"path":"src/main/java/huan/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"import huan.main.UI;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":" * Class for tasks with a specific deadline","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"public class DeadlineTask extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"    private String ddlTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"     * Contructor method for DeadlineTask","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"     * @param name task name","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"     * @param ddlTime the time of the deadline","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"    public DeadlineTask(String name, String ddlTime, Boolean isDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"        setName(name);","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"        this.ddlTime \u003d ddlTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"        setIsDone(isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"        setTaskType(3);","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"            dateTime \u003d LocalDateTime.parse(ddlTime, formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"            UI.displayDateTimeParseSuccess();","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"            dateTime \u003d null;","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"            UI.displayDateTimeParseError();","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Geinzit"},"content":"     * Method for checking whether the deadline is before a specific time","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Geinzit"},"content":"     * @param dateTime the given time","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Geinzit"},"content":"     * @return whether the deadline is before a specific time","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Geinzit"},"content":"    public Boolean isBefore(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Geinzit"},"content":"        return this.dateTime.isBefore(dateTime);","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Geinzit"},"content":"     * Method for printing an DeadlineTask","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Geinzit"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Geinzit"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"[D][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getName() + \" (by: \" + ddlTime + \")\");","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Geinzit"},"content":"     * Method for writing the DeadlineTask to file","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Geinzit"},"content":"     * @return the line to be written to ile","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Geinzit"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Geinzit"},"content":"    public String writeLine() {","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Geinzit"},"content":"        return \"D\" + (getIsDone() ? \"T\" : \"F\") + \" \" + getName() + \" /by \" + ddlTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Geinzit"},"content":"     * Get method for the ddlTime attribute","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Geinzit"},"content":"     * @return the ddlTime attribute","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Geinzit"},"content":"    public String getDdlTime() {","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Geinzit"},"content":"        return ddlTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Geinzit"},"content":"     * Set method for the ddlTime attribute","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Geinzit"},"content":"     * @param ddlTime the ddlTime attribute","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Geinzit"},"content":"    public void setDdlTime(String ddlTime) {","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"Geinzit"},"content":"        this.ddlTime \u003d ddlTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Geinzit":80}},{"path":"src/main/java/huan/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":" * Class for a task representing an event","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"public class EventTask extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"    private String startTime, endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"     * Constructor class for an EventTask","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"     * @param name the name of the Task","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"     * @param startTime the start date of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"     * @param endTime the end date of the event","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"    public EventTask(String name, String startTime, String endTime, Boolean isDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"        setName(name);","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"        setIsDone(isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"        setTaskType(2);","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"     * Method for printing the Task","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"[E][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getName() + \" (from: \" + startTime + \" to: \" + endTime + \")\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"     * Method for writing the Task to file","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"     * @return the line to be written to file","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"    public String writeLine() {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"        return \"E\" + (getIsDone() ? \"T\" : \"F\") + \" \" + getName() + \" /from \" + startTime + \" /to \" + endTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Geinzit"},"content":"     * Set method for the start date","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Geinzit"},"content":"     * @param startTime the start date","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Geinzit"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Geinzit"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Geinzit"},"content":"     * Get method for the start date","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Geinzit"},"content":"     * @return the start date","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Geinzit"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Geinzit"},"content":"        return startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Geinzit"},"content":"     * Set method for the end date","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Geinzit"},"content":"     * @param endTime the end date","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Geinzit"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Geinzit"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Geinzit"},"content":"     * Get method for the end date","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Geinzit"},"content":"     * @return the end date","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Geinzit"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Geinzit"},"content":"        return endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Geinzit":71}},{"path":"src/main/java/huan/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":" * Class for a regular task","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"public class Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"    private String name;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"    private int taskType;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"     * Set method for task name","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"     * @param name the task name","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"     * Set method for isDone","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"    public void setIsDone(Boolean isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"     * Set method for task type","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"     * @param taskType the type of task, 1 for TodoTask, 2 for EventTask, 3 for Deadline Task. Used for recasting","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"    public void setTaskType(int taskType) {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Geinzit"},"content":"     * Get method for task name","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Geinzit"},"content":"     * @return the task name","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Geinzit"},"content":"    public String getName() {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Geinzit"},"content":"        return name;","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Geinzit"},"content":"     * Get method for isDone","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Geinzit"},"content":"     * @return whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Geinzit"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Geinzit"},"content":"        return isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Geinzit"},"content":"     * Get method for taskType","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Geinzit"},"content":"     * @return the type the type of task, 1 for TodoTask, 2 for EventTask, 3 for Deadline Task.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Geinzit"},"content":"    public int getTaskType() {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Geinzit"},"content":"        return taskType;","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Geinzit"},"content":"     * Method for printing a task. Will be overridden by other classes","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Geinzit"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"[\" + (isDone ? \"X\" : \" \") + \"] \" + name);","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Geinzit"},"content":"     * Method for writing the line. Will be overridden by other classes","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Geinzit"},"content":"     * @return nothing","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Geinzit"},"content":"    public String writeLine() {","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Geinzit"},"content":"        return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Geinzit"},"content":"     * Default Constructor class for Task","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Geinzit"},"content":"    public Task() {","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Geinzit"},"content":"        setName(\"task\");","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Geinzit"},"content":"        setIsDone(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"Geinzit"},"content":"        taskType \u003d 0;","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Geinzit"},"content":"     * Constructor class for Task","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Geinzit"},"content":"     * @param name the task name","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task will be marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Geinzit"},"content":"    public Task(String name, Boolean isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Geinzit"},"content":"        setName(name);","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"Geinzit"},"content":"        setIsDone(isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Geinzit":93}},{"path":"src/main/java/huan/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"package huan.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":" * Class for a regular todo Task","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"public class TodoTask extends Task{","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"     * Contructor method for TodoTask","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"     * @param name name of task","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Geinzit"},"content":"     * @param isDone whether the task is marked as finished","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Geinzit"},"content":"    public TodoTask(String name, Boolean isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Geinzit"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Geinzit"},"content":"        setTaskType(1);","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Geinzit"},"content":"     * Method for printing the TodoTask","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Geinzit"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Geinzit"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Geinzit"},"content":"        System.out.println(\"[T][\" + (getIsDone() ? \"X\" : \" \") + \"] \" + getName());","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Geinzit"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Geinzit"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Geinzit"},"content":"     * Method for writing the Task to file","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Geinzit"},"content":"     * @return the line to be written on the file","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Geinzit"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Geinzit"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Geinzit"},"content":"    public String writeLine() {","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Geinzit"},"content":"        return \"T\" + (getIsDone() ? \"T\" : \"F\") + \" \" + getName();","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Geinzit"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Geinzit"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Geinzit":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Geinzit"},"content":"todo read book","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Geinzit"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Geinzit"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Geinzit"},"content":"mark 1","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Geinzit"},"content":"todo join sports club","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Geinzit"},"content":"todo borrow book","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Geinzit"},"content":"mark 4","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Geinzit"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Geinzit"},"content":"bye","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Geinzit":9}}]
