[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"# Schmidt project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"3. After that, locate the `src/main/java/schmidt/core/Schmidt.java` file, right-click it, and choose `Run Schmidt.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"```","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"░██████╗░█████╗░██╗░░██╗███╗░░░███╗██╗██████╗░████████╗","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"██╔════╝██╔══██╗██║░░██║████╗░████║██║██╔══██╗╚══██╔══╝","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"╚█████╗░██║░░╚═╝███████║██╔████╔██║██║██║░░██║░░░██║░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"░╚═══██╗██║░░██╗██╔══██║██║╚██╔╝██║██║██║░░██║░░░██║░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"██████╔╝╚█████╔╝██║░░██║██║░╚═╝░██║██║██████╔╝░░░██║░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"╚═════╝░░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝╚═════╝░░░░╚═╝░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mihirheda02":10,"-":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"# Schmidt User Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"Schmidt is a task manager CLI application that helps you to keep track of your tasks. It is designed to be simple and easy to use, and it is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Schmidt can help you manage your tasks faster than traditional GUI apps.","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"* [Features](#features)","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"  * [Viewing Help:](#viewing-help-help) `help` ","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"  * [Adding a task:](#adding-a-task-todo-deadline-event) `todo`, `deadline`, `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    * [Adding a todo task:](#adding-a-todo-task-todo) `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    * [Adding a deadline task:](#adding-a-deadline-task-deadline) `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"    * [Adding an event task:](#adding-an-event-task-event) `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"  * [Listing all tasks:](#listing-all-tasks-list) `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"  * [Marking a task as done or undone:](#marking-a-task-as-done-or-undone-mark-unmark) `mark`, `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    * [Marking a task as done:](#marking-a-task-as-done-mark) `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    * [Marking a task as undone:](#marking-a-task-as-undone-unmark) `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"  * [Deleting a task:](#deleting-a-task-delete) `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"  * [Finding a task:](#finding-a-task-find) `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"  * [Exiting the program:](#exiting-the-program-bye) `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"  * [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"  * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"* [Known Issues](#known-issues)","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"## Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/mihirheda02/ip/releases)","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"3. Copy the file to the folder you want to use as the home folder for your Schmidt.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"4. Open a terminal and navigate to the folder where `ip.jar` is located.","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"5. Run the command `java -jar ip.jar` to start the application. The application should start and the following output should be displayed:","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"    ░██████╗░█████╗░██╗░░██╗███╗░░░███╗██╗██████╗░████████╗","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    ██╔════╝██╔══██╗██║░░██║████╗░████║██║██╔══██╗╚══██╔══╝","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    ╚█████╗░██║░░╚═╝███████║██╔████╔██║██║██║░░██║░░░██║░░░","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"    ░╚═══██╗██║░░██╗██╔══██║██║╚██╔╝██║██║██║░░██║░░░██║░░░","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"    ██████╔╝╚█████╔╝██║░░██║██║░╚═╝░██║██║██████╔╝░░░██║░░░","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"    ╚═════╝░░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝╚═════╝░░░░╚═╝░░░","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"    ------------------------------------------------------------","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    Hello! I\u0027m Schmidt","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    What can I do for you?","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"    ------------------------------------------------------------","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"        -\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will display the help message.","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"## Features","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"\u003e **Notes about the command format**:","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"\u003e * Words in `UPPER_CASE` are the parameters to be supplied by the user.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"\u003e   e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"### Viewing Help: `help`","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"Shows a message explaining the usage of each command.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"Format: `help`","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"------------------------------------------------------------","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"The valid commands you can use are:","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"\tbye","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"\tlist","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"\ttodo \u003cdescription\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"\tdeadline \u003cdescription\u003e /by \u003cdate\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"\tevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"\tmark \u003ctask number\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"\tunmark \u003ctask number\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"\tdelete \u003ctask number\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"------------------------------------------------------------","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"### Adding a task: `todo`, `deadline`, `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"#### Adding a todo task: `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"Adds a todo task to the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"* Example of usage: ","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"  * `todo read book`","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"mihirheda02"},"content":"#### Adding a deadline task: `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"mihirheda02"},"content":"Adds a deadline task to the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"mihirheda02"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"mihirheda02"},"content":"* Example of usage: ","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"mihirheda02"},"content":"  * `deadline return book /by 2021-09-30`","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"mihirheda02"},"content":"#### Adding an event task: `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"mihirheda02"},"content":"Adds an event task to the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"mihirheda02"},"content":"Format: `event DESCRIPTION /from DATE /to DATE`\\","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"mihirheda02"},"content":"* Example of usage: ","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"mihirheda02"},"content":"  * `event project meeting /from 2021-09-30 /to 2021-10-01`","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"mihirheda02"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"mihirheda02"},"content":"Shows a list of all tasks in the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"mihirheda02"},"content":"Format: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"mihirheda02"},"content":"### Marking a task as done or undone: `mark`, `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"mihirheda02"},"content":"#### Marking a task as done: `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"mihirheda02"},"content":"Marks a task as done using its index from the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"mihirheda02"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"mihirheda02"},"content":"#### Marking a task as undone: `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"mihirheda02"},"content":"Marks a task as undone using its index from the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"mihirheda02"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"mihirheda02"},"content":"* Examples of usage: ","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"mihirheda02"},"content":"  * `mark 1`","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"mihirheda02"},"content":"  * `unmark 4`","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"mihirheda02"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"mihirheda02"},"content":"Deletes a task from the task list using its index from the task list.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"mihirheda02"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"mihirheda02"},"content":"* Example of usage: ","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"mihirheda02"},"content":"  * `delete 3`","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"mihirheda02"},"content":"### Finding a task: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"mihirheda02"},"content":"Finds tasks whose description or date contains the given keyword.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"mihirheda02"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"mihirheda02"},"content":"* Example of usage: ","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"mihirheda02"},"content":"  * `find book`","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"mihirheda02"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"mihirheda02"},"content":"Exits the program.\\","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"mihirheda02"},"content":"Format: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"mihirheda02"},"content":"### Saving the data","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"mihirheda02"},"content":"Schmidt data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"mihirheda02"},"content":"### Editing the data file","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"mihirheda02"},"content":"Schmidt data are saved as a text file `[JAR file location]/data/tasks.txt`. Advanced users are welcome to update the data directly by editing that file.","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"mihirheda02"},"content":"\u003e [!CAUTION]","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"mihirheda02"},"content":"\u003e If you choose to edit the data file directly, please follow the format specified in the file. Otherwise, the data may not be loaded correctly.","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"mihirheda02"},"content":"## Known Issues","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"mihirheda02"},"content":"1. The program does not support the use of the `|` character in the description or dates of tasks as it is used as a delimiter in the data file.","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":128,"author":{"gitId":"mihirheda02"},"content":"## Command Summary","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"mihirheda02"},"content":"| Action         | Format, Examples                                                                                     |","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"mihirheda02"},"content":"|----------------|------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"mihirheda02"},"content":"| Help           | `help`                                                                                               |","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"mihirheda02"},"content":"| Add todo       | `todo DESCRIPTION` e.g. `todo read book`                                                             |","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"mihirheda02"},"content":"| Add deadline   | `deadline DESCRIPTION /by DATE` e.g. `deadline return book /by 2021-09-30`                           |","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"mihirheda02"},"content":"| Add event      | `event DESCRIPTION /from DATE /to DATE` e.g. `event project meeting /from 2021-09-30 /to 2021-10-01` |","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"mihirheda02"},"content":"| List           | `list`                                                                                               |","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"mihirheda02"},"content":"| Mark as done   | `mark INDEX` e.g. `mark 1`                                                                           |","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"mihirheda02"},"content":"| Mark as undone | `unmark INDEX` e.g. `unmark 4`                                                                       |","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"mihirheda02"},"content":"| Delete         | `delete INDEX` e.g. `delete 3`                                                                       |","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"mihirheda02"},"content":"| Find           | `find KEYWORD` e.g. `find book`                                                                      |","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"mihirheda02"},"content":"| Exit           | `bye`                                                                                                |","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"mihirheda02":126,"-":15}},{"path":"src/main/java/schmidt/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" * Represents am add command to add a Todo, Deadline, or Event task to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    private static final String ERROR_ADDING_TASK_MESSAGE \u003d \"Sorry, there was an error adding the task to the task list.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * Constructs an add command with the task to add.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     * @param taskToAdd the task to add.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    public AddCommand(Task taskToAdd) {","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     * Adds a task to the task list and saves it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error adding the task or saving it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"            tasks.addTask(taskToAdd);","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(ERROR_ADDING_TASK_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(ERROR_SAVING_TO_STORAGE_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"        ui.printTaskAdded(taskToAdd, tasks.getSize());","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":53}},{"path":"src/main/java/schmidt/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":" * Represents the parent class for a command to be executed by Schmidt.","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    public static final int TYPE_INDEX \u003d 0;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    protected static final String ERROR_SAVING_TO_STORAGE_MESSAGE \u003d \"Sorry, there was an error saving the task to storage.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"     * Executes the command.","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error executing the command.","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     * @return true if the command is an exit command.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"        return false;","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":34}},{"path":"src/main/java/schmidt/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" * Represents a delete command to remove a task from the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    public static final String COMMAND \u003d \"delete\";","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Please follow the delete command format\\n\\tdelete \u003ctask number\u003e\";","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    private static final String INVALID_TASK_NUMBER_MESSAGE \u003d \"Sorry, I cannot find a task with the number \";","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    private final int index;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a delete command with the index of the task to delete.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     * @param index the index of the task to delete.","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     * Deletes a task from the task list and saves it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error deleting the task or saving it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"        Task deletedTask;","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"            deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(INVALID_TASK_NUMBER_MESSAGE + (index + 1));","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(ERROR_SAVING_TO_STORAGE_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"        ui.printTaskDeleted(deletedTask, tasks.getSize());","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":52}},{"path":"src/main/java/schmidt/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    public static final String COMMAND \u003d \"bye\";","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"     * Exits the program.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"        ui.printGoodbye();","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"     * Returns true since the command is an exit command.","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     * @return true since the command is an exit command.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"        return true;","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":34}},{"path":"src/main/java/schmidt/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":" * Represents a command to find a keyword in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    public static final String COMMAND \u003d \"find\";","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a find command with the keyword to find.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * @param keyword the keyword to find.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"     * Finds tasks that match the keyword and prints them to the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"        TaskList matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"        ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"mihirheda02":35}},{"path":"src/main/java/schmidt/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":" * Represents a command to display the help message.","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"     * Displays the help message.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error displaying the help message.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":25}},{"path":"src/main/java/schmidt/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error listing the tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"        ui.printTaskList(tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":26}},{"path":"src/main/java/schmidt/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" * Represents a mark command to mark a task as done or undone in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    private static final String INVALID_TASK_NUMBER_MESSAGE \u003d \"Sorry, I cannot find a task with the number \";","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    private static final String ERROR_SAVING_TO_STORAGE_MESSAGE \u003d \"Sorry, there was an error saving the task to storage.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    public static final String COMMAND \u003d \"mark\";","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Please follow the mark command format\\n\\tmark \u003ctask number\u003e\";","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a mark command with the index of the task to mark and whether to mark it as done or undone.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     * @param taskIndex the index of the task to mark.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     * Marks a task as done or undone and saves it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error marking the task or saving it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        Task markedTask;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"            markedTask \u003d tasks.setDone(taskIndex, true);","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(INVALID_TASK_NUMBER_MESSAGE + (taskIndex + 1));","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(ERROR_SAVING_TO_STORAGE_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"        ui.printTaskDone(markedTask);","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":53}},{"path":"src/main/java/schmidt/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.command;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" * Represents a mark command to mark a task as done or undone in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    private static final String INVALID_TASK_NUMBER_MESSAGE \u003d \"Sorry, I cannot find a task with the number \";","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    private static final String ERROR_SAVING_TO_STORAGE_MESSAGE \u003d \"Sorry, there was an error saving the task to storage.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    public static final String COMMAND \u003d \"unmark\";","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Please follow the unmark command format\\n\\tunmark \u003ctask number\u003e\";","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a mark command with the index of the task to mark and whether to mark it as done or undone.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     * @param taskIndex the index of the task to mark.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     * Marks a task as done or undone and saves it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     * @param ui the user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     * @param storage the storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error marking the task or saving it to storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        Task markedTask;","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"            markedTask \u003d tasks.setDone(taskIndex, false);","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(INVALID_TASK_NUMBER_MESSAGE + (taskIndex + 1));","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(ERROR_SAVING_TO_STORAGE_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"        ui.printTaskUndone(markedTask);","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"mihirheda02":53}},{"path":"src/main/java/schmidt/core/Schmidt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.core;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.Command;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.parser.Parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"import schmidt.ui.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":" * This is the class for Schmidt who can understand multiple commands and manage a task list for the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"public class Schmidt {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    private final Storage storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    private final Ui ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a Schmidt object by initializing the user interface, task list, and storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"    public Schmidt() {","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"        } catch (SchmidtException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"            ui.printWithLines(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * Runs Schmidt to read commands from the user and execute them until the user exits.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    private void run() {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"        ui.printWelcome();","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"            } catch (SchmidtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"     * The entry point for the Schmidt program.","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"     * @param args the command line arguments.","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"        new Schmidt().run();","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mihirheda02":59,"-":1}},{"path":"src/main/java/schmidt/exception/SchmidtException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.exception;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":" * Represents an exception class specific to Schmidt.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"public class SchmidtException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a Schmidt exception with the specified error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"     * @param errorMessage the error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    public SchmidtException(String errorMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"mihirheda02":15}},{"path":"src/main/java/schmidt/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.AddCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.Command;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.DeleteCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.ExitCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.FindCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.HelpCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.ListCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.MarkCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"import schmidt.command.UnmarkCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"import schmidt.storage.Storage;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Deadline;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Event;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Todo;","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":" * Represents a parser to parse user input into commands.","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"public class Parser {","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    private static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    private static final String INVALID_TASK_MESSAGE \u003d \"Task is invalid\";","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"    private static final String WHITESPACE \u003d \"\\\\s+\";","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     * Parses a task into a line of storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     * @param task the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     * @return the line of storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the task is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    public static String parseTaskToStorage(Task task) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"        String taskLetter;","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        String taskStatus;","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"        String taskDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"        String taskTime;","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"        // find the type of task and parse it accordingly","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"            taskLetter \u003d Todo.LETTER;","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"            taskStatus \u003d task.getStatus() ? Task.DONE : Task.NOT_DONE;","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"            taskDescription \u003d task.getDescription();","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"            return taskLetter + Storage.DELIMITER + taskStatus + Storage.DELIMITER + taskDescription + NEW_LINE;","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"            taskLetter \u003d Deadline.LETTER;","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"            taskStatus \u003d task.getStatus() ? Task.DONE : Task.NOT_DONE;","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"            taskDescription \u003d task.getDescription();","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"            taskTime \u003d ((Deadline) task).getBy();","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"            return taskLetter + Storage.DELIMITER + taskStatus + Storage.DELIMITER + taskDescription + Storage.DELIMITER + taskTime + NEW_LINE;","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"            taskLetter \u003d Event.LETTER;","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"            taskStatus \u003d task.getStatus() ? Task.DONE : Task.NOT_DONE;","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"            taskDescription \u003d task.getDescription();","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"            taskTime \u003d ((Event) task).getFrom() + Storage.DELIMITER + ((Event) task).getTo();","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"            return taskLetter + Storage.DELIMITER + taskStatus + Storage.DELIMITER + taskDescription + Storage.DELIMITER + Storage.DELIMITER + taskTime + NEW_LINE;","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"        } else {","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(INVALID_TASK_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"     * Parses a line of storage into a task.","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"     * @param line the line of storage.","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"     * @return the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the line is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"    public static Task parseStorageToTask(String line) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"mihirheda02"},"content":"        String[] tokens \u003d line.split(Storage.REGEX_DELIMITER);","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"mihirheda02"},"content":"        switch (tokens[Storage.TASK_TYPE_INDEX]) {","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"mihirheda02"},"content":"        case Todo.LETTER:","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"mihirheda02"},"content":"            Todo todo \u003d new Todo(tokens[Storage.DESCRIPTION_INDEX]);","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"mihirheda02"},"content":"            if (tokens[Storage.IS_DONE_INDEX].equals(Task.DONE)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"mihirheda02"},"content":"                todo.markAsDone();","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"mihirheda02"},"content":"            return todo;","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"mihirheda02"},"content":"        case Deadline.LETTER:","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"mihirheda02"},"content":"            Deadline deadline \u003d new Deadline(tokens[Storage.DESCRIPTION_INDEX], tokens[Storage.BY_INDEX]);","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"mihirheda02"},"content":"            if (tokens[Storage.IS_DONE_INDEX].equals(Task.DONE)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"mihirheda02"},"content":"                deadline.markAsDone();","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"mihirheda02"},"content":"            return deadline;","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"mihirheda02"},"content":"        case Event.LETTER:","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"mihirheda02"},"content":"            Event event \u003d new Event(tokens[Storage.DESCRIPTION_INDEX], tokens[Storage.FROM_INDEX], tokens[Storage.TO_INDEX]);","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"mihirheda02"},"content":"            if (tokens[Storage.IS_DONE_INDEX].equals(Task.DONE)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"mihirheda02"},"content":"                event.markAsDone();","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"mihirheda02"},"content":"            return event;","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"mihirheda02"},"content":"        default:","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(Storage.CORRUPTED_STORAGE_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"mihirheda02"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"mihirheda02"},"content":"     * @param command the user input.","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"mihirheda02"},"content":"     * @return the command to be executed.","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the command is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"mihirheda02"},"content":"    public static Command parseCommand(String command) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"mihirheda02"},"content":"        String[] trimmedAndSplitCommand \u003d command.trim().split(WHITESPACE, 2);","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"mihirheda02"},"content":"        String caseInsensitiveCommandType \u003d trimmedAndSplitCommand[Command.TYPE_INDEX].toLowerCase();","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"mihirheda02"},"content":"        String commandArguments \u003d trimmedAndSplitCommand.length \u003e 1 ? trimmedAndSplitCommand[1].trim() : \"\";","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"mihirheda02"},"content":"        switch (caseInsensitiveCommandType) {","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"mihirheda02"},"content":"        case ListCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"mihirheda02"},"content":"            return new ListCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"mihirheda02"},"content":"        case MarkCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"mihirheda02"},"content":"            int markIndex \u003d parseIndexCommand(commandArguments, MarkCommand.COMMAND);","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"mihirheda02"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"mihirheda02"},"content":"        case UnmarkCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"mihirheda02"},"content":"            int unmarkIndex \u003d parseIndexCommand(commandArguments, UnmarkCommand.COMMAND);","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"mihirheda02"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"mihirheda02"},"content":"        case ExitCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"mihirheda02"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"mihirheda02"},"content":"        case DeleteCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"mihirheda02"},"content":"            int deleteIndex \u003d parseIndexCommand(commandArguments, DeleteCommand.COMMAND);","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"mihirheda02"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"mihirheda02"},"content":"        case AddCommand.TODO_COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"mihirheda02"},"content":"            Todo todo \u003d parseTodoCommand(commandArguments);","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"mihirheda02"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"mihirheda02"},"content":"        case AddCommand.DEADLINE_COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"mihirheda02"},"content":"            Deadline deadline \u003d parseDeadlineCommand(commandArguments);","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"mihirheda02"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"mihirheda02"},"content":"        case AddCommand.EVENT_COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"mihirheda02"},"content":"            Event event \u003d parseEventCommand(commandArguments);","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"mihirheda02"},"content":"            return new AddCommand(event);","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"mihirheda02"},"content":"        case FindCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"mihirheda02"},"content":"            return new FindCommand(commandArguments);","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"mihirheda02"},"content":"        default:","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"mihirheda02"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"mihirheda02"},"content":"     * Splits the user input to get the description of the todo task.","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"mihirheda02"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"mihirheda02"},"content":"     * @return the todo task.","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the command is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"mihirheda02"},"content":"    private static Todo parseTodoCommand(String description) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"mihirheda02"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(Todo.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"mihirheda02"},"content":"            return new Todo(description);","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(Todo.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"mihirheda02"},"content":"     * Splits the user input to get the description and by of the deadline task.","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"mihirheda02"},"content":"     * @param commandArguments the user input.","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"mihirheda02"},"content":"     * @return the deadline task.","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the command is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"mihirheda02"},"content":"    private static Deadline parseDeadlineCommand(String commandArguments) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"mihirheda02"},"content":"            commandArguments \u003d \" \" + commandArguments + \" \";","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"mihirheda02"},"content":"            String[] tokenizedDeadlineCommand \u003d commandArguments.split(Deadline.REGEX_BY_DELIMITER);","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"mihirheda02"},"content":"            if (tokenizedDeadlineCommand.length !\u003d 2) {","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(Deadline.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"mihirheda02"},"content":"            String description \u003d tokenizedDeadlineCommand[Deadline.DESCRIPTION_INDEX].trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"mihirheda02"},"content":"            String by \u003d tokenizedDeadlineCommand[Deadline.BY_INDEX].trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":178,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"mihirheda02"},"content":"            boolean isDescriptionEmpty \u003d description.isEmpty();","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"mihirheda02"},"content":"            boolean isByEmpty \u003d by.isEmpty();","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"mihirheda02"},"content":"            if (isDescriptionEmpty || isByEmpty) {","lastModifiedDate":"2024-03-08"},{"lineNumber":183,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(Deadline.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":185,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"mihirheda02"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(Deadline.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"mihirheda02"},"content":"     * Splits the user input to get the description, from, and to of the event task.","lastModifiedDate":"2024-03-08"},{"lineNumber":194,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"mihirheda02"},"content":"     * @param commandArguments the user input.","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"mihirheda02"},"content":"     * @return the event task.","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the command is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":199,"author":{"gitId":"mihirheda02"},"content":"    private static Event parseEventCommand(String commandArguments) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":200,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":201,"author":{"gitId":"mihirheda02"},"content":"            String[] tokenizedEventCommand \u003d commandArguments.split(Event.REGEX_FROM_DELIMITER + \"|\" + Event.REGEX_TO_DELIMITER);","lastModifiedDate":"2024-03-08"},{"lineNumber":202,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":203,"author":{"gitId":"mihirheda02"},"content":"            if (tokenizedEventCommand.length !\u003d 3) {","lastModifiedDate":"2024-03-08"},{"lineNumber":204,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(Event.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":205,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":206,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":207,"author":{"gitId":"mihirheda02"},"content":"            String description \u003d tokenizedEventCommand[Event.DESCRIPTION_INDEX].trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":208,"author":{"gitId":"mihirheda02"},"content":"            String from \u003d tokenizedEventCommand[Event.FROM_INDEX].trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":209,"author":{"gitId":"mihirheda02"},"content":"            String to \u003d tokenizedEventCommand[Event.TO_INDEX].trim();","lastModifiedDate":"2024-03-08"},{"lineNumber":210,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":211,"author":{"gitId":"mihirheda02"},"content":"            boolean isDescriptionEmpty \u003d description.isEmpty();","lastModifiedDate":"2024-03-08"},{"lineNumber":212,"author":{"gitId":"mihirheda02"},"content":"            boolean isFromEmpty \u003d from.isEmpty();","lastModifiedDate":"2024-03-08"},{"lineNumber":213,"author":{"gitId":"mihirheda02"},"content":"            boolean isToEmpty \u003d to.isEmpty();","lastModifiedDate":"2024-03-08"},{"lineNumber":214,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":215,"author":{"gitId":"mihirheda02"},"content":"            if (isDescriptionEmpty || isFromEmpty || isToEmpty) {","lastModifiedDate":"2024-03-08"},{"lineNumber":216,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(Event.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":217,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":218,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":219,"author":{"gitId":"mihirheda02"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-03-08"},{"lineNumber":220,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":221,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(Event.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":222,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":223,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":224,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":225,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":226,"author":{"gitId":"mihirheda02"},"content":"     * Splits the user input to get the index of the inputted command.","lastModifiedDate":"2024-03-08"},{"lineNumber":227,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":228,"author":{"gitId":"mihirheda02"},"content":"     * @param index the index of the command.","lastModifiedDate":"2024-03-08"},{"lineNumber":229,"author":{"gitId":"mihirheda02"},"content":"     * @return the index of the command as an integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":230,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if the command is invalid.","lastModifiedDate":"2024-03-08"},{"lineNumber":231,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":232,"author":{"gitId":"mihirheda02"},"content":"    private static int parseIndexCommand(String index, String commandType) throws SchmidtException {","lastModifiedDate":"2024-03-08"},{"lineNumber":233,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-08"},{"lineNumber":234,"author":{"gitId":"mihirheda02"},"content":"            return Integer.parseInt(index) - 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":235,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":236,"author":{"gitId":"mihirheda02"},"content":"            switch (commandType) {","lastModifiedDate":"2024-03-08"},{"lineNumber":237,"author":{"gitId":"mihirheda02"},"content":"            case MarkCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":238,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(MarkCommand.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":239,"author":{"gitId":"mihirheda02"},"content":"            case UnmarkCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":240,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(UnmarkCommand.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":241,"author":{"gitId":"mihirheda02"},"content":"            case DeleteCommand.COMMAND:","lastModifiedDate":"2024-03-08"},{"lineNumber":242,"author":{"gitId":"mihirheda02"},"content":"                throw new SchmidtException(DeleteCommand.INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":243,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":244,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":245,"author":{"gitId":"mihirheda02"},"content":"        return -1;","lastModifiedDate":"2024-03-08"},{"lineNumber":246,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":247,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":247}},{"path":"src/main/java/schmidt/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.parser.Parser;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"import java.io.File;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":" * Represents the storage of tasks in a file to be loaded from and saved to.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"public class Storage {","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"    public static final String REGEX_DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    public static final String DELIMITER \u003d \" | \";","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"    public static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"    public static final int IS_DONE_INDEX \u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"    public static final int DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    public static final int BY_INDEX \u003d 3;","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    public static final int FROM_INDEX \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    public static final int TO_INDEX \u003d 5;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    public static final String CORRUPTED_STORAGE_MESSAGE \u003d \"Saved tasks are corrupted\\n\" + \"Starting with a new task list\";","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"    public static final String STORAGE_FILE_NOT_FOUND_ERROR_MESSAGE \u003d \"Storage file not found\\n\" + \"Starting with an empty task list\";","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    public static final String SAVING_TASKS_ERROR_MESSAGE \u003d \"An error occurred while saving tasks\";","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"    private final String filePath;","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a storage with the file path.","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * @param filePath the file path.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"        File directory \u003d file.getParentFile();","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"            directory.mkdirs(); // This will create the parent directories if they don\u0027t exist","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"     * @return the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error loading tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"    public ArrayList\u003cTask\u003e load() throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"            ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"                tasks.add(Parser.parseStorageToTask(line));","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"            return tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(STORAGE_FILE_NOT_FOUND_ERROR_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"     * Saves tasks to the storage file.","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"     * @throws SchmidtException if there was an error saving tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"mihirheda02"},"content":"    public void save(TaskList tasks) throws SchmidtException {","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"mihirheda02"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"mihirheda02"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"mihirheda02"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"mihirheda02"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"mihirheda02"},"content":"                fileWriter.write(Parser.parseTaskToStorage(task));","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"mihirheda02"},"content":"            fileWriter.close();","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"mihirheda02"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(SAVING_TASKS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":89}},{"path":"src/main/java/schmidt/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    public static final String LETTER \u003d \"D\";","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"    public static final String REGEX_BY_DELIMITER \u003d \"(?\u003c!\\\\w)/by(?\u003d\\\\s|$)\";","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"    public static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    public static final int BY_INDEX \u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Please follow the deadline command format\\n\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"            \"\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    protected String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a deadline task with the specified description and deadline.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     * @return the deadline of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"        return this.by;","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"     * @return a string representation of the deadline task.","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"        return \"[\" + LETTER + \"]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"mihirheda02":45}},{"path":"src/main/java/schmidt/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":" * Represents an event with a start and end time.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    public static final String LETTER \u003d \"E\";","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    public static final String REGEX_FROM_DELIMITER \u003d \"(?\u003c!\\\\w)/from(?\u003d\\\\s|$)\";","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"    public static final String REGEX_TO_DELIMITER \u003d \"(?\u003c!\\\\w)/to(?\u003d\\\\s|$)\";","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Please follow the event command format\\n\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"            \"\\tevent \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\";","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    public static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    public static final int FROM_INDEX \u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    public static final int TO_INDEX \u003d 2;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    private final String from;","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    private final String to;","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * Constructs an event with the specified description, start time and end time.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     * @param description the description of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"     * @param from the start time of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     * @return the start time of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        return this.from;","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"     * @return the end time of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"        return this.to;","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"     * @return a string representation of the event.","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"        return \"[\" + LETTER + \"]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"mihirheda02":59}},{"path":"src/main/java/schmidt/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":" * Represents a task with a description and a boolean to indicate if it is done.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    public static final String DONE \u003d \"1\";","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    public static final String NOT_DONE \u003d \"0\";","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"    private static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"    private static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"     * Constructor for Task class.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the status icon of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"        return (isDone ? DONE_ICON : NOT_DONE_ICON); // mark done task with X","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"     * This method marks the task as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"     * This method unmarks the task as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the description of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the status of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"     * @return The status of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the string representation of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"mihirheda02":73}},{"path":"src/main/java/schmidt/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"public class TaskList {","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"    private static final String EMPTY_TASK_LIST_MESSAGE \u003d \"You have no tasks in your list!\";","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"     * Constructs an empty list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a list of tasks with the specified tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"     * @return the task that was deleted.","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"     * @param index the index of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"     * Sets the task at the specified index as done or not done.","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"     * @param index the index of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"     * @param isDone whether the task is done.","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"     * @return the task that was set as done or not done.","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"    public Task setDone(int index, boolean isDone) {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"        if (isDone) {","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"            this.tasks.get(index).markAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"mihirheda02"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"            this.tasks.get(index).unmarkAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"mihirheda02"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"mihirheda02"},"content":"     * @return the number of tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"mihirheda02"},"content":"    public int getSize() {","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"mihirheda02"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"mihirheda02"},"content":"     * Finds tasks that contain the specified keyword in their description, by, from, or to.","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"mihirheda02"},"content":"     * @param keyword the keyword to search for.","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"mihirheda02"},"content":"     * @return the list of tasks that contain the keyword.","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"mihirheda02"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"mihirheda02"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"mihirheda02"},"content":"        // Iterate through the list of tasks to find matching tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"mihirheda02"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"mihirheda02"},"content":"            // Check if the keyword is in the description","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"mihirheda02"},"content":"            boolean isKeywordInDescription \u003d task.getDescription().contains(keyword);","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"mihirheda02"},"content":"            if (isKeywordInDescription) {","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"mihirheda02"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"mihirheda02"},"content":"            // Check if the keyword is in the by field","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"mihirheda02"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"mihirheda02"},"content":"                boolean isKeywordInBy \u003d ((Deadline) task).getBy().contains(keyword);","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"mihirheda02"},"content":"                if (isKeywordInBy) {","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"mihirheda02"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"mihirheda02"},"content":"                    continue;","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"mihirheda02"},"content":"            // Check if the keyword is in the from or to field","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"mihirheda02"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"mihirheda02"},"content":"                boolean isKeywordInFrom \u003d ((Event) task).getFrom().contains(keyword);","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"mihirheda02"},"content":"                boolean isKeywordInTo \u003d ((Event) task).getTo().contains(keyword);","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"mihirheda02"},"content":"                if (isKeywordInFrom || isKeywordInTo) {","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"mihirheda02"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"mihirheda02"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"mihirheda02"},"content":"     * Returns a readable string representation of the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"mihirheda02"},"content":"     * @return the string representation of the list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"mihirheda02"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"mihirheda02"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"mihirheda02"},"content":"            return EMPTY_TASK_LIST_MESSAGE;","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"mihirheda02"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"mihirheda02"},"content":"            sb.append(\"\\t\").append(i + 1).append(\". \").append(tasks.get(i).toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"mihirheda02"},"content":"            if (i !\u003d this.tasks.size() - 1) {","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"mihirheda02"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"mihirheda02"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":143}},{"path":"src/main/java/schmidt/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":" * Represents a todo task.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    public static final String LETTER \u003d \"T\";","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Please follow the todo command format\\n\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"            \"\\ttodo \u003cdescription\u003e\";","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a todo task with the specified description.","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"     * @return a string representation of the todo task.","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"        return \"[\" + LETTER + \"]\" + super.toString();","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"mihirheda02":29}},{"path":"src/main/java/schmidt/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    private static final String LINE \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    private static final String LOGO \u003d \"░██████╗░█████╗░██╗░░██╗███╗░░░███╗██╗██████╗░████████╗\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"            \"██╔════╝██╔══██╗██║░░██║████╗░████║██║██╔══██╗╚══██╔══╝\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"            \"╚█████╗░██║░░╚═╝███████║██╔████╔██║██║██║░░██║░░░██║░░░\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"            \"░╚═══██╗██║░░██╗██╔══██║██║╚██╔╝██║██║██║░░██║░░░██║░░░\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"            \"██████╔╝╚█████╔╝██║░░██║██║░╚═╝░██║██║██████╔╝░░░██║░░░\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"            \"╚═════╝░░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝╚═════╝░░░░╚═╝░░░\";","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    private static final String HELP_MESSAGE \u003d \"The valid commands you can use are:\\n\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"            \"\\tbye\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"            \"\\tlist\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"            \"\\ttodo \u003cdescription\u003e\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"            \"\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"            \"\\tevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"            \"\\tmark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"            \"\\tunmark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"            \"\\tdelete \u003ctask number\u003e\";","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"    private static final String USER_INPUT_INDICATOR \u003d \"\\t-\u003e \";","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Schmidt\\nWhat can I do for you?\";","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Goodbye! Hope to see you again soon!\";","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"    private static final String DONE_TASK_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\";","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"    private static final String UNDONE_TASK_MESSAGE \u003d \"Ok! I\u0027ve unmarked this task as done:\\n\\t\";","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"    private static final String MATCHING_TASKS_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"     * Constructs a user interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"    public Ui() {","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"     * Prints a message with lines above and below it for better user readability.","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"     * @param message the message to print.","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"    public void printWithLines(String message) {","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"     * Prints a message to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"     * @param message the message to print.","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"     * @return the command read from the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"    public String readCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"        System.out.print(USER_INPUT_INDICATOR);","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"mihirheda02"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"mihirheda02"},"content":"    public void printWelcome() {","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"mihirheda02"},"content":"        printMessage(LOGO);","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(WELCOME_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"mihirheda02"},"content":"     * Prints the goodbye message to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"mihirheda02"},"content":"    public void printGoodbye() {","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(GOODBYE_MESSAGE);","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"mihirheda02"},"content":"     * Prints an error message to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"mihirheda02"},"content":"     * @param errorMessage the error message to print.","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"mihirheda02"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(errorMessage);","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"mihirheda02"},"content":"     * Prints the list of tasks to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks to print.","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"mihirheda02"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(tasks.toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"mihirheda02"},"content":"     * Prints the message to the user after a task has been added.","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"mihirheda02"},"content":"     * @param task the task that was added.","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"mihirheda02"},"content":"     * @param taskCount the number of tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"mihirheda02"},"content":"    public void printTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(\"Got it. I\u0027ve added this task:\\n\\t\" + task + \"\\nNow you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"mihirheda02"},"content":"     * Prints the message to the user after a task has been deleted.","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"mihirheda02"},"content":"     * @param task the task that was deleted.","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"mihirheda02"},"content":"     * @param taskCount the number of tasks in the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"mihirheda02"},"content":"    public void printTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(\"Noted. I\u0027ve removed this task:\\n\\t\" + task + \"\\nNow you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"mihirheda02"},"content":"     * Prints the message to the user after a task has been marked as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"mihirheda02"},"content":"     * @param task the task that was marked as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"mihirheda02"},"content":"    public void printTaskDone(Task task) {","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(DONE_TASK_MESSAGE + task);","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"mihirheda02"},"content":"     * Prints the message to the user after a task has been unmarked as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"mihirheda02"},"content":"     * @param task the task that was unmarked as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"mihirheda02"},"content":"    public void printTaskUndone(Task task) {","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(UNDONE_TASK_MESSAGE + task);","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"mihirheda02"},"content":"     * Prints the message to the user after a task has been found.","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks the list of tasks that match the search query.","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"mihirheda02"},"content":"    public void printMatchingTasks(TaskList tasks) {","lastModifiedDate":"2024-03-08"},{"lineNumber":150,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(MATCHING_TASKS_MESSAGE + tasks);","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"mihirheda02"},"content":"     * Prints the help message to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"mihirheda02"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"mihirheda02"},"content":"        printWithLines(HELP_MESSAGE);","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"mihirheda02":159}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"java -classpath ..\\bin Schmidt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mihirheda02":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"java -classpath ../bin schmidt.core.Schmidt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mihirheda02":1,"-":37}}]
