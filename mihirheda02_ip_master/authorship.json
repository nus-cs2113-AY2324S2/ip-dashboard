[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"# Schmidt project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"3. After that, locate the `src/main/java/schmidt/core/Schmidt.java` file, right-click it, and choose `Run Schmidt.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"```","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"░██████╗░█████╗░██╗░░██╗███╗░░░███╗██╗██████╗░████████╗","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"██╔════╝██╔══██╗██║░░██║████╗░████║██║██╔══██╗╚══██╔══╝","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"╚█████╗░██║░░╚═╝███████║██╔████╔██║██║██║░░██║░░░██║░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"░╚═══██╗██║░░██╗██╔══██║██║╚██╔╝██║██║██║░░██║░░░██║░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"██████╔╝╚█████╔╝██║░░██║██║░╚═╝░██║██║██████╔╝░░░██║░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"╚═════╝░░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝╚═════╝░░░░╚═╝░░░","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mihirheda02":10,"-":15}},{"path":"src/main/java/schmidt/core/Schmidt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.core;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"import schmidt.exception.SchmidtException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"import schmidt.task.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":" * This is the class for Schmidt, a multi-functional chatbot","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"public class Schmidt {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"     * This is the main method which makes use of Schmidt class.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"     * @param args Unused.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"        String LOGO \u003d \"░██████╗░█████╗░██╗░░██╗███╗░░░███╗██╗██████╗░████████╗\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"                \"██╔════╝██╔══██╗██║░░██║████╗░████║██║██╔══██╗╚══██╔══╝\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"                \"╚█████╗░██║░░╚═╝███████║██╔████╔██║██║██║░░██║░░░██║░░░\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"                \"░╚═══██╗██║░░██╗██╔══██║██║╚██╔╝██║██║██║░░██║░░░██║░░░\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"                \"██████╔╝╚█████╔╝██║░░██║██║░╚═╝░██║██║██████╔╝░░░██║░░░\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"                \"╚═════╝░░╚════╝░╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝╚═════╝░░░░╚═╝░░░\";","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"        print(\"Hello! I\u0027m Schmidt\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"        while (true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"            // indent user input","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"            System.out.print(\"\\t-\u003e \");","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"            // trim the input to remove leading and trailing whitespaces","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"            String trimmedInput \u003d input.trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"            // check if the input is empty","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"            String command;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"                // split input by whitespace and extract the command","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"                command \u003d trimmedInput.split(\"\\\\s+\")[0].toLowerCase();","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"                printValidCommands();","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"            // Switch statement to handle different commands","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"            switch (command) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"mihirheda02"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"mihirheda02"},"content":"                printByeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"mihirheda02"},"content":"                return;","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"mihirheda02"},"content":"            case \"list\":","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"mihirheda02"},"content":"                printListHelper(tasks);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"mihirheda02"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"mihirheda02"},"content":"                try {","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"mihirheda02"},"content":"                    markTaskHelper(tasks, trimmedInput, true);","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"mihirheda02"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"mihirheda02"},"content":"                    print(\"The task number should be a number\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"mihirheda02"},"content":"                            \"\\tmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"mihirheda02"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"mihirheda02"},"content":"                    print(\"Task number out of range\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"mihirheda02"},"content":"                            \"\\tmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"mihirheda02"},"content":"                } catch (SchmidtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"mihirheda02"},"content":"                    print(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"mihirheda02"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"mihirheda02"},"content":"                try {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"mihirheda02"},"content":"                    markTaskHelper(tasks, trimmedInput, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"mihirheda02"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"mihirheda02"},"content":"                    print(\"The task number should be a number\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"mihirheda02"},"content":"                            \"\\tunmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"mihirheda02"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"mihirheda02"},"content":"                    print(\"Task number out of range\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"mihirheda02"},"content":"                            \"\\tunmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"mihirheda02"},"content":"                } catch (SchmidtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"mihirheda02"},"content":"                    print(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"mihirheda02"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"mihirheda02"},"content":"                try {","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"mihirheda02"},"content":"                    addTodoHelper(tasks, trimmedInput);","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"mihirheda02"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"mihirheda02"},"content":"                    print(\"The description of a todo cannot be empty\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"mihirheda02"},"content":"                            \"\\ttodo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"mihirheda02"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"mihirheda02"},"content":"                try {","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"mihirheda02"},"content":"                    addDeadlineHelper(tasks, trimmedInput);","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"mihirheda02"},"content":"                } catch (SchmidtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"mihirheda02"},"content":"                    print(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"mihirheda02"},"content":"            case \"event\":","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"mihirheda02"},"content":"                try {","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"mihirheda02"},"content":"                    addEventHelper(tasks, trimmedInput);","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"mihirheda02"},"content":"                } catch (SchmidtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"mihirheda02"},"content":"                    print(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"mihirheda02"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"mihirheda02"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"mihirheda02"},"content":"            default:","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"mihirheda02"},"content":"                printValidCommands();","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"mihirheda02"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"mihirheda02"},"content":"     * This is a function to add lines to print statements","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"mihirheda02"},"content":"    public static void print(String message) {","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"mihirheda02"},"content":"     * This is a function to print the valid commands","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"mihirheda02"},"content":"    public static void printValidCommands() {","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"mihirheda02"},"content":"        print(\"I\u0027m sorry, but the valid commands are:\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"mihirheda02"},"content":"                \"\\tbye\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"mihirheda02"},"content":"                \"\\tlist\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"mihirheda02"},"content":"                \"\\ttodo \u003cdescription\u003e\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"mihirheda02"},"content":"                \"\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"mihirheda02"},"content":"                \"\\tevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"mihirheda02"},"content":"                \"\\tmark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"mihirheda02"},"content":"                \"\\tunmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"mihirheda02"},"content":"     * This is a function to print the bye message","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"mihirheda02"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"mihirheda02"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"mihirheda02"},"content":"     * This is a helper method to print the list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"mihirheda02"},"content":"    public static void printListHelper(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"mihirheda02"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"mihirheda02"},"content":"            print(\"You have no tasks in the list\");","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"mihirheda02"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(\"------------------------------------------------------------\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"mihirheda02"},"content":"                \"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"mihirheda02"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"mihirheda02"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"mihirheda02"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"mihirheda02"},"content":"     * This is a helper method to print the message after adding a task","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"mihirheda02"},"content":"    public static void printAddedTaskMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"mihirheda02"},"content":"        print(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"mihirheda02"},"content":"                \"\\t\" + tasks.get(tasks.size() - 1).toString() + \"\\n\" +","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"mihirheda02"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"mihirheda02"},"content":"     * This is a helper method to add a Todo task","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"mihirheda02"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"mihirheda02"},"content":"    public static void addTodoHelper(ArrayList\u003cTask\u003e tasks, String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"mihirheda02"},"content":"        // split by the first whitespace to get the description","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"mihirheda02"},"content":"        String[] inputTokens \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"mihirheda02"},"content":"        if (inputTokens.length \u003c 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"mihirheda02"},"content":"            print(\"The description of a todo cannot be empty\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"mihirheda02"},"content":"                    \"\\ttodo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"mihirheda02"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"mihirheda02"},"content":"        String description \u003d inputTokens[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"mihirheda02"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"mihirheda02"},"content":"        printAddedTaskMessage(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"mihirheda02"},"content":"     * This is a helper method to add a deadline task","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"mihirheda02"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"mihirheda02"},"content":"    public static void addDeadlineHelper(ArrayList\u003cTask\u003e tasks, String input) throws SchmidtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"mihirheda02"},"content":"        // parse the input to get the description and by","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"mihirheda02"},"content":"        String[] inputTokens \u003d input.split(\"\\\\s+/by\\\\s+\");","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"mihirheda02"},"content":"        // no description or \"/by\"","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"mihirheda02"},"content":"        if (inputTokens.length \u003c 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"Please specify the deadline and description\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"mihirheda02"},"content":"        // no description","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"mihirheda02"},"content":"        String description;","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"mihirheda02"},"content":"            description \u003d inputTokens[0].split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"mihirheda02"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":221,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"The description of a deadline cannot be empty\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":222,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tdeadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":224,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"mihirheda02"},"content":"        String by \u003d inputTokens[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":226,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":227,"author":{"gitId":"mihirheda02"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2024-02-15"},{"lineNumber":228,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":229,"author":{"gitId":"mihirheda02"},"content":"        printAddedTaskMessage(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":230,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":231,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":232,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":233,"author":{"gitId":"mihirheda02"},"content":"     * This is a helper method to add an event task","lastModifiedDate":"2024-02-05"},{"lineNumber":234,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":235,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":236,"author":{"gitId":"mihirheda02"},"content":"     * @param input The user input","lastModifiedDate":"2024-02-05"},{"lineNumber":237,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":238,"author":{"gitId":"mihirheda02"},"content":"    public static void addEventHelper(ArrayList\u003cTask\u003e tasks, String input) throws SchmidtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":239,"author":{"gitId":"mihirheda02"},"content":"        // split by \"/from\" to get the description and time details","lastModifiedDate":"2024-02-15"},{"lineNumber":240,"author":{"gitId":"mihirheda02"},"content":"        String[] inputSplitByFrom \u003d input.split(\"\\\\s+/from\\\\s+\");","lastModifiedDate":"2024-02-15"},{"lineNumber":241,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":242,"author":{"gitId":"mihirheda02"},"content":"        // no \"/from\" or \"/to\"","lastModifiedDate":"2024-02-15"},{"lineNumber":243,"author":{"gitId":"mihirheda02"},"content":"        if (inputSplitByFrom.length \u003c 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":244,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"Please specify both the from and to date\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":245,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":246,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":247,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":248,"author":{"gitId":"mihirheda02"},"content":"        // split by \"/to\" to get the from and to","lastModifiedDate":"2024-02-15"},{"lineNumber":249,"author":{"gitId":"mihirheda02"},"content":"        String[] inputSplitByTo \u003d inputSplitByFrom[1].split(\"\\\\s+/to\\\\s+\");","lastModifiedDate":"2024-02-15"},{"lineNumber":250,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":251,"author":{"gitId":"mihirheda02"},"content":"        // no \"/from\" or \"/to\"","lastModifiedDate":"2024-02-15"},{"lineNumber":252,"author":{"gitId":"mihirheda02"},"content":"        if (inputSplitByTo.length \u003c 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":253,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"Please specify both the from and to date\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":254,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":255,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":256,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":257,"author":{"gitId":"mihirheda02"},"content":"        String description;","lastModifiedDate":"2024-02-15"},{"lineNumber":258,"author":{"gitId":"mihirheda02"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":259,"author":{"gitId":"mihirheda02"},"content":"            description \u003d inputSplitByFrom[0].split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2024-02-15"},{"lineNumber":260,"author":{"gitId":"mihirheda02"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":261,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"The description of an event cannot be empty\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":262,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tevent \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":263,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":264,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":265,"author":{"gitId":"mihirheda02"},"content":"        String from \u003d inputSplitByTo[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":266,"author":{"gitId":"mihirheda02"},"content":"        String to \u003d inputSplitByTo[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":267,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":268,"author":{"gitId":"mihirheda02"},"content":"        tasks.add(new Event(description, from, to));","lastModifiedDate":"2024-02-05"},{"lineNumber":269,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":270,"author":{"gitId":"mihirheda02"},"content":"        printAddedTaskMessage(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":271,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":274,"author":{"gitId":"mihirheda02"},"content":"     * This is a helper method to mark or unmark a task as done","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"mihirheda02"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":276,"author":{"gitId":"mihirheda02"},"content":"     * @param tasks      The list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":277,"author":{"gitId":"mihirheda02"},"content":"     * @param input      The user input","lastModifiedDate":"2024-02-02"},{"lineNumber":278,"author":{"gitId":"mihirheda02"},"content":"     * @param shouldMark A boolean to indicate if the task needs to be marked or unmarked as done","lastModifiedDate":"2024-02-05"},{"lineNumber":279,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":280,"author":{"gitId":"mihirheda02"},"content":"    public static void markTaskHelper(ArrayList\u003cTask\u003e tasks, String input, boolean shouldMark) throws SchmidtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":281,"author":{"gitId":"mihirheda02"},"content":"        String[] tokens \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-15"},{"lineNumber":282,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":283,"author":{"gitId":"mihirheda02"},"content":"        // incorrectly formatted command","lastModifiedDate":"2024-02-15"},{"lineNumber":284,"author":{"gitId":"mihirheda02"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":285,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"Please specify the task number to mark as done\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":286,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":287,"author":{"gitId":"mihirheda02"},"content":"        } else if (tokens.length \u003e 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":288,"author":{"gitId":"mihirheda02"},"content":"            throw new SchmidtException(\"Please specify one task number to mark as done\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":289,"author":{"gitId":"mihirheda02"},"content":"                    \"\\tmark \u003ctask number\u003e\");","lastModifiedDate":"2024-02-15"},{"lineNumber":290,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":291,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":292,"author":{"gitId":"mihirheda02"},"content":"        int index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":293,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":294,"author":{"gitId":"mihirheda02"},"content":"        // mark or unmark the task as done","lastModifiedDate":"2024-02-15"},{"lineNumber":295,"author":{"gitId":"mihirheda02"},"content":"        if (shouldMark) {","lastModifiedDate":"2024-02-05"},{"lineNumber":296,"author":{"gitId":"mihirheda02"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":297,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":298,"author":{"gitId":"mihirheda02"},"content":"            print(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":299,"author":{"gitId":"mihirheda02"},"content":"                    \"\\t\" + tasks.get(index));","lastModifiedDate":"2024-02-15"},{"lineNumber":300,"author":{"gitId":"mihirheda02"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":301,"author":{"gitId":"mihirheda02"},"content":"            tasks.get(index).unmarkAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":302,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":303,"author":{"gitId":"mihirheda02"},"content":"            print(\"Nice! I\u0027ve unmarked this task as done:\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":304,"author":{"gitId":"mihirheda02"},"content":"                    \"\\t\" + tasks.get(index));","lastModifiedDate":"2024-02-15"},{"lineNumber":305,"author":{"gitId":"mihirheda02"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":306,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mihirheda02":305,"-":2}},{"path":"src/main/java/schmidt/exception/SchmidtException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.exception;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"public class SchmidtException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"    public SchmidtException(String errorMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"mihirheda02":7}},{"path":"src/main/java/schmidt/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"    protected String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"mihirheda02":16}},{"path":"src/main/java/schmidt/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"    protected String from;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"    protected String to;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"mihirheda02":17}},{"path":"src/main/java/schmidt/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":" * Task class represents a task with a description and a boolean to indicate if it is done.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"     * Constructor for Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"mihirheda02"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"mihirheda02"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"mihirheda02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the status icon of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"mihirheda02"},"content":"     * @return The status icon of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"mihirheda02"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"mihirheda02"},"content":"     * This method marks the task as done","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"mihirheda02"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"mihirheda02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"mihirheda02"},"content":"     * This method unmarks the task as done","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"mihirheda02"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"mihirheda02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"mihirheda02"},"content":"     * @return The description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"mihirheda02"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"mihirheda02"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"mihirheda02"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"mihirheda02"},"content":"     * This method returns the string representation of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"mihirheda02"},"content":"     * @return The string representation of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"mihirheda02"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"mihirheda02"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"mihirheda02":56}},{"path":"src/main/java/schmidt/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirheda02"},"content":"package schmidt.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"mihirheda02"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"mihirheda02"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"mihirheda02"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"mihirheda02"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"mihirheda02"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"mihirheda02"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"mihirheda02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"mihirheda02"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"mihirheda02"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"mihirheda02":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mihirheda02"},"content":"java -classpath ..\\bin Schmidt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mihirheda02":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mihirheda02"},"content":"java -classpath ../bin schmidt.core.Schmidt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mihirheda02":1,"-":37}}]
