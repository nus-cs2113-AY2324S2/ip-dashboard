[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"Welcome to Avril (not the singer), also known as AVY, your personal task management assistant! Avril helps you keep track of your todos, deadlines, and events so you can stay organized and focused.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"### Add Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"You can add three types of tasks: Todos, Deadlines, and Events. Each task type is designed to suit different needs.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"### Todos","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"Tasks without any specific deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"### Deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"Tasks that need to be completed by a certain date and time.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"### Events","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"Activities that occur at a specific time or within a specific time frame.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"### List Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"View all your tasks in a neatly formatted list with their completion status, descriptions, and relevant date/time information.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"### Marking Tasks as Done","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"Mark tasks as completed to track your progress.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"### Unmarking Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"In case you marked a task as done by mistake, you can unmark it.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"### Deleting Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"Remove tasks that are no longer relevant or were added by mistake.","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"### Finding Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"Quickly find tasks by searching for a keyword in their descriptions.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"## Usage","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"### `deadline` - Add a todo task","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"- **Command**: `todo \u003ctaskDescription\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"- **Description**: Adds a todo task to your list.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"- **Example**: `todo Read a book`","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"- **Expected Outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"    Got it. Avril the Bot added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"       [T][ ] Read a book","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"    Now you have 1 task in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"- **Command**: `deadline \u003ctaskDescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"- **Description**: Adds a task with a specified deadline to your list.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"- **Example**: `deadline Return library books /by 2023-10-05 1700`","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"- **Expected Outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"    Got it. Avril the Bot added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"       [D][ ] Return library books (by: Oct 5 2023, 5:00 PM)","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"### `event` - Add an event task","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"- **Command**: `event \u003ctaskDescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"- **Description**: Adds an event task with start and end times to your list.","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"- **Example**: `event Team meeting /from 2023-10-06 0900 /to 2023-10-06 1100`","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"- **Expected Outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"avrilgk"},"content":"    Got it. Avril the Bot added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"avrilgk"},"content":"       [E][ ] Team meeting (From: Oct 6 2023, 9:00 AM To: Oct 6 2023, 11:00 AM)","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"avrilgk"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"avrilgk"},"content":"### `list` - Listing all tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"avrilgk"},"content":"- **Command**: `list`","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"avrilgk"},"content":"- **Description**: Displays all tasks in your list.","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"avrilgk"},"content":"- **Example**: `list`","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"avrilgk"},"content":"- **Expected Outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"avrilgk"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"avrilgk"},"content":"    1.[T][ ] Read a book","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"avrilgk"},"content":"    2.[D][ ] Return library books (by: Oct 5 2023, 5:00 PM)","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"avrilgk"},"content":"    3.[E][ ] Team meeting (From: Oct 6 2023, 9:00 AM To: Oct 6 2023, 11:00 AM)","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"avrilgk"},"content":"### `mark` -  Marking a task as Done","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"avrilgk"},"content":"- **Command**: `mark \u003ctaskNumber\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"avrilgk"},"content":"- **Description**: Marks the specified task as done.","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"avrilgk"},"content":"- **Example**: `mark 1`","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"avrilgk"},"content":"- **Expected Outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"avrilgk"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"avrilgk"},"content":"       [T][X] Read a book","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"avrilgk"},"content":"    ```","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":109,"author":{"gitId":"avrilgk"},"content":"### `delete` -  Deleting a Task","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"avrilgk"},"content":"- **Command**: `delete \u003ctaskNumber\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"avrilgk"},"content":"- **Description**: Deletes the specified task from your list.","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"avrilgk"},"content":"- **Example**: `delete 3`","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"avrilgk"},"content":"- **Expected Outcome**:","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"avrilgk"},"content":"    orh ok. Make sure hor, I deleted this:","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"avrilgk"},"content":"       [E][ ] Team meeting (From: Oct 6 2023, 9:00 AM To: Oct 6 2023, 11:00 AM)","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"avrilgk"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"avrilgk"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":121,"author":{"gitId":"avrilgk"},"content":"  ","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"avrilgk"},"content":"### `find` - Find a task/tasks that contain a specific keyword","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"avrilgk"},"content":"- **Command**: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"avrilgk"},"content":"- **Description**: Searches for tasks that contain the specified keyword in their","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"avrilgk"},"content":"### Refer to the instructions provided by Avril upon startup for more details on command syntax and additional features.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"avrilgk":106,"-":21}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":" * Represents a task with deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":" * Inherits from the Task class and adds deadline information.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"     * Constructs a DeadlineTask with the specified description and deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"     * @param deadline    Deadline by which the task needs to be completed","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"     * Returns a string representation of the DeadlineTask, including its type,","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"     * description, and deadline, formatted as \"MMM d yyyy, h:mm a\"","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"     * @return A formatted string representing the DeadlineTask","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"        String formattedDeadline \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDeadline + \")\";","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"avrilgk":34}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":" * Inherits from the Task class and adds time-specific information","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":" * */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"     * Constructs an EventTask with the specified description, start time, and end time.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"     * @param startTime Start time of the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"     * @param endTime End time of the event.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"    public EventTask(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"     * Returns a string representation of the EventTask, including its type, description,","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"     * start time, and end time formatted as \"dd-MM-yyyy HH:mm\".","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"     * @return Formatted string representing the EventTask.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"        String formattedStartTime \u003d this.startTime.format(formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"        String formattedEndTime \u003d this.endTime.format(formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStartTime + \" to: \" + formattedEndTime + \")\";","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"avrilgk":39}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":" * The Parser class is responsible for interpreting user input commands and","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":" * executing the corresponding actions within the task management application.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"    public Parser() {","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"     * Continuously reads and processes user commands until the exit command is received.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"     * Recognizes and executes a range of commands related to task management.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"    public void parseCommands() {","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"        String userCommand;","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"        while (true) {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"            System.out.print(\"Enter a command: \");","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"            userCommand \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"            if (userCommand.equalsIgnoreCase(\"thank you and bye\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"                processCommand(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"            } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"        scanner.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"     * Processes an individual user command by matching it against known commands","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"     * and executing the corresponding actions.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"     * @param userCommand The user command to be processed.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"    private void processCommand(String userCommand) throws TaskManagerException {","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"        if (userCommand.equalsIgnoreCase(\"hi\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"HEY HEY YOU YOU I CAN BE YOUR... task manager bot\");","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Bro. Say \u0027thank you and bye\u0027. If not i\u0027m not letting you exit~~\");","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"            TaskList.displayTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"mark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"            TaskList.markTask(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"            TaskList.unmarkTask(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"todo\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"            if (userCommand.strip().equals(\"todo\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"                throw new TaskManagerException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"            TaskList.addTodoTask(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"            if (userCommand.strip().equals(\"deadline\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"                throw new TaskManagerException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"            TaskList.addDeadline(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"event\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"            if (userCommand.strip().equals(\"event\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"avrilgk"},"content":"                throw new TaskManagerException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"            TaskList.addEvent(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"delete\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"            TaskList.deleteTask(userCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"        } else if (userCommand.startsWith(\"find \")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"avrilgk"},"content":"            String keyword \u003d userCommand.substring(5);","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"avrilgk"},"content":"            TaskList.findTask(keyword);","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Do better. Read syntax instructions.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"avrilgk":82}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"import java.io.File;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"import java.util.List;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"     * Constructs a new Storage object associated with a file path.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"    private final String filePath;","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"     * Loads tasks from the file specified by filePath. Each line in the file represents a single task.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"     * This method parses each line into a Task object and adds it to a list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"                Task task \u003d parseLineToTask(line);","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"            scanner.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"        return loadedTasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"     * Parses a single line from the task file into a Task object.","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"     * The line format is expected to be specific for each type of task","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"     * @param line A string representing a line from the task file.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"     * @return A Task object represented by the line, or null if the line format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"    private Task parseLineToTask(String line) {","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"        String[] parts \u003d line.split(\"\\\\|\", -1);","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Invalid task format: \" + line);","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"            return null;","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"avrilgk"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"avrilgk"},"content":"            case \"T\":","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"                TodoTask todoTask \u003d new TodoTask(description);","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"                if (isDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"                    todoTask.markAsDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"                return todoTask;","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"avrilgk"},"content":"            case \"D\":","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"avrilgk"},"content":"                String deadlineStr \u003d parts[3].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"avrilgk"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"avrilgk"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineStr, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"avrilgk"},"content":"                    return new DeadlineTask(description, deadline);","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"avrilgk"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"avrilgk"},"content":"                    System.err.println(\"Error parsing deadline datetime for task: \" + description + \". Please ensure it\u0027s in the correct format \u0027DD-MM-YYYY HHmm\u0027.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"avrilgk"},"content":"                    return null;","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"avrilgk"},"content":"            case \"E\":","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"avrilgk"},"content":"                String startTimeStr \u003d parts[3].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"avrilgk"},"content":"                String endTimeStr \u003d parts[4].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"avrilgk"},"content":"                LocalDateTime startTime, endTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"avrilgk"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"avrilgk"},"content":"                    startTime \u003d LocalDateTime.parse(startTimeStr, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"avrilgk"},"content":"                    endTime \u003d LocalDateTime.parse(endTimeStr, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"avrilgk"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"avrilgk"},"content":"                    System.err.println(\"Invalid event time format. Please use the format \u0027DD-MM-YYYY HHmm\u0027.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"avrilgk"},"content":"                    return null;","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"avrilgk"},"content":"                return new EventTask(description, startTime, endTime);","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"avrilgk"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"Unknown task type in file: \" + taskType);","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"avrilgk"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"avrilgk"},"content":"        return null;","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"avrilgk"},"content":"     * Saves the list of tasks to the file specified by filePath. Each task is converted to a string","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"avrilgk"},"content":"     * and written as a line in the file. If the file does not exist, it will be created.","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"avrilgk"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"avrilgk"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"avrilgk"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"avrilgk"},"content":"            FileWriter writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"avrilgk"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"avrilgk"},"content":"                writer.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"avrilgk"},"content":"            writer.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"avrilgk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"An error occurred while saving tasks to file.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"avrilgk":136}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":" * This class serves as a base for more specific types of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"public class Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"    private final String description;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"    private boolean done;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"     * Constructs a new Task with the specified description","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"     * Returns a string representation of the task, including its completion status","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"     * @return A formatted string representing the task and its status.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"        return (done ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"avrilgk":38}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"     * Initializes or re-initializes the task list. This method can be used to reset the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"    public void load() {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"        TaskList.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"     * @param userCommand The command input by the user, expected to contain a description of the task following the command keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"    static void addTodoTask(String userCommand) {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"        String taskDescription \u003d userCommand.substring(4).trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"use english pls. type properly.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"            tasks.add(new TodoTask(taskDescription));","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Got it. AVY added this task:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"   [T][ ]  \" + taskDescription);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\" Now you have 1 task in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"     * Adds a new Deadline task based on user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"     * @param userCommand The command input by the user, expected to contain a description of the task and a deadline, separated by \u0027/by\u0027.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"    static void addDeadline(String userCommand) throws TaskManagerException {","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"        String[] descParts \u003d userCommand.split(\"deadline\");","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"        String[] deadlineParts \u003d descParts[1].split(\"/by\", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"        if (descParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Invalid deadline format. Please use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"        if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Invalid deadline format. Please use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"        String description \u003d deadlineParts[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"        String deadlineString \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"        LocalDateTime deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"            deadline \u003d LocalDateTime.parse(deadlineString, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"avrilgk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Invalid deadline date format. Please use the format \u0027DD-MM-YYYY HHmm\u0027.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"avrilgk"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"        tasks.add(new DeadlineTask(description, deadline));","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\" Got it. AVRY added this task:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"   [D][ ] \" + description + \" (By: \" + deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")) + \")\");","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"avrilgk"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Now you have 1 task in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"avrilgk"},"content":"     * Adds a new Event task based on user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"avrilgk"},"content":"     * @param userCommand The command input by the user, expected to contain a description of the task and a deadline, separated by \u0027/from\u0027.","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"avrilgk"},"content":"    static void addEvent(String userCommand) throws TaskManagerException {","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"avrilgk"},"content":"        String[] descParts \u003d userCommand.split(\"event\", 2);","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"avrilgk"},"content":"        String[] eventParts \u003d descParts[1].split(\"/from\", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"avrilgk"},"content":"        if (descParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Invalid event format. Please use \u0027event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\u0027 to specify the event.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"avrilgk"},"content":"        if (eventParts.length \u003c 2 || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Invalid event format. Please use \u0027/from\u0027 to specify the start date and time.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"avrilgk"},"content":"        String description \u003d eventParts[0].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"avrilgk"},"content":"        String[] timeParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"avrilgk"},"content":"        if (timeParts.length !\u003d 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Invalid event format. Please use \u0027/to\u0027 to specify the end date and time.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"avrilgk"},"content":"        // Parse the start and end times of command","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"avrilgk"},"content":"        String startTimeString \u003d timeParts[0].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"avrilgk"},"content":"        String endTimeString \u003d timeParts[1].trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"avrilgk"},"content":"        LocalDateTime startTime, endTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"avrilgk"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"avrilgk"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"avrilgk"},"content":"            startTime \u003d LocalDateTime.parse(startTimeString, formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"avrilgk"},"content":"            endTime \u003d LocalDateTime.parse(endTimeString, formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"avrilgk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"avrilgk"},"content":"            throw new TaskManagerException(\"Invalid date-time format. Please use the format \u0027DD-MM-YYYY HHmm\u0027.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"avrilgk"},"content":"        // Format the start and end times for output","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"avrilgk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"avrilgk"},"content":"        String formattedStartTime \u003d startTime.format(formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"avrilgk"},"content":"        String formattedEndTime \u003d endTime.format(formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"avrilgk"},"content":"        // Adding the new event task to the task list","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"avrilgk"},"content":"        tasks.add(new EventTask(description, startTime, endTime));","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\" Got it. AVRY added this task:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"   [E][ ] \" + description + \" (From: \" + formattedStartTime + \" To: \" + formattedEndTime + \")\");","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"avrilgk"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Now you have 1 task in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"avrilgk"},"content":"     * \u0027displayTasks\u0027 method displays all the lists -- marked and unmarked","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"avrilgk"},"content":"     * when the command \u0027list\u0027 is inputted by the user","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"avrilgk"},"content":"    static void displayTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"avrilgk"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Tasks list is empty.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"avrilgk"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"avrilgk"},"content":"     * `markTask` method marks a task as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"avrilgk"},"content":"     * it extracts the task index, and updates the task\u0027s status","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"avrilgk"},"content":"    static void markTask(String userCommand) {","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"avrilgk"},"content":"        String[] characters \u003d userCommand.split(\"\\\\s+\");","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"avrilgk"},"content":"        if (characters.length !\u003d 2 || !characters[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Invalid command format. Please use \u0027mark \u003ctask index\u003e\u0027.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"avrilgk"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"avrilgk"},"content":"        int taskIndex \u003d Integer.parseInt(characters[1]) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"avrilgk"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"avrilgk"},"content":"            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"   \" + tasks.get(taskIndex));","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Invalid task index. Please enter a valid number.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"avrilgk"},"content":"     * `unmarkTask` method un-marks a task that was originally marked as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"avrilgk"},"content":"     * it extracts the task index, and updates the task\u0027s status, then prints a confirmation message.","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"avrilgk"},"content":"    static void unmarkTask(String userCommand) {","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"avrilgk"},"content":"        String[] characters \u003d userCommand.split(\"\\\\s+\");","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"avrilgk"},"content":"        if (characters.length \u003d\u003d 2 \u0026\u0026 characters[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"avrilgk"},"content":"            int taskIndex \u003d Integer.parseInt(characters[1]) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"avrilgk"},"content":"            if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"avrilgk"},"content":"                tasks.get(taskIndex).markAsNotDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":199,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"   \" + tasks.get(taskIndex));","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"avrilgk"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"Invalid task index.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Invalid format. Please check your spelling or punctuation.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"avrilgk"},"content":"    static void deleteTask(String userCommand) {","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"avrilgk"},"content":"        String[] characters \u003d userCommand.split(\"\\\\s+\");","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"avrilgk"},"content":"        if (characters.length !\u003d 2 || !characters[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":215,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"type properly\");","lastModifiedDate":"2024-03-06"},{"lineNumber":216,"author":{"gitId":"avrilgk"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":217,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"avrilgk"},"content":"        int taskIndex \u003d Integer.parseInt(characters[1]) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"avrilgk"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"avrilgk"},"content":"            Task deletedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":222,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":223,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\" orh ok. Make sure hor, I deleted this:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":224,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"   \" + deletedTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":225,"author":{"gitId":"avrilgk"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":226,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\" Now you have 1 task in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":227,"author":{"gitId":"avrilgk"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":228,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":229,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":230,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-06"},{"lineNumber":231,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Invalid task index. Please enter a valid number.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":233,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":234,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":235,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":236,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":237,"author":{"gitId":"avrilgk"},"content":"     * Searches for and displays tasks that contain the keyword in the user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":238,"author":{"gitId":"avrilgk"},"content":"     * If one or more matches are found, it lists those tasks along with their indices.","lastModifiedDate":"2024-03-06"},{"lineNumber":239,"author":{"gitId":"avrilgk"},"content":"     * If no matches are found, it displays an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":240,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":241,"author":{"gitId":"avrilgk"},"content":"     * @param keyword The keyword to search for within the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":242,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":243,"author":{"gitId":"avrilgk"},"content":"    public static void findTask(String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":244,"author":{"gitId":"avrilgk"},"content":"        StringBuilder results \u003d new StringBuilder();","lastModifiedDate":"2024-03-07"},{"lineNumber":245,"author":{"gitId":"avrilgk"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-03-06"},{"lineNumber":246,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":247,"author":{"gitId":"avrilgk"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2024-03-06"},{"lineNumber":248,"author":{"gitId":"avrilgk"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-03-06"},{"lineNumber":249,"author":{"gitId":"avrilgk"},"content":"            if (task.toString().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-03-06"},{"lineNumber":250,"author":{"gitId":"avrilgk"},"content":"                if (!isFound) {","lastModifiedDate":"2024-03-07"},{"lineNumber":251,"author":{"gitId":"avrilgk"},"content":"                    results.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-03-07"},{"lineNumber":252,"author":{"gitId":"avrilgk"},"content":"                    isFound \u003d true;","lastModifiedDate":"2024-03-06"},{"lineNumber":253,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":254,"author":{"gitId":"avrilgk"},"content":"                results.append(String.format(\"%d. %s%n\", (i + 1), task));","lastModifiedDate":"2024-03-07"},{"lineNumber":255,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":256,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":257,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":258,"author":{"gitId":"avrilgk"},"content":"        if (!isFound) {","lastModifiedDate":"2024-03-07"},{"lineNumber":259,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":260,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":261,"author":{"gitId":"avrilgk"},"content":"            System.out.println(results);","lastModifiedDate":"2024-03-06"},{"lineNumber":262,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":263,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":264,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":265,"author":{"gitId":"avrilgk"},"content":"    private static boolean isValidTaskIndex(int taskIndex) {","lastModifiedDate":"2024-03-06"},{"lineNumber":266,"author":{"gitId":"avrilgk"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size();","lastModifiedDate":"2024-03-06"},{"lineNumber":267,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":268,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":269,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"avrilgk":269}},{"path":"src/main/java/TaskManagerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"    public TaskManagerException(String message) {","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"        super(message);","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"avrilgk":5}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"avrilgk":10}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":" * The Ui class handles user interface interactions by displaying messages to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":" * It provides a welcome message upon instantiation and has methods to display instructions and a farewell message.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"public class Ui {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"    private static final String asciiArt \u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"            \"     ___     ________   __\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"                    + \"    / \\\\ \\\\   / /  _ \\\\ \\\\ / /\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"                    + \"   / _ \\\\ \\\\ / /| |_) \\\\ V / \\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"                    + \"  / ___ \\\\ V / |  _ \u003c | |  \\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"                    + \" /_/   \\\\_\\\\_/  |_| \\\\_\\\\|_|  \";","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"    private static final String welcome \u003d asciiArt","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"            + \"\\n\\nHEY HEY YOU YOU! I COULD BE YOUR...task manager bot.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"    private static final String instructions \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"            \"---------Follow the syntax below:---------------\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"                    + \"- Todos: todo \u003ctaskDescription\u003e\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"                    + \"- Deadlines: deadline \u003ctaskDescription\u003e /by \u003cdate\u003e \u003ctime\u003e\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"                    + \"- Events: event \u003ctaskDescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"                    + \"- Plus point if you can spell my name right.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"                    + \"- End the program by saying \u0027thank you and bye\u0027\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"                    + \"--------------------------------------------------\";","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"    private static final String farewell \u003d \"Byeeeeee! Hope to see you again!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"    Ui() {","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"        System.out.println(welcome);","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"    void printInstructions() {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"        System.out.println(instructions);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"    void printFarewell() {","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"        System.out.println(farewell);","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"avrilgk":39}},{"path":"src/main/java/Zap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":" * It initializes the user interface, storage, and parser components, and orchestrates","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":" * the flow of the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"public class Zap {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"    private static List\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"    private final Ui ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"    private final Storage storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"    private final Parser parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"     * Constructs a Zap instance with the specified file path for task storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"     * It initializes the UI, storage, and parser components, and loads tasks from storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"     * @param filePath The path to the file used for task storage.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"    public Zap(String filePath) {","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"        taskList.load();","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"     * Starts the application, displaying instructions, parsing user commands,","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"     * and saving tasks upon completion.","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"    public void run() {","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"        ui.printInstructions();","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"        parser.parseCommands();","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"        ui.printFarewell();","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"     * Point of entry for the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"        new Zap(\"tasks.txt\").run();","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"avrilgk":49}}]
