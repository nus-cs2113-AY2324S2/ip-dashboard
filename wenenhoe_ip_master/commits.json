{"authorDailyContributionsMap":{"wenenhoe":[{"date":"2024-01-21","commitResults":[{"hash":"17fe55621da2fd9ada0c3fc829bf9cdd95f685e7","isMergeCommit":false,"messageTitle":"style: Rename chatbot","messageBody":"Give chatbot a new name to differentiate it from the placeholder name\n`Duke`\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":10}}},{"hash":"2f82b8c0c992314458aea450c6fc1a5ce2b2489f","isMergeCommit":false,"messageTitle":"feat: Add greetings and exit","messageBody":"Implement initial skeletal version that greets user and exits\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2024-01-28","commitResults":[{"hash":"c797801b6128d504cf006e7cd96f2191302b5853","isMergeCommit":false,"messageTitle":"feat: Add echo functionality","messageBody":"Echo command entered by user and exit when user types `bye`\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"1aa27ec9651b8492f0718723aa68aff155a676e4","isMergeCommit":false,"messageTitle":"feat: Add task storing and listing","messageBody":"Store whatever text entered by user and display back when requested\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"4da8986b46753086f1cec01a9b0907d77839be30","isMergeCommit":false,"messageTitle":"style: Improve readability and interactivity of chatbot","messageBody":"New stylings added:\n* Separator\n* Tab\n* Console-like prompt\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"72ccfe71d23da61cae3bcb4946d1e2faa49594fa","isMergeCommit":false,"messageTitle":"bugfix: Invert filter for user input","messageBody":"Filter `list` and `bye` first then allow everything else to be added to\ntask list\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}},{"hash":"c50c188737f4c3a8078b4c109923bca4c1e2b839","isMergeCommit":false,"messageTitle":"refactor: Abstract task into separate class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":7}}},{"hash":"8f3d2a08301f40f810937ce65312e48c49e2fd94","isMergeCommit":false,"messageTitle":"refactor: Utilise switch case to filter user input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"23e0ce39edce00a3f4d8b320fcc2dd18be2766c3","isMergeCommit":false,"messageTitle":"feat: Add mark and unmark functionality","messageBody":"Allow user to:\n* Mark tasks as done\n* Change tasks back to not done\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":3}}},{"hash":"ca7909f675844941ae60149025fab52fdbe4cb72","isMergeCommit":false,"messageTitle":"refactor: Abstract task management","messageBody":"* Print task list\n* Add task\n* Mark task as done\n* Unmark task as not done\n* Parse user input for task number\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":30}}},{"hash":"424da5a74ba837b4dea2fedd00f409477ee4fbfe","isMergeCommit":false,"messageTitle":"feat: Add exception for parsing user input","messageBody":"* Handle invalid task number\n* Handle out of range task number\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":9}}},{"hash":"75e907abeb240a4f34983bd43e180ffc0ed3f65c","isMergeCommit":false,"messageTitle":"style: Modify code to follow coding conventions","messageBody":"* Inline method annotation\n* Descriptive variable naming\n* Comment for ignored exception\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":9}}},{"hash":"12208d1b8a0e27cc7948cb4668893fff7c5ed46d","isMergeCommit":false,"messageTitle":"fix: Add static modifier to method","messageBody":"Method independent of internal state of class\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"45c73ea1d914f3d3e7c0ce04f5b93f7f9314a3b3","isMergeCommit":false,"messageTitle":"fix: Remove unnecessary type cast","messageBody":"Object of interface type `List\u003c\u003e` can be iterated without type cast to\n`Array`\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":4}}}]},{"date":"2024-02-04","commitResults":[{"hash":"7c4d51c411fc398c8657f9f447eb0b085e2b3afa","isMergeCommit":false,"messageTitle":"style: Add newline for `Override` annotation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"502f849a7e0f5e687c5dbb94f7acbde588a268b6","isMergeCommit":false,"messageTitle":"feat: Add new subclasses for different Task types","messageBody":"* Deadline\n* Event\n* Todo\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}},{"hash":"fee1dc94bfd4ec6ed597ef0a846b7ac1b5606d96","isMergeCommit":false,"messageTitle":"refactor: Abstract console input and output","messageBody":"* Print welcome message\n* Print formatted response\n* Get user input from console with prompt\n","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":26}}},{"hash":"24ab6803c5805bf69bc0ee1f55d90e0e8ddd98e0","isMergeCommit":false,"messageTitle":"refactor: Modify `TaskManager` methods","messageBody":"* Methods take in task number instead of string that needs to be parsed\n* Move parsing methods into `Magus` class\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":23}}},{"hash":"dfdf73e9a5a74547f2e772b5ef84d6ff9a0ef5f5","isMergeCommit":false,"messageTitle":"fix: Apply try catch at relevant code statements","messageBody":"Only used when trying to get a `Task` at index, instead of irrelevant\ncode statements\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":10}}}]},{"date":"2024-02-05","commitResults":[{"hash":"f0d53000e60e1ee81cd342ed2efe46219a886f91","isMergeCommit":false,"messageTitle":"refactor: Reorganise code into packages","messageBody":"* task related classes\n* console related class\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"924623f4a9e477c703f166269856ee5698e9314b","isMergeCommit":false,"messageTitle":"feat: Add `Command` enum","messageBody":"* Allow improved switch case processing of commands\n* Improve scalability for future support of new commands\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"72e09764f629ce76d2c4e9852ad285c67c454555","isMergeCommit":false,"messageTitle":"refactor: Utilise `Command` enum in switch case","messageBody":"Improve processing of commands from user input\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":19}}},{"hash":"807bb23539927f7c2bd04321ab93de99aa9f6320","isMergeCommit":false,"messageTitle":"refactor: Abstract get task into method","messageBody":"Remove duplicate code in `markTaskAsDone` and `unmarkTaskAsNotDone`\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":14}}},{"hash":"9c0a9e732cc2a343b221047d89933f0a7ddd208c","isMergeCommit":false,"messageTitle":"feat: Handle new commands for different task types","messageBody":"* todo\n* deadline\n* event\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":1}}},{"hash":"39b5402ee211526d6001a5e463175d1d84477f54","isMergeCommit":false,"messageTitle":"refactor: Utilise `Console.printResponse`","messageBody":"For printing to console with tabs\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"222d8b5b06d3b1e269013b0092cdf9a958e3c7de","isMergeCommit":false,"messageTitle":"feat: Add parsers for each task type","messageBody":"Handle additional arguments for each task type:\n* Deadline `by`\n* Event `from` and `to`\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":4}}},{"hash":"350c4a2e7eb9089aaf64e37f90c41480789c91a9","isMergeCommit":false,"messageTitle":"fix: Remove unnecessary `toString` method calls","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"9148461d9cd13d13d7923eae5db2066883cf1eb9","isMergeCommit":false,"messageTitle":"refactor: Improve processing commands readability","messageBody":"Break into smaller methods\n","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":48}}},{"hash":"371d322bf7dc34c26e86de9548024fa135ff4738","isMergeCommit":false,"messageTitle":"refactor: Abstract user input parsing","messageBody":"Parse command and additional input\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":40}}},{"hash":"aae49a58220e91dde55a5bc26878aaf9142edd9b","isMergeCommit":false,"messageTitle":"fix: Resolve `NoSuchElementException`","messageBody":"* Encounter issue when `Scanner` is recreated\n* Should be static and created once for `System.in` stream\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"7ac0bd292db293673a548c0bf2f91e2f46fa1a02","isMergeCommit":false,"messageTitle":"test: Modify runtest scripts to run `Magus`","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"a663841b278ad493cfb72b872fc63248e1246030","isMergeCommit":false,"messageTitle":"test: Add test cases and expected output","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0}}}]},{"date":"2024-02-09","commitResults":[{"hash":"d5b9bebffaa1ab03e9175fb9e71a325c8809a168","isMergeCommit":false,"messageTitle":"fix(style): Rename methods and members","messageBody":"* Constant members should be all caps\n* Rename method for better clarity\n* Naming local variable to remove magic number\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}},{"hash":"17ee986d89f35727e59dd5ef5e05d9f3d39d1fc4","isMergeCommit":false,"messageTitle":"fix(style): Add and fix comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"0a505b42d05992492fa374c9e6521899c075ca5b","isMergeCommit":false,"messageTitle":"refactor: Remove boolean return from method","messageBody":"Remove the need for the method to be renamed by moving boolean check\noutside of method\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":11}}},{"hash":"a6fb723db9b25c9d05c29f80cba624d1914703e7","isMergeCommit":false,"messageTitle":"feat: Deprecate adding of normal task","messageBody":"* Initial: Anything that does not match the command words were added as\nnormal task to the task list.\n* Current: This feature has since been deprecated\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"84f19b52678813159609c427e1a58158af5fc780","isMergeCommit":false,"messageTitle":"fix(bug): Exit program with invalid command","messageBody":"Additional inputs after using `bye` command should not exit program\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}}]},{"date":"2024-02-10","commitResults":[{"hash":"b298effc830b5ca6008eeb15fc34e3e6e3ef9475","isMergeCommit":false,"messageTitle":"feat: Deprecate using of `Parser.input`","messageBody":"* Initial: Input will be used to add normal task\n* Current: No normal task will be created\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":6}}},{"hash":"cd515049a0736cb787e0627d08eaf53d06bbe4e5","isMergeCommit":false,"messageTitle":"wip: Add todo for future error handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"414762c389828ecb8152599a24c5faf6ba212bb6","isMergeCommit":false,"messageTitle":"fix(style): Modify comment","messageBody":"To reflect correct description\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"a23b6d01e50684c39453e843e27fff38e78b7ba6","isMergeCommit":false,"messageTitle":"refactor: Rename `Command` enum","messageBody":"From `DEFAULT` to `UNKNOWN`\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"f018e6600b6adb869fb0b94dd49ac8a519167067","isMergeCommit":false,"messageTitle":"refactor: Remove `TaskType.DEFAULT`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"267a94f9045ec96b44bb764f7fab9594d6303dcf","isMergeCommit":false,"messageTitle":"refactor: Remove unused `Parser.input`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":9}}},{"hash":"cea7b4d8fa13244d779d6c735fd63d0aeb2c1581","isMergeCommit":false,"messageTitle":"refactor: Remove single word check in `Magus`","messageBody":"* Check performed in `Parser` constructor instead\n* If list or bye commands have additional input, then command type will\nbe set to `Command.UNKNOWN`\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":27}}}]},{"date":"2024-02-11","commitResults":[{"hash":"64ef6ec4ddba17531a1f2c8cb0ac4544c471d091","isMergeCommit":false,"messageTitle":"refactor: Remove deprecated normal task creation","messageBody":"Prevent creation of normal task outside of class also\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":13}}},{"hash":"8b529a716be7dc7d24746a11ede540d1b51034e4","isMergeCommit":false,"messageTitle":"refactor: Modify return type of subclass `parse`","messageBody":"Utilise implicit upcasting instead\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2024-02-12","commitResults":[{"hash":"717ca4703cd49960afbb40c9d2038c99bee3f1e8","isMergeCommit":false,"messageTitle":"feat: Add `ArgumentNotFoundException`","messageBody":"Catch when insufficient arguments supplied\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":8}}},{"hash":"0eaafe325320f4a3317ecb2b18ee19f6c468eab6","isMergeCommit":false,"messageTitle":"feat: Add `CommandNotFoundException`","messageBody":"Catch when unknown command supplied\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":5}}},{"hash":"d04a17f6eaba776eca6ee45aa3a45af6e7da3491","isMergeCommit":false,"messageTitle":"refactor: Use default argument","messageBody":"Optimise code by having a default argument\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"00aa8869a842b2b230864bf97ea87bb9879f4d74","isMergeCommit":false,"messageTitle":"style: Improve coding style","messageBody":"Left align colon within `for`\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"03b89bb98a54dcd5bfc6e2e7e5debcf8c13390c7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-5\u0027","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{}},{"hash":"0651848d07b5486867926ede401935971f8f112e","isMergeCommit":false,"messageTitle":"feat: Introduce base package `Magus`","messageBody":"All subpackages are now under the same base package\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":22}}},{"hash":"84ab399e31d3ebd58e2790f3b76033958b8ad9ed","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-17","commitResults":[{"hash":"ee21114a08326721b7d743623a6db41647dcda0e","isMergeCommit":false,"messageTitle":"feat: Add new command to `delete` tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"dbbbecae65bb789d30fe345107a4baa798a284e1","isMergeCommit":false,"messageTitle":"feat: Add abstract method to get badge","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"c1bab2bf2aaa28a2f8b9ed50fe5bbda0407b130c","isMergeCommit":false,"messageTitle":"feat: Implement `Task.getBadge` in `Task.toString`","messageBody":"Remove hardcoded badge and use method to return it instead\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":3}}},{"hash":"8ab6619c6b51c53a254d0a35cdb45a4a6090981a","isMergeCommit":false,"messageTitle":"feat: Add `Task.toStoredString` for save to file","messageBody":"Different format string from `Task.toString` for ease of parsing later\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"d934d0fb63a11c7e7b971b83f80b8f34d262266c","isMergeCommit":false,"messageTitle":"refactor: Move `Magus.processInput` to `CommandManager`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":37}}},{"hash":"774960b262239ed280d02f298c3114b75560de88","isMergeCommit":false,"messageTitle":"feat: Add new class to handle program data save","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":0}}},{"hash":"c8e4efddcc6439ddf0449a43b1f6f6b0b3891e3a","isMergeCommit":false,"messageTitle":"feat: Add export task list","messageBody":"Save task info into `Magus.txt`\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"cfe23ad88b3df83430020ea75b258e053616b24f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-6\u0027","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{}},{"hash":"1f2bd2e9e00ee195d25f68de2ffa0634d4768454","isMergeCommit":false,"messageTitle":"chore: Move `fileio` package within `task`","messageBody":"Better representation of the usage\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"7f0d3b087d3226a715e69e9d4727bbfcaa10b592","isMergeCommit":false,"messageTitle":"feat: Add get `TaskType` by task badge method","messageBody":"Will be used when parsing stored task info\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"f54a5b07c97a142ca4ddf9b206c66d2eafb22652","isMergeCommit":false,"messageTitle":"feat: Add parser for handling stored data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"10045328033ed7a4416fdc91fca7dae0ad4d552e","isMergeCommit":false,"messageTitle":"style: Add comment to explain empty return","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"51aed9b391af55d39302213a0adf8f85d8fc0f7a","isMergeCommit":false,"messageTitle":"fix(bug): Add missing column to parse","messageBody":"Parse the `isDone` column\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"d4d1f03477f524c720dab78076deb81b35dd3b80","isMergeCommit":false,"messageTitle":"feat: Add import task list from saved data","messageBody":"* Additional parsers for each task types\n* `TaskManager` attempts to import task list at initialization\n","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":0}}},{"hash":"cee99fddc28a4933c86ba83fd489b92ba336b768","isMergeCommit":false,"messageTitle":"fix(bug): Special character used in regex pattern","messageBody":"Escape the delimiter pattern\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"3cea969bbd8f55ac1d7cb70483265f0825b88697","isMergeCommit":false,"messageTitle":"refactor: Standardise use of delimiter constant","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":9}}},{"hash":"0bf87d63f7b557c64de33b4d774c44da8551c1bb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/Magus/Magus.java\n","fileTypesAndContributionMap":{}},{"hash":"1487b574e363406ac8c66b81a774e95ccb2789ec","isMergeCommit":false,"messageTitle":"fix(bug): Add export task list after task deletion","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"9b1e6e89e2669857bd4986e62fc517099702f633","isMergeCommit":false,"messageTitle":"chore: Reorganise `Magus.task` package","messageBody":"Create subpackage `Magus.task.variant` for the 3 task types\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":3}}},{"hash":"9d5b389e96727756dc0547e859e6d786ea48822b","isMergeCommit":false,"messageTitle":"fix: Modify root package name","messageBody":"Conform to lowercase naming convention\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":46}}}]},{"date":"2024-02-18","commitResults":[{"hash":"1451130ddc174e6a020ef4154ae63a29e65be601","isMergeCommit":false,"messageTitle":"fix(test): Compile and run program broken","messageBody":"Repackaged program require:\n* correct folder specified for compilation\n* using fully qualified name for the class when running program\n\nReferenced:\n* https://stackoverflow.com/a/48882180\n* https://stackoverflow.com/a/18093929\n","fileTypesAndContributionMap":{"bat":{"insertions":2,"deletions":2},"sh":{"insertions":2,"deletions":2}}},{"hash":"1b12662c4a57dad62bfb5820cf44ea054f80b0db","isMergeCommit":false,"messageTitle":"feat: Add error context to exceptions","messageBody":"Improved description on what is missing or what is the issue\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":6}}}]},{"date":"2024-02-26","commitResults":[{"hash":"a0c59b4e94b8ada0b287b678a64d634756cb2471","isMergeCommit":false,"messageTitle":"refactor: Rename package to `storage`","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":12}}},{"hash":"12c844931132d0648a92a36b9c3a9227cdd8ff26","isMergeCommit":false,"messageTitle":"feat: Add `find` command for keyword search","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}}]},{"date":"2024-02-27","commitResults":[{"hash":"5b007c2bbbdc30618f3cd8da6606456c200f337c","isMergeCommit":false,"messageTitle":"feat: Add support for storing dates","messageBody":"Replace `start` and `end` in `Deadline` and `Event` data format from\n`String` to `LocalDate`\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":11}}},{"hash":"b582dd56dc2c6cca1695a67e4933f633a5c7224f","isMergeCommit":true,"messageTitle":"Merge pull request #1 from wenenhoe/branch-Level-8","messageBody":"feat: Add support for storing dates","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"5fc5d55470d13f12fee171336940350f7d0ddfbf","isMergeCommit":false,"messageTitle":"feat: Add new data structure `Pair`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"feddecbb227e58512e2652522a927e240cbfeece","isMergeCommit":false,"messageTitle":"feat: Add parser to handle jumbled order args","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":0}}},{"hash":"8c92a769a4de665c97d9f65af67de92d2f4191d1","isMergeCommit":false,"messageTitle":"refactor: Remove use of `parse` method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":13}}},{"hash":"f4add1a5f2cb7f393acbb39aab084369452d5c8d","isMergeCommit":false,"messageTitle":"refactor: Utilise new parser to handle task args","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":46}}},{"hash":"0a8120aefc7cf100bc1aae30872dcba56c6ac06f","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-Refactor-Task-Parser","messageBody":"# Conflicts:\n#\tsrc/main/java/magus/task/variant/Deadline.java\n#\tsrc/main/java/magus/task/variant/Event.java\n","fileTypesAndContributionMap":{}},{"hash":"ceb7a94e67056510e5af1cbbee92262007b8ef62","isMergeCommit":true,"messageTitle":"Merge pull request #2 from wenenhoe/branch-Refactor-Task-Parser","messageBody":"Refactor task parser","fileTypesAndContributionMap":{}},{"hash":"c47c931327065082d4fc373af086d8207689e929","isMergeCommit":false,"messageTitle":"refactor: Remove duplicated list printing code","messageBody":"Abstract into a function so it can be reused in printing matched tasks\nand printing all tasks\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"3eb6c1b86df00bd7e13d64fc717b4f56c37ad15d","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/master\u0027 into branch-Level-9","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-28","commitResults":[{"hash":"6e9fd24a6bd289a0018b5e68923d9eb5743b43b0","isMergeCommit":false,"messageTitle":"feat: Add getters for `Deadline` and `Event`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"73c036927c3995aeae1645b31ce361dfd3fe1e7d","isMergeCommit":false,"messageTitle":"feat: Add `UNKNOWN` task type and getEnum by name","messageBody":"For implementing task finding without task type specified\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"0bbcac4cca3ea8e15bcbbd5cacbf1db543364190","isMergeCommit":false,"messageTitle":"feat: Add new `TaskFinder` class","messageBody":"Abstract extended `find` functionality into separate class to handle\nfiltering by different task types and date searches\n","fileTypesAndContributionMap":{"java":{"insertions":210,"deletions":0}}},{"hash":"b27cca14bc222d8ade7c232e83239e878d725d9e","isMergeCommit":false,"messageTitle":"feat: Integrate `TaskFinder` into `TaskManager`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"5622ce68aef34b80935f4cf4a2d6c71a0c21425a","isMergeCommit":true,"messageTitle":"Merge pull request #3 from wenenhoe/branch-Level-9","messageBody":"Branch level 9","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-29","commitResults":[{"hash":"29bdd052bf496b834757129a8ef967912f596ecb","isMergeCommit":false,"messageTitle":"fix(bug): Fix issue with `getArgPositions`","messageBody":"* When `isIncludeFirstParam` is `false`, `endIndex` not obtained correctly\nas the `for` loop just skips to the end\n* Fix is applied to allow endIndex to be set in the next iteration of the\nfor loop\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"89ce55373f172734f6e4034458d80b4410df7dee","isMergeCommit":false,"messageTitle":"feat: Add `toString` method to `Pair`","messageBody":"Allow for better string output when debugging instances of this class\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"d00d4326cf8896971ffc58091e716b03f638059b","isMergeCommit":false,"messageTitle":"test: Add removal of saved task list file","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":1,"deletions":0},"sh":{"insertions":4,"deletions":0}}},{"hash":"742e0733ca091dc7a19063ef380f01c624d553b1","isMergeCommit":false,"messageTitle":"test: Update test cases for new inputs and outputs","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":16,"deletions":10}}},{"hash":"a0267b3f943822cf791c3e242be14a6f11d82a6a","isMergeCommit":false,"messageTitle":"fix(bug): Handle `DateTimeParseException`","messageBody":"When adding tasks\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}},{"hash":"7299a2b7330c0cf2b4c4c8100f03168c43ef402a","isMergeCommit":false,"messageTitle":"test: Update tests to include erroneous inputs","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0}}},{"hash":"befb9258c26e9a9bc04656982256556520e7b32a","isMergeCommit":false,"messageTitle":"feat: Add new exception for unknown arguments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"563f9999a1425904fec1daf8827509e8fe8b57e7","isMergeCommit":false,"messageTitle":"feat: Add checks for detecting unknown argument","messageBody":"Console arguments are screened for unexpected arguments\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":3}}},{"hash":"e5d0af5a23f57bc586110458bbf9ecb1aad10d1b","isMergeCommit":false,"messageTitle":"feat: Handle new exception in consumer code","messageBody":"Code that utilises the console parser need to handle the new exception\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":31}}},{"hash":"bd386c51eddbd5d0be1014c1c731f4db5c23e405","isMergeCommit":false,"messageTitle":"test: Add test cases for unknown argument","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}},{"hash":"3068eec7be99b656b64b81e5ccd1c76e01c0839a","isMergeCommit":false,"messageTitle":"feat: Handle non numerical input for commands","messageBody":"* `mark`\n* `unmark`\n* `delete`\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":31}}},{"hash":"40a6a724b1e62019b0d174b4ae8b3a4db1c17443","isMergeCommit":false,"messageTitle":"test: Add test cases for non numerical inputs","messageBody":"* `mark`\n* `unmark`\n* `delete`\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0}}},{"hash":"6dd8ae7edcb627a340364bec310226354600713b","isMergeCommit":true,"messageTitle":"Merge pull request #4 from wenenhoe/branch-Test-All-Features","messageBody":"Branch test all features","fileTypesAndContributionMap":{}},{"hash":"21d99ed93b83625398e87fca0dc517ed115a5994","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-JavaDoc","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"472b52b68a5d34d30c36d228028643630f75ac25","isMergeCommit":false,"messageTitle":"docs: Add docs for `Pair`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"585cfb5b70c2d0fa863efea3b8efdd4425b4d06c","isMergeCommit":false,"messageTitle":"docs: Add docs for `Task`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"5f8fccdf73b87d01af49f0c1e734b458d48a0cc3","isMergeCommit":false,"messageTitle":"docs: Add docs for exception classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"319bce44c7cc25039980b980bfafd4693d851589","isMergeCommit":false,"messageTitle":"style: Rename constants for convention","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"8308c83ab1fba62e2e45988662c07a883ced41fb","isMergeCommit":false,"messageTitle":"docs: Add docs for `FileIo`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"b8628f817f01b8360bd45b2344522d0c3789ae7e","isMergeCommit":false,"messageTitle":"refactor: Store split task info as member","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"2af12ee03b44ef4ff939a9a829eb4023d412f838","isMergeCommit":false,"messageTitle":"docs: Add docs for task storage `Parser`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"e976dee4a554a7ed46f03e2eddca524877dd8197","isMergeCommit":false,"messageTitle":"style: Remove unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"59ac657e4e1014d4b7a4730f3f52a621e6ce4836","isMergeCommit":false,"messageTitle":"refactor: Abstract to static method in Parser","messageBody":"For obtaining the argument value and checking if it is empty\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":68}}}]},{"date":"2024-03-01","commitResults":[{"hash":"645bca8cae251336d3774294b97f1e6598d83338","isMergeCommit":false,"messageTitle":"style: Remove spacing from varargs typing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"dc4baf14a5a9d3477a1589d943f55082e9b0d537","isMergeCommit":false,"messageTitle":"docs: Add docs for `Deadline`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"e3e37271f7b020cadb99fb1d3ef3eae9fde9d9f0","isMergeCommit":false,"messageTitle":"docs: Add docs for `Event`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"bae4f783f684ea624b78075238f28bb512a46880","isMergeCommit":false,"messageTitle":"docs: Add docs for enums and `Magus`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":1}}},{"hash":"079e9353e4223861b30ebdc00ad8f596f4a6ad22","isMergeCommit":false,"messageTitle":"docs: Add docs for `Todo`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"e1d5ad013c75a426b977a2950921129131e2f1a5","isMergeCommit":false,"messageTitle":"docs: Add docs for `CommandManager`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"02bd17bce527623392bce8e5b57f3ce5624a5e8d","isMergeCommit":false,"messageTitle":"docs: Add docs for `Console`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"36835982397ba0668a83f3a5c6f700c1ae583461","isMergeCommit":false,"messageTitle":"refactor: Remove unused method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"049e9947354d50bd39670e7629d6fd04986d029b","isMergeCommit":false,"messageTitle":"docs: Add docs for `TaskManager`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"76367f844d36ea85ba8ad3bd8bfa0afa5a44cbf9","isMergeCommit":false,"messageTitle":"docs: Add docs for console `Parser`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0}}},{"hash":"11a655fa4ee3313b053ac8334bee4c7bfd6f694f","isMergeCommit":true,"messageTitle":"Merge pull request #5 from wenenhoe/branch-A-JavaDoc","messageBody":"Branch a java doc","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"ff4fac73a854bf800d1e98abd8432c8443c67b95","isMergeCommit":false,"messageTitle":"docs: Update user guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":240,"deletions":14}}},{"hash":"e976133b08ec64de15ccf2319d28dbd1d75e12fe","isMergeCommit":true,"messageTitle":"Merge pull request #7 from wenenhoe/branch-A-UserGuide","messageBody":"docs: Update user guide","tags":["A-UserGuide"],"fileTypesAndContributionMap":{}}]},{"date":"2024-03-03","commitResults":[{"hash":"84d4e903aa5ed0341065a4090bd0d4463e11d311","isMergeCommit":false,"messageTitle":"docs: Reword javadoc for improved clarity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"8269dc269ed4906a6f9e7411876005b0615ba3f4","isMergeCommit":false,"messageTitle":"refactor: Improve clarity of `firstWord` usage","messageBody":"Use it as a temporary variable to obtain first word\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"1b5c9263f2bb5679b14927d204639d4faeb54abb","isMergeCommit":false,"messageTitle":"refactor: Improve code readability","messageBody":"With explicit if condition\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"6e7e62d7c44042d8c0b0774280c32021a407fcbd","isMergeCommit":false,"messageTitle":"docs: Add docs for `TaskFinder`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":4}}},{"hash":"a547083414de2f4df1e08a7c44a35288a5b9e24a","isMergeCommit":true,"messageTitle":"Merge pull request #8 from wenenhoe/branch-Refactor-Add-Final-Touches","messageBody":"Branch refactor add final touches","fileTypesAndContributionMap":{}}]},{"date":"2024-03-04","commitResults":[{"hash":"a395c5b05862569ac1d6088ffa4552fe53d4d2eb","isMergeCommit":false,"messageTitle":"fix: Use `null` return if error","messageBody":"Ensure only error message printed\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"df1c7f3ddacbb10b4554e354df22854d673fa276","isMergeCommit":false,"messageTitle":"refactor: Handle exceptions instead of throw","messageBody":"Return null if any exception encountered\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":25}}},{"hash":"7563e7a03eec5b655b0cda711a6277374cc0eeb9","isMergeCommit":false,"messageTitle":"refactor: Replace duplicated functionality","messageBody":"`filterTodo` functions the same as `filterTasksByDescription` for `TODO`\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":21}}},{"hash":"1192ca752fa2e21a7f3c9c01d9d2ae2534ff4f9c","isMergeCommit":false,"messageTitle":"chore: Remove unused import","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"15a32b5047782e71e9ec883325e8c9c30067b3a7","isMergeCommit":false,"messageTitle":"refactor: Add filter by description","messageBody":"`filterEvents` filters by description as last option\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}},{"hash":"7e59eb5dc43fca4f055ab73807393f34c124b46d","isMergeCommit":false,"messageTitle":"refactor: Allow filter by description","messageBody":"`filterDeadlines` can filter by description\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":7}}},{"hash":"1c307c357fc8b72147c7f9e193f911ecd4f9a7cf","isMergeCommit":true,"messageTitle":"Merge pull request #10 from wenenhoe/branch-Fix-Console-Parser","messageBody":"Branch fix console parser","tags":["A-Release"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"wenenhoe":{"java":1608,"md":230,"fxml":0,"sh":6,"bat":3,"gradle":0,"txt":43}},"authorContributionVariance":{"wenenhoe":22617.16},"authorDisplayNameMap":{"wenenhoe":"CS2113T-T09-1 HOE ..N EN"}}
