{"authorDailyContributionsMap":{"OKW32":[{"date":"2024-01-30","commitResults":[{"hash":"86eb1442d76870431df9666ab22f0533fd6745de","isMergeCommit":false,"messageTitle":"Initialize: Create skeletal code for Beefy.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":10}}},{"hash":"c50fbdbab5d56aaaa0c6f73e115cce9f795347ca","isMergeCommit":false,"messageTitle":"Style: Create Main class and add empty line at end of Beefy.java","messageBody":"Beefy.java is the entry point.\n\nCreating a Main class to be used as the entry point for our program is\ncleaner and follows the coding standards.\n\nLet\u0027s\n* Create a new class Main\n* Create class functions in Beefy e.g printSeparation(), startChat(),\nendChat() to be used in Main class\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"4473d22a4b5f6732f7f5c8b525ebd55d934d3ca0","isMergeCommit":false,"messageTitle":"Feature: Add echo user command","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":3}}},{"hash":"d0b70ac11c6942cd2bbc414498bc4716089cb82f","isMergeCommit":false,"messageTitle":"Feature: Add add and list functionality","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":5}}},{"hash":"14ecacc9d54e7bf3461dc48ca35fd1591a49a27e","isMergeCommit":false,"messageTitle":"Feature: Add ability to mark and unmark tasks","messageBody":"All text typed by user is stored in Beefy class.\n\nCreating two new classes to execute the tasks of storing information of\nthe task and storage of all tasks created will make the code easier\nto understand.\n\nLet\u0027s\n* Create a Task class to store information of each individual task\n* Create a TaskList class to compile and store all tasks that have been\ncreated\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":123,"deletions":15}}}]},{"date":"2024-01-31","commitResults":[{"hash":"1e1803e9929cbd233fd59119964162535cc0ba4b","isMergeCommit":false,"messageTitle":"Style: Shift creation of Task variable to addTask function","messageBody":"Task is created in startChat() function.\n\nShifting the creation of Task variable from startChat function in\nBeefy class to the addTask function in TaskList class, will follow the\nproper coding standards.\n\nLet\u0027s change the function addTask in TaskList to accept the task\ndescription and create the Task variable in it.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":6}}}]},{"date":"2024-02-01","commitResults":[{"hash":"0ef66f39790fc79b843b5449e143b9e8ae01664a","isMergeCommit":false,"messageTitle":"Style: Change constant name from BOTNAME to BOT_NAME","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}}]},{"date":"2024-02-03","commitResults":[{"hash":"68eed7bff1213f6121790ee0057346b4525fb635","isMergeCommit":false,"messageTitle":"Feature: Add ToDos, Events and Deadline functionalities","messageBody":"Let\u0027s\n* Define an enum type, CommandType, to help determine which command\nshould be executed\n* Create 3 new children classes of Task (ToDo, Deadline, Event) to\nallow for differentiation between the types of task to add to\nTaskList\n* Create a function, executeCommand, to receive user\u0027s input and\ncommand type so as to determine which command to execute\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":27}}},{"hash":"23bde67e84310ecba878c1418440c513670b0e51","isMergeCommit":false,"messageTitle":"Refactor code: Change executeCommand + Add space for task printing","messageBody":"executeCommand function does not handle cases where user input is\nformatted incorrectly for the adding of Tasks.\n\nChecking for above mentioned cases would prevent the code from\nexiting with error.\n\nLet\u0027s add try and catch statements to print the proper format to use\nfor users to view, upon detection of improper formatting.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":6},"bat":{"insertions":1,"deletions":1}}},{"hash":"707e1bfb0c93bab1b9d9e265ae8158e9d2e768f1","isMergeCommit":false,"messageTitle":"Test: Add TextUiTesting + Refactor startChat","messageBody":"startChat function unable to print out to user the proper formatting\nfor mark/unmark task upon improper input formatting.\n\nLet\u0027s\n* Use a nested if else statement instead to check if the input after\nmark/unmark command is an integer\n* Add inputs in input.txt to test for all features of ToDos,\nDeadlines, Events, List, Mark and Unmark, as well as to test if\nexceptions for isInteger and handleCommand functions are executed\ncorrectly.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":19,"deletions":0},"java":{"insertions":13,"deletions":3}}}]},{"date":"2024-02-08","commitResults":[{"hash":"9e575f07853571e30711457d03fe2920016eacf8","isMergeCommit":false,"messageTitle":"Style: Remove unnecessary lines in endChat function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":7}}}]},{"date":"2024-02-09","commitResults":[{"hash":"1dce93e9624624bba0412caa9a5a7231c5e72514","isMergeCommit":false,"messageTitle":"Refactor code: Add command classes to improve code quality","messageBody":"All commands are handled inside Beefy, causing code to be\nunreadable as there are multiple levels of abstraction.\n\nAdding multiple command classes help to distribute the code out into\nmultiple classes and improves readability.\n\nLet\u0027s create an interface Command, and create commands for each of\nthe different command type to implement the interface.\n","fileTypesAndContributionMap":{"java":{"insertions":249,"deletions":128}}},{"hash":"6e0aeb00e1d465af299aad64aed76d8cdca359c5","isMergeCommit":false,"messageTitle":"Style: Add/Remove blank lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"388ef13547013e781d94c61aceeff2d5b099ada6","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-5\u0027","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{}},{"hash":"3d7de24e1e0a392c1f45791908e3ebc20ad48f3a","isMergeCommit":false,"messageTitle":"Package: Create beefy, command, parser, task and ui packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":1}}},{"hash":"0cd449c6b2ac4f3edba24e587a1defdd3f8fb598","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"d1fed7713fe267d3375cfd3f563b0d3c08883380","isMergeCommit":false,"messageTitle":"Refactor code: Change error handling","messageBody":"Throw and catch statements with different exceptions are written in\nthe execute function in each individual command class, making it\nhard to scale code in future.\n\nCreating BeefyException class for all our execute functions and\nclass constructors to throw will allow for better scalability of\ncode in future.\n","fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":94}}}]},{"date":"2024-02-13","commitResults":[{"hash":"dbae297f7f8fd9dab97a58abdb830f56241475e6","isMergeCommit":false,"messageTitle":"Feature: Add Delete functionality","messageBody":"Let\u0027s add deleteTask function in TaskList class, a switch statement\nin Parser class to handle delete command, and a DeleteCommand class.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":0}}},{"hash":"c1a6dbd2277ac297221002055b969072c3b09cf6","isMergeCommit":false,"messageTitle":"Feature: Add Save functionality","messageBody":"Let\u0027s\n* Create a Data folder to store all tasks added in a text file\n(beefy.txt) in it\n* Create a storage package with Storage class to handle all storage\nfunctions such as converting beefy.txt into a TaskList, and updating\nstorage\n* Modify TaskList.addTask function to not output anything during\ninitialization by adding a second Boolean variable initialize\n","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":160,"deletions":21}}},{"hash":"fe82d17d4107366cca850f4c9da90806e3021d02","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-6\u0027","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{}},{"hash":"16772d2fd5f705176b106d734ec9211b0193894b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e259f8f4ba5fb1f7736927c3a9c96f3611401fae","isMergeCommit":false,"messageTitle":"Feature: Implement save function after delete/mark/unmark task","messageBody":"Let\u0027s call the function updateDisk in the execute function for the\nrespective command classes.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":5},"java":{"insertions":17,"deletions":7}}},{"hash":"48ba5b73fc7e320a68ba3208b25c17a065894bec","isMergeCommit":false,"messageTitle":"Bug Fix: Fix Storage class readDisk function","messageBody":"Does not create directory to store storage text file when there is no\ndirectory found, causing IO exceptions to occur upon writing to disk.\n\nCreating a file when there is no directory found will prevent IO\nexceptions from occurring.\n\nLet\u0027s create a function that will be called to create the directory and\nfile when there is a FileNotFoundException.\n","tags":["Level-7","A-Jar"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":3},"java":{"insertions":21,"deletions":18}}}]}]},"authorFileTypeContributionMap":{"OKW32":{"java":679,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":20}},"authorContributionVariance":{"OKW32":20751.148},"authorDisplayNameMap":{"OKW32":"CS2113-T11-1 ONG ..N WU"}}
