[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"yyangdaa"},"content":"Testing Pull Request","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"-":24,"yyangdaa":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyangdaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"yyangdaa"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"yyangdaa"},"content":"    private static final String DIVIDER_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"yyangdaa"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"yyangdaa"},"content":"        // Display the welcome message","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"yyangdaa"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"yyangdaa"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"yyangdaa"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"yyangdaa"},"content":"        Task[] tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"yyangdaa"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"yyangdaa"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"yyangdaa"},"content":"        String inputLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"yyangdaa"},"content":"        System.out.println(\"What can I do for you?\\n\" + DIVIDER_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"yyangdaa"},"content":"        do {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"yyangdaa"},"content":"            inputLine \u003d scanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"yyangdaa"},"content":"            if (inputLine.equals(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"yyangdaa"},"content":"                displayTaskList(tasks, taskCount);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"yyangdaa"},"content":"            } else if (inputLine.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"yyangdaa"},"content":"                markTaskAsDone(tasks, inputLine, taskCount);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"yyangdaa"},"content":"            } else if (inputLine.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"yyangdaa"},"content":"                markTaskAsNotDone(tasks, inputLine, taskCount);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"yyangdaa"},"content":"            } else if (!inputLine.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"yyangdaa"},"content":"                addTask(tasks, inputLine, taskCount);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"yyangdaa"},"content":"                taskCount++;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"yyangdaa"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(DIVIDER_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"yyangdaa"},"content":"        } while (!inputLine.equals(\"bye\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"yyangdaa"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"yyangdaa"},"content":"        scanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"yyangdaa"},"content":"    private static void displayWelcomeMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"yyangdaa"},"content":"        String logo \u003d \" ____  _    _  ____ _____ ___  ____  \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yyangdaa"},"content":"                + \"|  _ \\\\| |  | |/ ___|_   _/ _ \\\\|  _ \\\\ \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yyangdaa"},"content":"                + \"| | | | |  | | |     | || | | | | | |\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yyangdaa"},"content":"                + \"| |_| | |__| | |___  | || |_| | |_| |\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yyangdaa"},"content":"                + \"|____/ \\\\____/ \\\\____| |_| \\\\___/|____/ \\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yyangdaa"},"content":"        System.out.println(\"Hello from Duke\\n\" + logo +","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"yyangdaa"},"content":"                \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"yyangdaa"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"yyangdaa"},"content":"                DIVIDER_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"yyangdaa"},"content":"    private static void displayTaskList(Task[] tasks, int taskCount) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"yyangdaa"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"yyangdaa"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"yyangdaa"},"content":"            String statusIcon \u003d tasks[i].isDone ? \"X\" : \" \"; // Mark done tasks with X","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"yyangdaa"},"content":"            System.out.println((i + 1) + \".[\" + statusIcon + \"] \" + tasks[i].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"yyangdaa"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"yyangdaa"},"content":"    private static void markTaskAsDone(Task[] tasks, String inputLine, int taskCount) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"yyangdaa"},"content":"        int taskNumber \u003d Integer.parseInt(inputLine.substring(5)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"yyangdaa"},"content":"        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskCount) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"yyangdaa"},"content":"            tasks[taskNumber].markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(\"  \" + tasks[taskNumber].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"yyangdaa"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(\"Task number is invalid.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"yyangdaa"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"yyangdaa"},"content":"    private static void markTaskAsNotDone(Task[] tasks, String inputLine, int taskCount) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"yyangdaa"},"content":"        int taskNumber \u003d Integer.parseInt(inputLine.substring(7)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"yyangdaa"},"content":"        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskCount) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"yyangdaa"},"content":"            tasks[taskNumber].markAsNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(\"  \" + tasks[taskNumber].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"yyangdaa"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"yyangdaa"},"content":"            System.out.println(\"Task number is invalid.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"yyangdaa"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"yyangdaa"},"content":"    private static void addTask(Task[] tasks, String inputLine, int taskCount) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"yyangdaa"},"content":"        tasks[taskCount] \u003d new Task(inputLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"yyangdaa"},"content":"        System.out.println(\"added: \" + tasks[taskCount].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"yyangdaa":80}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyangdaa"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"yyangdaa"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"yyangdaa"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"yyangdaa"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"yyangdaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"yyangdaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"yyangdaa"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"yyangdaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"yyangdaa"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"yyangdaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"yyangdaa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"yyangdaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"yyangdaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"yyangdaa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"yyangdaa"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"yyangdaa":21}}]
