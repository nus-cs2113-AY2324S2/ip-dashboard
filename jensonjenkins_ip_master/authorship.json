[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"# Casper User Guide","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"Casper is a chatbot-like desktop app for tracking and managing your tasks using the Command Line Interface (CLI). ","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"## Quick Start","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"1.  Ensure you have Java `11` installed.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"2.  Install the latest `.jar` file [here](https://github.com/jensonjenkins/ip/releases/tag/A-Jar).","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"3.  Copy the file to a directory where you want to use Casper.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"4. Open a command terminal, navigate to the directory where the `.jar` file is located.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"5. Run `java -jar ip.jar` to run the application. You should be greeted with the following:","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"```dtd","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    Starting","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"       ___ __ _ ___ _ __   ___ _ __","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"      / __/ _` / __| \u0027_ \\ / _ \\ \u0027__|","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"     | (_| (_| \\__ \\ |_) |  __/ |   ","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"      \\___\\__,_|___/ .__/ \\___|_|   ","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"                   | |              ","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"                   |_|               ","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"     Boo! I\u0027m Casper!","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     What can I do for you?","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"6. To execute a command, type in the command and press the Enter key. Typing an unrecognized command will prompt a list of valid keywords to try as such: ","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"```dtd","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"help    ","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"     Pardon? I didn\u0027t quite understand \"help\"","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"     Maybe refer to the following list of commands?","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"      - bye","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"      - list","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"      - mark","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"      - unmark","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"      - deadline","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"      - event","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"      - todo","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"      - delete","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"      - find","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"7. Refer to the Features below for the details of each command.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"## Features","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"### Exit Casper: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"Exits the program. ","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"Format: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"### List out all your tasks: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"Lists out all your current tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"Format: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"### Mark a task as done: `mark`","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"Marks a given task as done.","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"- `INDEX` must be **a positive integer** 1, 2, 3, etc. within the bounds of your task list. ","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"- An invalid `INDEX` will be handled.","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"- `mark 1` Marks the first task in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"### Un-mark a task: `unmark`","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"Un-marks a given task as not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"- `INDEX` must be **a positive integer** 1, 2, 3, etc. within the bounds of your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"- An invalid `INDEX` will be handled.","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"- `unmark 3` Un-marks the 3rd task in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"### Add a todo task: `todo`","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"Adds a task to your list of type \"todo\".","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"- `DESCRIPTION` is the description of your todo task.","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"- `todo Take out the trash` Adds the task of type \"todo\" with a description \"Take out the trash\" to your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"jensonjenkins"},"content":"### Add a deadline: `deadline`","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"Adds a task of type \"deadline\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"Format: `deadline DESCRIPTION /by BYDATE`","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"jensonjenkins"},"content":"- `DESCRIPTION` is the description of your deadline.","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"jensonjenkins"},"content":"- `BYDATE` is the description of when your deadline has to be done by (Does not necessarily have to be a date).","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"jensonjenkins"},"content":"- `deadline Take out the trash /by 13-02-24` Adds a deadline with a description \"Take out the trash\" to be done by \"13-02-24\" to your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"jensonjenkins"},"content":"- `deadline Take out the trash /by tomorrow` Adds a deadline description \"Take out the trash\" to be done by \"tomorrow\" to your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"jensonjenkins"},"content":"### Add an event : `event`","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"jensonjenkins"},"content":"Adds a task of type \"event\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"jensonjenkins"},"content":"Format: `event DESCRIPTION /from FROMDATE /to TODATE`","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"jensonjenkins"},"content":"- `DESCRIPTION` is the description of your event.","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"jensonjenkins"},"content":"- `FROMDATE` is the string representing when the event is held from.","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"jensonjenkins"},"content":"- `TODATE` is the string representing when the event is held until.","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"jensonjenkins"},"content":"- `event summer break /from next week /to next month` Adds an event called \"summer break\" dating from \"next week\" to \"next month\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"jensonjenkins"},"content":"- `event summer break /from 01-01-24 /to 01-05-24` Adds an event called \"summer break\" dating from \"01-01-24\" to \"01-05-24\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"jensonjenkins"},"content":"### Delete a task: `delete`","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"jensonjenkins"},"content":"Deletes a task from your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"jensonjenkins"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"jensonjenkins"},"content":"- deletes the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"jensonjenkins"},"content":"- `INDEX` must be **a positive integer** 1, 2, 3, etc. within the bounds of your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"jensonjenkins"},"content":"- An invalid `INDEX` will be handled.","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"jensonjenkins"},"content":"- `delete 5` Deletes the 5th task in your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"jensonjenkins"},"content":"### Find related tasks: `find`","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"jensonjenkins"},"content":"Finds a task from your list given a keyword.","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"jensonjenkins"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"jensonjenkins"},"content":"- `KEYWORD` is a string you want to search for in your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"jensonjenkins"},"content":"-  `find Trash` returns you all tasks in your task list in which its `DESCRIPTION` contains the string \"Trash\".","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jensonjenkins":128,"-":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"# Casper User Guide","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"Casper is a chatbot-like desktop app for tracking and managing your tasks using the Command Line Interface (CLI). ","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"## Quick Start","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"1.  Ensure you have Java `11` installed.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"2.  Install the latest `.jar` file [here](https://github.com/jensonjenkins/ip/releases/tag/A-Jar).","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"3.  Copy the file to a directory where you want to use Casper.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"4. Open a command terminal, navigate to the directory where the `.jar` file is located.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"5. Run `java -jar ip.jar` to run the application. You should be greeted with the following:","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"```dtd","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    Starting","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"       ___ __ _ ___ _ __   ___ _ __","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"      / __/ _` / __| \u0027_ \\ / _ \\ \u0027__|","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"     | (_| (_| \\__ \\ |_) |  __/ |   ","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"      \\___\\__,_|___/ .__/ \\___|_|   ","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"                   | |              ","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"                   |_|               ","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     Boo! I\u0027m Casper!","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"     What can I do for you?","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"6. To execute a command, type in the command and press the Enter key. Typing an unrecognized command will prompt a list of valid keywords to try as such:","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"   ","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"```dtd   ","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"     Pardon? I didn\u0027t quite understand \"help\"","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"     Maybe refer to the following list of commands?","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"      - bye","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"      - list","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"      - mark","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"      - unmark","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"      - deadline","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"      - event","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"      - todo","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"      - delete","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"      - find","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"    _______________________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"7. Refer to the Features below for the details of each command.","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"### Exit Casper: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"Exits the program. ","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"Format: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"### List out all your tasks: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"Lists out all your current tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"Format: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"### Mark a task as done: `mark`","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"Marks a given task as done.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"- `INDEX` must be **a positive integer** 1, 2, 3, etc. within the bounds of your task list. ","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"- An invalid `INDEX` will be handled.","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"- `mark 1` Marks the first task in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"  ","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"### Un-mark a task: `unmark`","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"Un-marks a given task as not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"- `INDEX` must be **a positive integer** 1, 2, 3, etc. within the bounds of your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"- An invalid `INDEX` will be handled.","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"- `unmark 3` Un-marks the 3rd task in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"  ","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"### Add a todo task: `todo`","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"Adds a task to your list of type \"todo\".","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"- `DESCRIPTION` is the description of your todo task.","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"- `todo Take out the trash` Adds the task of type \"todo\" with a description \"Take out the trash\" to your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"  ","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"jensonjenkins"},"content":"### Add a deadline: `deadline`","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"jensonjenkins"},"content":"Adds a task of type \"deadline\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"jensonjenkins"},"content":"Format: `deadline DESCRIPTION /by BYDATE`","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"jensonjenkins"},"content":"- `DESCRIPTION` is the description of your deadline.","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"jensonjenkins"},"content":"- `BYDATE` is the description of when your deadline has to be done by (Does not necessarily have to be a date).","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"jensonjenkins"},"content":"- `deadline Take out the trash /by 13-02-24` Adds a deadline with a description \"Take out the trash\" to be done by \"13-02-24\" to your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"jensonjenkins"},"content":"- `deadline Take out the trash /by tomorrow` Adds a deadline description \"Take out the trash\" to be done by \"tomorrow\" to your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"jensonjenkins"},"content":"  ","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"jensonjenkins"},"content":"### Add an event : `event`","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"jensonjenkins"},"content":"Adds a task of type \"event\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"jensonjenkins"},"content":"Format: `event DESCRIPTION /from FROMDATE /to TODATE`","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"jensonjenkins"},"content":"- `DESCRIPTION` is the description of your event.","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"jensonjenkins"},"content":"- `FROMDATE` is the string representing when the event is held from.","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"jensonjenkins"},"content":"- `TODATE` is the string representing when the event is held until.","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"jensonjenkins"},"content":"- `event summer break /from next week /to next month` Adds an event called \"summer break\" dating from \"next week\" to \"next month\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"jensonjenkins"},"content":"- `event summer break /from 01-01-24 /to 01-05-24` Adds an event called \"summer break\" dating from \"01-01-24\" to \"01-05-24\" to your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"jensonjenkins"},"content":"  ","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"jensonjenkins"},"content":"### Delete a task: `delete`","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"jensonjenkins"},"content":"Deletes a task from your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"jensonjenkins"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"jensonjenkins"},"content":"- deletes the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"jensonjenkins"},"content":"- `INDEX` must be **a positive integer** 1, 2, 3, etc. within the bounds of your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"jensonjenkins"},"content":"- An invalid `INDEX` will be handled.","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"jensonjenkins"},"content":"- `delete 5` Deletes the 5th task in your list.","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"jensonjenkins"},"content":"  ","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"jensonjenkins"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"jensonjenkins"},"content":"### Find related tasks: `find`","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"jensonjenkins"},"content":"Finds a task from your list given a keyword.","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"jensonjenkins"},"content":"\\","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"jensonjenkins"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"jensonjenkins"},"content":"- `KEYWORD` is a string you want to search for in your task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"jensonjenkins"},"content":"Examples:","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"jensonjenkins"},"content":"-  `find Trash` returns you all tasks in your task list in which its `DESCRIPTION` contains the string \"Trash\".","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jensonjenkins":122,"-":19}},{"path":"src/main/java/Casper/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of \u003ccode\u003eCommand\u003c/code\u003e focusing on commands that add tasks into the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    private String userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    private String prefix;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"    public AddCommand(boolean isRunning, String prefix, String userInput){","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"        super(isRunning);","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     * Executes adding a task to the given \u003ccode\u003eTaskList\u003c/code\u003e, and saves it to the save file.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"     * @param ui An instance of \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"     * @param tasks An instance of \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"     * @param storage An instance of \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    public void execute(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"        switch (prefix){","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"            case \"event\":","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"                handleEvent(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"                handleDeadline(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"                handleTodo(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"        storage.handleSaveFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"    private static Task getEvent(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"        int fromIndex \u003d userInput.indexOf(\"/from\") + \"/from\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"        int toIndex \u003d userInput.indexOf(\"/to\") + \"/to\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"        int descIndex \u003d userInput.indexOf(\"event\")+\"event\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"        boolean isValidEventInput \u003d fromIndex \u003c descIndex || toIndex \u003c descIndex;","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"        if (isValidEventInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"        String eventDesc \u003d userInput.substring(descIndex, userInput.indexOf(\"/from\")).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"        String from \u003d userInput.substring(fromIndex, userInput.indexOf(\"/to\")).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"        String to \u003d userInput.substring(toIndex).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"        return new Event(eventDesc, from, to);","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"    private void handleEvent(String userInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"            Task newTask \u003d getEvent(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoAddedTask(newTask, tasks.getTaskNumber());","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"        } catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoUnrecognizedEvent();","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"    private static Task getDeadline(String userInput) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"        int byIndex \u003d userInput.indexOf(\"/by\") + \"/by\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"        int descIndex \u003d userInput.indexOf(\"deadline\")+\"deadline\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"        boolean isValidDeadlineInput \u003d byIndex \u003c descIndex;","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"        if (isValidDeadlineInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"        String deadlineDesc \u003d userInput.substring(descIndex, userInput.indexOf(\"/by\")).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"        String by \u003d userInput.substring(byIndex).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"        return new Deadline(deadlineDesc, by);","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"    private void handleDeadline(String userInput){","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"jensonjenkins"},"content":"            Task newTask \u003d getDeadline(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoAddedTask(newTask, tasks.getTaskNumber());","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoUnrecognizedDeadline();","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"jensonjenkins"},"content":"    private static Task getTodo(String userInput) throws CasperEmptyTodoException {","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"jensonjenkins"},"content":"        int descIndex \u003d userInput.indexOf(\"todo\")+\"todo\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"jensonjenkins"},"content":"        String todoDesc \u003d userInput.substring(descIndex).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"jensonjenkins"},"content":"        if(todoDesc.isEmpty()){","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"jensonjenkins"},"content":"            throw new CasperEmptyTodoException();","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"jensonjenkins"},"content":"        return new Todo(todoDesc);","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"jensonjenkins"},"content":"    private void handleTodo(String userInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"jensonjenkins"},"content":"            Task newTask \u003d getTodo(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"jensonjenkins"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoAddedTask(newTask, tasks.getTaskNumber());","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"jensonjenkins"},"content":"        } catch (CasperEmptyTodoException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoUnrecognizedTodo();","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":112}},{"path":"src/main/java/Casper/Casper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"public class Casper {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private static final String[] keywordList \u003d {\"bye\", \"list\", \"mark\", \"unmark\",","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"            \"deadline\", \"event\", \"todo\", \"delete\", \"find\"};","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    private static final String pathToSaveDirectory \u003d \"./save/\";","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    private static final String saveFilename\u003d \"savedCasper.txt\";","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    public Casper(String pathToSaveDirectory, String saveFilename){","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"        storage \u003d new Storage(pathToSaveDirectory, saveFilename, ui);","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"        tasks \u003d new TaskList(storage.loadSaveFile());","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"    private void run(){","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"        ui.echoGreetings();","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        while (isRunning) {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"            String userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"            try{","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"                command.execute(ui, tasks, storage);","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"                isRunning \u003d command.isRunning;","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"            } catch (CasperUnrecognizedKeywordException e){","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"                ui.unrecognizedKeywordException(keywordList, e);","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"        new Casper(pathToSaveDirectory, saveFilename).run();","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jensonjenkins":39}},{"path":"src/main/java/Casper/CasperEmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"public class CasperEmptyTodoException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"    public CasperEmptyTodoException(){","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"        super();","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    public CasperEmptyTodoException(String errorMessage){","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"jensonjenkins":11}},{"path":"src/main/java/Casper/CasperInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"public class CasperInvalidInputException extends Exception{","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"    public String exceptionNote;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"    public CasperInvalidInputException(String e){","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"        super();","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"        this.exceptionNote \u003d e;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    public String getExceptionNote(){","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"        return exceptionNote;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":12}},{"path":"src/main/java/Casper/CasperUnrecognizedKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"public class CasperUnrecognizedKeywordException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"    private String unrecognizedKeyword;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"    public CasperUnrecognizedKeywordException(){","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"        super();","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    public CasperUnrecognizedKeywordException(String errorMessage){","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"        super(\"\\n     ERROR: \\\"\" + errorMessage + \"\\\" is an unrecognized keyword.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"        this.unrecognizedKeyword \u003d errorMessage;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    public String getUnrecognizedKeyword(){","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"        return this.unrecognizedKeyword;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"jensonjenkins":15}},{"path":"src/main/java/Casper/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":" * An abstract class representing a general command to be executed.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    public boolean isRunning;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    public Command(boolean isRunning){","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"        this.isRunning \u003d isRunning;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    public abstract void execute(Ui ui, TaskList tasks, Storage storage);","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":12}},{"path":"src/main/java/Casper/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of the \u003ccode\u003eTask\u003c/code\u003e class, specifically tasks that are bounded by a deadline.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"        return \"[D]\"+super.toString() + \" (by: \"+by+\")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as marked.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"    public void markTask(){","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        super.markTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Nice Job! I\u0027ll mark this as done: \\n       \"+ this);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as unmarked.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"    public void unMarkTask(){","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"        super.unMarkTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Noted. Get it done soon...\\n       \"+ this);","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"     * Returns a formatted representation of the \u003ccode\u003eDeadline\u003c/code\u003e instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"     * @return String representing the current \u003ccode\u003eDeadline\u003c/code\u003e instance for the save file.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"    public String saveFormat(){","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"        return String.format(\"D # %d # %s # %s\", super.isDone?1:0, super.description, this.by);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jensonjenkins":46}},{"path":"src/main/java/Casper/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of \u003ccode\u003eCommand\u003c/code\u003e focusing on commands that deletes a task from the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    private String userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    public DeleteCommand(boolean isRunning, String userInput){","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"        super(isRunning);","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"     * Executes deleting a task to the given \u003ccode\u003eTaskList\u003c/code\u003e, and updates the save file.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     * @param ui An instance of \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"     * @param tasks An instance of \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"     * @param storage An instance of \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"    public void execute(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"        deleteTask(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"        storage.handleSaveFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"    private void deleteTask(String userInput){","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"            int targetTaskNumber \u003d tasks.validateTargetedInput(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"            Task taskToRemove \u003d tasks.getTask(targetTaskNumber-1);","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"            tasks.removeTask(targetTaskNumber-1);","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"            ui.echoDeleteTask(taskToRemove, tasks.getTaskNumber());","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"        } catch (CasperInvalidInputException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"            ui.wrapEchoMessage(e.getExceptionNote());","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":44}},{"path":"src/main/java/Casper/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of \u003ccode\u003eCommand\u003c/code\u003e focusing on commands that edits the status of tasks or","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * lists tasks (i.e. list, find).","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"public class EditCommand extends Command{","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    private String prefix;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private String userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"    public EditCommand(boolean isRunning, String prefix, String userInput){","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"        super(isRunning);","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     * Executes the marking/un-marking of tasks, or any task that involves listing out tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"     * @param ui An instance of \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"     * @param tasks An instance of \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"     * @param storage An instance of \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    public void execute(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"        switch(prefix){","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"            editTaskStatus();","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"        case \"list\":","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"            echoTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"        case \"find\":","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"            handleFind();","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"        storage.handleSaveFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"    private void handleFind(){","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"        String keyword \u003d getFindKeyword(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"        for(Task task : tasks.getTaskList()){","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"            if(task.description.contains(keyword)){","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"        ui.printLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"        matchingTasks.echoFoundTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"        ui.printLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"    private static String getFindKeyword(String userInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"        int keywordIndex \u003d userInput.indexOf(\"find\") + \"find\".length();","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"        return userInput.substring(keywordIndex).trim();","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"    private void editTaskStatus(){","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"            tasks.handleMarkTask(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"        } catch (CasperInvalidInputException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"            ui.wrapEchoMessage(e.getExceptionNote());","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"    private void echoTasks(){","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"        ui.printLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"        tasks.echoTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"        ui.printLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":77}},{"path":"src/main/java/Casper/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of the \u003ccode\u003eTask\u003c/code\u003e class, specifically tasks that are bounded by a range (event-like).","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    String from, to;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"        return \"[E]\"+super.toString() + \" (from: \" + from+\" to: \"+to+\")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as marked.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"    public void markTask(){","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"        super.markTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Nice Job! I\u0027ll mark this as done: \\n       \"+ this);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as unmarked.","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"    public void unMarkTask(){","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"        super.unMarkTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Noted. Get it done soon...\\n       \"+ this);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"     * Returns a formatted representation of the \u003ccode\u003eEvent\u003c/code\u003e instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"     * @return String representing the current \u003ccode\u003eEvent\u003c/code\u003e instance for the save file.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"    public String saveFormat(){","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"        return String.format(\"E # %d # %s # %s # %s\", super.isDone?1:0, super.description, this.from, this.to);","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jensonjenkins":48}},{"path":"src/main/java/Casper/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of \u003ccode\u003eCommand\u003c/code\u003e focusing on commands that terminate the program.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    private final String commandType;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    public ExitCommand(boolean isRunning, String commandType){","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"        super(isRunning);","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"     * Executes the termination of the program, both intentionally or otherwise.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"     * @param ui An instance of \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"     * @param tasks An instance of \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"     * @param storage An instance of \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"    public void execute(Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"        if(commandType.equals(\"exit\")){","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"            ui.wrapEchoMessage(\"Alright, see you around!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        }else{","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"            ui.wrapEchoMessage(\"[ERROR]: An error has occurred, please try again!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":28}},{"path":"src/main/java/Casper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":" * Parser is a class whose sole functionality is to verify the validity of the user\u0027s input and translate","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * them to the \u003ccode\u003eCommand\u003c/code\u003e class to be executed.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"public class Parser {","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private static final String[] keywordList \u003d {\"bye\", \"list\", \"mark\", \"unmark\",","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"            \"deadline\", \"event\", \"todo\", \"delete\", \"find\"};","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"     * Returns a \u003ccode\u003eCommand\u003c/code\u003e based on the user\u0027s input.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"     * @param userInput The user\u0027s raw string input.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e based on \u003ccode\u003euserInput\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"     * @throws CasperUnrecognizedKeywordException If the keyword in \u003ccode\u003euserInput\u003c/code\u003e is unrecognized.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    public static Command parse(String userInput)","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"            throws CasperUnrecognizedKeywordException {","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"        validateInputKeyword(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"        return handleKeywordRouting(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"    private static void validateInputKeyword(String userInput)","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"            throws CasperUnrecognizedKeywordException {","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"        String userInputKeyword \u003d userInput.split(\" \")[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"        boolean isValidKeyword \u003d false;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"        for(String keyword : keywordList){","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"            if (keyword.equals(userInputKeyword)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"                isValidKeyword \u003d true;","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"        if(!isValidKeyword){","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"            throw new CasperUnrecognizedKeywordException(userInputKeyword);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"    private static Command handleKeywordRouting(String userInput){","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"        String commandPrefix \u003d userInput.split(\" \")[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"        switch (commandPrefix) {","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"            return new ExitCommand(false, \"exit\");","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"        case \"list\":","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"        case \"find\":","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"            return new EditCommand(true, commandPrefix, userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"        case \"event\":","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"            return new AddCommand(true, commandPrefix, userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"            return new DeleteCommand(true, userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"        return new ExitCommand(false, \"exception\");","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":60}},{"path":"src/main/java/Casper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"import java.io.*;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":" * Handles all functionalities that relate to saving and loading data from/to a text file.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"public class Storage {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    private final String pathToSaveDirectory;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"    private ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"    private final String saveFilename;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"    public Storage(String pathToSaveDirectory, String saveFilename, Ui ui){","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"        this.pathToSaveDirectory \u003d pathToSaveDirectory;","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"        this.saveFilename \u003d saveFilename;","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"        this.filePath \u003d pathToSaveDirectory + saveFilename;","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    private void writeToFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"            for(Task task : taskList){","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"                fw.write(task.saveFormat() + System.lineSeparator());","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"            fw.close();","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"            ui.wrapEchoMessage(\"Something went wrong: \"+ e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"    private void handleTaskStringToTaskObject(String[] formatInputList){","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"        String taskType \u003d formatInputList[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"        Task newTask;","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"        if(taskType.equals(\"D\")){","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"            newTask \u003d new Deadline(formatInputList[2], formatInputList[3]);","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"        }else if (taskType.equals(\"E\")){","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"            newTask \u003d new Event(formatInputList[2], formatInputList[3], formatInputList[4]);","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"        }else{","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"            newTask \u003d new Todo(formatInputList[2]);","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"        if(formatInputList[1].equals(\"1\")){","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"            newTask.isDone \u003d true;","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"        savedTaskList.add(newTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"     * Returns a list of tasks generated from the save file, includes","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"     * handling the event of an undetected/missing directory.","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"     * @return \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"    public ArrayList\u003cTask\u003e loadSaveFile(){","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"            while (s.hasNext()){","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"                String[] formatInputList \u003d s.nextLine().split(\" # \");","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"                handleTaskStringToTaskObject(formatInputList);","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"            handleMissingDirectory();","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"        return savedTaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"    private void handleMissingDirectory(){","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"        Path absolutePath \u003d Paths.get(pathToSaveDirectory).toAbsolutePath();","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"            Files.createDirectory(absolutePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"            Path filePath \u003d absolutePath.resolve(saveFilename);","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"            ui.wrapEchoMessage(e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"     * Saves tasks and its respective status of the current session into a text file.","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"     * @param tasklist An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e containing tasks of the current session.","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"jensonjenkins"},"content":"    public void handleSaveFile(TaskList tasklist){","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"jensonjenkins"},"content":"        this.savedTaskList \u003d tasklist.getTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"jensonjenkins"},"content":"        try{","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"jensonjenkins"},"content":"            File saveFile \u003d new File(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"jensonjenkins"},"content":"            PrintWriter writer \u003d new PrintWriter(saveFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"jensonjenkins"},"content":"            writer.close();","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"jensonjenkins"},"content":"            writeToFile(tasklist.getTaskList());","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"jensonjenkins"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"jensonjenkins"},"content":"            handleMissingDirectory();","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"jensonjenkins"},"content":"            writeToFile(tasklist.getTaskList());","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":104}},{"path":"src/main/java/Casper/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":" * An abstract class representing a task in general (to be implemented further).","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private static final String SEPARATOR \u003d \"    _______________________________________________________________________\";","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"     * Prints the message separated by bounding lines (only for other Task-like classes).","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    public static void wrapEchoMessage(String message){","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"    public Task(String description){","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"     * Gets the icon representing the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"     * @return A String representing the status (X represents a marked task).","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as marked.","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"    public void markTask(){","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"        this.isDone\u003dtrue;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as unmarked.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"    public void unMarkTask(){","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"        this.isDone\u003dfalse;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jensonjenkins":54}},{"path":"src/main/java/Casper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" * Contains the task list itself, along with functionalities relating to the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"public class TaskList {","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    private int noOfTasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    public TaskList(){","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"        this.noOfTasks \u003d 0;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"        this.noOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"     * Returns the TaskList in \u003ccode\u003eArrayList\u003c/code\u003e form.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"     * @return \u003ccode\u003eArrayList\u003c/code\u003e representing the TaskList instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"     * Change a task\u0027s status to marked.","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"     * @param index Target index of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"    public void markTask(int index){","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"        taskList.get(index-1).markTask();","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"     * Change a task\u0027s status to unmarked.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"     * @param index Target index of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"    public void unMarkTask(int index){","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"        taskList.get(index-1).unMarkTask();","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"     * Gets the total number of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"     * @return An integer representing the total number of tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"    public int getTaskNumber(){","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"        return noOfTasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"     * Gets a specific task from the \u003ccode\u003eTaskList\u003c/code\u003egiven the index.","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"     * @param index The index of the wanted task.","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"     * @return A \u003ccode\u003eTask\u003c/code\u003e corresponding to the given index.","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"    public Task getTask(int index){","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"     * @param newTask A new \u003ccode\u003eTask\u003c/code\u003e to be inserted into the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"    public void addTask(Task newTask){","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"        noOfTasks++;","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"     * Removes a task given the task\u0027s index.","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"    public void removeTask(int index){","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"jensonjenkins"},"content":"        noOfTasks--;","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"    private static boolean checkNumeric(String str) {","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"jensonjenkins"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"jensonjenkins"},"content":"            return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"jensonjenkins"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"jensonjenkins"},"content":"            return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"jensonjenkins"},"content":"     * Prints the full task list of the current \u003ccode\u003eTaskList\u003c/code\u003e instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"jensonjenkins"},"content":"    public void echoTaskList(){","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"jensonjenkins"},"content":"        if (noOfTasks\u003d\u003d0) {","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"     You have no tasks this time around.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"jensonjenkins"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"jensonjenkins"},"content":"            for (int i\u003d1; i\u003c\u003dnoOfTasks; i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"jensonjenkins"},"content":"                System.out.println(\"     \"+i+\". \"+taskList.get(i-1));","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"jensonjenkins"},"content":"     * Prints the full task list of the current \u003ccode\u003eTaskList\u003c/code\u003e instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"jensonjenkins"},"content":"     * The only difference with the \u003ccode\u003eechoTaskList\u003c/code\u003e is the printed string into the command line,","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"jensonjenkins"},"content":"     * and the context in which the method is invoked.","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"jensonjenkins"},"content":"    public void echoFoundTasks(){","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"jensonjenkins"},"content":"        if (noOfTasks\u003d\u003d0) {","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"     That does not sound like a task you have.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"jensonjenkins"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"jensonjenkins"},"content":"            for (int i\u003d1; i\u003c\u003dnoOfTasks; i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"jensonjenkins"},"content":"                System.out.println(\"     \"+i+\". \"+taskList.get(i-1));","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"jensonjenkins"},"content":"     * Validates whether the user\u0027s input that targets a certain task is within bounds of the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"jensonjenkins"},"content":"     * @param userInput The user\u0027s raw \u003ccode\u003eString\u003c/code\u003e input.","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"jensonjenkins"},"content":"     * @throws CasperInvalidInputException If the target index is out of bounds or \u003ccode\u003euserInput\u003c/code\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"jensonjenkins"},"content":"     * does not obey the defined syntax.","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"jensonjenkins"},"content":"    public int validateTargetedInput(String userInput) throws CasperInvalidInputException{","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"jensonjenkins"},"content":"        String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"jensonjenkins"},"content":"        if (userInputSplit.length\u003d\u003d2 \u0026\u0026 checkNumeric(userInputSplit[1])) {","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"jensonjenkins"},"content":"            int targetTaskNumber \u003d Integer.parseInt(userInputSplit[1]);","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"jensonjenkins"},"content":"            boolean withinBounds \u003d targetTaskNumber\u003c\u003dnoOfTasks \u0026\u0026 targetTaskNumber\u003e0;","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"jensonjenkins"},"content":"            if (withinBounds) {","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"jensonjenkins"},"content":"                return targetTaskNumber;","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"jensonjenkins"},"content":"            } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"jensonjenkins"},"content":"                throw new CasperInvalidInputException(\"That task does not exist!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"jensonjenkins"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"jensonjenkins"},"content":"            throw new CasperInvalidInputException(\"Invalid input!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"jensonjenkins"},"content":"     * Handles marking and un-marking of a task given the user\u0027s input.","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"jensonjenkins"},"content":"     * @param userInput The user\u0027s raw \u003ccode\u003eString\u003c/code\u003e input.","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"jensonjenkins"},"content":"     * @throws CasperInvalidInputException If the target index is out of bounds or \u003ccode\u003euserInput\u003c/code\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"jensonjenkins"},"content":"     * does not obey the defined syntax.","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"jensonjenkins"},"content":"    public void handleMarkTask(String userInput) throws CasperInvalidInputException{","lastModifiedDate":"2024-02-25"},{"lineNumber":160,"author":{"gitId":"jensonjenkins"},"content":"        boolean toMark \u003d userInput.split(\" \")[0].equals(\"mark\");","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"jensonjenkins"},"content":"        int targetTaskNumber \u003d validateTargetedInput(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":162,"author":{"gitId":"jensonjenkins"},"content":"        if(toMark){","lastModifiedDate":"2024-02-25"},{"lineNumber":163,"author":{"gitId":"jensonjenkins"},"content":"            markTask(targetTaskNumber);","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"jensonjenkins"},"content":"        }else{","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"jensonjenkins"},"content":"            unMarkTask(targetTaskNumber);","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":167,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":168,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":169,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":169}},{"path":"src/main/java/Casper/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * An implementation of the \u003ccode\u003eTask\u003c/code\u003e class, specifically tasks that are to-do in nature.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"    public String toString(){","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as marked.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"    public void markTask(){","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"        super.markTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Nice Job! I\u0027ll mark this as done: \\n       \"+ this);","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"     * Change the given task\u0027s status as unmarked.","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"    public void unMarkTask(){","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"        super.unMarkTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Noted. Get it done soon...\\n       \"+ this);","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"     * Returns a formatted representation of the \u003ccode\u003eTodo\u003c/code\u003e instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"     * @return String representing the current \u003ccode\u003eTodo\u003c/code\u003e instance for the save file.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"    public String saveFormat(){","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"        return String.format(\"T # %d # %s\", super.isDone?1:0, super.description);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"jensonjenkins":46}},{"path":"src/main/java/Casper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"package Casper;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":" * Handles all functionalities that relate to the user interface.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"public class Ui {","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"    private static final String SEPARATOR \u003d \"    _______________________________________________________________________\";","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    public Ui(){};","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"     * Prints the line separator.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"    public void printLine(){","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"     * Prints the message separated by bounding lines (general use).","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"    public void wrapEchoMessage(String message){","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"        printLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(\"     \"+message);","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"        printLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"     * Prints Casper\u0027s greeting message.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"    public void echoGreetings(){","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"        String logo \u003d \"       ___ __ _ ___ _ __   ___ _ __\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"                + \"      / __/ _` / __| \u0027_ \\\\ / _ \\\\ \u0027__|\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"                + \"     | (_| (_| \\\\__ \\\\ |_) |  __/ |   \\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"                + \"      \\\\___\\\\__,_|___/ .__/ \\\\___|_|   \\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"                + \"                   | |              \\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"                + \"                   |_|               \";","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(\"    Starting\\n\" + logo);","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"Boo! I\u0027m Casper!\\n     What can I do for you?\");","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"     * Prints an exception message when an unrecognized keyword is received.","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"     * @param keywordList A \u003ccode\u003eString[]\u003c/code\u003e consisting of valid keywords.","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"     * @param e A CasperUnrecognizedKeywordException instance.","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"    public void unrecognizedKeywordException(String[] keywordList, CasperUnrecognizedKeywordException e){","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(\"     Pardon? I didn\u0027t quite understand \\\"\"+ e.getUnrecognizedKeyword()+\"\\\"\");","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(\"     Maybe refer to the following list of commands?\");","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"        for(String keyword:keywordList){","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"      - \" + keyword);","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"     * Prints a message indicating the \u003ccode\u003eTodo\u003c/code\u003e syntax was invalid.","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"    public void echoUnrecognizedTodo(){","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"What did you want to do? Try again?\\n\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"                +\"     Make sure its in the format: \\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"                +\"       todo {description}\");","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"     * Prints a message indicating the \u003ccode\u003eDeadline\u003c/code\u003e syntax was invalid.","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"    public void echoUnrecognizedDeadline(){","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"A deadline to what? Try again?\\n\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"                +\"     Make sure its in the format: \\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"                +\"       deadline {description} /by {date}\");","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"     * Prints a message indicating the \u003ccode\u003eEvent\u003c/code\u003e syntax was invalid.","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"    public void echoUnrecognizedEvent(){","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"What event did you say? Try again?\\n\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"                +\"     Make sure its in the format: \\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"                +\"       event {description} /from {date} /to {date}\");","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"     * Prints a message indicating the task was successfully removed.","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"     * @param taskToRemove The \u003ccode\u003eTask\u003c/code\u003e to be removed.","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"     * @param noOfTasks An integer representing the number of current tasks after deleting.","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"jensonjenkins"},"content":"    public void echoDeleteTask(Task taskToRemove, int noOfTasks){","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"Nicely done!. It\u0027s about time you get things done: \\n       \"","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"jensonjenkins"},"content":"                +taskToRemove+\"\\n     Now you have \"+noOfTasks+\" task(s) in the list\");","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"jensonjenkins"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"jensonjenkins"},"content":"     * Prints a message indicating the task was successfully added.","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"jensonjenkins"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"jensonjenkins"},"content":"     * @param newTask The \u003ccode\u003eTask\u003c/code\u003e to be added.","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"jensonjenkins"},"content":"     * @param noOfTasks An integer representing the number of current tasks after adding.","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"jensonjenkins"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"jensonjenkins"},"content":"    public void echoAddedTask(Task newTask, int noOfTasks){","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"Got it. I\u0027ve added this task: \\n       \"","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"jensonjenkins"},"content":"                +newTask+\"\\n     Now you have \"+noOfTasks+\" tasks in the list\");","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"jensonjenkins":107}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"java -classpath ..\\bin Casper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jensonjenkins":1,"-":20}}]
