[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"# Casper project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"3. After that, locate the `src/main/java/Casper.java` file, right-click it, and choose `Run Casper.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jensonjenkins":2,"-":22}},{"path":"src/main/java/Casper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"public class Casper {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"    private static final String separator \u003d \"    _____________________________________________\";","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"    private static final Task[] taskList \u003d new Task[100];","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"    private static int noOfTasks \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"    private static void wrapEchoMessage(String message){","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(separator);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(\"     \"+message);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(separator);","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"    private static void echoGreetings(){","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"        String logo \u003d \"       ___ __ _ ___ _ __   ___ _ __\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"                + \"      / __/ _` / __| \u0027_ \\\\ / _ \\\\ \u0027__|\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"                + \"     | (_| (_| \\\\__ \\\\ |_) |  __/ |   \\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"                + \"      \\\\___\\\\__,_|___/ .__/ \\\\___|_|   \\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"                + \"                   | |              \\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"                + \"                   |_|               \";","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(\"    Starting\\n\" + logo);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"Boo! I\u0027m Casper!\\n     What can I do for you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"    private static void handleQueries(){","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"            String userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jensonjenkins"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jensonjenkins"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jensonjenkins"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jensonjenkins"},"content":"                echoTaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jensonjenkins"},"content":"            } else if(userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jensonjenkins"},"content":"                int targetTaskNumber \u003d validateMarkInput(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jensonjenkins"},"content":"                if (targetTaskNumber !\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jensonjenkins"},"content":"                    taskList[targetTaskNumber-1].markTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jensonjenkins"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jensonjenkins"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jensonjenkins"},"content":"                int targetTaskNumber \u003d validateMarkInput(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jensonjenkins"},"content":"                if (targetTaskNumber !\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jensonjenkins"},"content":"                    taskList[targetTaskNumber-1].unMarkTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jensonjenkins"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jensonjenkins"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jensonjenkins"},"content":"                Task newTask \u003d new Task(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jensonjenkins"},"content":"                taskList[noOfTasks] \u003d newTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jensonjenkins"},"content":"                noOfTasks++;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jensonjenkins"},"content":"                wrapEchoMessage(\"added: \"+userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jensonjenkins"},"content":"    private static void echoTaskList(){","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(separator);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jensonjenkins"},"content":"        if (noOfTasks\u003d\u003d0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"     You have no tasks this time around.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jensonjenkins"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jensonjenkins"},"content":"            System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jensonjenkins"},"content":"            for (int i\u003d1; i\u003c\u003dnoOfTasks; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jensonjenkins"},"content":"                System.out.println(\"     \"+i+\".[\"+taskList[i-1].getStatusIcon()+\"] \"+taskList[i-1].description);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(separator);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jensonjenkins"},"content":"    public static boolean checkNumeric(String str) throws NumberFormatException {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jensonjenkins"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jensonjenkins"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jensonjenkins"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jensonjenkins"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jensonjenkins"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jensonjenkins"},"content":"    private static int validateMarkInput(String userInput){","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"jensonjenkins"},"content":"        String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jensonjenkins"},"content":"        if (userInputSplit.length\u003d\u003d2 \u0026\u0026 checkNumeric(userInputSplit[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"jensonjenkins"},"content":"            int targetTaskNumber \u003d Integer.parseInt(userInputSplit[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jensonjenkins"},"content":"            if (targetTaskNumber\u003c\u003dnoOfTasks\u0026\u0026targetTaskNumber\u003e0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jensonjenkins"},"content":"                return targetTaskNumber;","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jensonjenkins"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jensonjenkins"},"content":"                wrapEchoMessage(\"That task does not exist!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jensonjenkins"},"content":"                return -1;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jensonjenkins"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jensonjenkins"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jensonjenkins"},"content":"            wrapEchoMessage(\"Invalid input!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jensonjenkins"},"content":"            return -1;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jensonjenkins"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jensonjenkins"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jensonjenkins"},"content":"        echoGreetings();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jensonjenkins"},"content":"        handleQueries();","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"Alright, see you around!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jensonjenkins"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jensonjenkins":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jensonjenkins"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jensonjenkins"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jensonjenkins"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jensonjenkins"},"content":"    private static final String separator \u003d \"    _____________________________________________\";","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jensonjenkins"},"content":"    private static void wrapEchoMessage(String message){","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(separator);","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jensonjenkins"},"content":"        System.out.println(separator);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jensonjenkins"},"content":"    public Task(String description){","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jensonjenkins"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jensonjenkins"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jensonjenkins"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jensonjenkins"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jensonjenkins"},"content":"    public void markTask(){","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"        this.isDone\u003dtrue;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Nice Job! I\u0027ll mark this as done: \\n       [X] \"+description);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jensonjenkins"},"content":"    public void unMarkTask(){","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jensonjenkins"},"content":"        this.isDone\u003dfalse;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jensonjenkins"},"content":"        wrapEchoMessage(\"     Noted. Get it done soon.. \\n       [ ] \"+description);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jensonjenkins"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jensonjenkins"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jensonjenkins":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jensonjenkins"},"content":"java -classpath ..\\bin Casper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jensonjenkins":1,"-":20}}]
