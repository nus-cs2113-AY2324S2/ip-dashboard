[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"3. After that, locate the `src/mimi/java/Duke.java` file, right-click it, and choose `Run Duke.mimi()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JustinSoh":1,"-":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"# MimiChat User Guide","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"1. [add a ToDo task](#add-todo-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"2. [add a Deadline task](#add-deadline-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"3. [add an Event task](#add-event-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"4. [list all tasks](#list-all-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"5. [mark a task as done](#mark-as-done)","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"6. [unmark a task as done](#unmark)","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"7. [delete a task](#delete)","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"8. [find tasks by keyword](#find)","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"9. [exit the program](#bye)","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"## Usage","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"1. In order for the program to work, you need to have Java 11 installed on your computer.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"2. Download the latest release of MimiChat from https://github.com/JustinSoh/ip/releases","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"3. Run the program using the command `java -jar MimiChat.jar` in the terminal.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"4. Make sure that there is a /data folder in the root of the program directory. This is where the data will be stored.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"5. You can now start using the program.","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"## Add ToDo Task","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"### `todo` - Adds a new Todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"Adds a new ToDo task into the Task List.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"Parameters:","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"``taskName (String)``","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"`todo \u003ctaskName\u003e`","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"    [T][X] read book","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"You now have 1 tasks in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"## Add Deadline Task","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"### `deadline` - Adds a new Deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"Adds a new Deadline task into the Task List.","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"Parameters:","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"``taskName (String)``","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"``deadline (String)``","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"`deadline \u003ctaskName\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"    [D][X] return book (by: 2nd of December 2020)","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"## Add Event Task","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"### `event` - Adds a new Event task","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"Adds a new Event task into the Task List.","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"Parameters:","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"``taskName (String)``","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"``startTime (String)``","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"``endTime (String)``","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"```event \u003ctaskName\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e```","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"    [E][X] project meeting (from: Mon 3pm to: Mon 5pm)","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"You now have 3 tasks in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"## List All Task","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"List all tasks in the Task List and whether they are marked. ","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"`list`","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"1. [T][X] read book","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"2. [D][X] return book (by: 2nd of December 2020)","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"3. [E][X] project meeting (from: Mon 3pm to: Mon 5pm)","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"## Mark as Done","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"### `mark` - Marks a task as done","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"Marks a task as done in the Task List. ","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"Parameters:","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"``Mark \u003citemNumber\u003e``","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"`mark 2`","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"``` ","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"OK, I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"2. [D][X] return book (by: 2nd of December 2020)","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"## Unmark","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"### `unmark` - Unmarks a task as done","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"Unmarks a task as done in the Task List.","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"Parameters: ","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"``Unmark \u003citemNumber\u003e``","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"`unmark 2`","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"OK, I\u0027ve marked this task as not done yet","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"2. [D][ ] return book (by: 2nd of December 2020)","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"## Delete","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"JustinSoh"},"content":"Deletes a task from the Task List.","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"Parameters:","lastModifiedDate":"2024-02-28"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"JustinSoh"},"content":"``Delete \u003citemNumber\u003e``","lastModifiedDate":"2024-02-28"},{"lineNumber":155,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":156,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"`delete 2`","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"JustinSoh"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"JustinSoh"},"content":"        2. [D][ ] return book (by: 2nd of December 2020)","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"JustinSoh"},"content":"Now  you have 2 tasks in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"JustinSoh"},"content":"## Find","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":168,"author":{"gitId":"JustinSoh"},"content":"### `find` - Finds tasks by keyword","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":170,"author":{"gitId":"JustinSoh"},"content":"Finds tasks in the Task List which contains the keyword.","lastModifiedDate":"2024-02-28"},{"lineNumber":171,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"Parameters:","lastModifiedDate":"2024-02-28"},{"lineNumber":173,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":174,"author":{"gitId":"JustinSoh"},"content":"``Find \u003ckeyword\u003e``","lastModifiedDate":"2024-02-28"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":177,"author":{"gitId":"JustinSoh"},"content":"`find book`","lastModifiedDate":"2024-02-28"},{"lineNumber":178,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":179,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"JustinSoh"},"content":"1. [T][X] read book","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":185,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":186,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"You have no matching tasks in your list.","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"## Bye","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":193,"author":{"gitId":"JustinSoh"},"content":"### `bye` - Exits the program","lastModifiedDate":"2024-02-28"},{"lineNumber":194,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":195,"author":{"gitId":"JustinSoh"},"content":"Exits the program.","lastModifiedDate":"2024-02-28"},{"lineNumber":196,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":197,"author":{"gitId":"JustinSoh"},"content":"Example of usage:","lastModifiedDate":"2024-02-28"},{"lineNumber":198,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":199,"author":{"gitId":"JustinSoh"},"content":"`bye`","lastModifiedDate":"2024-02-28"},{"lineNumber":200,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":201,"author":{"gitId":"JustinSoh"},"content":"Expected outcome:","lastModifiedDate":"2024-02-28"},{"lineNumber":202,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":203,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":204,"author":{"gitId":"JustinSoh"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-28"},{"lineNumber":205,"author":{"gitId":"JustinSoh"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":206,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":207,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":208,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":209,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"JustinSoh":183,"-":26}},{"path":"src/main/java/mimi/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException.IncorrectFormat;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException.FileCorrupted;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import mimi.helper.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import mimi.helper.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"import mimi.helper.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":" * MimiChat is a chatbot that helps you to keep track of your tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":" * It has the following features:","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":" * 1. Add a todo task (todo \u003ctask\u003e)","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":" * 2. Add a deadline task (deadline \u003ctask\u003e /by \u003cdate\u003e)","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":" * 3. Add an event task (event \u003ctask\u003e /from \u003cstart date\u003e /to \u003cend date\u003e)","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":" * 4. List all tasks (list)","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":" * 5. Mark/Unmark a task as done (mark \u003ctask number\u003e / unmark \u003ctask number\u003e)","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":" * 6. Delete a task (delete \u003ctask number\u003e)","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":" * 7. Find a task (find \u003ckeyword\u003e)","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":" * 8. Exit the program (bye)","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":" * The tasks are auto saved in a file called mimi.logs in the data folder after any changes are made.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":" * The tasks are auto loaded from the mimi.logs file when the program starts.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":" * Please ensure you have created the data folder in the same directory as the jar file.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":" * @author Justin","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":" * @version 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":" * @since 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    public final static String FILE_PATH \u003d \"data/mimi.logs\";","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"    private static Storage storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"        // Initial welcome message","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"        // Load file from the following path /data/mimi.logs","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"            storage.loadFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"        } catch (FileCorrupted e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"        while (ui.isRunning()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"            String[] inputs \u003d ui.getInput();","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"                ui.shutdownSequence();","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"            case \"list\":","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"                ui.listTasks(TaskList.getTaskList());","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"                tasks.markTask(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"                tasks.unmarkTasks(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"                tasks.addToDo(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"                tasks.addDeadline(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"            case \"event\":","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"                tasks.addEvent(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"                tasks.deleteTask(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"            case \"find\":","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"                tasks.findTask(inputs);","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"            default:","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"                try {","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"                    throw new IncorrectFormat(MimiException.INCORRECT_INSTRUCTION_MSG);","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"                } catch (IncorrectFormat e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"            storage.saveFile(TaskList.getTaskList(), FILE_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JustinSoh":95,"-":2}},{"path":"src/main/java/mimi/classes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.classes;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import static mimi.helper.Storage.FILE_DELIMITER;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":" * This class represents a Deadline task, which is a task that has a specific deadline.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":" * It inherits from the Task class and overrides the toString and toFileString method.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"    private String deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"        super(name);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"        return deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"     * This method overrides the toString method in the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"     * It returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"     * e.g. [D][✘] return book (by: 2021-08-21)","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the Deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"    public String toString(){","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"     * This method overrides the toFileString method in the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"     * It returns a string representation of the Deadline task to be written to the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"     * e.g. D|false|return book|2021-08-21","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the Deadline task to be written to the file","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        return \"D\" + FILE_DELIMITER + super.toFileString() + FILE_DELIMITER + this.getDeadline();","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JustinSoh":47}},{"path":"src/main/java/mimi/classes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.classes;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import static mimi.helper.Storage.FILE_DELIMITER;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":" * This class represents an Event task, which is a task that has a specific start and end time.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":" * It inherits from the Task class and overrides the toString and toFileString method.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"    private String startTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    private String endTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"        super(name);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"        return startTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"        return endTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"     * This method overrides the toString method in the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"     * It returns a string representation of the Event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"     * e.g. [E][✘] return book (from: 2021-08-21 to: 2021-08-22)","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the Event task","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"    public String toString(){","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"        String duration \u003d \"(from: \" + this.getStartTime() + \" to: \" + this.getEndTime() + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        return \"[E]\" + super.toString() + duration;","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"     * This method overrides the toFileString method in the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"     * It returns a string representation of the Event task to be written to the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"     * e.g. E|false|return book|2021-08-21|2021-08-22","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the Event task to be written to the file","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"        return \"E\" + FILE_DELIMITER + super.toFileString() + FILE_DELIMITER + this.getStartTime() + FILE_DELIMITER + this.getEndTime();","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JustinSoh":56}},{"path":"src/main/java/mimi/classes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.classes;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"import static mimi.helper.Storage.FILE_DELIMITER;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":" * This class represents a task, which is the parent class of all the other task types.","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":" * It has a name and a boolean to check if the task is done.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"    private String name;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    public String getName() {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"        return name;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"        setDone(true);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"        setDone(false);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"     * This method returns a string representation of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"     * e.g. [✘] return book","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"    public String toString(){","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getName();","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"     * This method returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     * e.g. false|return book","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the task to be written to the file","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"        return  this.isDone + FILE_DELIMITER + this.getName();","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"JustinSoh":62}},{"path":"src/main/java/mimi/classes/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.classes;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"import static mimi.helper.Storage.FILE_DELIMITER;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":" * This class represents a ToDo task, which is a task without a specific date or time.","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":" * It inherits from the Task class and overrides the toString and toFileString method.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"        super(name);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"     * This method overrides the toString method in the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"     * It returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"     * e.g. [T][✘] return book","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the ToDo task","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    public String toString(){","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"     * This method overrides the toFileString method in the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"     * It returns a string representation of the ToDo task to be written to the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"     * e.g. T|false|return book","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"     * @return a string representation of the ToDo task to be written to the file","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        return \"T\" + FILE_DELIMITER + super.toFileString();","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JustinSoh":34}},{"path":"src/main/java/mimi/exceptions/MimiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"package mimi.exceptions;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":" * MimiException class is responsible for handling the exceptions of the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":" * It contains methods to handle the exceptions of the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":" * It also contains methods to print the error messages.","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":" * @author Justin","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":" * @version 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":" * @since 0.1","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"public class MimiException {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    // This method is used to print error message relating to invalid / unknown format","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"    public final static String INCORRECT_INSTRUCTION_MSG \u003d \"unknown instruction. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"            \"Type of instructions available [deadline/todo/event/list/bye]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    public final static String INCORRECT_TODO_FORMAT_MSG \u003d \"todo format is invalid. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: todo [task]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    public final static String INCORRECT_DEADLINE_FORMAT_MSG \u003d \"deadline format is invalid. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: deadline [instruction] /by [deadline]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    public final static String INCORRECT_EVENT_FORMAT_MSG \u003d \"event format is invalid. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: event [eventName] /from [startDate] /to [endDate]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    public final static String INCORRECT_INDEX_FORMAT_MSG \u003d \"delete/mark/unmark format is invalid. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: delete/mark/unmark [task number]\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    // the following method is used to print error message relating to insufficient parameters","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    public final static String INSUFFICIENT_TODO_PARAMETERS_MSG \u003d \"todo parameters is incomplete. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: todo [task number]\";","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    public final static String INSUFFICIENT_DEADLINE_PARAMETERS_MSG \u003d \"deadline parameters is incomplete. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: deadline [instruction] /by [deadline]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public final static String INSUFFICIENT_EVENT_PARAMETERS_MSG \u003d \"event parameters is incomplete. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: event [eventName] /from [startDate] /to [endDate]\";","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    public final static String INSUFFICIENT_INDEX_PARAMETERS_MSG \u003d \"delete/mark/unmark parameters is incomplete. \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"            \"Proper syntax: delete/mark/unmark [task number]\";","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"    public final static String TASK_NOT_FOUND_MSG \u003d \"task not found. \" + \"Please check the task number again.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"    public final static String FILE_CORRUPTED_MSG \u003d \"file is corrupted. \" + \"Please check the file again.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"    public final static String LOAD_ERROR_MSG \u003d \"Unable to load file. Please ensure /data/mimi.logs exists.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"    public static class InsufficientParameters extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"        public InsufficientParameters(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001B[31mError: \" + message + \"\\u001B[0m\");","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"    public static class IncorrectFormat extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"        public IncorrectFormat(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001B[31mError: \" + message + \"\\u001B[0m\");","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"    public static class TaskNotFound extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"        public TaskNotFound(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001B[31mError: \" + message + \"\\u001B[0m\");","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"    public static class FileCorrupted extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"        public FileCorrupted(String message) {","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001B[31mError: \" + message + \"\\u001B[0m\");","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"    public static class LoadError extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"        public LoadError(String message) {","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001B[31mError: \" + message + \"\\u001B[0m\");","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"JustinSoh":74}},{"path":"src/main/java/mimi/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.helper;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.ToDo;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import static mimi.helper.Storage.DEADLINE_DELIMITER;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":" * Parser class is responsible for handling the parsing of both the user input and file input.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":" * It contains methods to parse the user input and file input into the respective task objects.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":" * @version 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":" * @since 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"public class Parser {","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"    public final static String EVENT_FROM_DELIMITER \u003d \"/from\";","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    public final static String EVENT_TO_DELIMITER \u003d \"/to\";","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    public Parser(){","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when processing a ToDo from a user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the task name in the format {taskName}.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"     * @return         A ToDo object","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    public static ToDo processsToDoFromInput(String[] inputs) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters, MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_TODO_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"        if (inputs[1].isBlank()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.IncorrectFormat(MimiException.INCORRECT_TODO_FORMAT_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"        return new ToDo(inputs[1]);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when processing a ToDo from a storage input.","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"     * @param taskName   A String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"     * @param taskStatus A String (true/false) representing the status of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"     * @return           A ToDo object","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.FileCorrupted if the file is corrupted","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"    public static ToDo processToDoFromStorage(String taskName, String taskStatus) throws MimiException.FileCorrupted {","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"            ToDo toDo \u003d new ToDo(taskName);","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"            if (taskStatus.equals(\"true\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"                // mark as done","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"                toDo.markAsDone();","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"            } else if (taskStatus.equals(\"false\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"                toDo.markAsUndone();","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"            } else {","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"                throw new MimiException.FileCorrupted(MimiException.FILE_CORRUPTED_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            return toDo;","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when processing an Event from a user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the task name, start date, end date","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"     *                 Stored in the format {taskName, startDate, endDate}.","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"     *                 The startDate is a String representing the starting date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"     *                 The endDate is a String representing the ending date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"     * @return         An Event object","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name or date is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name or date is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"    public static Event processEventFromInput(String[] inputs) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters, MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_EVENT_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"        String eventDetails \u003d inputs[1];","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"        return processEvent(eventDetails);","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when processing an Event from a storage input.","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"     * @param input   An array containing the task type, task status, task name, start date, end date","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"     *                Stored in the format {taskType, taskStatus, taskName, startDate, endDate}.","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"     *                The taskType is a String representing the type of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"     *                The taskStatus is a String (true/false) representing the status of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"     *                The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"     *                The startDate is a String representing the starting date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"     *                The endDate is a String representing the ending date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"     * @return        An Event object","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name or date is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name or date is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"    public static Event processEventFromStorage(String[] input) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters, MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"            String taskStatus \u003d input[1];","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"            String taskName \u003d input[2];","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"            String startDate \u003d input[3];","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"            String endDate \u003d input[4];","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"            if (taskStatus.isBlank() || taskName.isBlank() || startDate.isBlank() || endDate.isBlank()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"                throw new MimiException.IncorrectFormat(MimiException.INCORRECT_EVENT_FORMAT_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"            return new Event(taskName, startDate, endDate);","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_EVENT_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"     * A private method used when processing an Event from a userInput.","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"     * @param givenInput    A String in the format \"taskName /from startDate /to endDate\"","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"     * @return              A Deadline object","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name or date is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name or date is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"    private static Event processEvent(String givenInput) throws","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"            MimiException.IncorrectFormat,","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters {","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"        // Further process the deadline input","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"            String[] inputs \u003d givenInput.split(EVENT_FROM_DELIMITER, 2);","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"            String[] duration \u003d inputs[1].split(EVENT_TO_DELIMITER, 2);","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"            // Check if the inputs are complete","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"            String taskName \u003d inputs[0];","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"            String startDate \u003d duration[0].strip();","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"            String endDate \u003d duration[1].strip();","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"            // Throws an error if parameters is incomplete","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"            if (taskName.isBlank() || startDate.isBlank() || endDate.isBlank()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"                throw new MimiException.IncorrectFormat(MimiException.INCORRECT_EVENT_FORMAT_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"JustinSoh"},"content":"            return new Event(taskName, startDate, endDate);","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_EVENT_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":154,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when processing a Deadline from a user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the two items.","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"JustinSoh"},"content":"     *                 The first is the taskType","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"JustinSoh"},"content":"     *                 The second is the taskName and the deadline combined","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"JustinSoh"},"content":"     *                 e.g. {\"deadline\", \"return book /by 2020-12-12\"}","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":165,"author":{"gitId":"JustinSoh"},"content":"     * @return         A Deadline object","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name or date is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":167,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name or date is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":168,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"JustinSoh"},"content":"    public static Deadline processDeadlineFromInput(String[] inputs) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":170,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters, MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"JustinSoh"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_DEADLINE_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"        String[] splitInputs \u003d inputs[1].split(DEADLINE_DELIMITER, 2);","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"        return processDeadline(splitInputs);","lastModifiedDate":"2024-02-27"},{"lineNumber":177,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":179,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when processing a Deadline from a storage input.","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the task type, task status, task name, and deadline","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"JustinSoh"},"content":"     *                 Stored in the format {taskType, taskStatus, taskName, deadline}.","lastModifiedDate":"2024-02-28"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskType is a String representing the type of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":185,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskStatus is a String (true/false) representing the status of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":186,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"     *                 The deadline is a String representing the deadline of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"     * @return         A Deadline object","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name or date is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name or date is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"JustinSoh"},"content":"    public static Deadline processDeadlineFromStorage(String[] inputs) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":193,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters, MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-27"},{"lineNumber":194,"author":{"gitId":"JustinSoh"},"content":"        if (inputs.length \u003c 4) {","lastModifiedDate":"2024-02-27"},{"lineNumber":195,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_DEADLINE_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":196,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":197,"author":{"gitId":"JustinSoh"},"content":"        String taskName \u003d inputs[2];","lastModifiedDate":"2024-02-27"},{"lineNumber":198,"author":{"gitId":"JustinSoh"},"content":"        String until \u003d inputs[3];","lastModifiedDate":"2024-02-27"},{"lineNumber":199,"author":{"gitId":"JustinSoh"},"content":"        String[] deadlineParameter \u003d {taskName, until};","lastModifiedDate":"2024-02-27"},{"lineNumber":200,"author":{"gitId":"JustinSoh"},"content":"        return processDeadline(deadlineParameter);","lastModifiedDate":"2024-02-27"},{"lineNumber":201,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":202,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":203,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":204,"author":{"gitId":"JustinSoh"},"content":"     * A private method used when processing a Deadline from a userInput/fileInput.","lastModifiedDate":"2024-02-28"},{"lineNumber":205,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":206,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the taskName and the deadline","lastModifiedDate":"2024-02-28"},{"lineNumber":207,"author":{"gitId":"JustinSoh"},"content":"     *                 Stored in the format {taskName, deadline}.","lastModifiedDate":"2024-02-28"},{"lineNumber":208,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":209,"author":{"gitId":"JustinSoh"},"content":"     *                 The deadline is a String representing the deadline of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":210,"author":{"gitId":"JustinSoh"},"content":"     * @return         A Deadline object","lastModifiedDate":"2024-02-28"},{"lineNumber":211,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.InsufficientParameters if the task name or date is missing","lastModifiedDate":"2024-02-28"},{"lineNumber":212,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task name or date is empty","lastModifiedDate":"2024-02-28"},{"lineNumber":213,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":214,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":215,"author":{"gitId":"JustinSoh"},"content":"    private static Deadline processDeadline(String[] inputs) throws","lastModifiedDate":"2024-02-27"},{"lineNumber":216,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters,","lastModifiedDate":"2024-02-27"},{"lineNumber":217,"author":{"gitId":"JustinSoh"},"content":"            MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-27"},{"lineNumber":218,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":219,"author":{"gitId":"JustinSoh"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2024-02-27"},{"lineNumber":220,"author":{"gitId":"JustinSoh"},"content":"            // Throws an error if /by is missing","lastModifiedDate":"2024-02-27"},{"lineNumber":221,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.IncorrectFormat(MimiException.INCORRECT_DEADLINE_FORMAT_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":222,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":223,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":224,"author":{"gitId":"JustinSoh"},"content":"        for (String s : inputs) {","lastModifiedDate":"2024-02-27"},{"lineNumber":225,"author":{"gitId":"JustinSoh"},"content":"            // Throws an error if parameters is incomplete","lastModifiedDate":"2024-02-27"},{"lineNumber":226,"author":{"gitId":"JustinSoh"},"content":"            if (s \u003d\u003d null || s.isEmpty()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":227,"author":{"gitId":"JustinSoh"},"content":"                throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_DEADLINE_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":228,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":229,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":230,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":231,"author":{"gitId":"JustinSoh"},"content":"        if (inputs[1].strip().isBlank()){","lastModifiedDate":"2024-02-27"},{"lineNumber":232,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_DEADLINE_PARAMETERS_MSG);","lastModifiedDate":"2024-02-27"},{"lineNumber":233,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":234,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":235,"author":{"gitId":"JustinSoh"},"content":"        String taskName \u003d inputs[0];","lastModifiedDate":"2024-02-27"},{"lineNumber":236,"author":{"gitId":"JustinSoh"},"content":"        String dueDate \u003d inputs[1].strip();","lastModifiedDate":"2024-02-27"},{"lineNumber":237,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":238,"author":{"gitId":"JustinSoh"},"content":"        return new Deadline(taskName, dueDate);","lastModifiedDate":"2024-02-27"},{"lineNumber":239,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":240,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":241,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"JustinSoh":241}},{"path":"src/main/java/mimi/helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.helper;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Event;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.ToDo;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"import static mimi.helper.TaskList.appendIntoTaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":" * This class is used to handle the loading and saving of tasks to the /data/mimi.logs file.*","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":" * @author Justin","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":" * @version 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":" * @since 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"public class Storage {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    public final static String FILE_DELIMITER \u003d \"|\";","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"    public final static String DEADLINE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    public Storage (String filePath){","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"     * This method creates a scanner object to read the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"     * @param filePath the path of the file to be read","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"     * @return a scanner object to read the file","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.LoadError if the file/directory is not found","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    private static Scanner createFileScanner(String filePath) throws MimiException.LoadError {","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"        try{","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"            fileScanner.useDelimiter(\"\\n\");","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"            return fileScanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.LoadError(MimiException.LOAD_ERROR_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     * This method is used to check if the task parameters are in the correct format.","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"     * @param task  a String array in the form of {taskType, taskStatus, taskName}","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"     * @return      a String array in the form of {taskType, taskStatus, taskName}","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.IncorrectFormat if the task is in the wrong format","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.FileCorrupted if the file is corrupted","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"    private static String[] processTask(String[] task) throws","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"            MimiException.IncorrectFormat,","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"            MimiException.FileCorrupted{","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"        if (task.length \u003c 3) {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.FileCorrupted(MimiException.FILE_CORRUPTED_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"        // Task [1] refers to the status of the task. Checking if the status is invalid","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"        if (!task[1].equals(\"true\") \u0026\u0026 !task[1].equals(\"false\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.FileCorrupted(MimiException.FILE_CORRUPTED_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"        String [] taskDetails \u003d new String[3];","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"        taskDetails[0] \u003d task[0]; //taskType","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"        taskDetails[1] \u003d task[1]; // taskStatus","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"        taskDetails[2] \u003d task[2]; // taskName","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"        return taskDetails;","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"     * Loads the /data/mimi.logs file, processes the tasks, and","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"     * adds them to a static taskList in the TaskList class.","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"     * @throws MimiException.FileCorrupted if the file is corrupted and cannot be properly read or parsed","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"     **/","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"    public void loadFile() throws MimiException.FileCorrupted {","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"            Scanner fileScanner \u003d createFileScanner(this.filePath);","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"                String[] task \u003d fileScanner.next().split(\"\\\\\" + FILE_DELIMITER);","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"                String[] taskDetails \u003d processTask(task);","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"                String taskType \u003d taskDetails[0];","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"                String taskStatus \u003d taskDetails[1];","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"                String taskName \u003d taskDetails[2];","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"                case \"T\":","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"                    ToDo toDo \u003d Parser.processToDoFromStorage(taskName, taskStatus);","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"                    appendIntoTaskList(toDo);","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"                    break;","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"                case \"D\":","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"                    Deadline deadline \u003d Parser.processDeadlineFromStorage(task);","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"                    appendIntoTaskList(deadline);","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"                    break;","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"                case \"E\":","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"                    Event event \u003d Parser.processEventFromStorage(task);","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"                    appendIntoTaskList(event);","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"                    break;","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"                default:","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"                    throw new MimiException.FileCorrupted(MimiException.FILE_CORRUPTED_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"                if (taskStatus.equals(\"true\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"                    ArrayList\u003cTask\u003e currentList \u003d TaskList.getTaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"                    currentList.get(currentList.size() - 1).markAsDone();","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"            this.saveFile(TaskList.getTaskList(), filePath);","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.LoadError | MimiException.IncorrectFormat | MimiException.InsufficientParameters | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"     * This method is called everytime a user make changes to the static taskList object in the TaskList class.","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"     * It saves the taskList to the /data/mimi.logs file.","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList  the list of tasks to be saved","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"     * @param filePath  the path of the file to be saved","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"    public void saveFile(ArrayList\u003cTask\u003e taskList, String filePath) {","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"                writer.write(t.toFileString() + \"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"            writer.close();","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(\"\\u001B[31mError:Unable to save file as \" + filePath + \" does not exists. Please create a \" +","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"                    \"/data folder in the root directory first.\\u001B[0m\");","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"JustinSoh":147}},{"path":"src/main/java/mimi/helper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.helper;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Event;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.ToDo;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import mimi.exceptions.MimiException;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":" * TaskList class is responsible for handling the task list of the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":" * It contains methods to add, delete, mark and unmark tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":" * It also contains methods to find tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":" * It also contains methods to append tasks into the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":" * It also contains methods to check the validity of the index","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":" * TaskList contains a static ArrayList of Task objects called taskList.","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":" * This is to ensure that the taskList is shared across all instances of TaskList.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":" * the TaskList object must be initiated in the main class.","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":" * @author Justin","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":" * @version 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":" * @since 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"public class TaskList {","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    public TaskList(){","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"        return taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"    public static void setTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"        TaskList.taskList \u003d taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"     * Used to add a new todo into the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the task name in the format {taskName}.","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"    public void addToDo(String[] inputs) {","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"            ToDo toDo \u003d Parser.processsToDoFromInput(inputs);","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"            appendIntoTaskList(toDo);","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"            Ui.printSuccessMessage(toDo, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.InsufficientParameters | MimiException.IncorrectFormat e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"     * Used to add a new deadline into the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the task name and date in the format {taskName, date}.","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"     *  *              The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"     *                 The date is a String representing the deadline date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"    public void addDeadline(String[] inputs) {","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            Deadline deadline \u003d Parser.processDeadlineFromInput(inputs);","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            appendIntoTaskList(deadline);","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"            Ui.printSuccessMessage(deadline, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.InsufficientParameters | MimiException.IncorrectFormat e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"     * Used to add a new event into the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the event name, starting date, ending date","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"     *                 In the format {taskName, startDate, endDate}.","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"     *                 The taskName is a String representing the name of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"     *                 The startDate is a String representing the starting date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"     *                 The endDate is a String representing the ending date of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"    public void addEvent(String[] inputs) {","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"            Event event \u003d Parser.processEventFromInput(inputs);","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"            appendIntoTaskList(event);","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"            Ui.printSuccessMessage(event, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.InsufficientParameters | MimiException.IncorrectFormat e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"     * Used to unmark a task as undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the index of the task to be marked as undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"     *                 In the format {index}.","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"     *                 The index is an integer representing the index of the task to be marked as undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"     *                 The index must be a valid index in the task list else it will throw a TaskNotFoundException.","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"    public void unmarkTasks(String[] inputs) {","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"            int index \u003d checkValidityOfIndex(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"            taskList.get(index).markAsUndone();","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"            Ui.printUnmarkTask(taskList, index);","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.TaskNotFound |","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"                 MimiException.InsufficientParameters |","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"                 MimiException.IncorrectFormat e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"     * Used to mark a task as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the index of the task to be marked as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"     *                 In the format {index}.","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"     *                 The index is an integer representing the index of the task to be marked as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"     *                 The index must be a valid index in the task list else it will throw a TaskNotFoundException.","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"    public void markTask(String[] inputs) {","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"            int index \u003d checkValidityOfIndex(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"            taskList.get(index).markAsDone();","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"            Ui.printMarkTask(taskList, index);","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.TaskNotFound | MimiException.InsufficientParameters | MimiException.IncorrectFormat e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"     * Used to delete a task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the index of the task to be deleted.","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"     *                 In the format {index}.","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"     *                 The index is an integer representing the index of the task to be deleted.","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"     *                 The index must be a valid index in the task list else it will throw a TaskNotFoundException.","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"    public void deleteTask( String[] inputs) {","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"            int index \u003d checkValidityOfIndex(inputs);","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"            Task removedTask \u003d taskList.get(index);","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"            taskList.remove(index);","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"            Ui.printDeleteMessage(removedTask, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"JustinSoh"},"content":"        } catch (MimiException.TaskNotFound | MimiException.InsufficientParameters | MimiException.IncorrectFormat e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":156,"author":{"gitId":"JustinSoh"},"content":"     * Used to find a task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"     * The method will check if any of the task contains the given keyword and print the task found.","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the keyword to search for.","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"JustinSoh"},"content":"     *                 In the format {keyword}.","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"JustinSoh"},"content":"     *                 The keyword is a String representing the keyword to search for in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"JustinSoh"},"content":"    public void findTask (String [] inputs){","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"        ArrayList\u003cTask\u003e taskFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":165,"author":{"gitId":"JustinSoh"},"content":"        String keyword \u003d inputs[1];","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"JustinSoh"},"content":"        for(Task t: taskList){","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"JustinSoh"},"content":"            if (t.getName().contains(keyword)){","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"JustinSoh"},"content":"                taskFound.add(t);","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":170,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"JustinSoh"},"content":"        Ui.printTaskFound(taskFound);","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"     * Used to append a new task into the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":177,"author":{"gitId":"JustinSoh"},"content":"     * Used by the addDeadline, addEvent and addToDo methods and the storage class.","lastModifiedDate":"2024-02-28"},{"lineNumber":178,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":179,"author":{"gitId":"JustinSoh"},"content":"     * @param newTask   A Task object representing the new task to be added into the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"    public static void appendIntoTaskList(Task newTask) {","lastModifiedDate":"2024-02-26"},{"lineNumber":182,"author":{"gitId":"JustinSoh"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":186,"author":{"gitId":"JustinSoh"},"content":"     * Used to check the validity of the index.","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"     * The method will check if the index is a valid index in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs   An array containing the index to be checked.","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"     *                 In the format {index}.","lastModifiedDate":"2024-02-28"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"     *                 The index is an integer representing the index to be checked.","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"JustinSoh"},"content":"     *                 The index must be a valid index in the task list else it will throw a TaskNotFoundException.","lastModifiedDate":"2024-02-28"},{"lineNumber":193,"author":{"gitId":"JustinSoh"},"content":"     *                 The index must be a valid integer else it will throw an IncorrectFormatException.","lastModifiedDate":"2024-02-28"},{"lineNumber":194,"author":{"gitId":"JustinSoh"},"content":"     *                 The index must be a valid integer else it will throw an InsufficientParametersException.","lastModifiedDate":"2024-02-28"},{"lineNumber":195,"author":{"gitId":"JustinSoh"},"content":"     * @return index   An integer value of the index.","lastModifiedDate":"2024-02-28"},{"lineNumber":196,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":197,"author":{"gitId":"JustinSoh"},"content":"    private static int checkValidityOfIndex(String[] inputs) throws MimiException.TaskNotFound,","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"JustinSoh"},"content":"            MimiException.InsufficientParameters, MimiException.IncorrectFormat {","lastModifiedDate":"2024-02-26"},{"lineNumber":199,"author":{"gitId":"JustinSoh"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":200,"author":{"gitId":"JustinSoh"},"content":"            // Throws an error if parameters is incomplete","lastModifiedDate":"2024-02-26"},{"lineNumber":201,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.InsufficientParameters(MimiException.INSUFFICIENT_INDEX_PARAMETERS_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":203,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"JustinSoh"},"content":"            int index \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"JustinSoh"},"content":"            if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":207,"author":{"gitId":"JustinSoh"},"content":"                // Throws an error if task is not found","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"JustinSoh"},"content":"                throw new MimiException.TaskNotFound(MimiException.TASK_NOT_FOUND_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"JustinSoh"},"content":"            return index;","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"JustinSoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":212,"author":{"gitId":"JustinSoh"},"content":"            // Throws an error if the format is incorrect","lastModifiedDate":"2024-02-26"},{"lineNumber":213,"author":{"gitId":"JustinSoh"},"content":"            throw new MimiException.IncorrectFormat(MimiException.INCORRECT_INDEX_FORMAT_MSG);","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":217,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"JustinSoh":217}},{"path":"src/main/java/mimi/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package mimi.helper;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import mimi.classes.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":" * Ui class is responsible for handling the user interface of the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":" *","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":" * @author Justin","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":" * @version 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":" * @since 0.2","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"public class Ui {","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    private Boolean isRunning;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    final int INPUT_LIMIT \u003d 2;","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    final String INPUT_DELIMITER \u003d \" \";","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"    public Ui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"        printWelcomeMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"    private void printWelcomeMessage() {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Hello! I\u0027m mimichat\");","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to print the goodbye message to the user.","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"     * This method is called when the user enters \u0027bye\u0027.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"    public void shutdownSequence() {","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"        printDescription(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"        this.setRunning(false);","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"        this.scanner.close();","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"    public Boolean isRunning() {","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        return isRunning;","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to set the running status of the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"     * Set it to true if you want the application to continue running.","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"     * Set it to false if you want the application to stop running.","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     * @param running the status of the application","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"    public void setRunning(Boolean running) {","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"        isRunning \u003d running;","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to get the input from the user.","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"     * The input is then split into an array of strings based on the delimiter and limit.","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"     * The input is limited to 2 strings mainly the taskType and the other parameters.","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"     * The other parameters will be processed in the later part of the code.","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"     * @return an array of strings containing the input from the user","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"    public String[] getInput() {","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"        String input \u003d this.scanner.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"        return input.split(INPUT_DELIMITER, INPUT_LIMIT);","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"    private static String formatTask(Task task) {","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"        return \"\\t\" + task;","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to format the task in the following manner","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"     * [index]. [task]","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"     * e.g. 1. [T][✓] read book","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"     *      2. [D][✗] return book (by: June 6th)","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"     * @param task the task to be formatted","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"     * @param index the index of the task in the taskList","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"     * @return a formatted string of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"    private static String formatTask(Task task, int index) {","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"        String indexNumber \u003d Integer.toString(index + 1);","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"        return indexNumber + \". \" + task;","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to print the list of tasks in taskList","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"     * If the list is empty, print a message to the user that the list is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"    private static void printTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(\"\\u001B[31mYou have no tasks in your list\\u001B[0m\");","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"        else {","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"                System.out.println(formatTask(t, taskList.indexOf(t)));","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"     * Method is used when a task is added or removed from the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"     * @param task the task that was added or removed","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"    private static void printMessage(Task task, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"\\t\" + formatTask(task));","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Now you have \" + Integer.toString(taskList.size()) + \" tasks in the list\");","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"     * Method is used in the shutdown sequence to print a message to the user.","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"     * Can be used to print any message to the user with special formatting.","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"     * @param input the description of the task","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"    public static void printDescription(String input) {","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(input);","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to when a task (todo/deadline/event) is added to the taskList","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"     * Use this method to print a message to the user when a task is added.","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"     * @param task the task that was added","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"    public static void printSuccessMessage(Task task, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"        printMessage(task, taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to when a task (todo/deadline/event) is removed from the taskList","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when you want to print a message to the user that a task has been removed.","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"     * @param task the task that was added","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"JustinSoh"},"content":"    public static void printDeleteMessage(Task task, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"JustinSoh"},"content":"        printMessage(task, taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":155,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":158,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to when a task (todo/deadline/event) is marked as done","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when you want to print a message to the user that a task has been marked as done.","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"JustinSoh"},"content":"     * @param index the index of the task that was marked as done","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"JustinSoh"},"content":"    public static void printMarkTask(ArrayList\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2024-02-28"},{"lineNumber":166,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as done\");","lastModifiedDate":"2024-02-28"},{"lineNumber":168,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(formatTask(taskList.get(index), index));","lastModifiedDate":"2024-02-28"},{"lineNumber":169,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":173,"author":{"gitId":"JustinSoh"},"content":"     * Method is used to when a task (todo/deadline/event) is marked as undone","lastModifiedDate":"2024-02-28"},{"lineNumber":174,"author":{"gitId":"JustinSoh"},"content":"     * Use this method when you want to print a message to the user that a task has been marked as undone.","lastModifiedDate":"2024-02-28"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":177,"author":{"gitId":"JustinSoh"},"content":"     * @param index the index of the task that was marked as undone","lastModifiedDate":"2024-02-28"},{"lineNumber":178,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":179,"author":{"gitId":"JustinSoh"},"content":"    public static void printUnmarkTask(ArrayList\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2024-02-28"},{"lineNumber":180,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2024-02-28"},{"lineNumber":182,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(formatTask(taskList.get(index), index));","lastModifiedDate":"2024-02-28"},{"lineNumber":183,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"     * Use this method to print a message to the user of all the task based of  a keyword search","lastModifiedDate":"2024-02-28"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"    public static void printTaskFound(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-28"},{"lineNumber":192,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":194,"author":{"gitId":"JustinSoh"},"content":"        printTasks(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":195,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":197,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":199,"author":{"gitId":"JustinSoh"},"content":"     * Use this method to print a message to the user of all the tasks in the taskList","lastModifiedDate":"2024-02-28"},{"lineNumber":200,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":201,"author":{"gitId":"JustinSoh"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":202,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":203,"author":{"gitId":"JustinSoh"},"content":"    public void listTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"JustinSoh"},"content":"        printTasks(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":207,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"-------------------------------------------\");","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"JustinSoh":211}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"mark","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"mark 1","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"mark","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"unmark","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"unmark 1","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"unmark","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"todo borrow book","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"todo","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"todooooooooo","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"todo borrow calculator","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"list","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"deadline","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"deadline /by","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"deadline by","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"deadline return book /by","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"event","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"event testing","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"event testing /from /to","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"event testing /from Mon 3pm /to","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"list","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"mark 1","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"list","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"delete 10","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"delete -0","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"delete 1111","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"delete 1 1 1","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"delete","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"delete 1","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"todo borrow, from john","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"deadline return, this book /by Tuesday","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"event a new test, this is it /from Mon 3pm /to Mon 5pm","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"mark 1","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"mark 2","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"find borrow","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"find return","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"find 1","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"bye","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JustinSoh":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"javac  -cp ..\\src\\mimi\\java -Xlint:none -d ..\\bin ..\\src\\mimi\\java\\*.java","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JustinSoh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"# create data directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"if [ ! -d \"../data\" ]","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"then","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"    mkdir ../data","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"fi","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"# if previous copy of EXPECTED_FILE.logs exists, then create new copy it","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"if [ -e \"../data/mimi.logs\" ]","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"then","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    rm ../data/mimi.logs","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"fi","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"if [ ! -e \"../data/mimi.logs\" ]","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"then","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    touch ../data/mimi.logs","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"fi","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"if ! javac -cp ../src/main/java/mimi -Xlint:none -d ../bin ../src/main/java/mimi/classes/*.java  ../src/main/java/mimi/helper/*.java   ../src/main/java/mimi/*.java ../src/main/java/mimi/exceptions/*.java","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"cd ../","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"java -classpath bin mimi/Duke \u003c text-ui-test/input.txt \u003e text-ui-test/ACTUAL.TXT","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"cd text-ui-test","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"    diff ../data/mimi.logs EXPECTED_FILE.logs","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"    if [ $? -eq 0 ]","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    then","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    else","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"fi","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"JustinSoh":28,"-":39}}]
