[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"# Alexis Chatbot User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"Alexis is a Command Line Interface (CLI) chatbot that helps you manage your tasks. If you can type fast, Alexis can get ","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"your task management done faster than a traditional Graphical User Interface (GUI) application. This guide will help ","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"you get started with Alexis and understand its key features.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"## Table of Contents","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"- [Features](#features)","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"    - [Adding a todo: `todo`](#adding-a-todo-todo)","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"    - [Adding a deadline: `deadline`](#adding-a-deadline-deadline)","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"    - [Adding an event: `event`](#adding-an-event-event)","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"    - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"    - [Marking a task as done: `mark`](#marking-a-task-as-done-mark)","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"    - [Unmarking a task: `unmark`](#unmarking-a-task-unmark)","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"    - [Finding tasks: `find`](#finding-tasks-find)","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"    - [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"    - [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"## Quick Start","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"2. Download the latest Alexis.jar from [here](https://github.com/imanamirshah/ip/releases/tag/A-Release).","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"3. Copy the file into the folder that you wish to use this application in","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"4. Open a terminal, `cd` into the folder you put the jar file in, and use `java -jar Alexis.jar` command to run chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"5. Refer to the [features](#features) below for implementations of each command.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"\u003e - Words in `\u003cUPPER_CASE\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"    \u003e   e.g. in `todo \u003cTASK_DESCRIPTION\u003e`, `\u003cTASK_DESCRIPTION\u003e` is a parameter which can be used as `todo Read a book`.","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"\u003e - Parameters must be in the specified order.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"    \u003e   e.g. if the command specifies `/from \u003cSTART_DATE\u003e /to \u003cEND_DATE\u003e`, parameters must be supplied in that order.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"`/to \u003cEND_DATE\u003e /from \u003cSTART_DATE\u003e` is not acceptable.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"\u003e - Dates and times specified in the following format `yyyy-MM-dd HHmm` will be automatically converted to ","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"`MMM dd yyyy, K.mm a` in the task list","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"    \u003e   e.g. if you have given `2024-02-05 1334` as your deadline, it will be displayed as `Feb 05 2024, 1.34 PM`.","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored.","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"    \u003e   e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"\u003e - If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple ","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"imanamirshah"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"imanamirshah"},"content":"Adds a todo task to the task list. Todo tasks are tasks that have no date/time attached to it","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"imanamirshah"},"content":"Format: `todo \u003cDESCRIPTION\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"imanamirshah"},"content":"- `todo Read a book`","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"imanamirshah"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"imanamirshah"},"content":"Adds a task with a deadline. Deadline tasks are tasks that need to be done before a specific date/time.","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"imanamirshah"},"content":"Format: `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"imanamirshah"},"content":"- `deadline Submit report /by 2023-03-10`","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"imanamirshah"},"content":"### Adding an event: `event`","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"imanamirshah"},"content":"Adds an event task. Event tasks are tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"imanamirshah"},"content":"Format: `event \u003cDESCRIPTION\u003e /from \u003cSTART_DATE\u003e /to \u003cEND_DATE\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"imanamirshah"},"content":"- `event Team camp /from 2023-03-15 /to 2023-03-16`","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"imanamirshah"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"imanamirshah"},"content":"Shows a list of all tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"imanamirshah"},"content":"Format: `list`","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"imanamirshah"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"imanamirshah"},"content":"Marks a task as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"imanamirshah"},"content":"Format: `mark \u003cTASK_INDEX\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"imanamirshah"},"content":"- Marks the task at the specified TASK_INDEX.","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"imanamirshah"},"content":"- The index refers to the index number shown in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"imanamirshah"},"content":"- The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"imanamirshah"},"content":"- `mark 2`","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"imanamirshah"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"imanamirshah"},"content":"Unmarks a task.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"imanamirshah"},"content":"- Marks the task at the specified TASK_INDEX.","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"imanamirshah"},"content":"- The index refers to the index number shown in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"imanamirshah"},"content":"- The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"imanamirshah"},"content":"Format: `unmark \u003cTASK_INDEX\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"imanamirshah"},"content":"- `unmark 2`","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"imanamirshah"},"content":"### Finding tasks: `find`","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"imanamirshah"},"content":"Finds tasks that contain the given keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"imanamirshah"},"content":"Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"imanamirshah"},"content":"- The search is case-insensitive. e.g. `book` will match `Book`","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"imanamirshah"},"content":"- The order of the keywords matters. e.g. `read book` will not match `book read`","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"imanamirshah"},"content":"- Only the task description is searched.","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"imanamirshah"},"content":"- `find book`","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"imanamirshah"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"imanamirshah"},"content":"Deletes the specified task.","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"imanamirshah"},"content":"Format: `delete \u003cTASK_INDEX\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"imanamirshah"},"content":"- Deletes the task at the specified TASK_INDEX.","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"imanamirshah"},"content":"- The index refers to the index number shown in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"imanamirshah"},"content":"- The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"imanamirshah"},"content":"Examples:","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"imanamirshah"},"content":"- `delete 3`","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"imanamirshah"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"imanamirshah"},"content":"Exits the program.","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"imanamirshah"},"content":"Format: `bye`","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":164,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"imanamirshah"},"content":"### Saving the data","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"imanamirshah"},"content":"Alexis automatically saves your tasks in the hard disk after any command that changes the task list. There is no need ","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"imanamirshah"},"content":"to save manually.","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"imanamirshah"},"content":"## FAQ","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"imanamirshah"},"content":"**Q:** How do I transfer my data to another computer  ","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"imanamirshah"},"content":"**A:** Install the app on the other computer and overwrite the empty data file","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"imanamirshah"},"content":"it creates with the file that contains the data.","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"imanamirshah"},"content":"\u0026nbsp;","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"imanamirshah"},"content":"## Command summary","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"imanamirshah"},"content":"| **Commands** | **Usage**                                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"imanamirshah"},"content":"|--------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"imanamirshah"},"content":"| **todo**     | `todo \u003cTASK_DESCRIPTION\u003e`                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"imanamirshah"},"content":"| **deadline** | `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cTASK_DEADLINE\u003e`                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"imanamirshah"},"content":"| **event**    | `event \u003cTASK_DESCRIPTION\u003e /from \u003cSTART_DATE\u003e /to \u003cEND_DATE\u003e`                                |","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"imanamirshah"},"content":"| **list**     | `list`                                                                                      |","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"imanamirshah"},"content":"| **mark**     | `mark \u003cTASK_INDEX\u003e`                                                                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"imanamirshah"},"content":"| **unmark**   | `unmark \u003cTASK_INDEX\u003e`                                                                       |","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"imanamirshah"},"content":"| **find**     | `find \u003cTASK_DESCRIPTION\u003e`                                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"imanamirshah"},"content":"| **delete**   | `delete \u003cTASK_INDEX\u003e`                                                                       |","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"imanamirshah"},"content":"| **bye**      | `bye`                                                                                       |","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"imanamirshah":168,"-":25}},{"path":"src/main/java/alexis/Alexis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Parser;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"public class Alexis {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"            Storage.readFromFile(tasks);","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"        catch (FileNotFoundException ignored) {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"        Parser.processUserInput(tasks, in);","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"imanamirshah":25}},{"path":"src/main/java/alexis/console/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.console;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":" * The Command enum holds all possible commands that Alexis accepts.","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"public enum Command {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"    HELP,","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"    LIST,","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"    BYE,","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"    MARK,","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"    UNMARK,","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"    FIND,","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"    TODO,","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"    EVENT,","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"    DELETE,","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"    SAVE;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"imanamirshah":19}},{"path":"src/main/java/alexis/console/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.console;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.exception.MissingFieldException;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":" * The Parser class is responsible for parsing user inputs and extracting relevant information","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":" * for further processing by the application.","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"public class Parser {","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"     * Processes the user input from the console and performs actions based on the parsed commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"     * @param in The scanner used to read the user input.","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"    public static void processUserInput(TaskList tasks, Scanner in) {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"        while (true) {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"            try {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"                String line \u003d in.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"                Command command \u003d Parser.parseCommand(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"                if (command \u003d\u003d null) {","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"                    continue;","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"                }","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"                switch (command) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"                case HELP:","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printCommands();","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"                case BYE:","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"                    return;","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"                case LIST:","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printTaskListToConsole(tasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"                case MARK:","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printMarkedItemToConsole(tasks, line);","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"                    Storage.saveToLocalDisk(tasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"                case UNMARK:","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printUnmarkedItemToConsole(tasks, line);","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"                    Storage.saveToLocalDisk(tasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"                case FIND:","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printMatchingTasksToConsole(tasks, line);","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"                case DELETE:","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printDeletedTaskToConsole(tasks, line);","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"imanamirshah"},"content":"                    Storage.saveToLocalDisk(tasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"imanamirshah"},"content":"                case TODO:","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"imanamirshah"},"content":"                case DEADLINE:","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"imanamirshah"},"content":"                case EVENT:","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"imanamirshah"},"content":"                    Ui.printNewTaskToConsole(tasks, line, command);","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"imanamirshah"},"content":"                    Storage.saveToLocalDisk(tasks);","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"imanamirshah"},"content":"                    break;","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"imanamirshah"},"content":"                }","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"imanamirshah"},"content":"            } catch (MissingFieldException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"imanamirshah"},"content":"                Ui.printDescriptionErrorMessage();","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"imanamirshah"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"imanamirshah"},"content":"     * Parses the first word of the user\u0027s input and returns the command to be executed.","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"imanamirshah"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"imanamirshah"},"content":"     * @return The Command corresponding to the first word of the input or null if command does not exist.","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"imanamirshah"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"imanamirshah"},"content":"        String firstWord \u003d getFirstWord(input);","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"imanamirshah"},"content":"            return Command.valueOf(firstWord.toUpperCase());","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"imanamirshah"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"imanamirshah"},"content":"            Ui.printCommandErrorMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"imanamirshah"},"content":"            return null;","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"imanamirshah"},"content":"     * Extracts and returns the first word from the user\u0027s input.","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"imanamirshah"},"content":"     * If the input contains no spaces, the whole input string is taken as the first word.","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"imanamirshah"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"imanamirshah"},"content":"     * @return The first word of the input as a String.","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"imanamirshah"},"content":"    private static String getFirstWord(String input) {","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"imanamirshah"},"content":"        int firstSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"imanamirshah"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"imanamirshah"},"content":"            return input;","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"imanamirshah"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"imanamirshah"},"content":"            return input.substring(0, firstSpace).trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"imanamirshah"},"content":"     * Parses the input to extract the description of a task and returns the description as a string.","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"imanamirshah"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"imanamirshah"},"content":"     * @return The description part of the input.","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"imanamirshah"},"content":"     * @throws MissingFieldException If the description is missing.","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"imanamirshah"},"content":"    public static String parseDescription(String input) throws MissingFieldException {","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"imanamirshah"},"content":"        int firstSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"imanamirshah"},"content":"        String description \u003d input.substring(firstSpace + 1).trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"imanamirshah"},"content":"        if (firstSpace \u003d\u003d -1 | description.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"imanamirshah"},"content":"            throw new MissingFieldException();","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"imanamirshah"},"content":"        return description;","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"imanamirshah"},"content":"    public static String getDateTime(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":118,"author":{"gitId":"imanamirshah"},"content":"        String dateInput \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"imanamirshah"},"content":"        String dateOutput \u003d \"MMM dd yyyy, K.mm a\";","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"imanamirshah"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(dateInput);","lastModifiedDate":"2024-03-04"},{"lineNumber":121,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":123,"author":{"gitId":"imanamirshah"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, inputFormatter);","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"imanamirshah"},"content":"            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(dateOutput);","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"imanamirshah"},"content":"            return dateTime.format(outputFormatter);","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"imanamirshah"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"imanamirshah"},"content":"            return input;","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":129,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"imanamirshah":130}},{"path":"src/main/java/alexis/console/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.console;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.ToDo;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.Deadline;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.Event;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.TaskType;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"import java.io.File;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":" * The Storage class is responsible for all save and load operations to local disk.","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"public class Storage {","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"    private static final String FILE_NAME \u003d \"Alexis.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"    private static final String DIR_NAME \u003d \"./data/\";","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"    private static final String FILE_PATH \u003d DIR_NAME + FILE_NAME;","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"     * Formats a list of tasks into a string and returns a string representation of all tasks for file storage.","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"     * Each task is represented by a line in the string.","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"     * @param tasks The task list containing the tasks to be formatted.","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"     * @return A formatted string representation of all tasks.","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"    private static String formatFile(TaskList tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"        StringBuilder formattedTasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"            String taskSymbol \u003d getTaskSymbol(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"            int taskStatus \u003d getTaskStatus(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"            String taskDate \u003d getTaskDate(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"                formattedTasks.append(String.format(\"%s | %d | %s\\n\", taskSymbol, taskStatus, taskDescription));","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"            } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"                formattedTasks.append(","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"                        String.format(\"%s | %d | %s | %s\\n\", taskSymbol, taskStatus, taskDescription, taskDate));","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"        return formattedTasks.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"     * Converts a line of text from a file into a Task object and returns the object.","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"     * @param fileInput The string input from the saved file representing a single task.","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"     * @return The Task object parsed from the input string or null if the task type is not recognized.","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"imanamirshah"},"content":"    private static Task formatTask(String fileInput) {","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"imanamirshah"},"content":"        String separator \u003d \" \\\\| \";","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"imanamirshah"},"content":"        String[] sections \u003d fileInput.split(separator);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"imanamirshah"},"content":"        String taskType \u003d sections[0].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"imanamirshah"},"content":"        int taskStatus \u003d Integer.parseInt(sections[1].trim());","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"imanamirshah"},"content":"        String description \u003d sections[2].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"imanamirshah"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"imanamirshah"},"content":"        case \"T\":","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"imanamirshah"},"content":"            return parseToDoFromFile(description, taskStatus);","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"imanamirshah"},"content":"        case \"D\":","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"imanamirshah"},"content":"            return parseDeadlineFromFile(sections, description, taskStatus);","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"imanamirshah"},"content":"        case \"E\":","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"imanamirshah"},"content":"            return parseEventFromFile(sections, description, taskStatus);","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"imanamirshah"},"content":"        return null;","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"imanamirshah"},"content":"     * Parses and returns a ToDo object from a string from a saved file.","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"imanamirshah"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"imanamirshah"},"content":"     * @param taskStatus The status of the task, where 1 indicates done and 0 indicates not done.","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"imanamirshah"},"content":"     * @return A ToDo object with the specified description and status.","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"imanamirshah"},"content":"    private static ToDo parseToDoFromFile(String description, int taskStatus) {","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"imanamirshah"},"content":"        ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"imanamirshah"},"content":"        markTaskFromFileAsDone(taskStatus, toDo);","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"imanamirshah"},"content":"        return toDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"imanamirshah"},"content":"     * Parses and returns a Deadline object from a string from a saved file.","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"imanamirshah"},"content":"     * @param sections The array of strings after splitting the file input by the separator.","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"imanamirshah"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"imanamirshah"},"content":"     * @param taskStatus The status of the task, where 1 indicates done and 0 indicates not done.","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"imanamirshah"},"content":"     * @return A Deadline object with the specified description and status.","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"imanamirshah"},"content":"    private static Deadline parseDeadlineFromFile(String[] sections, String description, int taskStatus) {","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"imanamirshah"},"content":"        String date \u003d sections[3].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"imanamirshah"},"content":"        Deadline deadline \u003d new Deadline(description, date);","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"imanamirshah"},"content":"        markTaskFromFileAsDone(taskStatus, deadline);","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"imanamirshah"},"content":"        return deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"imanamirshah"},"content":"     * Parses and returns an Event object from a string from a saved file.","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"imanamirshah"},"content":"     * @param sections The array of strings after splitting the file input by the separator.","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"imanamirshah"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"imanamirshah"},"content":"     * @param taskStatus The status of the task, where 1 indicates done and 0 indicates not done.","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"imanamirshah"},"content":"     * @return An Event object with the specified description and status.","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"imanamirshah"},"content":"    private static Event parseEventFromFile(String[] sections, String description, int taskStatus) {","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"imanamirshah"},"content":"        String eventSeparator \u003d \"-\";","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"imanamirshah"},"content":"        String[] eventDurationSections \u003d sections[3].split(eventSeparator);","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"imanamirshah"},"content":"        String start \u003d eventDurationSections[0].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"imanamirshah"},"content":"        String end \u003d eventDurationSections[1].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"imanamirshah"},"content":"        Event event \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"imanamirshah"},"content":"        markTaskFromFileAsDone(taskStatus, event);","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"imanamirshah"},"content":"        return event;","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"imanamirshah"},"content":"     * Marks a task as done if its status is 1.","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"imanamirshah"},"content":"     * @param taskStatus The status of the task from the file, where 1 indicates done and 0 indicates not done.","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"imanamirshah"},"content":"     * @param task The task to be marked as done if its status is 1.","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"imanamirshah"},"content":"    private static void markTaskFromFileAsDone(int taskStatus, Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"imanamirshah"},"content":"        if (taskStatus \u003d\u003d 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"imanamirshah"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"imanamirshah"},"content":"     * Retrieves and returns the date associated with a task as a string.","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"imanamirshah"},"content":"     * @param task The task whose date is to be retrieved.","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"imanamirshah"},"content":"     * @return The date of the task as a string or an empty string if the task does not have a date.","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"imanamirshah"},"content":"    private static String getTaskDate(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"imanamirshah"},"content":"        TaskType taskType \u003d TaskType.getTaskType(task.getClass().getSimpleName());","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"imanamirshah"},"content":"        String taskDate \u003d null;","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"imanamirshah"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"imanamirshah"},"content":"        case TODO:","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"imanamirshah"},"content":"            taskDate \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"imanamirshah"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"imanamirshah"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"imanamirshah"},"content":"            taskDate \u003d deadline.getBy();","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"imanamirshah"},"content":"        case EVENT:","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"imanamirshah"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"imanamirshah"},"content":"            taskDate \u003d event.getStart() + \"-\" + event.getEnd();","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"imanamirshah"},"content":"        return taskDate;","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"imanamirshah"},"content":"     * Retrieves and returns the symbol representing the task type.","lastModifiedDate":"2024-02-27"},{"lineNumber":160,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":161,"author":{"gitId":"imanamirshah"},"content":"     * @param task The task whose symbol is to be retrieved.","lastModifiedDate":"2024-02-27"},{"lineNumber":162,"author":{"gitId":"imanamirshah"},"content":"     * @return The symbol representing the task type as a string.","lastModifiedDate":"2024-02-27"},{"lineNumber":163,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"imanamirshah"},"content":"    private static String getTaskSymbol(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"imanamirshah"},"content":"        TaskType taskType \u003d TaskType.getTaskType(task.getClass().getSimpleName());","lastModifiedDate":"2024-02-21"},{"lineNumber":166,"author":{"gitId":"imanamirshah"},"content":"        String taskSymbol \u003d null;","lastModifiedDate":"2024-02-21"},{"lineNumber":167,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"imanamirshah"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"imanamirshah"},"content":"        case TODO:","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"imanamirshah"},"content":"            taskSymbol \u003d \"T\";","lastModifiedDate":"2024-02-21"},{"lineNumber":171,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"imanamirshah"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-21"},{"lineNumber":173,"author":{"gitId":"imanamirshah"},"content":"            taskSymbol \u003d \"D\";","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"imanamirshah"},"content":"        case EVENT:","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"imanamirshah"},"content":"            taskSymbol \u003d \"E\";","lastModifiedDate":"2024-02-21"},{"lineNumber":177,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"imanamirshah"},"content":"        return taskSymbol;","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"imanamirshah"},"content":"     * Retrieves and returns the status of a task as an integer.","lastModifiedDate":"2024-02-27"},{"lineNumber":184,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":185,"author":{"gitId":"imanamirshah"},"content":"     * @param task The task whose status is to be retrieved.","lastModifiedDate":"2024-02-27"},{"lineNumber":186,"author":{"gitId":"imanamirshah"},"content":"     * @return 1 if the task is done or 0 if the task is not done.","lastModifiedDate":"2024-02-27"},{"lineNumber":187,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":188,"author":{"gitId":"imanamirshah"},"content":"    private static int getTaskStatus(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"imanamirshah"},"content":"        int taskStatus;","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"imanamirshah"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":191,"author":{"gitId":"imanamirshah"},"content":"            taskStatus \u003d 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"imanamirshah"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"imanamirshah"},"content":"            taskStatus \u003d 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":194,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":195,"author":{"gitId":"imanamirshah"},"content":"        return taskStatus;","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":198,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":199,"author":{"gitId":"imanamirshah"},"content":"     * Writes the text to a file at the predefined file path.","lastModifiedDate":"2024-02-27"},{"lineNumber":200,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":201,"author":{"gitId":"imanamirshah"},"content":"     * @param fileText The text to be written to the file.","lastModifiedDate":"2024-02-27"},{"lineNumber":202,"author":{"gitId":"imanamirshah"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-27"},{"lineNumber":203,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":204,"author":{"gitId":"imanamirshah"},"content":"    private static void writeToFile(String fileText) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":205,"author":{"gitId":"imanamirshah"},"content":"        FileWriter fw \u003d new FileWriter(Storage.FILE_PATH);","lastModifiedDate":"2024-02-27"},{"lineNumber":206,"author":{"gitId":"imanamirshah"},"content":"        fw.write(fileText);","lastModifiedDate":"2024-02-21"},{"lineNumber":207,"author":{"gitId":"imanamirshah"},"content":"        fw.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":211,"author":{"gitId":"imanamirshah"},"content":"     * Saves the current state of the task list to the local disk.","lastModifiedDate":"2024-02-27"},{"lineNumber":212,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":213,"author":{"gitId":"imanamirshah"},"content":"     * @param tasks The TaskList to save to disk.","lastModifiedDate":"2024-02-27"},{"lineNumber":214,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":215,"author":{"gitId":"imanamirshah"},"content":"    public static void saveToLocalDisk(TaskList tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":216,"author":{"gitId":"imanamirshah"},"content":"        File fileDir \u003d new File(DIR_NAME);","lastModifiedDate":"2024-02-21"},{"lineNumber":217,"author":{"gitId":"imanamirshah"},"content":"        if (!fileDir.exists()){","lastModifiedDate":"2024-02-21"},{"lineNumber":218,"author":{"gitId":"imanamirshah"},"content":"            fileDir.mkdirs();","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":220,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":221,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"imanamirshah"},"content":"            writeToFile(formatFile(tasks));","lastModifiedDate":"2024-02-27"},{"lineNumber":223,"author":{"gitId":"imanamirshah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":224,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":228,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":229,"author":{"gitId":"imanamirshah"},"content":"     * Reads the tasks from a file and adds them to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":230,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":231,"author":{"gitId":"imanamirshah"},"content":"     * @param tasks The task list to add the tasks into.","lastModifiedDate":"2024-02-27"},{"lineNumber":232,"author":{"gitId":"imanamirshah"},"content":"     * @throws FileNotFoundException If the file cannot be found.","lastModifiedDate":"2024-02-27"},{"lineNumber":233,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":234,"author":{"gitId":"imanamirshah"},"content":"    public static void readFromFile(TaskList tasks) throws FileNotFoundException {","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"imanamirshah"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":236,"author":{"gitId":"imanamirshah"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-21"},{"lineNumber":237,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":238,"author":{"gitId":"imanamirshah"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":239,"author":{"gitId":"imanamirshah"},"content":"            String fileInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-21"},{"lineNumber":240,"author":{"gitId":"imanamirshah"},"content":"            Task task \u003d formatTask(fileInput);","lastModifiedDate":"2024-02-21"},{"lineNumber":241,"author":{"gitId":"imanamirshah"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-21"},{"lineNumber":242,"author":{"gitId":"imanamirshah"},"content":"                tasks.addToTaskListFromFIle(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":243,"author":{"gitId":"imanamirshah"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":244,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":245,"author":{"gitId":"imanamirshah"},"content":"        scanner.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":246,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":247,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"imanamirshah":247}},{"path":"src/main/java/alexis/console/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.console;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.exception.MissingFieldException;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"import alexis.task.TaskType;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":" * The Ui class handles all user interactions of Alexis. It is responsible for printing messages to the console,","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":" * processing user input, and executing commands based on the parsed input.","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"public class Ui {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"    private final static String NAME \u003d \"   (\u0027-.                 (\u0027-.  ) (`-.               .-\u0027)    \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"            + \"  ( OO ).-.           _(  OO)  ( OO ).            ( OO ).  \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"            + \"  / . --. / ,--.     (,------.(_/.  \\\\_)-. ,-.-\u0027) (_)---\\\\_) \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"            + \"  | \\\\-.  \\\\  |  |.-\u0027)  |  .---\u0027 \\\\  \\\\/  /  |  |OO)/    _ |  \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"            + \".-\u0027-\u0027  |  | |  | OO ) |  |      \\\\  ; /    |  |  \\\\\\\\  :` `.  \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"            + \" \\\\| |_.\u0027  | |  |`-\u0027 |(|  \u0027--.    \\\\   \\\\ |  |  |(_/ \u0027..`\u0027\u0027.) \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"            + \"  |  .-.  |(|  \u0027---.\u0027 |  .--\u0027   .\u0027 ,  \\\\_),|  |_.\u0027.-._)   \\\\ \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"            + \"  |  | |  | |      |  |  `---. /  .\u0027\u0027  \\\\(_|  |   \\\\       / \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"            + \"  `--\u0027 `--\u0027 `------\u0027  `------\u0027\u0027--\u0027   \u0027--\u0027 `--\u0027    `-----\u0027  \\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"    protected final static String LINE_BREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"    private final static String GREETING \u003d \"Wassup fam, I\u0027m Alexis.\\n\" + \"How can I be of service today?\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"            + \"If you are new here, type \u0027help\u0027 to see what you can do!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"    private final static String GOODBYE \u003d \"Guess you don\u0027t need me anymore. See you again!!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"    private final static String COMMANDS \u003d  \"Here\u0027s the list of commands that I can understand!\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"            + \"1. todo \u003cDESCRIPTION\u003e - Add a general task.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"            + \"2. deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e - Add a task with a deadline.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"            + \"3. event \u003cDESCRIPTION\u003e /from \u003cSTART_DATE\u003e  /to \u003cEND_DATE\u003e  - Add an event with a start and end date.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"            + \"4. list - Display all your tasks.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"            + \"5. mark \u003cTASK_INDEX\u003e - Mark a task as completed using its item number.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"            + \"6. unmark \u003cTASK_INDEX\u003e - Mark a task as not completed using its item number.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"            + \"7. delete \u003cTASK_INDEX\u003e - Remove a task using its item number.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"            + \"8. find \u003cKEYWORD\u003e - Search for tasks containing the keyword.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"            + \"9. bye - My task here is done. See you again!.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"    private final static String INVALID_COMMAND_ERROR","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"            \u003d \"AIYO wrong command lah. Please enter a valid command.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"    private final static String MISSING_DESCRIPTION_ERROR","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"            \u003d \"ALAMAK BRO, you\u0027re missing a description. Please add a description.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"    public final static String MISSING_FIND_DESCRIPTION_ERROR","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"            \u003d \"Sorry bro I don\u0027t know what task you are looking for. Please help me add description.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"    public final static String NO_MATCHING_TASK_MESSAGE \u003d \"Sorry bro looks like this task doesnt exist.\";","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"    public  final static String MISSING_DEADLINE_ERROR \u003d \"Please indicate the deadline of your task.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"    public final static String MISSING_EVENT_START_OR_END_DATE_ERROR","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"            \u003d \"Please indicate the start and end dates/times for your event properly.\";","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"    public final static String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"    public final static String MARK_DONE_MESSAGE \u003d \"BAIK LAAA! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"    public final static String MARK_UNDONE_MESSAGE \u003d \"OHOR HAVEN\u0027T FINISH, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"    public final static String MATCHING_TASKS_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"    public final static String MISSING_TASK_INDEX_MESSAGE \u003d \"EH, can tell me which task you are referring to.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"    public final static String INVALID_TASK_INDEX_MESSAGE \u003d \"Sorry bro, I can\u0027t find the task you are referring to.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"    public final static String ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"imanamirshah"},"content":"    public final static String REMOVE_MESSAGE \u003d \"Done bro, I\u0027ve removed this task:\";","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"imanamirshah"},"content":"    public final static String LIST_UPDATE_MESSAGE \u003d \"Now you have %d tasks in the list.\\n\";","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"imanamirshah"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"imanamirshah"},"content":"    public static void printCommands() {","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(COMMANDS);","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"imanamirshah"},"content":"    public static void printCommandErrorMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(INVALID_COMMAND_ERROR);","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"imanamirshah"},"content":"    public static void printDescriptionErrorMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(MISSING_DESCRIPTION_ERROR);","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"imanamirshah"},"content":"     * Prints a newly added task to the console.","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"imanamirshah"},"content":"     * @param tasks The task list to add the new task into.","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"imanamirshah"},"content":"     * @param line The input line containing the command and description of the new task.","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"imanamirshah"},"content":"     * @param command The command indicating the task type to be added.","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"imanamirshah"},"content":"     * @throws MissingFieldException If the description is missing.","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"imanamirshah"},"content":"    public static void printNewTaskToConsole(TaskList tasks, String line, Command command)","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"imanamirshah"},"content":"            throws MissingFieldException {","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"imanamirshah"},"content":"        String description \u003d Parser.parseDescription(line);","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"imanamirshah"},"content":"        printTaskToConsole(tasks, TaskType.valueOf(command.name()), description);","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"imanamirshah"},"content":"    public static void printTaskListToConsole(TaskList tasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"imanamirshah"},"content":"        tasks.printTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"imanamirshah"},"content":"    public static void printMarkedItemToConsole(TaskList tasks, String line) {","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"imanamirshah"},"content":"        tasks.markTask(line);","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"imanamirshah"},"content":"    public static void printUnmarkedItemToConsole(TaskList tasks, String line) {","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"imanamirshah"},"content":"        tasks.unmarkTask(line);","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"imanamirshah"},"content":"    private static void printTaskToConsole(TaskList tasks, TaskType todo, String description) {","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"imanamirshah"},"content":"        tasks.addTask(todo, description);","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"imanamirshah"},"content":"    public static void printMatchingTasksToConsole(TaskList tasks, String line) {","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"imanamirshah"},"content":"        tasks.printMatchingTasksMessage(line);","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"imanamirshah"},"content":"    public static void printDeletedTaskToConsole(TaskList tasks, String line) {","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"imanamirshah"},"content":"        tasks.deleteFromTaskList(line);","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"imanamirshah"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"imanamirshah":137}},{"path":"src/main/java/alexis/exception/MissingFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.exception;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"public class MissingFieldException extends Exception{","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"imanamirshah":4}},{"path":"src/main/java/alexis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Parser;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":" * The Deadline class represents a deadline task with a specific due date or time.","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"    protected String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"        return by;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"     * Returns a Deadline object from a user input string.","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"     * The input must contain a description and a deadline separated by keyword \"/by\".","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"     * @param input User input string for the Deadline object.","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"     * @return Deadline object or null if the input format is incorrect.","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"     * @throws IndexOutOfBoundsException If keyword \"/by\" is missing.","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"    protected static Deadline getDeadline(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"        String keyword \u003d \"/by\";","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"        int keywordIndex \u003d input.indexOf(keyword);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"            String description \u003d input.substring(0, keywordIndex).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"            String taskDeadline \u003d input.substring(keywordIndex + keyword.length()).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"            String formattedTaskDeadline \u003d Parser.getDateTime(taskDeadline);","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"            return new Deadline(description, formattedTaskDeadline);","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.MISSING_DEADLINE_ERROR);","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"     * @return A string representation of the task with symbol \"D\" denoting task type.","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"        return String.format(\"[D]%s (by: %s)\\n\", super.toString(), this.by);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"imanamirshah":53}},{"path":"src/main/java/alexis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Parser;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":" * The Event class represents an event task with a specific start and end date or time.","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"    protected String start;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"    protected String end;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"    public String getStart() {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"        return start;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"        return end;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"     * Returns an Event object from a user input string.","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"     * The input must contain a description, a start date and an end date separated by keywords \"/from\" and \"/to\"","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"     * respectively.","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"     * @param input User input string for the Deadline object.","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"     * @return Event object or null if the input format is incorrect.","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"     * @throws IndexOutOfBoundsException If keywords \"/from\" or \"/to\" is missing.","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"    protected static Event getEvent(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"        String keywordFrom \u003d \"/from\";","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"        String keywordTo \u003d \"/to\";","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"        int keywordFromIndex \u003d input.indexOf(keywordFrom);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"        int keywordToIndex \u003d input.indexOf(keywordTo, keywordFromIndex + keywordFrom.length());","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"            String description \u003d input.substring(0, keywordFromIndex).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"            String taskStart \u003d input.substring(keywordFromIndex + keywordFrom.length(), keywordToIndex).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"            String taskEnd \u003d input.substring(keywordToIndex + keywordTo.length()).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"            String formattedTaskStart \u003d Parser.getDateTime(taskStart);","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"            String formattedTaskEnd \u003d Parser.getDateTime(taskEnd);","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"            return new Event(description, formattedTaskStart, formattedTaskEnd);","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.MISSING_EVENT_START_OR_END_DATE_ERROR);","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"imanamirshah"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"imanamirshah"},"content":"     * @return A string representation of the task with symbol \"E\" denoting task type.","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"imanamirshah"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"imanamirshah"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"imanamirshah"},"content":"        return String.format(\"[E]%s (from: %s to %s)\\n\", super.toString(), this.start, this.end);","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"imanamirshah":65}},{"path":"src/main/java/alexis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"        return description;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"        return isDone;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"imanamirshah":44}},{"path":"src/main/java/alexis/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Parser;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"import alexis.console.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"import alexis.exception.MissingFieldException;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":" * The TaskList class represents a list of tasks. It provides methods to add, delete, mark, unmark and print tasks.","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"    private int numberOfTasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"        return tasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"     * Adds a new task to the task list and increments the count of total tasks.","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"    private void addToTaskList(Task task) {","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"        numberOfTasks++;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"        printAddTaskMessage(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"imanamirshah"},"content":"     * Adds a task from a saved file to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"imanamirshah"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"imanamirshah"},"content":"    public void addToTaskListFromFIle(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"imanamirshah"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"imanamirshah"},"content":"        numberOfTasks++;","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"imanamirshah"},"content":"    private void printAddTaskMessage(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(Ui.ADD_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"imanamirshah"},"content":"        System.out.print(\"\\t\" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"imanamirshah"},"content":"        System.out.printf(Ui.LIST_UPDATE_MESSAGE, numberOfTasks);","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"imanamirshah"},"content":"     * Adds a new task to the task list based on the type and description provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"imanamirshah"},"content":"     * @param taskType The type of task to create.","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"imanamirshah"},"content":"     * @param input The description of the task.","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"imanamirshah"},"content":"    public void addTask(TaskType taskType, String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"imanamirshah"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"imanamirshah"},"content":"        case TODO:","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"imanamirshah"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"imanamirshah"},"content":"            ToDo toDo \u003d ToDo.getToDo(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"imanamirshah"},"content":"            addToTaskList(toDo);","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"imanamirshah"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"imanamirshah"},"content":"            Deadline deadline \u003d Deadline.getDeadline(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"imanamirshah"},"content":"            if (deadline !\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"imanamirshah"},"content":"                addToTaskList(deadline);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"imanamirshah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"imanamirshah"},"content":"        case EVENT:","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"imanamirshah"},"content":"            Event event \u003d Event.getEvent(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"imanamirshah"},"content":"            if (event !\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"imanamirshah"},"content":"                addToTaskList(event);","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"imanamirshah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"imanamirshah"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"imanamirshah"},"content":"     * Marks a task as done based on the task number provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"imanamirshah"},"content":"     * @param input The string containing the task number to mark as done.","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"imanamirshah"},"content":"    public void markTask(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"imanamirshah"},"content":"        Integer number \u003d extractInt(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"imanamirshah"},"content":"        if (isNotValid(number)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"imanamirshah"},"content":"            return;","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"imanamirshah"},"content":"        Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"imanamirshah"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(Ui.MARK_DONE_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"imanamirshah"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"imanamirshah"},"content":"        printTask(task, -1);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"imanamirshah"},"content":"     * Marks a task as not done based on the task number provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"imanamirshah"},"content":"     * @param input The string containing the task number to mark as not done.","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"imanamirshah"},"content":"    public void unmarkTask(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"imanamirshah"},"content":"        Integer number \u003d extractInt(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"imanamirshah"},"content":"        if (isNotValid(number)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"imanamirshah"},"content":"            return;","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"imanamirshah"},"content":"        Task task \u003d tasks.get(number - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"imanamirshah"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(Ui.MARK_UNDONE_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"imanamirshah"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"imanamirshah"},"content":"        printTask(task, -1);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"imanamirshah"},"content":"     * Finds and displays tasks that contain the specified input string in their description.","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"imanamirshah"},"content":"     * @param input The string to search for in task descriptions.","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"imanamirshah"},"content":"     * @throws MissingFieldException If the input string is missing or empty.","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"imanamirshah"},"content":"    public void findTask(String input) throws MissingFieldException {","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"imanamirshah"},"content":"        String description \u003d Parser.parseDescription(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"imanamirshah"},"content":"        TaskList filteredList \u003d filterByString(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"imanamirshah"},"content":"        if(!filteredList.tasks.isEmpty()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.MATCHING_TASKS_MESSAGE);","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"imanamirshah"},"content":"            int taskIndex \u003d 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"imanamirshah"},"content":"            for (Task task : filteredList.tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"imanamirshah"},"content":"                printTask(task, taskIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"imanamirshah"},"content":"                taskIndex++;","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"imanamirshah"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"imanamirshah"},"content":"        } else {","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.NO_MATCHING_TASK_MESSAGE);","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"imanamirshah"},"content":"     * Filters the list of tasks based on a given string and returns a new TaskList containing only the matching tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"imanamirshah"},"content":"     * @param filterString The string to filter tasks by their description.","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"imanamirshah"},"content":"     * @return A TaskList containing tasks whose descriptions contain the filterString.","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"imanamirshah"},"content":"    public TaskList filterByString(String filterString) {","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"imanamirshah"},"content":"        TaskList filteredList \u003d new TaskList();","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"imanamirshah"},"content":"        filteredList.tasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"imanamirshah"},"content":"                .filter((t) -\u003e t.getDescription().toLowerCase().contains(filterString.toLowerCase()))","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"imanamirshah"},"content":"                .collect(toList());","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"imanamirshah"},"content":"        return filteredList;","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"imanamirshah"},"content":"     * Prints the tasks that match the given input string by calling the findTask method.","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":150,"author":{"gitId":"imanamirshah"},"content":"     * @param line The input string to search for in task descriptions.","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"imanamirshah"},"content":"    public void printMatchingTasksMessage(String line) {","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":154,"author":{"gitId":"imanamirshah"},"content":"            findTask(line);","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"imanamirshah"},"content":"        } catch (MissingFieldException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.MISSING_FIND_DESCRIPTION_ERROR);","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":158,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":160,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":161,"author":{"gitId":"imanamirshah"},"content":"     * Checks if a given number is a valid index for the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":162,"author":{"gitId":"imanamirshah"},"content":"     * A number invalid if it is null, less than or equal to zero, or greater than the number of tasks in","lastModifiedDate":"2024-02-27"},{"lineNumber":163,"author":{"gitId":"imanamirshah"},"content":"     * the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":165,"author":{"gitId":"imanamirshah"},"content":"     * @param number The index to be validated.","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"imanamirshah"},"content":"     * @return True if the number is not a valid index, false otherwise.","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"imanamirshah"},"content":"    private boolean isNotValid(Integer number) {","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"imanamirshah"},"content":"        if (number \u003d\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.MISSING_TASK_INDEX_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"imanamirshah"},"content":"            return true;","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"imanamirshah"},"content":"        if (number \u003c\u003d 0 || number \u003e numberOfTasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"imanamirshah"},"content":"            System.out.println(Ui.INVALID_TASK_INDEX_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":175,"author":{"gitId":"imanamirshah"},"content":"            return true;","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"imanamirshah"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":181,"author":{"gitId":"imanamirshah"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":182,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"imanamirshah"},"content":"    public void printTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"imanamirshah"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(Ui.LIST_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"imanamirshah"},"content":"        for (Task task : tasks){","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"imanamirshah"},"content":"            printTask(task, taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"imanamirshah"},"content":"            taskIndex++;","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"imanamirshah"},"content":"    private void printTask(Task task, int index) {","lastModifiedDate":"2024-02-27"},{"lineNumber":193,"author":{"gitId":"imanamirshah"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"imanamirshah"},"content":"            System.out.printf(task.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":195,"author":{"gitId":"imanamirshah"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"imanamirshah"},"content":"            System.out.printf(\"%d.%s\", index, task.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":197,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":201,"author":{"gitId":"imanamirshah"},"content":"     * Removes a task from the task list based on its index and decrements the count of total tasks.","lastModifiedDate":"2024-02-27"},{"lineNumber":202,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":203,"author":{"gitId":"imanamirshah"},"content":"     * @param number The index of the task to be removed as reflected on the list of tasks.","lastModifiedDate":"2024-02-27"},{"lineNumber":204,"author":{"gitId":"imanamirshah"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-02-27"},{"lineNumber":205,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":206,"author":{"gitId":"imanamirshah"},"content":"    private Task removeTask(int number) {","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"imanamirshah"},"content":"        Task task \u003d tasks.remove(number - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"imanamirshah"},"content":"        numberOfTasks--;","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"imanamirshah"},"content":"        return task;","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":213,"author":{"gitId":"imanamirshah"},"content":"     * Deletes a task from the task list based on the task number provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":214,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":215,"author":{"gitId":"imanamirshah"},"content":"     * @param input The string containing the task number to delete.","lastModifiedDate":"2024-02-27"},{"lineNumber":216,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":217,"author":{"gitId":"imanamirshah"},"content":"    public void deleteFromTaskList(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":218,"author":{"gitId":"imanamirshah"},"content":"        Integer number \u003d extractInt(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":219,"author":{"gitId":"imanamirshah"},"content":"        if (isNotValid(number)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":220,"author":{"gitId":"imanamirshah"},"content":"            return;","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"imanamirshah"},"content":"        Task task \u003d removeTask(number);","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"imanamirshah"},"content":"        printDeleteTaskMessage(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"imanamirshah"},"content":"    private void printDeleteTaskMessage(Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"imanamirshah"},"content":"        System.out.println(Ui.REMOVE_MESSAGE);","lastModifiedDate":"2024-02-26"},{"lineNumber":228,"author":{"gitId":"imanamirshah"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2024-02-23"},{"lineNumber":229,"author":{"gitId":"imanamirshah"},"content":"        printTask(task, -1);","lastModifiedDate":"2024-02-23"},{"lineNumber":230,"author":{"gitId":"imanamirshah"},"content":"        System.out.printf(Ui.LIST_UPDATE_MESSAGE, numberOfTasks);","lastModifiedDate":"2024-02-26"},{"lineNumber":231,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":233,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":234,"author":{"gitId":"imanamirshah"},"content":"     * Extracts and returns the integer from a given string.","lastModifiedDate":"2024-02-27"},{"lineNumber":235,"author":{"gitId":"imanamirshah"},"content":"     * If the string does not contain any integers or cannot be parsed as an integer, null is returned.","lastModifiedDate":"2024-02-27"},{"lineNumber":236,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":237,"author":{"gitId":"imanamirshah"},"content":"     * @param input The string from which the integer is to be extracted.","lastModifiedDate":"2024-02-27"},{"lineNumber":238,"author":{"gitId":"imanamirshah"},"content":"     * @return The extracted integer as an Integer object or null if no integer exists.","lastModifiedDate":"2024-02-27"},{"lineNumber":239,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":240,"author":{"gitId":"imanamirshah"},"content":"    private Integer extractInt(String input) {","lastModifiedDate":"2024-02-27"},{"lineNumber":241,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":242,"author":{"gitId":"imanamirshah"},"content":"            String number \u003d input.replaceAll(\"[^-0-9]\", \"\");","lastModifiedDate":"2024-02-23"},{"lineNumber":243,"author":{"gitId":"imanamirshah"},"content":"            return Integer.parseInt(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"imanamirshah"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":245,"author":{"gitId":"imanamirshah"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":247,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"imanamirshah":248}},{"path":"src/main/java/alexis/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":" * The TaskType enum holds all possible task types.","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"    TODO,","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"    EVENT,","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"    DEADLINE;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"     * Returns a TaskType enum value.","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"     * @param type The string representation of the task type.","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"     * @return The corresponding TaskType enum value or null if the input string does not match any enum value.","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"    public static TaskType getTaskType(String type) {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"            return TaskType.valueOf(type.toUpperCase());","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"            return null;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"imanamirshah":25}},{"path":"src/main/java/alexis/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"package alexis.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":" * The ToDo class represents a todo task.","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"     * Returns a ToDo object from a user input string.","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"     * The input must contain a description.","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"     * @param input User input string for the Deadline object.","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"     * @return ToDo object","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"imanamirshah"},"content":"    protected static ToDo getToDo(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"imanamirshah"},"content":"        return new ToDo(input.trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"imanamirshah"},"content":"     * @return A string representation of the task with symbol \"T\" denoting task type.","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"imanamirshah"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"imanamirshah"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"imanamirshah"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"imanamirshah"},"content":"        return String.format(\"[T]%s\\n\", super.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"imanamirshah"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"imanamirshah"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"imanamirshah":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"imanamirshah"},"content":"todo homework","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"imanamirshah"},"content":"deadline CS2113T assignment /by Thursday","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"imanamirshah"},"content":"event Coldplay concert /from 5pm /to 8pm","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"imanamirshah"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"imanamirshah"},"content":"mark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"imanamirshah"},"content":"todo buy books","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"imanamirshah"},"content":"mark 3","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"imanamirshah"},"content":"event open house /from friday /to sunday","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"imanamirshah"},"content":"mark 4","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"imanamirshah"},"content":"unmark 3","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"imanamirshah"},"content":"unmark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"imanamirshah"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"imanamirshah"},"content":"delete 1","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"imanamirshah"},"content":"todo clean house","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"imanamirshah"},"content":"find house","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"imanamirshah"},"content":"list","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"imanamirshah":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"imanamirshah"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\alexis\\*.java","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"imanamirshah"},"content":"java -classpath ..\\bin alexis.Alexis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"imanamirshah"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"REM delete output from previous run","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"imanamirshah"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"imanamirshah"},"content":"if exist .\\data\\Alexis.txt del .\\data\\Alexis.txt","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"imanamirshah":6,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"imanamirshah"},"content":"java -classpath ../bin Alexis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"imanamirshah":1,"-":37}}]
