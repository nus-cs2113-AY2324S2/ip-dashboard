[{"path":"src/main/java/Chelle/Chelle.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package Chelle;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"import ChelleCommands.*;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"import ChelleExceptions.*;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"public class Chelle {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Joellimjr"},"content":"        System.out.println(\"Hello! I\u0027m Chelle.\\nI like to talkity talkity talk!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Joellimjr"},"content":"        while (true) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Joellimjr"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Joellimjr"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Joellimjr"},"content":"            CommandType userCommand;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Joellimjr"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Joellimjr"},"content":"                userCommand \u003d CommandType.valueOf((userInput.split(\" \")[0]).toUpperCase());","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"Joellimjr"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: Invalid command. Please start your command with one of the following commands: \\n\" +","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"Joellimjr"},"content":"                        \"\u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, or \u0027delete\u0027.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"Joellimjr"},"content":"                continue;","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Joellimjr"},"content":"            switch (userCommand) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Joellimjr"},"content":"            case BYE:","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Joellimjr"},"content":"                scanner.close();","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"Joellimjr"},"content":"                return;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"Joellimjr"},"content":"            case LIST:","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: \");","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Joellimjr"},"content":"                displayTasks(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Joellimjr"},"content":"                break;","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Joellimjr"},"content":"            case MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"Joellimjr"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"Joellimjr"},"content":"            case TODO:","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"Joellimjr"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"Joellimjr"},"content":"            case EVENT:","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"Joellimjr"},"content":"            case DELETE:","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Joellimjr"},"content":"                try {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"Joellimjr"},"content":"                    handleCommand(userInput, tasks, userCommand);","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"Joellimjr"},"content":"                } catch (InvalidCommandFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Joellimjr"},"content":"                    break;","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"Joellimjr"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"Joellimjr"},"content":"                break;","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"Joellimjr"},"content":"            default:","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: Invalid command. Please start your command with one of the following commands: \\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"Joellimjr"},"content":"                        \"\u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, or \u0027delete\u0027.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"Joellimjr"},"content":"                break;","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Joellimjr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Joellimjr"},"content":"    private static void displayTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"Joellimjr"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"No tasks to display.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Joellimjr"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Joellimjr"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"Joellimjr"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Joellimjr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Joellimjr"},"content":"    private static void handleCommand(String userInput, ArrayList\u003cTask\u003e tasks, CommandType command) throws InvalidCommandFormatException {","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"Joellimjr"},"content":"        switch (command) {","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"Joellimjr"},"content":"        case MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"Joellimjr"},"content":"            if (userInput.length() \u003c 6) {","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"Joellimjr"},"content":"                throw new InvalidCommandFormatException(command);","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"Joellimjr"},"content":"            } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"Joellimjr"},"content":"                userInput \u003d userInput.substring(5);","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"Joellimjr"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Joellimjr"},"content":"                int taskIndex \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"Joellimjr"},"content":"                if (isValidTaskIndex(taskIndex, tasks)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"Joellimjr"},"content":"                    tasks.get(taskIndex).markDone();","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"Joellimjr"},"content":"                    System.out.println(\"Chelle: Nice! I\u0027ve marked this task as done:\\n        \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"Joellimjr"},"content":"                            tasks.get(taskIndex).toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"Joellimjr"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Joellimjr"},"content":"                    System.out.println(\"Chelle: Invalid task index.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Joellimjr"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Joellimjr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: Invalid task index.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Joellimjr"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"Joellimjr"},"content":"            if (userInput.length() \u003c 8) {","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"Joellimjr"},"content":"                throw new InvalidCommandFormatException(command);","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"Joellimjr"},"content":"            } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"Joellimjr"},"content":"                userInput \u003d userInput.substring(7);","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"Joellimjr"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Joellimjr"},"content":"                int taskIndex \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"Joellimjr"},"content":"                if (isValidTaskIndex(taskIndex, tasks)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"Joellimjr"},"content":"                    tasks.get(taskIndex).markUndone();","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"Joellimjr"},"content":"                    System.out.println(\"Chelle: OK, I\u0027ve marked this task as not done yet:\\n        \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"Joellimjr"},"content":"                            tasks.get(taskIndex).toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"Joellimjr"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Joellimjr"},"content":"                    System.out.println(\"Chelle: Invalid task index.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Joellimjr"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Joellimjr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: Invalid task index.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"Joellimjr"},"content":"        case TODO:","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"Joellimjr"},"content":"            if (userInput.length() \u003c 6) {","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"Joellimjr"},"content":"                throw new InvalidCommandFormatException(command);","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"Joellimjr"},"content":"            } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"Joellimjr"},"content":"                tasks.add(new ToDo(userInput.substring(5)));","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"Joellimjr"},"content":"                Task.addMessage(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"Joellimjr"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"Joellimjr"},"content":"            if (userInput.length() \u003c 10 || !userInput.contains(\"/by\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"Joellimjr"},"content":"                throw new InvalidCommandFormatException(command);","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"Joellimjr"},"content":"            } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"Joellimjr"},"content":"                tasks.add(new Deadline(userInput.substring(9)));","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"Joellimjr"},"content":"                Task.addMessage(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"Joellimjr"},"content":"        case EVENT:","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"Joellimjr"},"content":"            if (userInput.length() \u003c 7 || !(userInput.indexOf(\"/from\") \u003c userInput.indexOf(\"/to\"))) {","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"Joellimjr"},"content":"                throw new InvalidCommandFormatException(command);","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"Joellimjr"},"content":"            } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"Joellimjr"},"content":"                tasks.add(new Event(userInput.substring(6)));","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"Joellimjr"},"content":"                Task.addMessage(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"Joellimjr"},"content":"        case DELETE:","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"Joellimjr"},"content":"            if (userInput.length() \u003c 8) {","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"Joellimjr"},"content":"                throw new InvalidCommandFormatException(CommandType.DELETE);","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"Joellimjr"},"content":"            } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"Joellimjr"},"content":"                userInput \u003d userInput.substring(7);","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"Joellimjr"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"Joellimjr"},"content":"                int taskIndex \u003d Integer.parseInt(userInput) - 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"Joellimjr"},"content":"                if (isValidTaskIndex(taskIndex, tasks)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"Joellimjr"},"content":"                    Task.delMessage(tasks, taskIndex);","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"Joellimjr"},"content":"                    tasks.remove(taskIndex);","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"Joellimjr"},"content":"                } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"Joellimjr"},"content":"                    System.out.println(\"Chelle: Invalid task index.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"Joellimjr"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"Joellimjr"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"Joellimjr"},"content":"                System.out.println(\"Chelle: Invalid task index.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"Joellimjr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"Joellimjr"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Error\");","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":163,"author":{"gitId":"Joellimjr"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"Joellimjr"},"content":"    private static boolean isValidTaskIndex(int index, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":167,"author":{"gitId":"Joellimjr"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Joellimjr":169}},{"path":"src/main/java/ChelleCommands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package ChelleCommands;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"public enum CommandType {","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"    BYE,","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"    LIST,","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"    MARK,","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"    UNMARK,","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"    TODO,","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"    EVENT,","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"    DELETE","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Joellimjr":12}},{"path":"src/main/java/ChelleCommands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package ChelleCommands;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"    protected String by;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"    public Deadline(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"        super(parseDescription(description));","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"        this.by \u003d parseBy(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"    private static String parseDescription(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Joellimjr"},"content":"        String[] descriptionPart \u003d description.split(\"/by\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Joellimjr"},"content":"        return descriptionPart[0].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Joellimjr"},"content":"    private String parseBy(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Joellimjr"},"content":"        String[] byPart \u003d description.split(\"/by\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Joellimjr"},"content":"        return byPart[1].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Joellimjr"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Joellimjr"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Joellimjr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Joellimjr":25}},{"path":"src/main/java/ChelleCommands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package ChelleCommands;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"    protected String from;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"    protected String to;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"    public Event(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"        super(parseDescription(description));","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"        this.from \u003d parseFrom(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"        this.to \u003d parseTo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Joellimjr"},"content":"    private static String parseDescription(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Joellimjr"},"content":"        String[] descriptionPart \u003d description.split(\"/from\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Joellimjr"},"content":"        return descriptionPart[0].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Joellimjr"},"content":"    private String parseFrom(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Joellimjr"},"content":"        String[] fromPartStart \u003d description.split(\"/from\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Joellimjr"},"content":"        String[] fromPartEnd \u003d fromPartStart[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Joellimjr"},"content":"        return fromPartEnd[0].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Joellimjr"},"content":"    private String parseTo(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Joellimjr"},"content":"        String[] toPart \u003d description.split(\"/to\", 2);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Joellimjr"},"content":"        return toPart[1].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"Joellimjr"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"Joellimjr"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"Joellimjr"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + from + \" To: \" + to + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Joellimjr":33}},{"path":"src/main/java/ChelleCommands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package ChelleCommands;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"public class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"    private String taskName;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Joellimjr"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Joellimjr"},"content":"        return taskName;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Joellimjr"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Joellimjr"},"content":"        return isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Joellimjr"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Joellimjr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Joellimjr"},"content":"    public void markUndone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Joellimjr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Joellimjr"},"content":"    public static void addMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Joellimjr"},"content":"        System.out.println(\"Chelle: Got it. I\u0027ve added this task:\\n        \" +","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"Joellimjr"},"content":"                tasks.get(tasks.size() - 1).toString() +","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Joellimjr"},"content":"                \"\\n        Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"Joellimjr"},"content":"    public static void delMessage(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"Joellimjr"},"content":"        System.out.println(\"Chelle: Got it. I\u0027ve deleted this task:\\n        \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Joellimjr"},"content":"                tasks.get(taskIndex).toString() +","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Joellimjr"},"content":"                \"\\n        Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Joellimjr"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"Joellimjr"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"Joellimjr"},"content":"        String status \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"Joellimjr"},"content":"        return status + \" \" + taskName;","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Joellimjr":47}},{"path":"src/main/java/ChelleCommands/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package ChelleCommands;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"    public ToDo(String description){","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Joellimjr":11}},{"path":"src/main/java/ChelleExceptions/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"package ChelleExceptions;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"import ChelleCommands.*;","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"public class InvalidCommandFormatException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"    public InvalidCommandFormatException(CommandType command){","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"Joellimjr"},"content":"        switch (command) {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"Joellimjr"},"content":"        case MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Invalid format. Use \u0027mark ___\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"Joellimjr"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Invalid format. Use \u0027unmark ___\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"Joellimjr"},"content":"        case TODO:","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Invalid format. Use \u0027todo ___\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"Joellimjr"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Invalid format. Use \u0027deadline ___ /by ___\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"Joellimjr"},"content":"        case EVENT:","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Invalid format. Use \u0027event ___ /from ___ /to ___\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"Joellimjr"},"content":"        case DELETE:","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Joellimjr"},"content":"        System.out.println(\"Chelle: Invalid format. Use \u0027delete ___\u0027.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Joellimjr"},"content":"        break;","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Joellimjr"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"Joellimjr"},"content":"            System.out.println(\"Chelle: Invalid command. Please start your command with one of the following commands: \\n\" +","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"Joellimjr"},"content":"                    \"\u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027todo\u0027, \u0027deadline\u0027 or \u0027event\u0027.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"Joellimjr"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"Joellimjr"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"Joellimjr"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"Joellimjr"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"Joellimjr"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Joellimjr":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Joellimjr"},"content":"todo homework","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Joellimjr"},"content":"deadline assignment 1 /by 2 March","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Joellimjr"},"content":"event career fair /from 4pm /to 6pm","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Joellimjr"},"content":"mark 1","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Joellimjr"},"content":"list","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Joellimjr"},"content":"bye","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Joellimjr":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Joellimjr"},"content":"java -classpath ..\\bin Chelle \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Joellimjr":1,"-":20}}]
