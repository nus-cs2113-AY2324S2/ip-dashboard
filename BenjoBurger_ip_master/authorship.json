[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"BenjoBurger"},"content":"3. After that, locate the `src/main/java/Burger.java` file, right-click it, and choose `Run Burger.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BenjoBurger"},"content":"   ---------------------------------","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"BenjoBurger"},"content":"   Hello! I\u0027m Burger","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"BenjoBurger"},"content":"   What can I do for you?","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"BenjoBurger"},"content":"   ---------------------------------","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BenjoBurger":5,"-":17}},{"path":"src/main/java/Burger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"public class Burger {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"    static final String CHATBOT_NAME \u003d \"Burger\";","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"    static final String HORIZONTAL_LINE \u003d \"---------------------------------\";","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"BenjoBurger"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"BenjoBurger"},"content":"        welcomeMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"BenjoBurger"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"BenjoBurger"},"content":"        List myList \u003d new List();","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"BenjoBurger"},"content":"        boolean isPolling \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"BenjoBurger"},"content":"        while (isPolling) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"BenjoBurger"},"content":"            String text \u003d input.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"BenjoBurger"},"content":"            String[] textArray \u003d text.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"BenjoBurger"},"content":"            if (!myList.isValidCommand(textArray)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"BenjoBurger"},"content":"                switch (text.trim().toLowerCase()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"BenjoBurger"},"content":"                case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"BenjoBurger"},"content":"                    isPolling \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"BenjoBurger"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"BenjoBurger"},"content":"                case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"BenjoBurger"},"content":"                    myList.printTodoList();","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"BenjoBurger"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"BenjoBurger"},"content":"                default:","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"BenjoBurger"},"content":"                    wakeUp();","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"BenjoBurger"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"BenjoBurger"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"BenjoBurger"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"BenjoBurger"},"content":"        goodbye();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"BenjoBurger"},"content":"    private static void welcomeMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"Hello! I\u0027m \" + CHATBOT_NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"BenjoBurger"},"content":"    public static void printLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"BenjoBurger"},"content":"     * Prints error message when user provides invalid input","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"BenjoBurger"},"content":"    private static void wakeUp() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"Wake Up! Key in something that makes sense!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"BenjoBurger"},"content":"    public static void goodbye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"BenjoBurger"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"BenjoBurger":57}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"    public Deadline(String task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"        super(task, \u0027D\u0027);","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"BenjoBurger":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"    public Event(String task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"        super(task, \u0027E\u0027);","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"BenjoBurger":6}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"import java.util.IllegalFormatException;","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"public class List {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"    static final String HORIZONTAL_LINE \u003d \"---------------------------------\";","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"BenjoBurger"},"content":"    private final ArrayList\u003cTask\u003e todoList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"BenjoBurger"},"content":"    public int totalTasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"BenjoBurger"},"content":"    public List() {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"BenjoBurger"},"content":"        todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"BenjoBurger"},"content":"        totalTasks \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"BenjoBurger"},"content":"     * Returns boolean value base on whether the input matches one of the commands.","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"BenjoBurger"},"content":"     * @param textArray user input in array type.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"BenjoBurger"},"content":"     * @return true if it\u0027s a valid command and false otherwise.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"BenjoBurger"},"content":"    public boolean isValidCommand(String[] textArray) {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"BenjoBurger"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"BenjoBurger"},"content":"        String command \u003d textArray[0];","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"BenjoBurger"},"content":"        switch (command) { // assume inputs for commands are correct","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"BenjoBurger"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"BenjoBurger"},"content":"            // fallthrough","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"BenjoBurger"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"BenjoBurger"},"content":"            int idx \u003d Integer.parseInt(textArray[1]) - 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"BenjoBurger"},"content":"            getMark(idx, command);","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"BenjoBurger"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"BenjoBurger"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"BenjoBurger"},"content":"            addTodo(textArray);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"BenjoBurger"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"BenjoBurger"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"BenjoBurger"},"content":"            addDeadline(textArray);","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"BenjoBurger"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"BenjoBurger"},"content":"        case \"event\":","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"BenjoBurger"},"content":"            addEvent(textArray);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"BenjoBurger"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"BenjoBurger"},"content":"        default:","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"BenjoBurger"},"content":"            isValid \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"BenjoBurger"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"BenjoBurger"},"content":"        return isValid;","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"BenjoBurger"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"BenjoBurger"},"content":"     * If the index is out of bounds, null is returned.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"BenjoBurger"},"content":"     * @param idx index of task.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"BenjoBurger"},"content":"     * @return task.","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"BenjoBurger"},"content":"     * @throws ArrayIndexOutOfBoundsException idx is out of bounds.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"BenjoBurger"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"BenjoBurger"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"BenjoBurger"},"content":"            return this.todoList.get(idx);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"BenjoBurger"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"UwU? Do you know how to count?\");","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"BenjoBurger"},"content":"            return null;","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"BenjoBurger"},"content":"     * Adds a new todo to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"BenjoBurger"},"content":"     * @param todo the todo input by the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"BenjoBurger"},"content":"    public void addTodo(String[] todo) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"BenjoBurger"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"BenjoBurger"},"content":"            StringBuilder todoText \u003d new StringBuilder(todo[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"BenjoBurger"},"content":"            for (int i \u003d 2; i \u003c todo.length; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"BenjoBurger"},"content":"                todoText.append(\u0027 \u0027).append(todo[i]);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"BenjoBurger"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"BenjoBurger"},"content":"            Task newTodo \u003d new Todo(todoText.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"BenjoBurger"},"content":"            addTask(newTodo);","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"BenjoBurger"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Oi, why is the description empty! Type something after the command!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"BenjoBurger"},"content":"        } catch (IllegalFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Oi! Invalid Command!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"BenjoBurger"},"content":"     * Adds a new event to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"BenjoBurger"},"content":"     * @param event the event input by the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"BenjoBurger"},"content":"     * @throws ArrayIndexOutOfBoundsException if text is empty after the \"event\" command.","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"BenjoBurger"},"content":"     * @throws IllegalFormatException if event format is not followed.","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"BenjoBurger"},"content":"    public void addEvent(String[] event) {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"BenjoBurger"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"BenjoBurger"},"content":"            StringBuilder eventText \u003d new StringBuilder(event[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"BenjoBurger"},"content":"            int i \u003d 2;","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"BenjoBurger"},"content":"            while (!event[i].startsWith(\"/\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"BenjoBurger"},"content":"                eventText.append(\u0027 \u0027).append(event[i]);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"BenjoBurger"},"content":"                i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"BenjoBurger"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"BenjoBurger"},"content":"            eventText.append(\u0027 \u0027).append(\"(from: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"BenjoBurger"},"content":"            i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"BenjoBurger"},"content":"            while (!event[i].startsWith(\"/\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"BenjoBurger"},"content":"                eventText.append(\u0027 \u0027).append(event[i]);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"BenjoBurger"},"content":"                i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"BenjoBurger"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"BenjoBurger"},"content":"            i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"BenjoBurger"},"content":"            eventText.append(\u0027 \u0027).append(\"to: \").append(event[i]).append(\u0027)\u0027);","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"BenjoBurger"},"content":"            Task newEvent \u003d new Event(eventText.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"BenjoBurger"},"content":"            addTask(newEvent);","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"BenjoBurger"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Oi, why is the description empty! Type something after the command!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"BenjoBurger"},"content":"        } catch (IllegalFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Oi! Invalid Command!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"BenjoBurger"},"content":"     * Adds a new deadline to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"BenjoBurger"},"content":"     * @param deadline the deadline input by the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"BenjoBurger"},"content":"     * @throws ArrayIndexOutOfBoundsException if text is empty after the \"deadline\" command.","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"BenjoBurger"},"content":"     * @throws IllegalFormatException if deadline format is not followed.","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"BenjoBurger"},"content":"    public void addDeadline(String[] deadline) {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"BenjoBurger"},"content":"        StringBuilder deadlineText \u003d new StringBuilder(deadline[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"BenjoBurger"},"content":"        int i \u003d 2;","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"BenjoBurger"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"BenjoBurger"},"content":"            while (!deadline[i].startsWith(\"/\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"BenjoBurger"},"content":"                deadlineText.append(\u0027 \u0027).append(deadline[i]);","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"BenjoBurger"},"content":"                i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"BenjoBurger"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"BenjoBurger"},"content":"            deadlineText.append(\u0027 \u0027).append(\"(by: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"BenjoBurger"},"content":"            i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"BenjoBurger"},"content":"            while (i \u003c deadline.length - 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"BenjoBurger"},"content":"                deadlineText.append(deadline[i]).append(\u0027 \u0027);","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"BenjoBurger"},"content":"                i++;","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"BenjoBurger"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"BenjoBurger"},"content":"            deadlineText.append(deadline[i]).append(\u0027)\u0027);","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"BenjoBurger"},"content":"            Task newDeadline \u003d new Deadline(deadlineText.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"BenjoBurger"},"content":"            addTask(newDeadline);","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"BenjoBurger"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Oi, why is the description empty! Type something after the command!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"BenjoBurger"},"content":"        } catch (IllegalFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Oi! Invalid Command!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"BenjoBurger"},"content":"     * Adds task to the list and prints out a message.","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"BenjoBurger"},"content":"     * @param task Task that is being added.","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"BenjoBurger"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"BenjoBurger"},"content":"        this.todoList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"BenjoBurger"},"content":"        this.todoList.get(totalTasks).printTask();","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"BenjoBurger"},"content":"        this.totalTasks++;","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println();","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"BenjoBurger"},"content":"     * Returns the mark from a task in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"BenjoBurger"},"content":"     * @param idx the index of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"BenjoBurger"},"content":"     * @param command Command to \"mark\" or \"unmark\" the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"BenjoBurger"},"content":"    public void getMark(int idx, String command) {","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"BenjoBurger"},"content":"        Task currTask \u003d getTask(idx);","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"BenjoBurger"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"BenjoBurger"},"content":"            currTask.markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"BenjoBurger"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"BenjoBurger"},"content":"            currTask.unmarkDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"BenjoBurger"},"content":"            printTaskWithLine(idx);","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"BenjoBurger"},"content":"        printTaskWithLine(idx);","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"BenjoBurger"},"content":"     * Prints the task with a horizontal line.","lastModifiedDate":"2024-02-13"},{"lineNumber":178,"author":{"gitId":"BenjoBurger"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"BenjoBurger"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":181,"author":{"gitId":"BenjoBurger"},"content":"    public void printTaskWithLine(int idx) {","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"BenjoBurger"},"content":"        this.todoList.get(idx).printTask();","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println();","lastModifiedDate":"2024-02-08"},{"lineNumber":184,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"BenjoBurger"},"content":"    public void printTodoList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"BenjoBurger"},"content":"        for (int i \u003d 0; i \u003c todoList.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"BenjoBurger"},"content":"            System.out.print(i+1 + \". \");","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"BenjoBurger"},"content":"            todoList.get(i).printTask();","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"BenjoBurger"},"content":"            System.out.println();","lastModifiedDate":"2024-02-08"},{"lineNumber":194,"author":{"gitId":"BenjoBurger"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":195,"author":{"gitId":"BenjoBurger"},"content":"        printLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":196,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":197,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":198,"author":{"gitId":"BenjoBurger"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"BenjoBurger"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":200,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":201,"author":{"gitId":"BenjoBurger"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"BenjoBurger":201}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"    protected String name;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"    protected boolean hasDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"    protected char tde;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"BenjoBurger"},"content":"    public Task(String task, char tde) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"BenjoBurger"},"content":"        this.name \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"BenjoBurger"},"content":"        this.hasDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"BenjoBurger"},"content":"        this.tde \u003d tde;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"BenjoBurger"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"BenjoBurger"},"content":"     * Prints task in the required format [][] {Task Name}.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"BenjoBurger"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"BenjoBurger"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"BenjoBurger"},"content":"        String tde \u003d  getTDE() ;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"BenjoBurger"},"content":"        String tick \u003d getTick();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"BenjoBurger"},"content":"        String name \u003d getName();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"BenjoBurger"},"content":"        System.out.print(tde);","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"BenjoBurger"},"content":"        System.out.print(tick);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"BenjoBurger"},"content":"        System.out.print(name);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"BenjoBurger"},"content":"    public String getName() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"BenjoBurger"},"content":"        return this.name;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"BenjoBurger"},"content":"    public String getTick() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"BenjoBurger"},"content":"        return this.hasDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"BenjoBurger"},"content":"    public String getTDE() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"BenjoBurger"},"content":"        return \"[\" + this.tde + \"]\";","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"BenjoBurger"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"BenjoBurger"},"content":"        this.hasDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"BenjoBurger"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"BenjoBurger"},"content":"        this.hasDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"BenjoBurger"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"BenjoBurger":42}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"        super(task, \u0027T\u0027);","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"BenjoBurger":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjoBurger"},"content":"todo borrow book","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"BenjoBurger"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"BenjoBurger"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"BenjoBurger"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"BenjoBurger"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"BenjoBurger"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"BenjoBurger"},"content":"bye","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"BenjoBurger":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"BenjoBurger"},"content":"java -classpath ../bin Burger \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BenjoBurger":1,"-":37}}]
