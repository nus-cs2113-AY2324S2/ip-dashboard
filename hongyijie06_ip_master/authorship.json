[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"# User Guide for chatbot \"Apple\"","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"Chatbot Apple is an app to manage tasks, optimised for use through a Command Line Interface (CLI).","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"## Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"1. Ensure Java 11 or above is installed in your computer","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"2. Download `ip.jar` from [here](https://github.com/hongyijie06/ip/releases/tag/A-Jar)","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"3. Open a command terminal, `cd` into the folder with the jar file and use the `java -jar ip.jar` command to run the application.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"A CLI similar to the picture below should appear in a few seconds. Note how the app returns the path to which the list of tasks is saved on the local computer.","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"4. Type the command into the command line and press Enter to execute it. e.g. typing list and pressing Enter will list the current tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"Some example commands you can try:","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"- `todo tutorial`: Adds task \"tutorial\" to the list","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"- `deadline return book by 4pm`: Adds task \"return book\" nd deadline \"4pm\" to the list","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"- `list`: Lists all tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"- `bye`: Exits the app","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"5. Refer to the Features below for more details on each command.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"## Features","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"[!NOTE]","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"\u003e Words in `UPPER_CASE` are parameters to be supplied by the user. e.g. in `delete INDEX`, `INDEX` is a parameter which can be used as `delete 3`","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"## Listing tasks: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"Format: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"## Add tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"hongyijie06"},"content":"### Add todo : `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"hongyijie06"},"content":"Adds task of type todo to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"hongyijie06"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"hongyijie06"},"content":"- `todo tutorial` Adds task `tutorial` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"hongyijie06"},"content":"- `todo watch lecture` Adds task `watch lecture` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"hongyijie06"},"content":"ADD PIC HERE","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"hongyijie06"},"content":"### Add deadline: `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"hongyijie06"},"content":"Adds task of type deadline to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"hongyijie06"},"content":"Format: `deadline DESCRIPTION by DEADLINE`","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"hongyijie06"},"content":"- `deadline return book by 4pm` Adds task `return book` with deadline `4pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"hongyijie06"},"content":"- `deadline submit report by 7pm` Adds task `submit report` with deadline `7pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"hongyijie06"},"content":"ADD PIC HERE","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"hongyijie06"},"content":"### Add event: `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"hongyijie06"},"content":"Adds task of type event to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"hongyijie06"},"content":"Format: `event DESCRIPTION from START to END`","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"hongyijie06"},"content":"- `event Math exam from 2pm to 4pm` Adds task `Math exam` with timeline `2pm` to `4pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"hongyijie06"},"content":"- `event project group meeting from 11am to 1pm` Adds task `project group meeting` with timeline `11am` to `1pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"hongyijie06"},"content":"ADD PIC HERE","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"hongyijie06"},"content":"## Delete tasks: `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"hongyijie06"},"content":"Deletes task from the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"hongyijie06"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"hongyijie06"},"content":"- Deletes task at the specified `INDEX`. ","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"hongyijie06"},"content":"- The index refers to the index of the task in the list of tasks. ","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"hongyijie06"},"content":"- The index must be a positive integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"hongyijie06"},"content":"- `delete 3` Deletes third task in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"hongyijie06"},"content":"- `delete 5` Deletes fifth task in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"hongyijie06"},"content":"## Mark tasks as done: `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"hongyijie06"},"content":"Marks tasks as completed","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"hongyijie06"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"hongyijie06"},"content":"- Marks task as done at the specified `INDEX`. ","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"hongyijie06"},"content":"- The index refers to the index of the task in the list of tasks. ","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"hongyijie06"},"content":"- The index must be a positive integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"hongyijie06"},"content":"Examples: ","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"hongyijie06"},"content":"- `mark 1` Marks first task in the list as done","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"hongyijie06"},"content":"- `mark 6` Marks sixth task in the list as done","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"hongyijie06"},"content":"## Unmark tasks: `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"hongyijie06"},"content":"Marks tasks as undone","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"hongyijie06"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"hongyijie06"},"content":"- Marks task as not done at the specified `INDEX`. ","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"hongyijie06"},"content":"- The index refers to the index of the task in the list of tasks. ","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"hongyijie06"},"content":"- The index must be a positive integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"hongyijie06"},"content":"- `unmark 1` Marks first task in the list as notdone","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"hongyijie06"},"content":"- `unmark 2` Marks second task in the list as not done","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"hongyijie06"},"content":"## Find Keywords: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"hongyijie06"},"content":"Filters list of tasks to those containing the keyword the user wants to find","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"hongyijie06"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"hongyijie06"},"content":"- `find book` CLI returns a list with all the tasks with the `KEYWORD` `book`.","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"hongyijie06"},"content":"- `find tutorial` CLI returns a list with all the tasks with the `KEYWORD` `tutorial`.","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"hongyijie06"},"content":"## Exit app: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"hongyijie06"},"content":"Exits the chatbot","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"hongyijie06"},"content":"Format: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"hongyijie06"},"content":"## Command Summary","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"hongyijie06"},"content":"| Command | Format, Examples |","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"hongyijie06"},"content":"| ------- | --------------- |","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"hongyijie06"},"content":"| `list` | `list` |","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"hongyijie06"},"content":"| `todo` | `todo DESCRIPTION` e.g. `todo tutorial` |","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"hongyijie06"},"content":"| `deadline` | `deadline DESCRIPTION by DEADLINE` e.g. `deadline return book by 4pm` |","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"hongyijie06"},"content":"| `event` | `event DESCRIPTION from START to END` e.g. `event Math exam from 2pm to 4pm` |","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"hongyijie06"},"content":"| `delete` | `delete INDEX` e.g. `delete 3` |","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"hongyijie06"},"content":"| `mark` | `mark INDEX` e.g. `mark 2` |","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"hongyijie06"},"content":"| `unmark` | `unmark INDEX` e.g. `unmark 1` |","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"hongyijie06"},"content":"| `find` | `find KEYWORD` e.g. `find book` |","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"hongyijie06"},"content":"| `bye` | `bye` |","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"hongyijie06":131}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"# User Guide for chatbot \"Apple\"","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"Chatbot Apple is an app to manage tasks, optimised for use through a Command Line Interface (CLI).","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"## Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"1. Ensure Java 11 or above is installed in your computer","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"2. Download `ip.jar` from [here](https://github.com/hongyijie06/ip/releases/tag/A-Release)","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"3. Open a command terminal, `cd` into the folder with the jar file and use the `java -jar ip.jar` command to run the application.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"4. Type the command into the command line and press Enter to execute it. e.g. typing list and pressing Enter will list the current tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"   Some example commands you can try:","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"    - `todo tutorial`: Adds task \"tutorial\" to the list","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"    - `deadline return book by 4pm`: Adds task \"return book\" nd deadline \"4pm\" to the list","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"    - `list`: Lists all tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"    - `bye`: Exits the app","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"5. Refer to the Features below for more details on each command.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"[!NOTE]","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"\u003e Words in `UPPER_CASE` are parameters to be supplied by the user. e.g. in `delete INDEX`, `INDEX` is a parameter which can be used as `delete 3`","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"## Add tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"### Add todo : `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"Adds task of type todo to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"- `todo tutorial` Adds task `tutorial` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"- `todo watch lecture` Adds task `watch lecture` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"hongyijie06"},"content":"### Add deadline: `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"hongyijie06"},"content":"Adds task of type deadline to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"hongyijie06"},"content":"Format: `deadline DESCRIPTION by DEADLINE`","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"hongyijie06"},"content":"- `deadline return book by 4pm` Adds task `return book` with deadline `4pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"hongyijie06"},"content":"- `deadline submit group report by 7pm` Adds task `submit group report` with deadline `7pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"hongyijie06"},"content":"### Add event: `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"hongyijie06"},"content":"Adds task of type event to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"hongyijie06"},"content":"Format: `event DESCRIPTION from START to END`","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"hongyijie06"},"content":"- `event Math exam from 2pm to 4pm` Adds task `Math exam` with timeline `2pm` to `4pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"hongyijie06"},"content":"- `event project group meeting from 11am to 1pm` Adds task `project group meeting` with timeline `11am` to `1pm` to the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"hongyijie06"},"content":"## Listing tasks: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"hongyijie06"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"hongyijie06"},"content":"Format: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"hongyijie06"},"content":"## Mark tasks as done: `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"hongyijie06"},"content":"Marks tasks as completed","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"hongyijie06"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"hongyijie06"},"content":"- Marks task as done at the specified `INDEX`. ","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"hongyijie06"},"content":"- The index refers to the index of the task in the list of tasks. ","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"hongyijie06"},"content":"- The index must be a positive integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"hongyijie06"},"content":"Examples: ","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"hongyijie06"},"content":"- `mark 1` Marks first task in the list as done","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"hongyijie06"},"content":"- `mark 3` Marks sixth task in the list as done","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"hongyijie06"},"content":"## Unmark tasks: `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"hongyijie06"},"content":"Marks tasks as undone","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"hongyijie06"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"hongyijie06"},"content":"- Marks task as not done at the specified `INDEX`. ","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"hongyijie06"},"content":"- The index refers to the index of the task in the list of tasks. ","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"hongyijie06"},"content":"- The index must be a positive integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"hongyijie06"},"content":"- `unmark 1` Marks first task in the list as not done","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"hongyijie06"},"content":"- `unmark 2` Marks second task in the list as not done","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"hongyijie06"},"content":"## Find Keywords: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"hongyijie06"},"content":"Filters list of tasks to those containing the keyword the user wants to find","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"hongyijie06"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"hongyijie06"},"content":"- `find book` CLI returns a list with all the tasks with the `KEYWORD` `book`.","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"hongyijie06"},"content":"- `find group` CLI returns a list with all the tasks with the `KEYWORD` `group`.","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"hongyijie06"},"content":"## Delete tasks: `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"hongyijie06"},"content":"Deletes task from the list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":95,"author":{"gitId":"hongyijie06"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"hongyijie06"},"content":"- Deletes task at the specified `INDEX`. ","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"hongyijie06"},"content":"- The index refers to the index of the task in the list of tasks. ","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"hongyijie06"},"content":"- The index must be a positive integer.","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"hongyijie06"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"hongyijie06"},"content":"- `delete 3` Deletes third task in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"hongyijie06"},"content":"- `delete 5` Deletes fifth task in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"hongyijie06"},"content":"## Exit app: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"hongyijie06"},"content":"Exits the chatbot","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"hongyijie06"},"content":"Format: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"hongyijie06"},"content":"## Command Summary","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":112,"author":{"gitId":"hongyijie06"},"content":"| Command | Format, Examples |","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"hongyijie06"},"content":"| ------- | --------------- |","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"hongyijie06"},"content":"| `todo` | `todo DESCRIPTION` e.g. `todo tutorial` |","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"hongyijie06"},"content":"| `deadline` | `deadline DESCRIPTION by DEADLINE` e.g. `deadline return book by 4pm` |","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"hongyijie06"},"content":"| `event` | `event DESCRIPTION from START to END` e.g. `event Math exam from 2pm to 4pm` |","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"hongyijie06"},"content":"| `list` | `list` |","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"hongyijie06"},"content":"| `mark` | `mark INDEX` e.g. `mark 2` |","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"hongyijie06"},"content":"| `unmark` | `unmark INDEX` e.g. `unmark 1` |","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"hongyijie06"},"content":"| `find` | `find KEYWORD` e.g. `find book` |","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"hongyijie06"},"content":"| `delete` | `delete INDEX` e.g. `delete 3` |","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"hongyijie06"},"content":"| `bye` | `bye` |","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"hongyijie06":100,"-":22}},{"path":"src/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"[T][0] hike","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"[T][0] run","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"[D][0] tut (by:  5)","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"[E][0] he (from: 5 to: 6)","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"[T][0] jump","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"[T][0] go","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"[D][0] hop (by:  4)","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"[E][0] he (from: 4 to:  5)","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"[D][0] b (by:  4)","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"[E][0] go (from: 4 to:  454)","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"[T][0] ds","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"[D][0] kj (by:  4)","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"[T][0] he","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"[E][0] f (from: 4 to:  5)","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"[D][0] sd (by:  5)","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"[D][0] hsd (by:  343354535)","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"hongyijie06":16}},{"path":"src/main/java/CreateFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":" * creates local TaskList.txt file on the local machine","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"public class CreateFile {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"    protected static Ui ui;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"    public static void CreateFile() {","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"        File file \u003d new File(\"TaskList.txt\");","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"        String fileStatus;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"                    fileStatus \u003d \"File created\";","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"                    System.out.println(fileStatus + \": \" + file.getAbsolutePath());","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"                } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"                    errorDescription \u003d \"File creation failed.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"                    ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"                errorDescription \u003d \"An I/O error occurred.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"                ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"            fileStatus \u003d \"File already exists\";","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(fileStatus + \": \" + file.getAbsolutePath());","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"hongyijie06":33}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":" * child class of Task to handle deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"    protected String by;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"        super(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"hongyijie06":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"import java.sql.Array;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"     * lists tasks saved in the local TaskList.txt file","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"     * @param filePath the path to the local TaskList.txt file","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"     * @throws FileNotFoundException exception when local TaskList.txt file does not exist","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"    private static void printFileContents (String filePath) throws FileNotFoundException {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"    public static void main (String[] args) throws UnexpectedCommandException, EmptyLineException, IOException, FileNotFoundException {","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"        int index \u003d 0;//number of items in the list","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"        String line \u003d \" \";","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"        File file \u003d new File(\"TaskList.txt\");","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"        ui.sayHi();","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"hongyijie06"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(\"Here are the items in your task list: \");","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"hongyijie06"},"content":"            printFileContents(\"TaskList.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"hongyijie06"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"File not found\";","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"hongyijie06"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"hongyijie06"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"hongyijie06"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"hongyijie06"},"content":"                    System.out.println(\"File created: \" + file.getAbsolutePath());","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"hongyijie06"},"content":"                } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"hongyijie06"},"content":"                    errorDescription \u003d \"File creation failed.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"hongyijie06"},"content":"                    ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"hongyijie06"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"hongyijie06"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"hongyijie06"},"content":"                errorDescription \u003d \"An I/O error occurred.\";","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"hongyijie06"},"content":"                ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"hongyijie06"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"hongyijie06"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(\"File already exists: \" + file.getAbsolutePath());","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"hongyijie06"},"content":"        new Parser(tasks, index, line);","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hongyijie06":57,"-":3}},{"path":"src/main/java/EmptyLineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"public class EmptyLineException extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"hongyijie06":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":" * child class of Task to handle events","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"    protected String from;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"    protected String to;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"        super(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"hongyijie06":18}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":" * deals with making sense of the user command","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"public class Parser {","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"    private static Storage storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"    private static TaskList tasklist;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"     * marks task as done","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"     * @param inputs the array of words the user input","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"     * @param isValidCommand boolean is true if the command from the user is a valid action","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"    private void dealWithMark (String[] inputs, ArrayList\u003cTask\u003e tasks, int index, boolean isValidCommand) throws IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"            int markIdx \u003d Integer.parseInt(inputs[1]) - 1; //index to mark as done","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"            tasks.get(markIdx).markAsDone();","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(tasks.get(markIdx));","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"            storage.saveToFile(tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"did not indicate which task to mark\";","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"hongyijie06"},"content":"     * marks task as undone","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"hongyijie06"},"content":"     * @param inputs the array of words input by the user","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"hongyijie06"},"content":"     * @param isValidCommand boolean is true if the command from the user is a valid action","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"hongyijie06"},"content":"    private void dealWithUnmark (String[] inputs, ArrayList\u003cTask\u003e tasks, int index, boolean isValidCommand) throws IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"hongyijie06"},"content":"        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"hongyijie06"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"hongyijie06"},"content":"            int unmarkIdx \u003d Integer.parseInt(inputs[1]) - 1; //index of task to unmark","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"hongyijie06"},"content":"            tasks.get(unmarkIdx).unmarkDone();","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(tasks.get(unmarkIdx));","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"hongyijie06"},"content":"            storage.saveToFile(tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"hongyijie06"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"did not indicate which task to unmark\";","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"hongyijie06"},"content":"     * lists tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"hongyijie06"},"content":"     * @param isValidCommand boolean is true if the command from the user is a valid action","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"hongyijie06"},"content":"    private void listTasks (ArrayList\u003cTask\u003e tasks, int index, boolean isValidCommand) {","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"hongyijie06"},"content":"        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"hongyijie06"},"content":"        for (int taskNumber \u003d 0; taskNumber \u003c index; taskNumber++) {","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"hongyijie06"},"content":"            System.out.println((taskNumber + 1) + \". \" + tasks.get(taskNumber));","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"hongyijie06"},"content":"     * deletes task","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"hongyijie06"},"content":"     * @param inputs the array of words input by the user","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"hongyijie06"},"content":"     * @param isValidCommand boolean is true if the command from the user is a valid action","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"hongyijie06"},"content":"     * @return the number of tasks in the array of tasks after deletion","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"hongyijie06"},"content":"     * @throws UnexpectedCommandException exception when the format or details of the tasks are not followed and provided respectively","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"hongyijie06"},"content":"    private int deleteTask (ArrayList\u003cTask\u003e tasks, String[] inputs, int index, boolean isValidCommand) throws UnexpectedCommandException, IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"hongyijie06"},"content":"        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"hongyijie06"},"content":"        Storage.fillFileContents(tasks, \"TaskList.txt\", index);","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"hongyijie06"},"content":"        TaskList.dealWithDelete(inputs, inputs[1], tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"hongyijie06"},"content":"        index--;","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(\"Now you have \" + index + \" tasks in the list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"hongyijie06"},"content":"        storage.saveToFile(tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"hongyijie06"},"content":"        return index;","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"hongyijie06"},"content":"     * filters tasks with the keyword input by the user","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"hongyijie06"},"content":"     * @param findInput the keyword the user is looking for","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"hongyijie06"},"content":"    private void dealWithFind (String findInput, ArrayList\u003cTask\u003e tasks, int index) {","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"hongyijie06"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"hongyijie06"},"content":"        int matchingTasksIndex \u003d 1;","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"hongyijie06"},"content":"        for (int taskNumber \u003d 0; taskNumber \u003c index; taskNumber ++){","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"hongyijie06"},"content":"            String taskString \u003d tasks.get(taskNumber).toString();","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"hongyijie06"},"content":"            if (taskString.contains(findInput)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"hongyijie06"},"content":"                System.out.print(matchingTasksIndex + \". \");","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"hongyijie06"},"content":"                matchingTasks.add(tasks.get(taskNumber));","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"hongyijie06"},"content":"                System.out.println(matchingTasks.get(matchingTasksIndex - 1));","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"hongyijie06"},"content":"                matchingTasksIndex ++;","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"hongyijie06"},"content":"    private void handleUnexpectedCommand (boolean isValidCommand) throws UnexpectedCommandException {","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"hongyijie06"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"hongyijie06"},"content":"    private void handleEmptyInput (String line) throws EmptyLineException {","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"hongyijie06"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"hongyijie06"},"content":"            throw new EmptyLineException();","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"hongyijie06"},"content":"     * handles the different commands input by the user","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"hongyijie06"},"content":"     * @param line the user input","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"hongyijie06"},"content":"     * @throws IndexOutOfBoundsException exception when there is missing required details in the input","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"hongyijie06"},"content":"     * @throws UnexpectedCommandException exception when the format or details of the tasks are not followed and provided respectively","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"hongyijie06"},"content":"    public Parser (ArrayList\u003cTask\u003e tasks, int index, String line) throws IOException, IndexOutOfBoundsException, UnexpectedCommandException {","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"hongyijie06"},"content":"        boolean isInTxt \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"hongyijie06"},"content":"        index \u003d Storage.fillFileContents(tasks, \"TaskList.txt\", index);","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"hongyijie06"},"content":"        isInTxt \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"hongyijie06"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"hongyijie06"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"hongyijie06"},"content":"            ui.readCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"hongyijie06"},"content":"            Boolean isValidCommand \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"hongyijie06"},"content":"            Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"hongyijie06"},"content":"            line \u003d input.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"hongyijie06"},"content":"            Task t \u003d new Task(line);","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"hongyijie06"},"content":"            String[] inputs \u003d line.split(\" \");","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"hongyijie06"},"content":"            final String commandType \u003d inputs[0];","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"hongyijie06"},"content":"            ","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"hongyijie06"},"content":"            if (commandType.equals(\"mark\")) {//mark as done","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"hongyijie06"},"content":"                dealWithMark(inputs, tasks, index, isValidCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"hongyijie06"},"content":"                Storage.saveToFile(tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"hongyijie06"},"content":"            } else if (commandType.equals(\"unmark\")) {//unmark done","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"hongyijie06"},"content":"                dealWithUnmark(inputs, tasks, index, isValidCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"hongyijie06"},"content":"                Storage.saveToFile(tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"hongyijie06"},"content":"            } else if (line.equals(\"list\")) {//lists tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"hongyijie06"},"content":"                listTasks(tasks, index, isValidCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"hongyijie06"},"content":"            } else if (line.equals(\"bye\")) {//exit chat","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"hongyijie06"},"content":"                isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"hongyijie06"},"content":"                Storage.saveToFile(tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"hongyijie06"},"content":"                break;","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"hongyijie06"},"content":"            } else if (commandType.equals(\"event\") || commandType.equals(\"todo\") || commandType.equals(\"deadline\")) {//add items","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"hongyijie06"},"content":"                try {","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"hongyijie06"},"content":"                    if (commandType.equals(\"event\")) {","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"hongyijie06"},"content":"                        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"hongyijie06"},"content":"                        TaskList.dealWithEvent(tasks, index, line, isInTxt);","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"hongyijie06"},"content":"                        Storage.writeToFile(\"TaskList.txt\", tasks.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"hongyijie06"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"hongyijie06"},"content":"                        System.out.println(tasks.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"hongyijie06"},"content":"                        index++;","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"hongyijie06"},"content":"                    } else if (commandType.equals(\"deadline\")) {","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"hongyijie06"},"content":"                        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"hongyijie06"},"content":"                        TaskList.dealWithDeadline(tasks, index, line, isInTxt);","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"hongyijie06"},"content":"                        Storage.writeToFile(\"TaskList.txt\", tasks.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"hongyijie06"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"hongyijie06"},"content":"                        System.out.println(tasks.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"hongyijie06"},"content":"                        index++;","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"hongyijie06"},"content":"                    } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"hongyijie06"},"content":"                        isValidCommand \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"hongyijie06"},"content":"                        TaskList.dealWithTodo(tasks, index, line, isInTxt);","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"hongyijie06"},"content":"                        Storage.writeToFile(\"TaskList.txt\", tasks.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"hongyijie06"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"hongyijie06"},"content":"                        System.out.println(tasks.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"hongyijie06"},"content":"                        index++;","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"hongyijie06"},"content":"                    }","lastModifiedDate":"2024-03-07"},{"lineNumber":193,"author":{"gitId":"hongyijie06"},"content":"                } catch (IOException | UnexpectedCommandException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"hongyijie06"},"content":"                }","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"hongyijie06"},"content":"                System.out.println(\"Now you have \" + index + \" tasks in the list.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":196,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":197,"author":{"gitId":"hongyijie06"},"content":"            } else if (commandType.equals(\"delete\")) {","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"hongyijie06"},"content":"                try {","lastModifiedDate":"2024-03-07"},{"lineNumber":199,"author":{"gitId":"hongyijie06"},"content":"                    index \u003d deleteTask(tasks, inputs, index, isValidCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":200,"author":{"gitId":"hongyijie06"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":201,"author":{"gitId":"hongyijie06"},"content":"                    errorDescription \u003d \"please specify which task you want to delete\";","lastModifiedDate":"2024-03-08"},{"lineNumber":202,"author":{"gitId":"hongyijie06"},"content":"                    ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":203,"author":{"gitId":"hongyijie06"},"content":"                }","lastModifiedDate":"2024-03-07"},{"lineNumber":204,"author":{"gitId":"hongyijie06"},"content":"            } else if (commandType.equals(\"find\")) {","lastModifiedDate":"2024-03-08"},{"lineNumber":205,"author":{"gitId":"hongyijie06"},"content":"                try {","lastModifiedDate":"2024-03-07"},{"lineNumber":206,"author":{"gitId":"hongyijie06"},"content":"                    dealWithFind(inputs[1], tasks, index);","lastModifiedDate":"2024-03-07"},{"lineNumber":207,"author":{"gitId":"hongyijie06"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":208,"author":{"gitId":"hongyijie06"},"content":"                    errorDescription \u003d \"please state what you would like to find\";","lastModifiedDate":"2024-03-08"},{"lineNumber":209,"author":{"gitId":"hongyijie06"},"content":"                    ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":210,"author":{"gitId":"hongyijie06"},"content":"                }","lastModifiedDate":"2024-03-07"},{"lineNumber":211,"author":{"gitId":"hongyijie06"},"content":"            } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":212,"author":{"gitId":"hongyijie06"},"content":"                try {","lastModifiedDate":"2024-03-07"},{"lineNumber":213,"author":{"gitId":"hongyijie06"},"content":"                    handleEmptyInput(line);","lastModifiedDate":"2024-03-07"},{"lineNumber":214,"author":{"gitId":"hongyijie06"},"content":"                    handleUnexpectedCommand(isValidCommand);","lastModifiedDate":"2024-03-07"},{"lineNumber":215,"author":{"gitId":"hongyijie06"},"content":"                } catch (UnexpectedCommandException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":216,"author":{"gitId":"hongyijie06"},"content":"                    errorDescription \u003d \"Please enter a valid command\";","lastModifiedDate":"2024-03-08"},{"lineNumber":217,"author":{"gitId":"hongyijie06"},"content":"                    ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":218,"author":{"gitId":"hongyijie06"},"content":"                } catch (EmptyLineException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":219,"author":{"gitId":"hongyijie06"},"content":"                    errorDescription \u003d \"No input detected. Please enter a task\";","lastModifiedDate":"2024-03-08"},{"lineNumber":220,"author":{"gitId":"hongyijie06"},"content":"                    ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":221,"author":{"gitId":"hongyijie06"},"content":"                }","lastModifiedDate":"2024-03-07"},{"lineNumber":222,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":223,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":224,"author":{"gitId":"hongyijie06"},"content":"        ui.sayBye();","lastModifiedDate":"2024-03-07"},{"lineNumber":225,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":226,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"hongyijie06":226}},{"path":"src/main/java/ReadFileContents.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":" * prints TaskList.txt file contents","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"public class ReadFileContents {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"    private static void printFileContents (String filePath) throws FileNotFoundException {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"        Scanner taskString \u003d new Scanner(file); //reads tasks from TaskList.txt file","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"        while (taskString.hasNext()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(taskString.nextLine());","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"            printFileContents(\"TaskList.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"            new CreateFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"            String errorDescription \u003d \"File not found\";","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"hongyijie06":28}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"import java.io.File;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":" * deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"public class Storage {","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"     * loads ArrayList\u003cTask\u003e tasks with tasks saved on TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks contains the list of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"     * @param filePath the path to TaskList.txt saved on the local machine","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks saved in TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"     * @return index the number of tasks saved in TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when local TaskList.txt file does not exist","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"     * @throws UnexpectedCommandException exception when the format or details of the tasks are not followed and provided respectively","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"    public static int fillFileContents (ArrayList\u003cTask\u003e tasks, String filePath, int index) throws IOException, UnexpectedCommandException {//updates index","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"        Scanner taskLine \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"        while (taskLine.hasNext()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"            String sLine \u003d taskLine.nextLine();","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"            if (sLine.contains(\"[E]\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"                TaskList.dealWithEvent(tasks, index, sLine, true);","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"            } else if (sLine.contains(\"[D]\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"                TaskList.dealWithDeadline(tasks, index, sLine, true);","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"            } else if (sLine.contains(\"[T]\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"                TaskList.dealWithTodo(tasks, index, sLine, true);","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"hongyijie06"},"content":"            index++;","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"hongyijie06"},"content":"        boolean isInTxt \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"hongyijie06"},"content":"        return index;","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"hongyijie06"},"content":"     * saves the updated tasks list onto TaskList.txt in the local machine","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"hongyijie06"},"content":"     * @param index the nymber of tasks in array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"hongyijie06"},"content":"    protected static void saveToFile (ArrayList\u003cTask\u003e tasks, int index) throws IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"hongyijie06"},"content":"        new FileWriter(\"TaskList.txt\", false).close();","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"hongyijie06"},"content":"        for (int TaskIndex \u003d 0; TaskIndex \u003c index; TaskIndex ++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"hongyijie06"},"content":"            writeToFile(\"TaskList.txt\", tasks.get(TaskIndex));","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"hongyijie06"},"content":"     * adds additional tasks into TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"hongyijie06"},"content":"     * @param filePath the path to TaskList.txt saved on the local machine","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"hongyijie06"},"content":"     * @param textToAdd the new task to add","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"hongyijie06"},"content":"    static void writeToFile (String filePath, Task textToAdd) throws IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"hongyijie06"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"hongyijie06"},"content":"        fw.write(textToAdd + \"\\n\");","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"hongyijie06"},"content":"        fw.close();","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"hongyijie06":64}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":" * variables and functions that children classes of tasks inherit","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":" * children classes in this chatbot include event, deadline and todo","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"public class Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"    protected String description;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"    public String toString(){","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"hongyijie06":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":" * contains the task list and operations to add or delete tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"public class TaskList {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"    protected static Ui ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"    protected static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"    public TaskList(){","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"     * adds event to array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"     * @param line the input string from the user","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"     * @param isInTxt true if ArrayList\u003cTask\u003e tasks is being loaded from TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"     * @throws UnexpectedCommandException exception when the format or details of the tasks are not followed and provided respectively","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"hongyijie06"},"content":"    public static void dealWithEvent (ArrayList\u003cTask\u003e tasks, int index, String line, boolean isInTxt) throws UnexpectedCommandException, IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"hongyijie06"},"content":"        int indexTo \u003d line.lastIndexOf(\"to\");","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"hongyijie06"},"content":"        int indexFrom \u003d line.indexOf(\"from\");","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"hongyijie06"},"content":"        String from;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"hongyijie06"},"content":"        String to;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"hongyijie06"},"content":"        String description;","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"hongyijie06"},"content":"        ","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"hongyijie06"},"content":"        final int LENGTHOFFROM \u003d 5; //length of \"from \"","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"hongyijie06"},"content":"        final int LENGTHOFTO \u003d 3;","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"hongyijie06"},"content":"        final int EVENTCOMMANDLENGTH \u003d 6;//length of \"event \"","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"hongyijie06"},"content":"        final int FROMLENGTHCOLON \u003d 6;//length of \"from: \"","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"hongyijie06"},"content":"        final int TOLENGTHCOLON \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"hongyijie06"},"content":"        final int STATUSLENGTH \u003d 5;//length of \"[E][ ]\"","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"hongyijie06"},"content":"        if ((indexTo \u003d\u003d -1) || (indexFrom \u003d\u003d -1)) { //invalid format","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"Invalid format! Enter event in the format: event (description) from (start) to (end)\";","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"hongyijie06"},"content":"        try {//timeline not specified/ both not specified","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"hongyijie06"},"content":"            from \u003d line.substring(indexFrom + LENGTHOFFROM, indexTo - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"hongyijie06"},"content":"            to \u003d line.substring(indexTo + LENGTHOFTO);","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"hongyijie06"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"hongyijie06"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"hongyijie06"},"content":"                description \u003d line.substring(EVENTCOMMANDLENGTH, indexFrom - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"hongyijie06"},"content":"            } catch (IndexOutOfBoundsException f) {","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"hongyijie06"},"content":"                errorDescription \u003d \"event description and timeline not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"hongyijie06"},"content":"                ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"hongyijie06"},"content":"                throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"event timeline not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"hongyijie06"},"content":"        try {//description not specified","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"hongyijie06"},"content":"            description \u003d line.substring(EVENTCOMMANDLENGTH, indexFrom - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"hongyijie06"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"event description not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"hongyijie06"},"content":"        if (!isInTxt) {","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"hongyijie06"},"content":"            from \u003d line.substring(indexFrom + LENGTHOFFROM, indexTo - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"hongyijie06"},"content":"            to \u003d line.substring(indexTo + LENGTHOFTO);","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"hongyijie06"},"content":"            description \u003d line.substring(STATUSLENGTH, indexFrom - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"hongyijie06"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"hongyijie06"},"content":"            from \u003d line.substring(indexFrom + FROMLENGTHCOLON, indexTo - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"hongyijie06"},"content":"            to \u003d line.substring(indexTo + TOLENGTHCOLON, line.length() - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"hongyijie06"},"content":"            description \u003d line.substring(EVENTCOMMANDLENGTH, indexFrom - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"hongyijie06"},"content":"        tasks.add(index, new Event(description, from, to));","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"hongyijie06"},"content":"        final int STATUSINDEX \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"hongyijie06"},"content":"        if (isInTxt){","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"hongyijie06"},"content":"            char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"hongyijie06"},"content":"            if (charArray[STATUSINDEX] \u003d\u003d \u00271\u0027){","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"hongyijie06"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"hongyijie06"},"content":"            } else{","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"hongyijie06"},"content":"                tasks.get(index).unmarkDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"hongyijie06"},"content":"     * adds deadline to array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"hongyijie06"},"content":"     * @param line the input string from the user","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"hongyijie06"},"content":"     * @param isInTxt true if ArrayList\u003cTask\u003e tasks is being loaded from TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"hongyijie06"},"content":"     * @throws UnexpectedCommandException exception when the format or details of the tasks are not followed and provided respectively","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"hongyijie06"},"content":"    public static void dealWithDeadline (ArrayList\u003cTask\u003e tasks, int index, String line, boolean isInTxt) throws UnexpectedCommandException, IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"hongyijie06"},"content":"        int indexBy \u003d line.indexOf(\"by\");","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"hongyijie06"},"content":"        int space \u003d line.indexOf(\" \");","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"hongyijie06"},"content":"        String by;","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"hongyijie06"},"content":"        String description;","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"hongyijie06"},"content":"        final int LENGTHFBY \u003d 3;//length of \"by \"","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"hongyijie06"},"content":"        final int BYLENGTHCOLON \u003d 4; //length of \"by: \"","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"hongyijie06"},"content":"        if (indexBy \u003d\u003d -1) {//invalid format","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"Invalid format! Enter deadline in the format: deadline (description) by (deadline)\";","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"hongyijie06"},"content":"        try {//deadline / both not specified","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"hongyijie06"},"content":"            by \u003d line.substring(indexBy + LENGTHFBY);","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"hongyijie06"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"hongyijie06"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"hongyijie06"},"content":"                description \u003d line.substring(space + 1, indexBy - 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"hongyijie06"},"content":"            } catch (IndexOutOfBoundsException f) {","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"hongyijie06"},"content":"                errorDescription \u003d \"deadline description and deadline not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"hongyijie06"},"content":"                ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"hongyijie06"},"content":"                throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"deadline not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"hongyijie06"},"content":"        try {//deadline not specified","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"hongyijie06"},"content":"            description \u003d line.substring(space + 1, indexBy - 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"hongyijie06"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"deadline description not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"hongyijie06"},"content":"        if (!isInTxt) {","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"hongyijie06"},"content":"            description \u003d line.substring(space, indexBy - 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"hongyijie06"},"content":"            by \u003d line.substring(indexBy + LENGTHFBY);","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"hongyijie06"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"hongyijie06"},"content":"            description \u003d line.substring(space, indexBy - 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"hongyijie06"},"content":"            by \u003d line.substring(indexBy + BYLENGTHCOLON, line.length() - 1);","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"hongyijie06"},"content":"        tasks.add(index, new Deadline(description, by));","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"hongyijie06"},"content":"        if (isInTxt) {","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"hongyijie06"},"content":"            final int STATUSINDEX \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"hongyijie06"},"content":"            char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"hongyijie06"},"content":"            if (charArray[STATUSINDEX] \u003d\u003d \u00271\u0027){","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"hongyijie06"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"hongyijie06"},"content":"            } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"hongyijie06"},"content":"                tasks.get(index).unmarkDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"hongyijie06"},"content":"     * adds todo to array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"hongyijie06"},"content":"     * @param index the number of tasks in the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"hongyijie06"},"content":"     * @param line the input string from the user","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"hongyijie06"},"content":"     * @param isInTxt true if ArrayList\u003cTask\u003e tasks is being loaded from TaskList.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"hongyijie06"},"content":"     * @throws UnexpectedCommandException exception when the format or details of the tasks are not followed and provided respectively","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"hongyijie06"},"content":"     * @throws IOException exception when there is an I/O error","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"hongyijie06"},"content":"    public static void dealWithTodo (ArrayList\u003cTask\u003e tasks, int index, String line, boolean isInTxt) throws UnexpectedCommandException, IOException {","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"hongyijie06"},"content":"        int indexSpace \u003d line.indexOf(\" \");","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"hongyijie06"},"content":"        final int STATUSINDEX \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"hongyijie06"},"content":"        String errorDescription;","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"hongyijie06"},"content":"        if (indexSpace \u003d\u003d -1) {","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"hongyijie06"},"content":"            errorDescription \u003d \"todo description not specified\";","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"hongyijie06"},"content":"            ui.errorMessage(errorDescription);","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"hongyijie06"},"content":"            throw new UnexpectedCommandException();","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"hongyijie06"},"content":"        String description \u003d line.substring(indexSpace);","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"hongyijie06"},"content":"        tasks.add(index, new Todo(description));","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"hongyijie06"},"content":"        if (isInTxt) {","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"hongyijie06"},"content":"            char[] charArray \u003d line.toCharArray();","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"hongyijie06"},"content":"            if (charArray[STATUSINDEX] \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"hongyijie06"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"hongyijie06"},"content":"            } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"hongyijie06"},"content":"                tasks.get(index).unmarkDone();","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"hongyijie06"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"hongyijie06"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"hongyijie06"},"content":"     * deletes item from array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"hongyijie06"},"content":"     * @param inputs the array of words input by the user","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"hongyijie06"},"content":"     * @param ListIndex the string containing the task number to delete","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"hongyijie06"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"hongyijie06"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"hongyijie06"},"content":"    public static void dealWithDelete (String[] inputs, String ListIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"hongyijie06"},"content":"        if (inputs[0].equals(\"delete\")) {","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"hongyijie06"},"content":"            int deleteIdx \u003d Integer.parseInt(ListIndex) - 1; //index of task to delete","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"hongyijie06"},"content":"            System.out.println(tasks.get(deleteIdx));","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"hongyijie06"},"content":"            tasks.remove(deleteIdx);","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"hongyijie06"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":197,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"hongyijie06":198}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":" * child class of Task to handle todos","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"    public Todo (String description){","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"        super(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"hongyijie06":14}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":" * deals with interactions with the user","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hongyijie06"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"hongyijie06"},"content":"    public void sayHi() {","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(\"Hello! I\u0027m Apple\");","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"hongyijie06"},"content":"    public void readCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"hongyijie06"},"content":"        System.out.print(\"Enter your command: \");","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"hongyijie06"},"content":"    public static void errorMessage (String message) {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"hongyijie06"},"content":"    public void sayBye() {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"hongyijie06"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"hongyijie06"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"hongyijie06":22}},{"path":"src/main/java/UnexpectedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hongyijie06"},"content":"public class UnexpectedCommandException extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"hongyijie06"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"hongyijie06"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"hongyijie06":3}}]
