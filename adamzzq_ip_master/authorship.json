[{"path":"src/main/java/Adam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import command.CommandGenerator;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":" * The Adam class is the main class of the Adam chatbot program.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"public class Adam {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     * The main method of the Adam chatbot program.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        String input;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"        boolean exitFlag \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"            tasks \u003d Storage.loadTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"        } catch (AdamException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        System.out.println(Message.GREETING_MESSAGE);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"        while (!exitFlag) {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"            System.out.println(Message.DELIMITER);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"                exitFlag \u003d CommandGenerator.generate(input).execute(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"                // return true if it\u0027s exitCommand; false otherwise","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"                Storage.saveTasks(tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"            } catch (AdamException error) {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"            System.out.println(Message.DELIMITER);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"        scanner.close();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"adamzzq":48}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"/*","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":" * Storage class is responsible for saving and loading tasks from the local data file.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":" * The Storage class handles the saving and loading of tasks to/from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    private static final String TASKS_FILE_PATH \u003d \"tasks.dat\";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"     * Saves the given TaskList to a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The TaskList to be saved.","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If there is an error saving the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"    public static void saveTasks(TaskList tasks) throws AdamException {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"        try (ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(TASKS_FILE_PATH))) {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"            outputStream.writeObject(tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        } catch (IOException error) {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"            throw new AdamException(Message.FILE_SAVE_ERROR_MESSAGE);","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"     * Loads the TaskList from a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"     * @return The loaded TaskList.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If there is an error loading the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"    public static TaskList loadTasks() throws AdamException {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"        try (ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(TASKS_FILE_PATH))) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"            return (TaskList) inputStream.readObject();","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"        } catch (IOException | ClassNotFoundException error) {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"            throw new AdamException(Message.FILE_LOAD_ERROR_MESSAGE);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"adamzzq":47}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import ui.Parser;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" * The AddTaskCommand class represents a command to add a task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    private final Parser token;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    private final String[] taskDescriptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * Creates an AddTaskCommand object.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"     * @param token The token of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"     * @param taskDescriptions The descriptions of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"    public AddTaskCommand(Parser token, String[] taskDescriptions) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"        this.token \u003d token;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"        this.taskDescriptions \u003d taskDescriptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"     * Executes the command to add a task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"     * @return False because the program should continue running.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"        tasks.addTask(token, taskDescriptions);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"        System.out.println(Message.ADD_TASK_MESSAGE_FRONT","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"                + tasks.getTask(tasks.size())","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"                + Message.ADD_TASK_MESSAGE_MIDDLE","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"                + tasks.size()","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"                + Message.ADD_TASK_MESSAGE_END);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"        return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":41}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":" * The Command interface represents a command to be executed.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"public interface Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    ","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"     * Executes the command.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * @return False if the program should continue running, true if the program should terminate.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If an error occurs during the execution of the command.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    boolean execute(TaskList tasks) throws AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":18}},{"path":"src/main/java/command/CommandGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import ui.Parser;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" * The CommandGenerator class generates a command based on the user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"public class CommandGenerator{","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"     * Generates a command based on the user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * @param input The user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @return The command to be executed.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If an error occurs during the generation of the command.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    public static Command generate(String input) throws AdamException {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        // match input to corresponding enum (also handles invalid input)","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        Parser token \u003d Parser.analyzeInput(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"        switch (token) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"        case EXIT:","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"        case LIST:","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        case TOGGLE:","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"            return new ToggleStatusCommand(Parser.splitInput(token, input));","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"        case HELP:","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"        case DELETE:","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"            return new DeleteCommand(Parser.splitInput(token, input));","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"        case FIND:","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"            return new FindCommand(Parser.splitInput(token, input));","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"        default:","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"            return new AddTaskCommand(token, Parser.splitInput(token, input));","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"adamzzq":45}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" * The DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    private final int index;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     * @param inputArguments The index of the task to be deleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    public DeleteCommand(String[] inputArguments) {","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        this.index \u003d Integer.parseInt(inputArguments[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"     * @return False because the program should continue running.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If the index is out of bounds.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) throws AdamException {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"            System.out.println(Message.getDeleteMessage(tasks.size() - 1, tasks.getTask(index).toString()));","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"            throw new AdamException(Message.getListInquiryErrorMessage(tasks.size()));","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"adamzzq":39}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" * The ExitCommand class represents a command to exit the program.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"     * Executes the command to exit the program.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @return True because the program should terminate.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        System.out.print(Message.EXIT_MESSAGE);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        return true;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":22}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" * The FindCommand class represents a command to find tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"    private String keyword;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     * Creates a FindCommand object.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @param keywords The keywords to search for. Index 0 is the keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    public FindCommand(String[] keywords) {","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"        this.keyword \u003d keywords[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"     * Executes the command to find tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"     * @return False because the program should continue running.s","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        String tasksFound \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"            System.out.println(Message.FIND_FAIL_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"            System.out.print(Message.FIND_MESSAGE + tasksFound);","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"        return false;","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"    ","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"adamzzq":38}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" * The HelpCommand class represents a command to display the help message.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"     * Executes the command to display the help message.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @return False because the program should continue running.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        System.out.println(Message.HELP_MESSAGE);","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"adamzzq":22}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":" * The ListCommand class represents a command to list all the tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    ","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     * Lists all the tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     * @return False because the program should continue running.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If the task list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) throws AdamException {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"            throw new AdamException(Message.EMPTY_LIST_ERROR_MESSAGE);","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"            System.out.println(Message.LIST_MESSAGE_FRONT);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"            tasks.displayAll();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"            System.out.println(Message.LIST_MESSAGE_END);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"        return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":30}},{"path":"src/main/java/command/ToggleStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"import ui.Message;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":" * The ToggleStatusCommand class represents a command to toggle the status of a task.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"public class ToggleStatusCommand implements Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    private final int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"    private final String command;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     * Constructs a ToggleStatusCommand object.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"     * @param inputArguments It contains the command and the index of the task to be toggled,","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"     * at index 0 and 1 respectively.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"    public ToggleStatusCommand(String[] inputArguments) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"        this.command \u003d inputArguments[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"        this.index \u003d Integer.parseInt(inputArguments[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"     * Toggles the status of the task at the specified index.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"     * @return False because the program should continue running.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If the index is out of bounds.","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"    public boolean execute(TaskList tasks) throws AdamException {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"            tasks.getTask(index).setIsDone(command.equals(\"mark\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"            System.out.println(toggleMessage(tasks.getTask(index)));","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"            throw new AdamException(Message.getListInquiryErrorMessage(tasks.size()));","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"        return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"     * Returns the message to be displayed after toggling the status of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"adamzzq"},"content":"     * @param task The task whose status was toggled.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"adamzzq"},"content":"     * @return The message to be displayed after toggling the status of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"adamzzq"},"content":"    private String toggleMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"adamzzq"},"content":"        return (task.isDone() ? Message.MARK_MESSAGE : Message.UNMARK_MESSAGE)","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"adamzzq"},"content":"                + \"   \" + task;","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":55}},{"path":"src/main/java/exception/AdamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package exception;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":" * Represents an exception that is specific to Adam.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"public class AdamException extends Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"    public AdamException(String errorMessage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"adamzzq":10}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package task;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import ui.Time;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":" * The Deadline class represents a task that needs to be done before a specific date/time.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    protected String by;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @param by The date/time of the deadline.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"            this.by \u003d Time.standardize(by);","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"     * Returns the string representation of the Deadline object.","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"     * @return The string representation of the Deadline object.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"adamzzq":35}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package task;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import ui.Time;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":" * The Event class represents a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    protected String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"    protected String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     * Constructs an Event object.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"            this.from \u003d Time.standardize(from);","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"            this.to \u003d Time.standardize(to);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"     * Returns the string representation of the Event object.","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"adamzzq":44}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package task;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"/*","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":" * Abstract class for tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"     * Sets the status of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"     * @param newStatus New status of the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"    public void setIsDone(boolean newStatus) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"        this.isDone \u003d newStatus;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"     * Returns whether the task is marked as done.","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"     * ","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"     * @return True if the task is marked as done, false otherwise. ","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":39}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package task;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import ui.Parser;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"     * Checks if the list of tasks is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"     * @return True if the list of tasks is empty, false otherwise.","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"     * @param token The token of the task to be added.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"     * @param parsedInput The parsed input of the task to be added.","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"    public void addTask(Parser token, String[] parsedInput) {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"adamzzq"},"content":"        if (token \u003d\u003d Parser.TODO) {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"adamzzq"},"content":"            tasks.add(new ToDo(parsedInput[0]));","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"adamzzq"},"content":"        } else if (token \u003d\u003d Parser.DEADLINE) {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"adamzzq"},"content":"            tasks.add(new Deadline(parsedInput[0], parsedInput[1]));","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"adamzzq"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"adamzzq"},"content":"            tasks.add(new Event(parsedInput[0], parsedInput[1], parsedInput[2]));","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"adamzzq"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"adamzzq"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"adamzzq"},"content":"     * Print all the tasks in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"adamzzq"},"content":"    public void displayAll() {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"adamzzq"},"content":"        for (int index \u003d 1; index \u003c\u003d this.size(); index++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"adamzzq"},"content":"            System.out.println(index + \".\" + getTask(index));","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"adamzzq"},"content":"     * Search for tasks that contain the given keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"adamzzq"},"content":"     * ","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"adamzzq"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"adamzzq"},"content":"     * @return The tasks that contain the given keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"adamzzq"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"adamzzq"},"content":"        StringBuilder tasksFound \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"adamzzq"},"content":"        for (int index \u003d 1; index \u003c\u003d this.size(); index++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"adamzzq"},"content":"            if (getTask(index).toString().contains(keyword)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"adamzzq"},"content":"                tasksFound.append(index).append(\".\").append(getTask(index)).append(\"\\n\");","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"adamzzq"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"adamzzq"},"content":"        return tasksFound.toString();","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":85}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package task;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":" * The ToDo class represents a task without any date and time attached to it.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"     * Returns the string representation of the ToDo object.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"     * @return The string representation of the ToDo object.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"adamzzq":20}},{"path":"src/main/java/ui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import java.util.Random;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":" * The Message class is responsible for storing and displaying messages for normal and error cases.","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"public class Message {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"    public static final String DELIMITER \u003d \"\\n\u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e \u003e\u003d\u003d\u003d\u003d\u003e\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"    private static final String LOGO_DEFAULT \u003d \"              _                 \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"            + \"     /\\\\      | |                \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"            + \"    /  \\\\   __| | __ _ _ __ ___  \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"            + \"   / /\\\\ \\\\ / _` |/ _` | \u0027_ ` _ \\\\ \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"            + \"  / ____ \\\\ (_| | (_| | | | | | |\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"            + \" /_/    \\\\_\\\\__,_|\\\\__,_|_| |_| |_|\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    private static final String LOGO_BOLD \u003d \" █████╗ ██████╗  █████╗ ███╗   ███╗\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"            + \"██╔══██╗██╔══██╗██╔══██╗████╗ ████║\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"            + \"███████║██║  ██║███████║██╔████╔██║\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"            + \"██╔══██║██║  ██║██╔══██║██║╚██╔╝██║\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"            + \"██║  ██║██████╔╝██║  ██║██║ ╚═╝ ██║\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"            + \"╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"    private static final String LOGO_3D \u003d \" ________  ________  ________  _____ ______      \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"            + \"|\\\\   __  \\\\|\\\\   ___ \\\\|\\\\   __  \\\\|\\\\   _ \\\\  _   \\\\    \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"            + \"\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\\\\\__\\\\ \\\\  \\\\   \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"            + \" \\\\ \\\\   __  \\\\ \\\\  \\\\ \\\\\\\\ \\\\ \\\\   __  \\\\ \\\\  \\\\\\\\|__| \\\\  \\\\  \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"            + \"  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\_\\\\\\\\ \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"            + \"   \\\\ \\\\__\\\\ \\\\__\\\\ \\\\_______\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\    \\\\ \\\\__\\\\\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"            + \"    \\\\|__|\\\\|__|\\\\|_______|\\\\|__|\\\\|__|\\\\|__|     \\\\|__|\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"    private static final String GREETING \u003d DELIMITER","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"            + \"Greetings, human! I\u0027m Adam, your friendly chat bot.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"            + \"Ready to conquer the world of tasks together?\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"            + \"Let\u0027s dive into the adventure!\\n\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"            + \"\u003e\u003e\u003e Type \u0027help\u0027 or \u0027h\u0027 to view the available commands.\"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"            + DELIMITER;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"    private static final String[] LOGOS \u003d {LOGO_DEFAULT, LOGO_BOLD, LOGO_3D};","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"    // Random logo display at app start","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"    public static final String GREETING_MESSAGE \u003d \"Hello from\\n\" + LOGOS[new Random().nextInt(LOGOS.length)]","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"            + GREETING;","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"    public static final String EXIT_MESSAGE \u003d \"Farewell, adventurer! Until our paths cross again!\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"adamzzq"},"content":"    public static final String MARK_MESSAGE \u003d \"Ta-da! Task conquered! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"adamzzq"},"content":"    public static final String UNMARK_MESSAGE \u003d \"Whoopsie-daisy! This task is back in action:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"adamzzq"},"content":"    public static final String ADD_TASK_MESSAGE_FRONT \u003d \"Awesome sauce! Task successfully added:\\n  \";","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"adamzzq"},"content":"    public static final String ADD_TASK_MESSAGE_MIDDLE \u003d \"\\nYou now have a whopping \";","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"adamzzq"},"content":"    public static final String ADD_TASK_MESSAGE_END \u003d \" tasks in the list. Keep \u0027em coming!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"adamzzq"},"content":"    public static final String LIST_MESSAGE_FRONT \u003d \"Behold, the mighty task(s) in your realm:\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"adamzzq"},"content":"    public static final String LIST_MESSAGE_END \u003d \"\\nThese tasks await your valiant efforts, noble taskmaster!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"adamzzq"},"content":"    public static final String EMPTY_LIST_ERROR_MESSAGE \u003d \"Oops! Looks like our task list is empty.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"adamzzq"},"content":"            + \"Time to fill it up with some action-packed tasks!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"adamzzq"},"content":"    private static final String RANGE_ERROR_MESSAGE \u003d \"Oops! The specified index is out of range.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"adamzzq"},"content":"            + \"Please enter an index between 1 and \";","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"adamzzq"},"content":"    public static final String INVALID_INPUT_MESSAGE \u003d \"Oopsie! Looks like I got tangled up in my circuits.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"adamzzq"},"content":"            + \"Please try again or type \u0027help\u0027 for valid commands.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"adamzzq"},"content":"    public static String getListInquiryErrorMessage(int size) {","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"adamzzq"},"content":"        return size \u003d\u003d 0 ? EMPTY_LIST_ERROR_MESSAGE : RANGE_ERROR_MESSAGE + size + \". (both inclusive)\";","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"adamzzq"},"content":"    public static final String HELP_MESSAGE \u003d \"Need a hand? Here\u0027s your guide to Adam\u0027s commands!\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"adamzzq"},"content":"            + \"Available commands:\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"adamzzq"},"content":"            + \"- bye (or ex, q): Exit the chatbot.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"adamzzq"},"content":"            + \"- todo [description]: Add a new todo task.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"adamzzq"},"content":"            + \"- deadline [description] /by [deadline]: Add a new task with a deadline.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"adamzzq"},"content":"            + \"- event [description] /from [start time] /to [end time]: Add a new event task.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"adamzzq"},"content":"            + \"- list (or ls): View all tasks in the task list.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"adamzzq"},"content":"            + \"- mark [task number]: Mark a task as completed.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"adamzzq"},"content":"            + \"- unmark [task number]: Mark a completed task as incomplete.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"adamzzq"},"content":"            + \"- delete [task number]: Delete a task from the list. (Watch out, it\u0027s permanent!)\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"adamzzq"},"content":"            + \"- help (or h): Display this help menu.\\n\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"adamzzq"},"content":"            + \"To use a command, simply type it followed by any necessary parameters\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"adamzzq"},"content":"            + \"(e.g. \\\"deadline Hand in assignments /by 4th June\\\").\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"adamzzq"},"content":"            + \"Enjoy chatting with Adam!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"adamzzq"},"content":"    public static String getDeleteMessage(int newSize, String task) {","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"adamzzq"},"content":"        return \"Task gone with the digital wind!\\n  \"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"adamzzq"},"content":"                + task + (newSize \u003d\u003d 0 ? \"\\nOur list is empty now!\"","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"adamzzq"},"content":"                        : \"\\nNow down to \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"adamzzq"},"content":"    public static final String FILE_SAVE_ERROR_MESSAGE \u003d \"\\nOops! Looks like your tasks will vanish after this session!\"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"adamzzq"},"content":"            + \"\\nRestart the app and let\u0027s see if they\u0027re back to their normal selves!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"adamzzq"},"content":"    public static final String FILE_LOAD_ERROR_MESSAGE \u003d DELIMITER + \"Oops! List data lost in the digital Bermuda Triangle!\"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"adamzzq"},"content":"            + \"\\nStarting fresh with an empty list...\\n\" + DELIMITER;","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"adamzzq"},"content":"    public static final String FIND_MESSAGE \u003d \"Behold! Your tasks surface:\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"adamzzq"},"content":"    public static String FIND_FAIL_MESSAGE \u003d \"No tasks found with the keyword :(\";","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"adamzzq":105}},{"path":"src/main/java/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"import exception.AdamException;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":" * The Parser class is responsible for analyzing and splitting user input.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"public enum Parser {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"    // token list","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"    // accept any number of space using \\s*","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"    EXIT(\"bye|ex|q\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"    LIST(\"list|ls\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"    HELP(\"help|h\"),","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"    TOGGLE(\"(mark|unmark)\\\\s*(\\\\d+)\\\\s*\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"    TODO(\"todo\\\\s*(.+)\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"    DEADLINE(\"deadline\\\\s*(.+)/by\\\\s*(.+)\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"    EVENT(\"event\\\\s*(.+)/from\\\\s*(.+)/to\\\\s*(.+)\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"    DELETE(\"delete\\\\s*(\\\\d+)\\\\s*\"),","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"    FIND(\"find\\\\s*(.+)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"    private final String commandRegex;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"    Parser(String commandRegex) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        this.commandRegex \u003d commandRegex;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"    private String getCommandRegex() {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"        return this.commandRegex;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"     * Analyzes the given input and returns the corresponding token.","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"     * @param input The input to be analyzed.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"     * @return The corresponding token.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"     * @throws AdamException If the input does not match any token.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"    public static Parser analyzeInput(String input) throws AdamException {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"        return Arrays.stream(Parser.values())","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"                .filter(token -\u003e input.matches(token.getCommandRegex()))","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"                .findFirst()","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"                .orElseThrow(() -\u003e new AdamException(Message.INVALID_INPUT_MESSAGE));","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"adamzzq"},"content":"     * Splits the given input based on the given token.","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"adamzzq"},"content":"     * @param token The token to be used for splitting the input.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"adamzzq"},"content":"     * @param input The input to be split.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"adamzzq"},"content":"     * @return The split input.","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"adamzzq"},"content":"    public static String[] splitInput(Parser token, String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"adamzzq"},"content":"        Pattern matchedPattern \u003d Pattern.compile(token.getCommandRegex());","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"adamzzq"},"content":"        Matcher matcher \u003d matchedPattern.matcher(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"adamzzq"},"content":"        matcher.find();","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"adamzzq"},"content":"        return IntStream.rangeClosed(1, matcher.groupCount())","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"adamzzq"},"content":"                .mapToObj(i -\u003e matcher.group(i).trim())","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"adamzzq"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"adamzzq":66}},{"path":"src/main/java/ui/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"package ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":" * The Time class is responsible for standardizing date and time inputs.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"public class Time {","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"    private static final String[] DATE_PATTERNS \u003d  {","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"        \"yyyy-MM-dd\",  // 1989-06-04","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"        \"dd-MM-yyyy\",  // 04-06-1989","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"        \"yyyy MM dd\",  // 1989 06 04","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"        \"dd MM yyyy\",  // 04 06 1989","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"        \"yyyy/MM/dd\",  // 1989/06/04","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"        \"dd/MM/yyyy\",  // 04/06/1989","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"        \"yyyy.MM.dd\",  // 1989.06.04","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"        \"dd.MM.yyyy\",  // 04.06.1989","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"adamzzq"},"content":"        \"dd MMM yyyy\", // 04 Jun 1989","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"adamzzq"},"content":"        \"dd-MMM-yyyy\", // 04-Jun-1989","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"        \"dd/MMM/yyyy\", // 04/Jun/1989","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"adamzzq"},"content":"        \"MMM dd yyyy\", // Jun 04 1989","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"adamzzq"},"content":"        \"MMM dd, yyyy\" // Jun 04, 1989","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"adamzzq"},"content":"    };","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"adamzzq"},"content":"    private static final String[] TIME_PATTERNS \u003d {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"adamzzq"},"content":"        \"HH:mm\",    // 24-hour format with leading zeros (e.g., 13:45)","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"adamzzq"},"content":"        \"hh:mma\",   // 12-hour format with leading zeros and AM/PM indicator (e.g., 01:45pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"adamzzq"},"content":"        \"HHmm\",     // 24-hour format without separators (e.g., 1345)","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"adamzzq"},"content":"        \"hhmma\",    // 12-hour format without separators and AM/PM indicator (e.g., 0145pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"adamzzq"},"content":"        \"H:mm\",     // 24-hour format without leading zeros (e.g., 9:45)","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"adamzzq"},"content":"        \"h:mma\",    // 12-hour format without leading zeros and AM/PM indicator (e.g., 1:45pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"adamzzq"},"content":"        \"Hmm\",      // 24-hour format without separators and leading zeros (e.g., 945)","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"adamzzq"},"content":"        \"hmma\"      // 12-hour format without separators, leading zeros, and AM/PM indicator (e.g., 145pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"adamzzq"},"content":"    };","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"adamzzq"},"content":"     * \u003ch3\u003eNormalize the given date and time input.\u003c/h3\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"adamzzq"},"content":"     * The first letter will be capitalized and the rest will be in lower case.","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"adamzzq"},"content":"     * @param input The date and time input to be normalized.","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"adamzzq"},"content":"     * @return The normalized date and time input.","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"adamzzq"},"content":"    private static String ignoreInputCase(String input) {","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"adamzzq"},"content":"        return Character.toUpperCase(input.charAt(0)) + input.substring(1).toLowerCase();","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"adamzzq"},"content":"     * Parses the given date and time input.","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"adamzzq"},"content":"     * @param input The date and time input to be parsed.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"adamzzq"},"content":"     * @return The parsed date and time input.","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"adamzzq"},"content":"    private static Temporal parseDateAndTime(String input) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"adamzzq"},"content":"        for (String datePattern : DATE_PATTERNS) {","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"adamzzq"},"content":"            for (String timePattern : TIME_PATTERNS) {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"adamzzq"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"adamzzq"},"content":"                    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(datePattern + \" \" + timePattern);","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"adamzzq"},"content":"                    return LocalDateTime.parse(ignoreInputCase(input), dateTimeFormatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"adamzzq"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"adamzzq"},"content":"                    // Ignore and try the next formatter","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"adamzzq"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"adamzzq"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"adamzzq"},"content":"                    DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(datePattern);","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"adamzzq"},"content":"                    return LocalDate.parse(ignoreInputCase(input), dateFormatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"adamzzq"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"adamzzq"},"content":"                    // Ignore and try the next formatter","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"adamzzq"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"adamzzq"},"content":"                try {","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"adamzzq"},"content":"                    LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"adamzzq"},"content":"                    DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(DATE_PATTERNS[0] + \" \" + timePattern);","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"adamzzq"},"content":"                    return LocalDateTime.parse(today + \" \"+ input.toLowerCase(), timeFormatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"adamzzq"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"adamzzq"},"content":"                    // Ignore and try the next formatter","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"adamzzq"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"adamzzq"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"adamzzq"},"content":"        throw new IllegalArgumentException();","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"adamzzq"},"content":"     * \u003ch3\u003eFormats the given date and time input.\u003c/h3\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"adamzzq"},"content":"     * ","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"adamzzq"},"content":"     * \u003cp\u003eThe date and time input will be formatted to MMM dd yyyy, hh:mma\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"adamzzq"},"content":"     * (e.g., Oct 15 2019, 6:00pm) with time being optional.\u003c/p\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"adamzzq"},"content":"     * ","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"adamzzq"},"content":"     * @param dateTime The date and time input to be formatted.","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"adamzzq"},"content":"     * @return The formatted date and time input.","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"adamzzq"},"content":"    private static String formatDateTime(Temporal dateTime) {","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"adamzzq"},"content":"        if (dateTime instanceof LocalDate) {","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"adamzzq"},"content":"            return ((LocalDate)dateTime).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"adamzzq"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"adamzzq"},"content":"        return ((LocalDateTime)dateTime).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mma\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"adamzzq"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"adamzzq"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"adamzzq"},"content":"     * \u003ch3\u003eTo be used on the event or deadline task to standardize the date and time input.\u003c/h3\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"adamzzq"},"content":"     * \u003cp\u003eThe date and time input will be standardized to MMM dd yyyy, hh:mma\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"adamzzq"},"content":"     * (e.g., Oct 15 2019, 6:00pm) with time being optional.\u003c/p\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"adamzzq"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"adamzzq"},"content":"     * @param inputDateTime The date and time input to be standardized.","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"adamzzq"},"content":"     * @return The standardized date and time.","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"adamzzq"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"adamzzq"},"content":"    public static String standardize(String inputDateTime) {","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"adamzzq"},"content":"        Temporal parsedDateTime \u003d parseDateAndTime(inputDateTime);","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"adamzzq"},"content":"        return formatDateTime(parsedDateTime);","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"adamzzq"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"adamzzq"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"adamzzq":114}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adamzzq"},"content":"hello","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"adamzzq"},"content":"todo sleep for 8 hours","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"adamzzq"},"content":"deadline wake up /by 8:00AM tmr","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"adamzzq"},"content":"event exercise/from tmr /to 1st Aug. 2024","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"adamzzq"},"content":"todo jaer09549)(0","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"adamzzq"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"adamzzq"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"adamzzq"},"content":"unmark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"adamzzq"},"content":"mark 99","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"adamzzq"},"content":"mark -1","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"adamzzq"},"content":"unmark 0","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"adamzzq"},"content":"unmark 99","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"adamzzq"},"content":"todo borrow book","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"adamzzq"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"adamzzq"},"content":"deadline sleep /by 12 tonight","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"adamzzq"},"content":"event sleep /from 12am /to 9a.m. 09/02/2024","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"adamzzq"},"content":"deadline sleep /by 12 tonight","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"event sleep /from 12am /to 9a.m. 09/02/2024","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"adamzzq"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"adamzzq"},"content":"bye","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"adamzzq":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"adamzzq"},"content":"java -classpath ..\\bin Adam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"adamzzq":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"adamzzq"},"content":"java -classpath ../bin Adam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"adamzzq":1,"-":37}}]
