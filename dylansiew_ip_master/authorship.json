[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"# Mario User Guide","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"## Introduction","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"Mario is an interactive, Java-based task management application. It allows users to add, modify, and organize their tasks efficiently. With support for different types of tasks such as todos, deadlines, and events, Mario is designed to help users keep track of their daily activities in a simple and effective manner.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"## Features","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"- **Task Management**: Add, delete, and list tasks with ease.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"- **Task Types**: Supports todos, deadlines, and events.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"- **Task Status**: Mark tasks as done or not done.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"- **Search**: Find tasks by keywords or dates.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"- **Persistence**: Saves tasks to a file and loads them on startup, ensuring your list persists between sessions.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"## Getting Started","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"### Prerequisites","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"Ensure Java is installed on your system. You can check by running `java -version` in your terminal. If Java is not installed, please install the latest version from the official [Java website](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html).","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"### Installation","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"1. Download the Mario application files to your local machine.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"2. Navigate to the download directory in your terminal.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"3. Compile the Java files using the Java compiler:  ","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"4. Run the compiled application using Java:  ","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"## Usage Instructions","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"### Adding Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"- **To-dos**: `todo [task description]`","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"- **Deadlines**: `deadline [task description] /by [YYYY-MM-DD]`","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"- **Events**: `event [task description] /at [YYYY-MM-DD] to [YYYY-MM-DD]`","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"### Managing Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"- **Mark as Done**: `mark [task number]`","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"- **Unmark as Not Done**: `unmark [task number]`","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"- **Delete Task**: `delete [task number]`","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"### Finding Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"- **By Keyword**: `find [keyword]`","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"- **By Date**: `find-date [YYYY-MM-DD]`","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"### Listing and Exiting","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"- **List All Tasks**: `list`","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"- **Exit Application**: `bye`","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"## Support","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"If you encounter any issues or have questions about using Mario, please refer to the official documentation or contact support.","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"Thank you for using Mario!","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"dylansiew":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"# Mario Task Manager","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"## Overview","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"The Mario Task Manager is a Java-based application designed to assist users in managing tasks through a CLI interface. It features a variety of commands for task manipulation, including adding, deleting, marking, unmarking, postponing tasks, along with support for deadlines and events.","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"## Classes and Packages","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"### Logic Package","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"- **Mario**: Handles task management logic, including loading and saving tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"- **Parser**: Parses user input into commands.","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"- **Storage**: Manages task storage and retrieval from a file.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"### Command Package","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"- Includes classes for each command (`ByeCommand`, `DeadlineCommand`, `EventCommand`, `MarkCommand`, `UnmarkCommand`, `PostponeCommand`, etc.).","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"### Templates Package","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"- **TaskList**: Manages a collection of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"- **BaseDate**: Utility for date and time handling.","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"- **Task**: Base class for tasks, with subclasses `Deadline`, `Event`, `ToDo`.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"### Exceptions Package","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"- Custom exceptions for task management and command execution errors.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"- Add, delete, mark, unmark, and postpone tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"- Support for deadlines and events with date and time.","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"- Find tasks by keyword or date.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"- Save and load tasks from file.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"## Usage","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"Start the application via `MarioUI`. Enter commands in the input field to manage tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"## Commands","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"- **todo**: Add a to-do task.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"- **deadline**: Add a task with a deadline.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"- **event**: Add an event with start and end dates.","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"- **list**: List all tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"- **delete**: Delete tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"- **mark**: Mark tasks as completed.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"- **unmark**: Mark tasks as not completed.","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"- **postpone**: Postpone tasks to a new date/time.","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"- **bye**: Exit the application.","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"- **help**: View all command syntax.","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"This documentation provides an overview of the Mario Task Manager\u0027s structure and functionality.","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"dylansiew":35,"-":10}},{"path":"javadoc/legal/jquery.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"## jQuery v3.6.1","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"### jQuery License","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"jQuery v 3.6.1","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"Copyright OpenJS Foundation and other contributors, https://openjsf.org/","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"the following conditions:","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"******************************************","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"The jQuery JavaScript Library v3.6.1 also includes Sizzle.js","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"Sizzle.js includes the following license:","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"Copyright JS Foundation and other contributors, https://js.foundation/","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"available at https://github.com/jquery/sizzle","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"documented below:","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"the following conditions:","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"dylansiew"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"dylansiew"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"dylansiew"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"dylansiew"},"content":"the terms above.","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"dylansiew"},"content":"*********************","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"dylansiew"},"content":"```","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"dylansiew":72}},{"path":"javadoc/legal/jqueryUI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"## jQuery UI v1.12.1","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"### jQuery UI License","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"```","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"Copyright jQuery Foundation and other contributors, https://jquery.org/","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"available at https://github.com/jquery/jquery-ui","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"documented below:","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"the following conditions:","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"Copyright and related rights for sample code are waived via CC0. Sample","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"code is defined as all source code contained within the demos directory.","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"CC0: http://creativecommons.org/publicdomain/zero/1.0/","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"the terms above.","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"```","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"dylansiew":49}},{"path":"src/command/BaseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"public abstract class BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"    String taskString \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"    public boolean isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public BaseCommand(Boolean isExit, String taskString){","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public abstract String execute(TaskList taskList) throws Exception;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"        return this.isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":23}},{"path":"src/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"public class ByeCommand extends BaseCommand{","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"    public static String BYE_COMMAND \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"    public ByeCommand(){","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"        super(true, \"\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList){","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        return BYE_COMMAND;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":22}},{"path":"src/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioMissingDateTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioMissingTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioWrongFormat;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"import templates.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"public class DeadlineCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public DeadlineCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"            if (taskString.contains(Deadline.keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"                String dateString \u003d taskString.substring(taskString.indexOf(Deadline.keyword) + Deadline.keyword.length(),","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"                        taskString.length()).strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"                if (dateString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"                taskString \u003d taskString.substring(0, taskString.indexOf(Deadline.keyword)).replaceAll(\"[^a-zA-Z0-9]\", \"\");","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"                if (taskString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"                BaseDate deadlineDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"                Deadline newDeadline \u003d new Deadline(taskString, deadlineDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"                return taskList.addTask(newDeadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"                throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":45}},{"path":"src/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"public class DeleteCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public DeleteCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"            if (taskString.equals(\"/all\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"                while (taskList.getLength() !\u003d 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"                    taskList.deleteTask(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"                return (\"Deleted all tasks\");","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"            String deleteTask_response \u003d taskList.deleteTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"            return deleteTask_response;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to delete!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":35}},{"path":"src/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioMissingDateTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioMissingTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioWrongFormat;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"import templates.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"public class EventCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    public EventCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            if (taskString.contains(Event.KEYWORD_START) \u0026\u0026 taskString.contains(Event.KEYWORD_END)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"                String dateString \u003d taskString.substring(taskString.indexOf(Event.KEYWORD_START) + Event.KEYWORD_START.length(),","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"                        taskString.indexOf(Event.KEYWORD_END));","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"                String dateString1 \u003d taskString.substring(","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"                        taskString.indexOf(Event.KEYWORD_END) + Event.KEYWORD_END.length(),","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"                        taskString.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"                if (dateString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"                if (dateString1.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"                taskString \u003d taskString.substring(0, taskString.indexOf(Event.KEYWORD_START)).replaceAll(\"[^a-zA-Z0-9]\", \"\");","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"                if (taskString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"                BaseDate starDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"                BaseDate endDate \u003d new BaseDate(dateString1);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"                if (endDate.isBefore(starDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"                    throw new Exception(\"End date cannot be before start date\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"                Event newEvent \u003d new Event(taskString, starDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"                return taskList.addTask(newEvent);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"                throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":57}},{"path":"src/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"public class FindCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public FindCommand(String taskString){","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"            return (taskList.findTask(taskString));","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":24}},{"path":"src/command/FinddateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"public class FinddateCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"    public FinddateCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"            String dateString \u003d taskString.strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"            BaseDate deadlineDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"            return (taskList.findDate(deadlineDate));","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":28}},{"path":"src/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"public class HelpCommand extends BaseCommand {","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"        super(false, \"\");","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"        return \"Available Commands:\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"                \"1. bye - Exits the application.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"                \"2. list - Lists all tasks.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"                \"3. done \u003ctask number\u003e - Marks a task as done.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"                \"4. todo \u003cdescription\u003e - Adds a todo task.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"                \"5. deadline \u003cdescription\u003e /by \u003cdatetime\u003e - Adds a deadline task. Datetime format: YYYY-MM-DD.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"                \"6. event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e - Adds an event task. Datetime format: YYYY-MM-DD.\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"                +","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"                \"7. delete \u003ctask number\u003e - Deletes a task.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"                \"8. find \u003ckeyword\u003e - Finds tasks containing the given keyword.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"                \"9. undo - Undoes the most recent command that modified data.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"                \"10. help - Displays this help message.\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"                \"Note: \u003ctask number\u003e corresponds to the number shown next to the task in the list command. \u003cdescription\u003e is the text describing the task. \u003cdatetime\u003e must be in the specified format for deadline and event tasks.\";","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"dylansiew":28}},{"path":"src/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"public class ListCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public ListCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"            return (taskList.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":25}},{"path":"src/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"public class MarkCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public MarkCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"            return taskList.markTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to mark!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":28}},{"path":"src/command/PostponeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioMissingDateTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioMissingTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioWrongFormat;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"import templates.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"import templates.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"import templates.task.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"public class PostponeCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"    public PostponeCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"            String[] stringArr \u003d taskString.strip().split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(stringArr[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"            Task targetTask \u003d taskList.getTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"            if(targetTask.getCompleted()){","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"                throw new Exception(\"Task has been completed! Unable to edit...\");","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"            if (targetTask instanceof Deadline) {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"                if (stringArr[1].equals(Deadline.keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"                    String dateString \u003d taskString","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"                            .substring(taskString.indexOf(Deadline.keyword) + Deadline.keyword.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"                    BaseDate newDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"                    ((Deadline) targetTask).setDeadline(newDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"            } else if (targetTask instanceof Event) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"                if (taskString.contains(Event.KEYWORD_START) \u0026\u0026 taskString.contains(Event.KEYWORD_END)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"                    String dateString \u003d taskString.substring(","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"                            taskString.indexOf(Event.KEYWORD_START) + Event.KEYWORD_START.length(),","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"                            taskString.indexOf(Event.KEYWORD_END));","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"                    String dateString1 \u003d taskString.substring(","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"                            taskString.indexOf(Event.KEYWORD_END) + Event.KEYWORD_END.length(),","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"                            taskString.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"                    if (dateString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"                        throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"                    if (dateString1.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"                        throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"                    taskString \u003d taskString.substring(0, taskString.indexOf(Event.KEYWORD_START));","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"                    if (taskString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"                        throw new MarioMissingTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"                    BaseDate starDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"                    BaseDate endDate \u003d new BaseDate(dateString1);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"                    if (endDate.isBefore(starDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"                        throw new Exception(\"End date cannot be before start date\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"dylansiew"},"content":"                    ((Event) targetTask).setDate(starDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"dylansiew"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"dylansiew"},"content":"            return String.format(\"Task date has been updated!\\n%s\", targetTask.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to mark!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":77}},{"path":"src/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import templates.task.ToDo;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"public class ToDoCommand extends BaseCommand{","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public ToDoCommand(String taskString){","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"            ToDo newToDo \u003d new ToDo(taskString.replaceAll(\"[^a-zA-Z0-9]\", \"\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"            return taskList.addTask(newToDo);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":26}},{"path":"src/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its concrete subclasses representing commands that can be executed within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * BaseCommand defines the common structure for commands, including execution logic and a flag indicating if the command should terminate the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * Subclasses like ByeCommand, DeleteCommand, UnmarkCommand, etc.,implement specific functionalities tailored to handling user commands in the chat application. Each command class encapsulates the logic required to execute a particular command, including adding tasks, marking tasks as done or not done, finding tasks, and handling task deadlines and events. The design pattern allows for easy extension and management of different types of commands within the system.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"public class UnmarkCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public UnmarkCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"            return taskList.unmarkTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to unmark!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":28}},{"path":"src/exceptions/MarioDateTimePassed.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":" * This exception is thrown when an input date has already passed the current date. ","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * It ensures that tasks or events specified in the Mario application have future dates.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"public class MarioDateTimePassed extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"    public MarioDateTimePassed() {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"        super(\"Input date has already passed!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":11}},{"path":"src/exceptions/MarioErrorExecutingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":" * This exception is thrown when an error occurs during the execution of a command.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * It encapsulates the original exception, providing a way to identify and handle specific command execution errors.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"public class MarioErrorExecutingCommand extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"    public MarioErrorExecutingCommand(Exception args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"        super(\"Error occured when executing command!\\nError:\\t\" + args.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":11}},{"path":"src/exceptions/MarioFileError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":" * This exception is thrown when there is an error accessing or parsing the file that stores tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * It is crucial for handling file-related operations, ensuring that any file errors are appropriately managed.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"public class MarioFileError extends Exception{","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"    public MarioFileError(){","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"        super(\"Error while parsing file!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"dylansiew":11}},{"path":"src/exceptions/MarioMissingDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":" * This exception is thrown when no date and time are detected in the input provided by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * It is critical for commands where date and time information is mandatory for the operation to proceed.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"public class MarioMissingDateTime extends Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"    public MarioMissingDateTime(){","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"        super(\"No date and time detected!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":11}},{"path":"src/exceptions/MarioMissingTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * This exception is thrown when no task description is detected in the user\u0027s input.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" * It ensures that tasks cannot be created or modified without a proper description.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"public class MarioMissingTask extends Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"    public MarioMissingTask(){","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"        super(\"No task description detected!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":12}},{"path":"src/exceptions/MarioWrongFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":" * This exception is thrown when the user input does not match the expected format.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * It is used to prompt the user to check their input and adhere to the expected command or data formats.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"public class MarioWrongFormat extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"    public MarioWrongFormat() {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"        super(\"Check your input format!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":11}},{"path":"src/logic/Mario.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package logic;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import command.BaseCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * The Mario class serves as the central logic component of the Mario chat application, coordinating the application\u0027s functionality.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * It manages tasks, processes user commands, and interacts with the UI and storage systems. Upon instantiation, it initializes","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * the Storage and UI components, loads existing tasks from a file, and starts the command processing loop. It provides methods","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" * for running the application loop, saving the current state of tasks, and retrieving the task list for command execution.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"public class Mario{","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"    private static String MARIO_FILEPATH \u003d \"Mario.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    private String filename;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    private UI ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    public Mario(String filename) {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        try{this.taskList \u003d storage.loadMario(filename);}","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        catch(Exception e){","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"    public void run() {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"                BaseCommand command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"                response \u003d command.execute(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"                this.ui.printWithIndent(response);","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"                ui.printError(e);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"            } finally {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"                storage.saveMario(taskList, MARIO_FILEPATH);","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"    public static void main(String args[]) {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"        Mario mario \u003d new Mario(MARIO_FILEPATH);","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"        mario.run();","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"    public void saveMario() {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"        this.storage.saveMario(taskList, this.filename);","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"dylansiew":63}},{"path":"src/logic/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package logic;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import command.BaseCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import command.ByeCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import command.DeleteCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"import command.EventCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"import command.FindCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"import command.FinddateCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"import command.HelpCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"import command.ListCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"import command.PostponeCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"import command.ToDoCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioFileError;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"import templates.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"import templates.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"import templates.task.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"import templates.task.ToDo;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":" * Parser class is responsible for interpreting and converting user input","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":" * strings into executable command objects within the Mario chat application.","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":" * It analyzes the first word of the input to determine the command type and","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":" * constructs the corresponding command object with the provided details.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":" * Additionally, it includes utility methods for removing the first word from","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":" * the input string and verifying the presence of necessary arguments in the","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":" * command string.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":" * The class also includes a method for parsing tasks from strings, facilitating","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":" * the initialization of tasks from saved data.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"public class Parser {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"    public static BaseCommand parse(String args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"        String firstWord \u003d args.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"        String taskString \u003d removeFirstWord(args);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"        BaseCommand c \u003d createCommand(firstWord, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"        if (c \u003d\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"        return c;","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"    private static BaseCommand createCommand(String commandType, String taskString) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"            case \"list\":","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"                return new ListCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"                return new DeadlineCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"                return new DeleteCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"            case \"event\":","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"                return new EventCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"            case \"find\":","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"dylansiew"},"content":"                return new FindCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"dylansiew"},"content":"            case \"find-date\":","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"dylansiew"},"content":"                return new FinddateCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"dylansiew"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"dylansiew"},"content":"                return new MarkCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"dylansiew"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"dylansiew"},"content":"                return new UnmarkCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"dylansiew"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"dylansiew"},"content":"                return new ToDoCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"dylansiew"},"content":"            case \"postpone\":","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"dylansiew"},"content":"                return new PostponeCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"dylansiew"},"content":"            case \"help\":","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"dylansiew"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"dylansiew"},"content":"            default:","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"dylansiew"},"content":"                return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"dylansiew"},"content":"    private static String removeFirstWord(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"dylansiew"},"content":"        if (input !\u003d null \u0026\u0026 !input.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"dylansiew"},"content":"            int firstSpaceIndex \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"dylansiew"},"content":"            if (firstSpaceIndex !\u003d -1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"dylansiew"},"content":"                return input.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"dylansiew"},"content":"                return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"dylansiew"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"dylansiew"},"content":"            return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"dylansiew"},"content":"    private static void checkTaskString(String args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"dylansiew"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Missing arguement!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"dylansiew"},"content":"    public static void parseTaskFromString(String data, TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"dylansiew"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"dylansiew"},"content":"        data \u003d data.substring(data.indexOf(\"[\"), data.length());","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"dylansiew"},"content":"        Boolean markedStatus \u003d data.charAt(5) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"dylansiew"},"content":"        String eventString, startDateString, endDateString;","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"dylansiew"},"content":"        BaseDate startDate, endDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"dylansiew"},"content":"            switch (data.charAt(1)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"dylansiew"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"dylansiew"},"content":"                    eventString \u003d data.substring(data.indexOf(\"]\") + 4).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"dylansiew"},"content":"                    task \u003d new ToDo(eventString);","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"dylansiew"},"content":"                    task.setCompleted(markedStatus);","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"dylansiew"},"content":"                    break;","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"dylansiew"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"dylansiew"},"content":"                    eventString \u003d data.substring(data.indexOf(\"]\") + 4, data.indexOf(\" (from:\")).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"dylansiew"},"content":"                    startDateString \u003d data","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"dylansiew"},"content":"                            .substring(data.indexOf(\" (from:\") + \" (from:\".length(), data.indexOf(\"to:\"))","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"dylansiew"},"content":"                            .trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"dylansiew"},"content":"                    endDateString \u003d data.substring(data.indexOf(\"to:\") + \"to:\".length(), data.indexOf(\")\"))","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"dylansiew"},"content":"                            .trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"dylansiew"},"content":"                    startDate \u003d new BaseDate(startDateString);","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"dylansiew"},"content":"                    endDate \u003d new BaseDate(endDateString);","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"dylansiew"},"content":"                    task \u003d new Event(eventString, startDate, endDate);","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"dylansiew"},"content":"                    task.setCompleted(markedStatus);","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"dylansiew"},"content":"                    break;","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"dylansiew"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"dylansiew"},"content":"                    eventString \u003d data.substring(data.indexOf(\"]\") + 4, data.indexOf(\" (by: \")).trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"dylansiew"},"content":"                    startDateString \u003d data","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"dylansiew"},"content":"                            .substring(data.indexOf(\" (by: \") + \" (by: \".length(), data.indexOf(\")\"))","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"dylansiew"},"content":"                            .trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"dylansiew"},"content":"                    startDate \u003d new BaseDate(startDateString);","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"dylansiew"},"content":"                    task \u003d new Deadline(eventString, startDate);","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"dylansiew"},"content":"                    task.setCompleted(markedStatus);","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"dylansiew"},"content":"                    break;","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"dylansiew"},"content":"                default:","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioFileError();","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"dylansiew"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"dylansiew"},"content":"                taskList.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"dylansiew"},"content":"            throw new MarioFileError();","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":150}},{"path":"src/logic/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package logic;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import templates.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioFileError;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" * The Storage class manages file operations for the Mario chat application, specifically for saving and loading tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":" * It offers functionality to save the current state of tasks to a file and load them upon application startup.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" * The class provides methods to delete an existing file, save tasks to a file, and load tasks from a file,","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":" * ensuring data persistence across application sessions. Exception handling is implemented to manage potential file access errors.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"public class Storage{","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    private static Scanner sc;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    private void deleteFile(String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        File myObj \u003d new File(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        myObj.delete();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"    public void saveMario(TaskList obj, String filePath) {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"            deleteFile(\"Mario.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"            FileWriter myWriter \u003d new FileWriter(\"Mario.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"            myWriter.write(obj.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"            myWriter.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"    public TaskList loadMario(String filePath) throws Exception{","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"            File myObj \u003d new File(\"Mario.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"            sc \u003d new Scanner(myObj);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"                if (data.contains(\"[\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"                    Parser.parseTaskFromString(data, taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"            sc.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"            throw new MarioFileError();","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"        sc.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"        return taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":58}},{"path":"src/logic/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package logic;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * The UI class in the Mario chat application provides methods for displaying messages and reading commands from the console.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * It includes functionalities to print messages with indentations, handle error messages, and display welcome and goodbye messages.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * This class encapsulates all user interface interactions through the console, utilizing a Scanner for input reading, ","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * thereby abstracting the details of console-based user interaction away from the main application logic.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"public class UI {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    public static String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Mario!\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"    public static String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    public void printWithIndent(String args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        String lineIndent \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        System.out.println((lineIndent + \"\\n\" + args + lineIndent).replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"    public void printError(Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        printWithIndent(\"OOPS!! \" + e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"    public void showWelcome(){","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"        printWithIndent(WELCOME_MESSAGE);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"    public void showBye(){","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"        printWithIndent(BYE_MESSAGE);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"    public String readCommand(){","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":38}},{"path":"src/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package UI;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"import javax.swing.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"class ResponseStreamer implements Runnable {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"    private String response;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"    private JTextArea chatArea;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"    public ResponseStreamer(String response, JTextArea chatArea) {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"        this.response \u003d response;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"        this.chatArea \u003d chatArea;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"    public void run() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"        SwingUtilities.invokeLater(() -\u003e chatArea.append(\"Mario:\\n\\n\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"        for (int i \u003d 0; i \u003c response.length(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"            char c \u003d response.charAt(i);","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"            // Use SwingUtilities.invokeLater to update the GUI","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"            SwingUtilities.invokeLater(() -\u003e chatArea.append(Character.toString(c)));","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"                Thread.sleep(10); // 200 ms delay between characters","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"        // Append guards after response is fully streamed","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"        SwingUtilities.invokeLater(() -\u003e chatArea.append(\"\\n_____________________________________________________________\\n\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"package UI;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"import javax.swing.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"import javax.swing.text.DefaultCaret;","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"import Logic.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"import Command.BaseCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"import Command.ByeCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"import java.awt.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"import java.awt.event.ActionEvent;","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"import java.awt.event.ActionListener;","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"public class MarioUI {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"    public static final String mario_filename \u003d \"MARIO.ser\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"    private JFrame frame;","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"    private JTextArea chatArea;","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"    private JTextField inputField;","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"    private JButton sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"    private Mario mario;","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"    private JScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"    private String fullCommand \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"    private String response \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"    private BaseCommand command;","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"    public MarioUI(String filename) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"        this.mario \u003d new Mario(filename);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"        // Create the frame","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"        frame \u003d new JFrame(\"Mario\");","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"        frame.setSize(500, 500);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"        frame.setLayout(null);","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"dylansiew"},"content":"        // Create the chat area","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"dylansiew"},"content":"        chatArea \u003d new JTextArea();","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"dylansiew"},"content":"        chatArea.setEditable(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"dylansiew"},"content":"        // Create a scroll pane that contains the chat area","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"dylansiew"},"content":"        scrollPane \u003d new JScrollPane(chatArea);","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"dylansiew"},"content":"        scrollPane.setBounds(20, 20, 450, 350);","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"dylansiew"},"content":"        frame.add(scrollPane);","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"dylansiew"},"content":"        // Create the input field","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"dylansiew"},"content":"        inputField \u003d new JTextField();","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"dylansiew"},"content":"        inputField.setBounds(20, 380, 450, 30);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"dylansiew"},"content":"        frame.add(inputField);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"dylansiew"},"content":"        // Create the send button","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"dylansiew"},"content":"        sendButton \u003d new JButton(\"Talk to Mario\");","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"dylansiew"},"content":"        sendButton.setBounds(20, 420, 450, 30);","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"dylansiew"},"content":"        frame.add(sendButton);","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"dylansiew"},"content":"        // Customisations","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"dylansiew"},"content":"        frame.getContentPane().setBackground(new Color(224,16,47)); // Example color","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"dylansiew"},"content":"        chatArea.setBackground(Color.white); // Light Lavender Background","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"dylansiew"},"content":"        chatArea.setForeground(new Color(23,65,154)); // Black text","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"dylansiew"},"content":"        inputField.setBackground(Color.WHITE);","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"dylansiew"},"content":"        inputField.setForeground(Color.BLACK);","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"dylansiew"},"content":"        chatArea.setFont(new Font(\"Apple LiGothic\", Font.BOLD, 18));","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"dylansiew"},"content":"        inputField.setFont(new Font(\"Apple LiGothic\", Font.BOLD, 16));","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"dylansiew"},"content":"        inputField.addActionListener(new ActionListener() {","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"dylansiew"},"content":"            @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"dylansiew"},"content":"            public void actionPerformed(ActionEvent e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"dylansiew"},"content":"                sendButton.doClick();","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"dylansiew"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"dylansiew"},"content":"        // Add action listener to the button","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"dylansiew"},"content":"        sendButton.addActionListener(new ActionListener() {","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"dylansiew"},"content":"            @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"dylansiew"},"content":"            public void actionPerformed(ActionEvent e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"dylansiew"},"content":"                fullCommand \u003d inputField.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"dylansiew"},"content":"                process_command();","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"dylansiew"},"content":"                chatArea.append(\"\\nYou: \" + fullCommand + \"\\n\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"dylansiew"},"content":"                new Thread(new ResponseStreamer(response, chatArea)).start();","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"dylansiew"},"content":"                inputField.setText(\"\");","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"dylansiew"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"dylansiew"},"content":"        DefaultCaret caret \u003d (DefaultCaret) chatArea.getCaret();","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"dylansiew"},"content":"        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"dylansiew"},"content":"        // Display the frame","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"dylansiew"},"content":"        frame.setVisible(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"dylansiew"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"dylansiew"},"content":"    private void displayWelcomeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"dylansiew"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Mario! What can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"dylansiew"},"content":"        chatArea.append(welcomeMessage + \"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"dylansiew"},"content":"    private String inGuards(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"dylansiew"},"content":"        String len \u003d \"_____________________________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"dylansiew"},"content":"        System.out.println(len.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"dylansiew"},"content":"        return input + \"\\n_____________________________________________________________\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"dylansiew"},"content":"    public String marioResponse(String marioinput, String userinput) {","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"dylansiew"},"content":"        return inGuards(\"\\nYou: \" + userinput + \"\\n\\n\" + \"Mario: \" + marioinput);","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"dylansiew"},"content":"    private void process_command() {","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"dylansiew"},"content":"            command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"dylansiew"},"content":"            assert command !\u003d null : \"Command is null!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"dylansiew"},"content":"            response \u003d command.execute(mario.geTaskList());","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception error) {","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"dylansiew"},"content":"            response \u003d \"OOPS!! \" + error.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"dylansiew"},"content":"        } finally {","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"dylansiew"},"content":"            mario.saveMario();","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"dylansiew"},"content":"        if(command instanceof ByeCommand){","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"dylansiew"},"content":"            new Timer(5000, e -\u003e frame.dispose()).start(); // Wait for 5 seconds then close the app","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"dylansiew"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"dylansiew"},"content":"        new MarioUI(mario_filename);","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"dylansiew"},"content":"package Logic;","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"dylansiew"},"content":"import java.io.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"dylansiew"},"content":"public class Storage {","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"dylansiew"},"content":"    private void deleteFile(String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"dylansiew"},"content":"        File myObj \u003d new File(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"dylansiew"},"content":"        myObj.delete();","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"dylansiew"},"content":"    public void saveMario(Object obj, String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"dylansiew"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"dylansiew"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"dylansiew"},"content":"                file.mkdirs();","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"dylansiew"},"content":"            deleteFile(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"dylansiew"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"dylansiew"},"content":"            ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"dylansiew"},"content":"            objectOut.writeObject(obj);","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"dylansiew"},"content":"            objectOut.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"dylansiew"},"content":"            fileOut.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"dylansiew"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"dylansiew"},"content":"    public TaskList loadMario(String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":187,"author":{"gitId":"dylansiew"},"content":"        File myObj \u003d new File(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":188,"author":{"gitId":"dylansiew"},"content":"        TaskList taskList \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":189,"author":{"gitId":"dylansiew"},"content":"        if (!myObj.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":190,"author":{"gitId":"dylansiew"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":191,"author":{"gitId":"dylansiew"},"content":"            saveMario(taskList, filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":192,"author":{"gitId":"dylansiew"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":193,"author":{"gitId":"dylansiew"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":194,"author":{"gitId":"dylansiew"},"content":"                FileInputStream fileIn \u003d new FileInputStream(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":195,"author":{"gitId":"dylansiew"},"content":"                ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"dylansiew"},"content":"                taskList \u003d (TaskList) objectIn.readObject();","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"dylansiew"},"content":"                objectIn.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"dylansiew"},"content":"                fileIn.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":199,"author":{"gitId":"dylansiew"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"dylansiew"},"content":"                return new TaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"dylansiew"},"content":"        return taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"dylansiew"},"content":"package Logic;","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"dylansiew"},"content":"import Command.BaseCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"dylansiew"},"content":"import Command.ByeCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"dylansiew"},"content":"import Command.DeadlineCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"dylansiew"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"dylansiew"},"content":"import Command.EventCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"dylansiew"},"content":"import Command.FindCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":216,"author":{"gitId":"dylansiew"},"content":"import Command.FinddateCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":217,"author":{"gitId":"dylansiew"},"content":"import Command.ListCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":218,"author":{"gitId":"dylansiew"},"content":"import Command.MarkCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":219,"author":{"gitId":"dylansiew"},"content":"import Command.PostponeCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":220,"author":{"gitId":"dylansiew"},"content":"import Command.ToDoCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":221,"author":{"gitId":"dylansiew"},"content":"import Command.UnmarkCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":223,"author":{"gitId":"dylansiew"},"content":"public class Parser {","lastModifiedDate":"2024-02-05"},{"lineNumber":224,"author":{"gitId":"dylansiew"},"content":"    public static BaseCommand parse(String args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":225,"author":{"gitId":"dylansiew"},"content":"        String firstWord \u003d args.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-02-05"},{"lineNumber":226,"author":{"gitId":"dylansiew"},"content":"        String taskString \u003d removeFirstWord(args);","lastModifiedDate":"2024-02-05"},{"lineNumber":227,"author":{"gitId":"dylansiew"},"content":"        BaseCommand c \u003d createCommand(firstWord, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":228,"author":{"gitId":"dylansiew"},"content":"        if (c \u003d\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":229,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-05"},{"lineNumber":230,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":231,"author":{"gitId":"dylansiew"},"content":"        return c;","lastModifiedDate":"2024-02-05"},{"lineNumber":232,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":233,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":234,"author":{"gitId":"dylansiew"},"content":"    private static BaseCommand createCommand(String commandType, String taskString) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":235,"author":{"gitId":"dylansiew"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-05"},{"lineNumber":236,"author":{"gitId":"dylansiew"},"content":"            case \"list\":","lastModifiedDate":"2024-02-05"},{"lineNumber":237,"author":{"gitId":"dylansiew"},"content":"                return new ListCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":238,"author":{"gitId":"dylansiew"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"dylansiew"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":240,"author":{"gitId":"dylansiew"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-05"},{"lineNumber":241,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":242,"author":{"gitId":"dylansiew"},"content":"                return new DeadlineCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":243,"author":{"gitId":"dylansiew"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-05"},{"lineNumber":244,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":245,"author":{"gitId":"dylansiew"},"content":"                return new DeleteCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":246,"author":{"gitId":"dylansiew"},"content":"            case \"event\":","lastModifiedDate":"2024-02-05"},{"lineNumber":247,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":248,"author":{"gitId":"dylansiew"},"content":"                return new EventCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":249,"author":{"gitId":"dylansiew"},"content":"            case \"find\":","lastModifiedDate":"2024-02-05"},{"lineNumber":250,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":251,"author":{"gitId":"dylansiew"},"content":"                return new FindCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":252,"author":{"gitId":"dylansiew"},"content":"            case \"find-date\":","lastModifiedDate":"2024-02-05"},{"lineNumber":253,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":254,"author":{"gitId":"dylansiew"},"content":"                return new FinddateCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":255,"author":{"gitId":"dylansiew"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-05"},{"lineNumber":256,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":257,"author":{"gitId":"dylansiew"},"content":"                return new MarkCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":258,"author":{"gitId":"dylansiew"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-05"},{"lineNumber":259,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":260,"author":{"gitId":"dylansiew"},"content":"                return new UnmarkCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":261,"author":{"gitId":"dylansiew"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-05"},{"lineNumber":262,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":263,"author":{"gitId":"dylansiew"},"content":"                return new ToDoCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":264,"author":{"gitId":"dylansiew"},"content":"            case \"postpone\":","lastModifiedDate":"2024-02-05"},{"lineNumber":265,"author":{"gitId":"dylansiew"},"content":"                checkTaskString(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":266,"author":{"gitId":"dylansiew"},"content":"                return new PostponeCommand(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":267,"author":{"gitId":"dylansiew"},"content":"            default:","lastModifiedDate":"2024-02-05"},{"lineNumber":268,"author":{"gitId":"dylansiew"},"content":"                return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":269,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":270,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":271,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":272,"author":{"gitId":"dylansiew"},"content":"    private static String removeFirstWord(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":273,"author":{"gitId":"dylansiew"},"content":"        if (input !\u003d null \u0026\u0026 !input.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":274,"author":{"gitId":"dylansiew"},"content":"            int firstSpaceIndex \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-02-05"},{"lineNumber":275,"author":{"gitId":"dylansiew"},"content":"            if (firstSpaceIndex !\u003d -1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":276,"author":{"gitId":"dylansiew"},"content":"                return input.substring(firstSpaceIndex + 1).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":277,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":278,"author":{"gitId":"dylansiew"},"content":"                return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":279,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":280,"author":{"gitId":"dylansiew"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":281,"author":{"gitId":"dylansiew"},"content":"            return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":282,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":283,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":284,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":285,"author":{"gitId":"dylansiew"},"content":"    private static void checkTaskString(String args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":286,"author":{"gitId":"dylansiew"},"content":"        if (args \u003d\u003d null || args.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":287,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Missing arguement!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":288,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":289,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":290,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":291,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":292,"author":{"gitId":"dylansiew"},"content":"package Logic;","lastModifiedDate":"2024-02-05"},{"lineNumber":293,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":294,"author":{"gitId":"dylansiew"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-05"},{"lineNumber":295,"author":{"gitId":"dylansiew"},"content":"import Templates.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":296,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":297,"author":{"gitId":"dylansiew"},"content":"public class Mario implements Serializable {","lastModifiedDate":"2024-02-05"},{"lineNumber":298,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":299,"author":{"gitId":"dylansiew"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":300,"author":{"gitId":"dylansiew"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":301,"author":{"gitId":"dylansiew"},"content":"    private String filename;","lastModifiedDate":"2024-02-05"},{"lineNumber":302,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":303,"author":{"gitId":"dylansiew"},"content":"    public Mario(String filename) {","lastModifiedDate":"2024-02-05"},{"lineNumber":304,"author":{"gitId":"dylansiew"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-05"},{"lineNumber":305,"author":{"gitId":"dylansiew"},"content":"        this.taskList \u003d storage.loadMario(filename);","lastModifiedDate":"2024-02-05"},{"lineNumber":306,"author":{"gitId":"dylansiew"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2024-02-05"},{"lineNumber":307,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":308,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":309,"author":{"gitId":"dylansiew"},"content":"    // public void run(){","lastModifiedDate":"2024-02-05"},{"lineNumber":310,"author":{"gitId":"dylansiew"},"content":"    //     ui.showWelcome();","lastModifiedDate":"2024-02-05"},{"lineNumber":311,"author":{"gitId":"dylansiew"},"content":"    //     boolean isExit \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":312,"author":{"gitId":"dylansiew"},"content":"    //     while (!isExit) {","lastModifiedDate":"2024-02-05"},{"lineNumber":313,"author":{"gitId":"dylansiew"},"content":"    //         try{","lastModifiedDate":"2024-02-05"},{"lineNumber":314,"author":{"gitId":"dylansiew"},"content":"    //             String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":315,"author":{"gitId":"dylansiew"},"content":"    //             BaseCommand command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-05"},{"lineNumber":316,"author":{"gitId":"dylansiew"},"content":"    //             command.execute(ui, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":317,"author":{"gitId":"dylansiew"},"content":"    //             isExit \u003d command.isExit();","lastModifiedDate":"2024-02-05"},{"lineNumber":318,"author":{"gitId":"dylansiew"},"content":"    //         } catch (Exception e){","lastModifiedDate":"2024-02-05"},{"lineNumber":319,"author":{"gitId":"dylansiew"},"content":"    //             ui.printError(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":320,"author":{"gitId":"dylansiew"},"content":"    //         }finally{","lastModifiedDate":"2024-02-05"},{"lineNumber":321,"author":{"gitId":"dylansiew"},"content":"    //             storage.saveMario(taskList, mario_filename);","lastModifiedDate":"2024-02-05"},{"lineNumber":322,"author":{"gitId":"dylansiew"},"content":"    //         }","lastModifiedDate":"2024-02-05"},{"lineNumber":323,"author":{"gitId":"dylansiew"},"content":"    //     }","lastModifiedDate":"2024-02-05"},{"lineNumber":324,"author":{"gitId":"dylansiew"},"content":"    // }","lastModifiedDate":"2024-02-05"},{"lineNumber":325,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":326,"author":{"gitId":"dylansiew"},"content":"    public void saveMario(){","lastModifiedDate":"2024-02-05"},{"lineNumber":327,"author":{"gitId":"dylansiew"},"content":"        this.storage.saveMario(taskList, this.filename);","lastModifiedDate":"2024-02-05"},{"lineNumber":328,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":329,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":330,"author":{"gitId":"dylansiew"},"content":"    public TaskList geTaskList(){return this.taskList;}","lastModifiedDate":"2024-02-05"},{"lineNumber":331,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":332,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":333,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":334,"author":{"gitId":"dylansiew"},"content":"package Logic;","lastModifiedDate":"2024-02-05"},{"lineNumber":335,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":336,"author":{"gitId":"dylansiew"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-05"},{"lineNumber":337,"author":{"gitId":"dylansiew"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":338,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":339,"author":{"gitId":"dylansiew"},"content":"public class UI implements Serializable{","lastModifiedDate":"2024-02-05"},{"lineNumber":340,"author":{"gitId":"dylansiew"},"content":"    public static String welcomeMessage \u003d \"Hello! I\u0027m Mario!\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":341,"author":{"gitId":"dylansiew"},"content":"    public static String byeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":342,"author":{"gitId":"dylansiew"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-05"},{"lineNumber":343,"author":{"gitId":"dylansiew"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":344,"author":{"gitId":"dylansiew"},"content":"    public void printWithIndent(String args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":345,"author":{"gitId":"dylansiew"},"content":"        String lineIndent \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":346,"author":{"gitId":"dylansiew"},"content":"        System.out.println((lineIndent + \"\\n\" + args + lineIndent).replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":347,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":348,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":349,"author":{"gitId":"dylansiew"},"content":"    public void printError(Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":350,"author":{"gitId":"dylansiew"},"content":"        printWithIndent(\"OOPS!! \" + e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":351,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":352,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":353,"author":{"gitId":"dylansiew"},"content":"    public void showWelcome(){","lastModifiedDate":"2024-02-05"},{"lineNumber":354,"author":{"gitId":"dylansiew"},"content":"        printWithIndent(welcomeMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":355,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":356,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":357,"author":{"gitId":"dylansiew"},"content":"    public void showBye(){","lastModifiedDate":"2024-02-05"},{"lineNumber":358,"author":{"gitId":"dylansiew"},"content":"        printWithIndent(byeMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":359,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":360,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":361,"author":{"gitId":"dylansiew"},"content":"    public String readCommand(){","lastModifiedDate":"2024-02-05"},{"lineNumber":362,"author":{"gitId":"dylansiew"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":363,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":364,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":365,"author":{"gitId":"dylansiew"},"content":"package Exceptions;","lastModifiedDate":"2024-02-05"},{"lineNumber":366,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":367,"author":{"gitId":"dylansiew"},"content":"public class MarioDateTimePassed extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":368,"author":{"gitId":"dylansiew"},"content":"    public MarioDateTimePassed() {","lastModifiedDate":"2024-02-05"},{"lineNumber":369,"author":{"gitId":"dylansiew"},"content":"        super(\"Input date has already passed!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":370,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":371,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":372,"author":{"gitId":"dylansiew"},"content":"package Exceptions;","lastModifiedDate":"2024-02-05"},{"lineNumber":373,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":374,"author":{"gitId":"dylansiew"},"content":"public class MarioMissingDateTime extends Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":375,"author":{"gitId":"dylansiew"},"content":"    public MarioMissingDateTime(){","lastModifiedDate":"2024-02-05"},{"lineNumber":376,"author":{"gitId":"dylansiew"},"content":"        super(\"No date and time detected!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":377,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":378,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":379,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":380,"author":{"gitId":"dylansiew"},"content":"package Exceptions;","lastModifiedDate":"2024-02-05"},{"lineNumber":381,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":382,"author":{"gitId":"dylansiew"},"content":"public class MarioMissingTask extends Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":383,"author":{"gitId":"dylansiew"},"content":"    public MarioMissingTask(){","lastModifiedDate":"2024-02-05"},{"lineNumber":384,"author":{"gitId":"dylansiew"},"content":"        super(\"No task description detected!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":385,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":386,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":387,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":388,"author":{"gitId":"dylansiew"},"content":"package Exceptions;","lastModifiedDate":"2024-02-05"},{"lineNumber":389,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":390,"author":{"gitId":"dylansiew"},"content":"public class MarioWrongFormat extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":391,"author":{"gitId":"dylansiew"},"content":"    public MarioWrongFormat() {","lastModifiedDate":"2024-02-05"},{"lineNumber":392,"author":{"gitId":"dylansiew"},"content":"        super(\"Check your input format!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":393,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":394,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":395,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":396,"author":{"gitId":"dylansiew"},"content":"package Exceptions;","lastModifiedDate":"2024-02-05"},{"lineNumber":397,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":398,"author":{"gitId":"dylansiew"},"content":"public class MarioErrorExecutingCommand extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":399,"author":{"gitId":"dylansiew"},"content":"    public MarioErrorExecutingCommand(Exception args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":400,"author":{"gitId":"dylansiew"},"content":"        super(\"Error occured when executing command!\\nError:\\t\" + args.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":401,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":402,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":403,"author":{"gitId":"dylansiew"},"content":"package Templates;","lastModifiedDate":"2024-02-05"},{"lineNumber":404,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":405,"author":{"gitId":"dylansiew"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-05"},{"lineNumber":406,"author":{"gitId":"dylansiew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":407,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":408,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":409,"author":{"gitId":"dylansiew"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-02-05"},{"lineNumber":410,"author":{"gitId":"dylansiew"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-05"},{"lineNumber":411,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":412,"author":{"gitId":"dylansiew"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":413,"author":{"gitId":"dylansiew"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":414,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":415,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":416,"author":{"gitId":"dylansiew"},"content":"    public String addTask(Task args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":417,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":418,"author":{"gitId":"dylansiew"},"content":"            for(Task task : list){","lastModifiedDate":"2024-02-05"},{"lineNumber":419,"author":{"gitId":"dylansiew"},"content":"                if(task.getTaskString().equals(args.getTaskString()) \u0026\u0026 task.getClass() \u003d\u003d args.getClass()){","lastModifiedDate":"2024-02-05"},{"lineNumber":420,"author":{"gitId":"dylansiew"},"content":"                    throw new Exception(\"Duplicate task detected!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":421,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":422,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":423,"author":{"gitId":"dylansiew"},"content":"            this.list.add(args);","lastModifiedDate":"2024-02-05"},{"lineNumber":424,"author":{"gitId":"dylansiew"},"content":"            return (String.format(\"Got it. I\u0027ve added this task:\\n%s\\n%s\", args.toString(),","lastModifiedDate":"2024-02-05"},{"lineNumber":425,"author":{"gitId":"dylansiew"},"content":"                    this.stringNumberTask()));","lastModifiedDate":"2024-02-05"},{"lineNumber":426,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":427,"author":{"gitId":"dylansiew"},"content":"            throw e;","lastModifiedDate":"2024-02-05"},{"lineNumber":428,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":429,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":430,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":431,"author":{"gitId":"dylansiew"},"content":"    public String markTask(Integer args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":432,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":433,"author":{"gitId":"dylansiew"},"content":"            throw new ArrayIndexOutOfBoundsException(","lastModifiedDate":"2024-02-05"},{"lineNumber":434,"author":{"gitId":"dylansiew"},"content":"                    String.format(\"Unrecognised input index! Recognised range: 1 to %d\", this.list.size()));","lastModifiedDate":"2024-02-05"},{"lineNumber":435,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":436,"author":{"gitId":"dylansiew"},"content":"        this.list.get(args - 1).setCompleted(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":437,"author":{"gitId":"dylansiew"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\" + this.list.get(args - 1).toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":438,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":439,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":440,"author":{"gitId":"dylansiew"},"content":"    public String unmarkTask(Integer args) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2024-02-05"},{"lineNumber":441,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":442,"author":{"gitId":"dylansiew"},"content":"            throw new ArrayIndexOutOfBoundsException(","lastModifiedDate":"2024-02-05"},{"lineNumber":443,"author":{"gitId":"dylansiew"},"content":"                    String.format(\"Unrecognised input index! Recognised range: 1 to %d\", this.list.size()));","lastModifiedDate":"2024-02-05"},{"lineNumber":444,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":445,"author":{"gitId":"dylansiew"},"content":"        this.list.get(args - 1).setCompleted(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":446,"author":{"gitId":"dylansiew"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\" + this.list.get(args - 1).toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":447,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":448,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":449,"author":{"gitId":"dylansiew"},"content":"    public Task getTask(Integer args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":450,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":451,"author":{"gitId":"dylansiew"},"content":"            return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":452,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":453,"author":{"gitId":"dylansiew"},"content":"        return list.get(args - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":454,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":455,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":456,"author":{"gitId":"dylansiew"},"content":"    public String deleteTask(Integer args) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2024-02-05"},{"lineNumber":457,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":458,"author":{"gitId":"dylansiew"},"content":"            throw new ArrayIndexOutOfBoundsException(","lastModifiedDate":"2024-02-05"},{"lineNumber":459,"author":{"gitId":"dylansiew"},"content":"                    String.format(\"Unrecognised input index! Recognised range: 1 to %d\", this.list.size()));","lastModifiedDate":"2024-02-05"},{"lineNumber":460,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":461,"author":{"gitId":"dylansiew"},"content":"        Task deletedTask \u003d this.list.get(args - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":462,"author":{"gitId":"dylansiew"},"content":"        this.list.remove(args - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":463,"author":{"gitId":"dylansiew"},"content":"        return (String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n%s\", deletedTask.toString(),","lastModifiedDate":"2024-02-05"},{"lineNumber":464,"author":{"gitId":"dylansiew"},"content":"                stringNumberTask()));","lastModifiedDate":"2024-02-05"},{"lineNumber":465,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":466,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":467,"author":{"gitId":"dylansiew"},"content":"    public String stringNumberTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":468,"author":{"gitId":"dylansiew"},"content":"        return String.format(\"Now you have %d %s in your list.\\n\", this.list.size(),","lastModifiedDate":"2024-02-05"},{"lineNumber":469,"author":{"gitId":"dylansiew"},"content":"                (this.list.size() \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":470,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":471,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":472,"author":{"gitId":"dylansiew"},"content":"    public String findTask(String keyword) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":473,"author":{"gitId":"dylansiew"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":474,"author":{"gitId":"dylansiew"},"content":"        String resultString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":475,"author":{"gitId":"dylansiew"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":476,"author":{"gitId":"dylansiew"},"content":"            if (task.getTaskString().contains(keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":477,"author":{"gitId":"dylansiew"},"content":"                resultString +\u003d String.format(\"%d. %s\\n\", i, task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":478,"author":{"gitId":"dylansiew"},"content":"                i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":479,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":480,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":481,"author":{"gitId":"dylansiew"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":482,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Unable to find keyword!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":483,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":484,"author":{"gitId":"dylansiew"},"content":"        return resultString;","lastModifiedDate":"2024-02-05"},{"lineNumber":485,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":486,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":487,"author":{"gitId":"dylansiew"},"content":"    public String findDate(BaseDate otherDate) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":488,"author":{"gitId":"dylansiew"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":489,"author":{"gitId":"dylansiew"},"content":"        String resultString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":490,"author":{"gitId":"dylansiew"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":491,"author":{"gitId":"dylansiew"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-05"},{"lineNumber":492,"author":{"gitId":"dylansiew"},"content":"                if (((Deadline) task).getDeadlineDateTime().equals(otherDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":493,"author":{"gitId":"dylansiew"},"content":"                    resultString +\u003d String.format(\"%d. %s\\n\", i, task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":494,"author":{"gitId":"dylansiew"},"content":"                    i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":495,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":496,"author":{"gitId":"dylansiew"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-05"},{"lineNumber":497,"author":{"gitId":"dylansiew"},"content":"                if (((Event) task).getStartDateTime().equals(otherDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":498,"author":{"gitId":"dylansiew"},"content":"                    resultString +\u003d String.format(\"%d. %s\\n\", i, task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":499,"author":{"gitId":"dylansiew"},"content":"                    i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":500,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":501,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":502,"author":{"gitId":"dylansiew"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":503,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":504,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":505,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":506,"author":{"gitId":"dylansiew"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":507,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Unable to find keyword!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":508,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":509,"author":{"gitId":"dylansiew"},"content":"        return resultString;","lastModifiedDate":"2024-02-05"},{"lineNumber":510,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":511,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":512,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":513,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":514,"author":{"gitId":"dylansiew"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":515,"author":{"gitId":"dylansiew"},"content":"            return \"List is empty\";","lastModifiedDate":"2024-02-05"},{"lineNumber":516,"author":{"gitId":"dylansiew"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":517,"author":{"gitId":"dylansiew"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":518,"author":{"gitId":"dylansiew"},"content":"            String val \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":519,"author":{"gitId":"dylansiew"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":520,"author":{"gitId":"dylansiew"},"content":"                val +\u003d i + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":521,"author":{"gitId":"dylansiew"},"content":"                i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":522,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":523,"author":{"gitId":"dylansiew"},"content":"            return val;","lastModifiedDate":"2024-02-05"},{"lineNumber":524,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":525,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":526,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":527,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":528,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":529,"author":{"gitId":"dylansiew"},"content":"package Templates;","lastModifiedDate":"2024-02-05"},{"lineNumber":530,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":531,"author":{"gitId":"dylansiew"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-05"},{"lineNumber":532,"author":{"gitId":"dylansiew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":533,"author":{"gitId":"dylansiew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":534,"author":{"gitId":"dylansiew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":535,"author":{"gitId":"dylansiew"},"content":"import java.util.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":536,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":537,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioDateTimePassed;","lastModifiedDate":"2024-02-05"},{"lineNumber":538,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":539,"author":{"gitId":"dylansiew"},"content":"public class BaseDate implements Serializable {","lastModifiedDate":"2024-02-05"},{"lineNumber":540,"author":{"gitId":"dylansiew"},"content":"    private static final List\u003cString\u003e dateFormats \u003d List.of(","lastModifiedDate":"2024-02-05"},{"lineNumber":541,"author":{"gitId":"dylansiew"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2024-02-05"},{"lineNumber":542,"author":{"gitId":"dylansiew"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":543,"author":{"gitId":"dylansiew"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":544,"author":{"gitId":"dylansiew"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2024-02-05"},{"lineNumber":545,"author":{"gitId":"dylansiew"},"content":"            \"yyyy/MM/dd\",","lastModifiedDate":"2024-02-05"},{"lineNumber":546,"author":{"gitId":"dylansiew"},"content":"            \"dd:MM:yyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":547,"author":{"gitId":"dylansiew"},"content":"            \"ddMMyyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":548,"author":{"gitId":"dylansiew"},"content":"            \"ddMMyy\");","lastModifiedDate":"2024-02-05"},{"lineNumber":549,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":550,"author":{"gitId":"dylansiew"},"content":"    private static final List\u003cString\u003e timeFormats \u003d List.of(","lastModifiedDate":"2024-02-05"},{"lineNumber":551,"author":{"gitId":"dylansiew"},"content":"            \"HH:mm\",","lastModifiedDate":"2024-02-05"},{"lineNumber":552,"author":{"gitId":"dylansiew"},"content":"            \"HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":553,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":554,"author":{"gitId":"dylansiew"},"content":"    private static final ArrayList\u003cString\u003e dateTimeFormats \u003d dateTimeVary();","lastModifiedDate":"2024-02-05"},{"lineNumber":555,"author":{"gitId":"dylansiew"},"content":"    public static DateTimeFormatter formatter \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":556,"author":{"gitId":"dylansiew"},"content":"    LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":557,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":558,"author":{"gitId":"dylansiew"},"content":"    public BaseDate(String args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":559,"author":{"gitId":"dylansiew"},"content":"        args \u003d args.strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":560,"author":{"gitId":"dylansiew"},"content":"        if (!args.contains(\" \")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":561,"author":{"gitId":"dylansiew"},"content":"            args \u003d args + \" 0000\";","lastModifiedDate":"2024-02-05"},{"lineNumber":562,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":563,"author":{"gitId":"dylansiew"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":564,"author":{"gitId":"dylansiew"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":565,"author":{"gitId":"dylansiew"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2024-02-05"},{"lineNumber":566,"author":{"gitId":"dylansiew"},"content":"                dateTime \u003d LocalDateTime.parse(args, formatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":567,"author":{"gitId":"dylansiew"},"content":"                if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-02-05"},{"lineNumber":568,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioDateTimePassed();","lastModifiedDate":"2024-02-05"},{"lineNumber":569,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":570,"author":{"gitId":"dylansiew"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":571,"author":{"gitId":"dylansiew"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":572,"author":{"gitId":"dylansiew"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":573,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":574,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":575,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":576,"author":{"gitId":"dylansiew"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":577,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(","lastModifiedDate":"2024-02-05"},{"lineNumber":578,"author":{"gitId":"dylansiew"},"content":"                    String.format(","lastModifiedDate":"2024-02-05"},{"lineNumber":579,"author":{"gitId":"dylansiew"},"content":"                            \"Please input date in one of the correct formats: %s\\n\\n(Optional) Please input time in one of the correct formats: %s\\n\",","lastModifiedDate":"2024-02-05"},{"lineNumber":580,"author":{"gitId":"dylansiew"},"content":"                            dateFormats, timeFormats));","lastModifiedDate":"2024-02-05"},{"lineNumber":581,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":582,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":583,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":584,"author":{"gitId":"dylansiew"},"content":"    private static ArrayList\u003cString\u003e dateTimeVary() {","lastModifiedDate":"2024-02-05"},{"lineNumber":585,"author":{"gitId":"dylansiew"},"content":"        ArrayList\u003cString\u003e varyList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":586,"author":{"gitId":"dylansiew"},"content":"        for (String dateFormat : dateFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":587,"author":{"gitId":"dylansiew"},"content":"            for (String timeFormat : timeFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":588,"author":{"gitId":"dylansiew"},"content":"                varyList.add(String.format(\"%s %s\", dateFormat, timeFormat));","lastModifiedDate":"2024-02-05"},{"lineNumber":589,"author":{"gitId":"dylansiew"},"content":"                varyList.add(String.format(\"%s %s\", timeFormat, dateFormat));","lastModifiedDate":"2024-02-05"},{"lineNumber":590,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":591,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":592,"author":{"gitId":"dylansiew"},"content":"        return varyList;","lastModifiedDate":"2024-02-05"},{"lineNumber":593,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":594,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":595,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":596,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":597,"author":{"gitId":"dylansiew"},"content":"        formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2024-02-05"},{"lineNumber":598,"author":{"gitId":"dylansiew"},"content":"        return String.format(\"%s\", dateTime.format(formatter));","lastModifiedDate":"2024-02-05"},{"lineNumber":599,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":600,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":601,"author":{"gitId":"dylansiew"},"content":"    public boolean equals(BaseDate otherDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":602,"author":{"gitId":"dylansiew"},"content":"        if (otherDate !\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":603,"author":{"gitId":"dylansiew"},"content":"            return this.dateTime.toLocalDate().equals(otherDate.dateTime.toLocalDate());","lastModifiedDate":"2024-02-05"},{"lineNumber":604,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":605,"author":{"gitId":"dylansiew"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":606,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":607,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":608,"author":{"gitId":"dylansiew"},"content":"    public boolean isBefore(BaseDate otherDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":609,"author":{"gitId":"dylansiew"},"content":"        if (otherDate !\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":610,"author":{"gitId":"dylansiew"},"content":"            return this.dateTime.isBefore(otherDate.dateTime);","lastModifiedDate":"2024-02-05"},{"lineNumber":611,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":612,"author":{"gitId":"dylansiew"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":613,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":614,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":615,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":616,"author":{"gitId":"dylansiew"},"content":"package Templates.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":617,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":618,"author":{"gitId":"dylansiew"},"content":"import Templates.BaseDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":619,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":620,"author":{"gitId":"dylansiew"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":621,"author":{"gitId":"dylansiew"},"content":"    private BaseDate startDateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":622,"author":{"gitId":"dylansiew"},"content":"    private BaseDate endDateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":623,"author":{"gitId":"dylansiew"},"content":"    public static String keyword1 \u003d \"/from\";","lastModifiedDate":"2024-02-05"},{"lineNumber":624,"author":{"gitId":"dylansiew"},"content":"    public static String keyword2 \u003d \"/to\";","lastModifiedDate":"2024-02-05"},{"lineNumber":625,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":626,"author":{"gitId":"dylansiew"},"content":"    public Event(String args, BaseDate startDateTime, BaseDate endDateTime) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":627,"author":{"gitId":"dylansiew"},"content":"        super(args, \"E\", \"Event\");","lastModifiedDate":"2024-02-05"},{"lineNumber":628,"author":{"gitId":"dylansiew"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":629,"author":{"gitId":"dylansiew"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":630,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":631,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":632,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":633,"author":{"gitId":"dylansiew"},"content":"    public void setDate(BaseDate newStartDate, BaseDate newEndDate){","lastModifiedDate":"2024-02-05"},{"lineNumber":634,"author":{"gitId":"dylansiew"},"content":"        assert newStartDate !\u003d null : \"Start date is null!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":635,"author":{"gitId":"dylansiew"},"content":"        assert newEndDate !\u003d null : \"End date is null!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":636,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":637,"author":{"gitId":"dylansiew"},"content":"        this.startDateTime \u003d newStartDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":638,"author":{"gitId":"dylansiew"},"content":"        this.endDateTime \u003d newEndDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":639,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":640,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":641,"author":{"gitId":"dylansiew"},"content":"    public BaseDate getStartDateTime() {","lastModifiedDate":"2024-02-05"},{"lineNumber":642,"author":{"gitId":"dylansiew"},"content":"        return this.startDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":643,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":644,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":645,"author":{"gitId":"dylansiew"},"content":"    public BaseDate getEnDateTime() {","lastModifiedDate":"2024-02-05"},{"lineNumber":646,"author":{"gitId":"dylansiew"},"content":"        return this.endDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":647,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":648,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":649,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":650,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":651,"author":{"gitId":"dylansiew"},"content":"        return super.toString() + String.format(\"(from: %s to: %s)\", startDateTime.toString(), endDateTime.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":652,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":653,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":654,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":655,"author":{"gitId":"dylansiew"},"content":"package Templates.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":656,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":657,"author":{"gitId":"dylansiew"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-05"},{"lineNumber":658,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":659,"author":{"gitId":"dylansiew"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-02-05"},{"lineNumber":660,"author":{"gitId":"dylansiew"},"content":"    private String taskString \u003d \"Null\";","lastModifiedDate":"2024-02-05"},{"lineNumber":661,"author":{"gitId":"dylansiew"},"content":"    private Boolean completed \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":662,"author":{"gitId":"dylansiew"},"content":"    private String typeCode;","lastModifiedDate":"2024-02-05"},{"lineNumber":663,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":664,"author":{"gitId":"dylansiew"},"content":"    public Task(String args, String typeCode, String typeName) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":665,"author":{"gitId":"dylansiew"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":666,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(String.format(\"The description of a %s cannot be empty.\\n\", typeName));","lastModifiedDate":"2024-02-05"},{"lineNumber":667,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":668,"author":{"gitId":"dylansiew"},"content":"        args.strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":669,"author":{"gitId":"dylansiew"},"content":"        this.taskString \u003d args;","lastModifiedDate":"2024-02-05"},{"lineNumber":670,"author":{"gitId":"dylansiew"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":671,"author":{"gitId":"dylansiew"},"content":"        this.typeCode \u003d typeCode;","lastModifiedDate":"2024-02-05"},{"lineNumber":672,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":673,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":674,"author":{"gitId":"dylansiew"},"content":"    public Boolean getCompleted() {","lastModifiedDate":"2024-02-05"},{"lineNumber":675,"author":{"gitId":"dylansiew"},"content":"        return this.completed;","lastModifiedDate":"2024-02-05"},{"lineNumber":676,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":677,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":678,"author":{"gitId":"dylansiew"},"content":"    public String getTaskString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":679,"author":{"gitId":"dylansiew"},"content":"        return this.taskString;","lastModifiedDate":"2024-02-05"},{"lineNumber":680,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":681,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":682,"author":{"gitId":"dylansiew"},"content":"    public void setCompleted(Boolean args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":683,"author":{"gitId":"dylansiew"},"content":"        this.completed \u003d args;","lastModifiedDate":"2024-02-05"},{"lineNumber":684,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":685,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":686,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":687,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":688,"author":{"gitId":"dylansiew"},"content":"        return String.format(\"\\t[%s][%s] %s\", typeCode, (completed ? \"X\" : \" \"), taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":689,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":690,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":691,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":692,"author":{"gitId":"dylansiew"},"content":"package Templates.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":693,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":694,"author":{"gitId":"dylansiew"},"content":"import Templates.BaseDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":695,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":696,"author":{"gitId":"dylansiew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":697,"author":{"gitId":"dylansiew"},"content":"    private BaseDate deadlineDateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":698,"author":{"gitId":"dylansiew"},"content":"    public static String keyword \u003d \"/by\";","lastModifiedDate":"2024-02-05"},{"lineNumber":699,"author":{"gitId":"dylansiew"},"content":"    public Deadline(String args, BaseDate deadlineDateTime) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":700,"author":{"gitId":"dylansiew"},"content":"        super(args, \"D\", \"Deadline\");","lastModifiedDate":"2024-02-05"},{"lineNumber":701,"author":{"gitId":"dylansiew"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":702,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":703,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":704,"author":{"gitId":"dylansiew"},"content":"    public void setDeadline(BaseDate newDate){","lastModifiedDate":"2024-02-05"},{"lineNumber":705,"author":{"gitId":"dylansiew"},"content":"        assert newDate !\u003d null : \"Error setting new date for deadline\";","lastModifiedDate":"2024-02-05"},{"lineNumber":706,"author":{"gitId":"dylansiew"},"content":"        this.deadlineDateTime \u003d newDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":707,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":708,"author":{"gitId":"dylansiew"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":709,"author":{"gitId":"dylansiew"},"content":"    public BaseDate getDeadlineDateTime(){return this.deadlineDateTime;}","lastModifiedDate":"2024-02-05"},{"lineNumber":710,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":711,"author":{"gitId":"dylansiew"},"content":"    public String toString(){","lastModifiedDate":"2024-02-05"},{"lineNumber":712,"author":{"gitId":"dylansiew"},"content":"        return super.toString() + String.format(\"(by: %s)\", deadlineDateTime.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":713,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":714,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":715,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":716,"author":{"gitId":"dylansiew"},"content":"package Templates.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":717,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":718,"author":{"gitId":"dylansiew"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":719,"author":{"gitId":"dylansiew"},"content":"    public ToDo(String args) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":720,"author":{"gitId":"dylansiew"},"content":"        super(args, \"T\", \"Todo\");","lastModifiedDate":"2024-02-05"},{"lineNumber":721,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":722,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":723,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":724,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":725,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":726,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":727,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioMissingDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":728,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioMissingTask;","lastModifiedDate":"2024-02-05"},{"lineNumber":729,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioWrongFormat;","lastModifiedDate":"2024-02-05"},{"lineNumber":730,"author":{"gitId":"dylansiew"},"content":"import Templates.BaseDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":731,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":732,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":733,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":734,"author":{"gitId":"dylansiew"},"content":"public class EventCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":735,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":736,"author":{"gitId":"dylansiew"},"content":"    public EventCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":737,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":738,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":739,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":740,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":741,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":742,"author":{"gitId":"dylansiew"},"content":"            if (taskString.contains(Event.keyword1) \u0026\u0026 taskString.contains(Event.keyword2)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":743,"author":{"gitId":"dylansiew"},"content":"                String dateString \u003d taskString.substring(taskString.indexOf(Event.keyword1) + Event.keyword1.length(),","lastModifiedDate":"2024-02-05"},{"lineNumber":744,"author":{"gitId":"dylansiew"},"content":"                        taskString.indexOf(Event.keyword2));","lastModifiedDate":"2024-02-05"},{"lineNumber":745,"author":{"gitId":"dylansiew"},"content":"                String dateString1 \u003d taskString.substring(","lastModifiedDate":"2024-02-05"},{"lineNumber":746,"author":{"gitId":"dylansiew"},"content":"                        taskString.indexOf(Event.keyword2) + Event.keyword2.length(),","lastModifiedDate":"2024-02-05"},{"lineNumber":747,"author":{"gitId":"dylansiew"},"content":"                        taskString.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":748,"author":{"gitId":"dylansiew"},"content":"                if (dateString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":749,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":750,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":751,"author":{"gitId":"dylansiew"},"content":"                if (dateString1.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":752,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":753,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":754,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":755,"author":{"gitId":"dylansiew"},"content":"                taskString \u003d taskString.substring(0, taskString.indexOf(Event.keyword1));","lastModifiedDate":"2024-02-05"},{"lineNumber":756,"author":{"gitId":"dylansiew"},"content":"                if (taskString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":757,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":758,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":759,"author":{"gitId":"dylansiew"},"content":"                BaseDate starDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":760,"author":{"gitId":"dylansiew"},"content":"                BaseDate endDate \u003d new BaseDate(dateString1);","lastModifiedDate":"2024-02-05"},{"lineNumber":761,"author":{"gitId":"dylansiew"},"content":"                if (endDate.isBefore(starDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":762,"author":{"gitId":"dylansiew"},"content":"                    throw new Exception(\"End date cannot be before start date\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":763,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":764,"author":{"gitId":"dylansiew"},"content":"                Event newEvent \u003d new Event(taskString, starDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":765,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":766,"author":{"gitId":"dylansiew"},"content":"                return taskList.addTask(newEvent);","lastModifiedDate":"2024-02-05"},{"lineNumber":767,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":768,"author":{"gitId":"dylansiew"},"content":"                throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":769,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":770,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":771,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":772,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":773,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":774,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":775,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":776,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":777,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":778,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":779,"author":{"gitId":"dylansiew"},"content":"public class ByeCommand extends BaseCommand{","lastModifiedDate":"2024-02-05"},{"lineNumber":780,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":781,"author":{"gitId":"dylansiew"},"content":"    public static String byeMessage \u003d \"Bye. Hope to see you again soon!\\nClosing application in 5 seconds...\";","lastModifiedDate":"2024-02-05"},{"lineNumber":782,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":783,"author":{"gitId":"dylansiew"},"content":"    public ByeCommand(){","lastModifiedDate":"2024-02-05"},{"lineNumber":784,"author":{"gitId":"dylansiew"},"content":"        super(true, \"\");","lastModifiedDate":"2024-02-05"},{"lineNumber":785,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":786,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":787,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList){","lastModifiedDate":"2024-02-05"},{"lineNumber":788,"author":{"gitId":"dylansiew"},"content":"        return byeMessage;","lastModifiedDate":"2024-02-05"},{"lineNumber":789,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":790,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":791,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":792,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":793,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":794,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":795,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":796,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":797,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":798,"author":{"gitId":"dylansiew"},"content":"public class DeleteCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":799,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":800,"author":{"gitId":"dylansiew"},"content":"    public DeleteCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":801,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":802,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":803,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":804,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":805,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":806,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":807,"author":{"gitId":"dylansiew"},"content":"            Task deletedTask \u003d taskList.getTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":808,"author":{"gitId":"dylansiew"},"content":"            String deleteTask_response \u003d taskList.deleteTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":809,"author":{"gitId":"dylansiew"},"content":"            return deleteTask_response + (String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n%s\", deletedTask.toString(),","lastModifiedDate":"2024-02-05"},{"lineNumber":810,"author":{"gitId":"dylansiew"},"content":"            taskList.stringNumberTask()));","lastModifiedDate":"2024-02-05"},{"lineNumber":811,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":812,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to delete!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":813,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":814,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":815,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":816,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":817,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":818,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":819,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":820,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":821,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":822,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":823,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":824,"author":{"gitId":"dylansiew"},"content":"public class UnmarkCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":825,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":826,"author":{"gitId":"dylansiew"},"content":"    public UnmarkCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":827,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":828,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":829,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":830,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":831,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":832,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":833,"author":{"gitId":"dylansiew"},"content":"            return taskList.unmarkTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":834,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":835,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to unmark!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":836,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":837,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":838,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":839,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":840,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":841,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":842,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":843,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":844,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":845,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":846,"author":{"gitId":"dylansiew"},"content":"public class ListCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":847,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":848,"author":{"gitId":"dylansiew"},"content":"    public ListCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":849,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":850,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":851,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":852,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":853,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":854,"author":{"gitId":"dylansiew"},"content":"            return (taskList.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":855,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":856,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":857,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":858,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":859,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":860,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":861,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":862,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":863,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":864,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":865,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":866,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":867,"author":{"gitId":"dylansiew"},"content":"public class ToDoCommand extends BaseCommand{","lastModifiedDate":"2024-02-05"},{"lineNumber":868,"author":{"gitId":"dylansiew"},"content":"    public ToDoCommand(String taskString){","lastModifiedDate":"2024-02-05"},{"lineNumber":869,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":870,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":871,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":872,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":873,"author":{"gitId":"dylansiew"},"content":"            ToDo newToDo \u003d new ToDo(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":874,"author":{"gitId":"dylansiew"},"content":"            System.out.println(\"here\" + taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":875,"author":{"gitId":"dylansiew"},"content":"            return taskList.addTask(newToDo);","lastModifiedDate":"2024-02-05"},{"lineNumber":876,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":877,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":878,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":879,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":880,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":881,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":882,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":883,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":884,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":885,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":886,"author":{"gitId":"dylansiew"},"content":"public abstract class BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":887,"author":{"gitId":"dylansiew"},"content":"    String taskString \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":888,"author":{"gitId":"dylansiew"},"content":"    public boolean isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":889,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":890,"author":{"gitId":"dylansiew"},"content":"    public BaseCommand(Boolean isExit, String taskString){","lastModifiedDate":"2024-02-05"},{"lineNumber":891,"author":{"gitId":"dylansiew"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":892,"author":{"gitId":"dylansiew"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2024-02-05"},{"lineNumber":893,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":894,"author":{"gitId":"dylansiew"},"content":"    public abstract String execute(TaskList taskList) throws Exception;","lastModifiedDate":"2024-02-05"},{"lineNumber":895,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":896,"author":{"gitId":"dylansiew"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":897,"author":{"gitId":"dylansiew"},"content":"        return this.isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":898,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":899,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":900,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":901,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":902,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":903,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":904,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioMissingDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":905,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioMissingTask;","lastModifiedDate":"2024-02-05"},{"lineNumber":906,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioWrongFormat;","lastModifiedDate":"2024-02-05"},{"lineNumber":907,"author":{"gitId":"dylansiew"},"content":"import Templates.BaseDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":908,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":909,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":910,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":911,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":912,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":913,"author":{"gitId":"dylansiew"},"content":"public class PostponeCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":914,"author":{"gitId":"dylansiew"},"content":"    public PostponeCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":915,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":916,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":917,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":918,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":919,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":920,"author":{"gitId":"dylansiew"},"content":"            String[] stringArr \u003d taskString.strip().split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":921,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(stringArr[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":922,"author":{"gitId":"dylansiew"},"content":"            Task targetTask \u003d taskList.getTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":923,"author":{"gitId":"dylansiew"},"content":"            if(targetTask.getCompleted()){","lastModifiedDate":"2024-02-05"},{"lineNumber":924,"author":{"gitId":"dylansiew"},"content":"                throw new Exception(\"Task has been completed! Unable to edit...\");","lastModifiedDate":"2024-02-05"},{"lineNumber":925,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":926,"author":{"gitId":"dylansiew"},"content":"            if (targetTask instanceof Deadline) {","lastModifiedDate":"2024-02-05"},{"lineNumber":927,"author":{"gitId":"dylansiew"},"content":"                if (stringArr[1].equals(Deadline.keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":928,"author":{"gitId":"dylansiew"},"content":"                    String dateString \u003d taskString","lastModifiedDate":"2024-02-05"},{"lineNumber":929,"author":{"gitId":"dylansiew"},"content":"                            .substring(taskString.indexOf(Deadline.keyword) + Deadline.keyword.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":930,"author":{"gitId":"dylansiew"},"content":"                    BaseDate newDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":931,"author":{"gitId":"dylansiew"},"content":"                    ((Deadline) targetTask).setDeadline(newDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":932,"author":{"gitId":"dylansiew"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":933,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":934,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":935,"author":{"gitId":"dylansiew"},"content":"            } else if (targetTask instanceof Event) {","lastModifiedDate":"2024-02-05"},{"lineNumber":936,"author":{"gitId":"dylansiew"},"content":"                if (taskString.contains(Event.keyword1) \u0026\u0026 taskString.contains(Event.keyword2)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":937,"author":{"gitId":"dylansiew"},"content":"                    String dateString \u003d taskString.substring(","lastModifiedDate":"2024-02-05"},{"lineNumber":938,"author":{"gitId":"dylansiew"},"content":"                            taskString.indexOf(Event.keyword1) + Event.keyword1.length(),","lastModifiedDate":"2024-02-05"},{"lineNumber":939,"author":{"gitId":"dylansiew"},"content":"                            taskString.indexOf(Event.keyword2));","lastModifiedDate":"2024-02-05"},{"lineNumber":940,"author":{"gitId":"dylansiew"},"content":"                    String dateString1 \u003d taskString.substring(","lastModifiedDate":"2024-02-05"},{"lineNumber":941,"author":{"gitId":"dylansiew"},"content":"                            taskString.indexOf(Event.keyword2) + Event.keyword2.length(),","lastModifiedDate":"2024-02-05"},{"lineNumber":942,"author":{"gitId":"dylansiew"},"content":"                            taskString.length());","lastModifiedDate":"2024-02-05"},{"lineNumber":943,"author":{"gitId":"dylansiew"},"content":"                    if (dateString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":944,"author":{"gitId":"dylansiew"},"content":"                        throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":945,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":946,"author":{"gitId":"dylansiew"},"content":"                    if (dateString1.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":947,"author":{"gitId":"dylansiew"},"content":"                        throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":948,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":949,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":950,"author":{"gitId":"dylansiew"},"content":"                    taskString \u003d taskString.substring(0, taskString.indexOf(Event.keyword1));","lastModifiedDate":"2024-02-05"},{"lineNumber":951,"author":{"gitId":"dylansiew"},"content":"                    if (taskString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":952,"author":{"gitId":"dylansiew"},"content":"                        throw new MarioMissingTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":953,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":954,"author":{"gitId":"dylansiew"},"content":"                    BaseDate starDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":955,"author":{"gitId":"dylansiew"},"content":"                    BaseDate endDate \u003d new BaseDate(dateString1);","lastModifiedDate":"2024-02-05"},{"lineNumber":956,"author":{"gitId":"dylansiew"},"content":"                    if (endDate.isBefore(starDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":957,"author":{"gitId":"dylansiew"},"content":"                        throw new Exception(\"End date cannot be before start date\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":958,"author":{"gitId":"dylansiew"},"content":"                    }","lastModifiedDate":"2024-02-05"},{"lineNumber":959,"author":{"gitId":"dylansiew"},"content":"                    ((Event) targetTask).setDate(starDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":960,"author":{"gitId":"dylansiew"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":961,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":962,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":963,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":964,"author":{"gitId":"dylansiew"},"content":"            return String.format(\"Task date has been updated!\\n%s\", targetTask.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":965,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":966,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to mark!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":967,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":968,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":969,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":970,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":971,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":972,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":973,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":974,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":975,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":976,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":977,"author":{"gitId":"dylansiew"},"content":"public class MarkCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":978,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":979,"author":{"gitId":"dylansiew"},"content":"    public MarkCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":980,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":981,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":982,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":983,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":984,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":985,"author":{"gitId":"dylansiew"},"content":"            Integer index \u003d Integer.parseInt(taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":986,"author":{"gitId":"dylansiew"},"content":"            return taskList.markTask(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":987,"author":{"gitId":"dylansiew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":988,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Please provide a valid task index to mark!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":989,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":990,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":991,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":992,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":993,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":994,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":995,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":996,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":997,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioMissingDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":998,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioMissingTask;","lastModifiedDate":"2024-02-05"},{"lineNumber":999,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioWrongFormat;","lastModifiedDate":"2024-02-05"},{"lineNumber":1000,"author":{"gitId":"dylansiew"},"content":"import Templates.BaseDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":1001,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":1002,"author":{"gitId":"dylansiew"},"content":"import Templates.Task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":1003,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1004,"author":{"gitId":"dylansiew"},"content":"public class DeadlineCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":1005,"author":{"gitId":"dylansiew"},"content":"    public DeadlineCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1006,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":1007,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":1008,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1009,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":1010,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":1011,"author":{"gitId":"dylansiew"},"content":"            if (taskString.contains(Deadline.keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1012,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1013,"author":{"gitId":"dylansiew"},"content":"                String dateString \u003d taskString.substring(taskString.indexOf(Deadline.keyword) + Deadline.keyword.length(),","lastModifiedDate":"2024-02-05"},{"lineNumber":1014,"author":{"gitId":"dylansiew"},"content":"                        taskString.length()).strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":1015,"author":{"gitId":"dylansiew"},"content":"                if (dateString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1016,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingDateTime();","lastModifiedDate":"2024-02-05"},{"lineNumber":1017,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":1018,"author":{"gitId":"dylansiew"},"content":"                taskString \u003d taskString.substring(0, taskString.indexOf(Deadline.keyword));","lastModifiedDate":"2024-02-05"},{"lineNumber":1019,"author":{"gitId":"dylansiew"},"content":"                if (taskString.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1020,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioMissingTask();","lastModifiedDate":"2024-02-05"},{"lineNumber":1021,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":1022,"author":{"gitId":"dylansiew"},"content":"                BaseDate deadlineDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":1023,"author":{"gitId":"dylansiew"},"content":"                Deadline newDeadline \u003d new Deadline(taskString, deadlineDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":1024,"author":{"gitId":"dylansiew"},"content":"                return taskList.addTask(newDeadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":1025,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":1026,"author":{"gitId":"dylansiew"},"content":"                throw new MarioWrongFormat();","lastModifiedDate":"2024-02-05"},{"lineNumber":1027,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":1028,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1029,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":1030,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":1031,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":1032,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":1033,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1034,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":1035,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1036,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":1037,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":1038,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1039,"author":{"gitId":"dylansiew"},"content":"public class FindCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":1040,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1041,"author":{"gitId":"dylansiew"},"content":"    public FindCommand(String taskString){","lastModifiedDate":"2024-02-05"},{"lineNumber":1042,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":1043,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":1044,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":1045,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":1046,"author":{"gitId":"dylansiew"},"content":"            return (taskList.findTask(taskString));","lastModifiedDate":"2024-02-05"},{"lineNumber":1047,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1048,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":1049,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":1050,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":1051,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":1052,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1053,"author":{"gitId":"dylansiew"},"content":"package Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":1054,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1055,"author":{"gitId":"dylansiew"},"content":"import Exceptions.MarioErrorExecutingCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":1056,"author":{"gitId":"dylansiew"},"content":"import Templates.BaseDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":1057,"author":{"gitId":"dylansiew"},"content":"import Templates.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":1058,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1059,"author":{"gitId":"dylansiew"},"content":"public class FinddateCommand extends BaseCommand {","lastModifiedDate":"2024-02-05"},{"lineNumber":1060,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1061,"author":{"gitId":"dylansiew"},"content":"    public FinddateCommand(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1062,"author":{"gitId":"dylansiew"},"content":"        super(false, taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":1063,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":1064,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":1065,"author":{"gitId":"dylansiew"},"content":"    public String execute(TaskList taskList) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":1066,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":1067,"author":{"gitId":"dylansiew"},"content":"            String dateString \u003d taskString.strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":1068,"author":{"gitId":"dylansiew"},"content":"            BaseDate deadlineDate \u003d new BaseDate(dateString);","lastModifiedDate":"2024-02-05"},{"lineNumber":1069,"author":{"gitId":"dylansiew"},"content":"            return (taskList.findDate(deadlineDate));","lastModifiedDate":"2024-02-05"},{"lineNumber":1070,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":1071,"author":{"gitId":"dylansiew"},"content":"            throw new MarioErrorExecutingCommand(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":1072,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":1073,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":1074,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":1074}},{"path":"src/templates/BaseDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package templates;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import java.util.List;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"import exceptions.MarioDateTimePassed;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" * Encapsulates date and time functionality for tasks in the Mario application. It provides methods for parsing date strings","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":" * into LocalDateTime objects according to multiple predefined formats. The class checks for date validity, ensuring that","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":" * input dates have not passed and are in the correct format. It supports comparisons to determine if one date is before another","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":" * and to check for equality. The toString method returns a formatted date string for display.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"public class BaseDate{","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"    private static final List\u003cString\u003e dateFormats \u003d List.of(","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"            \"dd-MM-yyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"            \"dd/MM/yyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"            \"yyyy-MM-dd\",","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            \"yyyy/MM/dd\",","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"            \"dd:MM:yyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"            \"ddMMyyyy\",","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"            \"ddMMyy\",","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"            \"MMM dd yyyy\");","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"    private static final List\u003cString\u003e timeFormats \u003d List.of(","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"            \"HH:mm\",","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"            \"HHmm\",","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"            \"hh:mma\");","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"    private static final ArrayList\u003cString\u003e dateTimeFormats \u003d dateTimeVary();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"    public static DateTimeFormatter formatter \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"    LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"    private final String DEAULT_TIME \u003d \" 0000\";","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"    public BaseDate(String args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"        args \u003d args.strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"        if (!args.contains(\" \")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"            args \u003d args + DEAULT_TIME;","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"                dateTime \u003d LocalDateTime.parse(args, formatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"                if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"                    throw new MarioDateTimePassed();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"                break;","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"                    String.format(","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"                            \"Please input date in one of the correct formats: %s\\n\\n(Optional) Please input time in one of the correct formats: %s\\n\",","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"                            dateFormats, timeFormats));","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"dylansiew"},"content":"    private static ArrayList\u003cString\u003e dateTimeVary() {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"dylansiew"},"content":"        ArrayList\u003cString\u003e varyList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"dylansiew"},"content":"        for (String dateFormat : dateFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"dylansiew"},"content":"            for (String timeFormat : timeFormats) {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"dylansiew"},"content":"                varyList.add(String.format(\"%s %s\", dateFormat, timeFormat));","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"dylansiew"},"content":"                varyList.add(String.format(\"%s %s\", timeFormat, dateFormat));","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"dylansiew"},"content":"        return varyList;","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"dylansiew"},"content":"        formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"dylansiew"},"content":"        return String.format(\"%s\", dateTime.format(formatter));","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"dylansiew"},"content":"    public boolean equals(BaseDate otherDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"dylansiew"},"content":"        if (otherDate !\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"dylansiew"},"content":"            return this.dateTime.toLocalDate().equals(otherDate.dateTime.toLocalDate());","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"dylansiew"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"dylansiew"},"content":"    public boolean isBefore(BaseDate otherDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"dylansiew"},"content":"        if (otherDate !\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"dylansiew"},"content":"            return this.dateTime.isBefore(otherDate.dateTime);","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"dylansiew"},"content":"        return false;","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":97}},{"path":"src/templates/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package templates;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"import templates.task.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"import templates.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"import templates.task.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * Represents a collection of tasks in the Mario application. Provides functionality to add, mark, unmark, delete,","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" * find tasks by keyword, and find tasks by date. Each task operation modifies the task list and provides feedback","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":" * about the operation performed. Additionally, it offers methods to retrieve the total number of tasks and generate","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" * string representations of tasks, facilitating interactions with the user through textual output.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"public class TaskList{","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"    public String addTask(Task args) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"            for(Task task : list){","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"                if(task.getTaskString().equals(args.getTaskString()) \u0026\u0026 task.getClass() \u003d\u003d args.getClass()){","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"                    throw new Exception(\"Duplicate task detected!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"            this.list.add(args);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"            return (String.format(\"Got it. I\u0027ve added this task:\\n%s\\n%s\", args.toString(),","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"                    this.stringNumberTask()));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"            throw e;","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"    public Integer getLength(){return this.list.size();}","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"    public String markTask(Integer args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"            throw new ArrayIndexOutOfBoundsException(","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"                    String.format(\"Unrecognised input index! Recognised range: 1 to %d\", this.list.size()));","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"        if(this.list.get(args - 1).getCompleted()){","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"            return (\"Opps! This task has already been marked as completed!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"        this.list.get(args - 1).setCompleted(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"dylansiew"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\" + this.list.get(args - 1).toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"dylansiew"},"content":"    public String unmarkTask(Integer args) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"dylansiew"},"content":"            throw new ArrayIndexOutOfBoundsException(","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"dylansiew"},"content":"                    String.format(\"Unrecognised input index! Recognised range: 1 to %d\", this.list.size()));","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"dylansiew"},"content":"        if(!this.list.get(args - 1).getCompleted()){","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"dylansiew"},"content":"            return (\"Opps! This task has already been marked as not completed!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"dylansiew"},"content":"        this.list.get(args - 1).setCompleted(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"dylansiew"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\" + this.list.get(args - 1).toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"dylansiew"},"content":"    public Task getTask(Integer args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"dylansiew"},"content":"            return null;","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"dylansiew"},"content":"        return list.get(args - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"dylansiew"},"content":"    public String deleteTask(Integer args) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"dylansiew"},"content":"        if (args \u003e this.list.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"dylansiew"},"content":"            throw new ArrayIndexOutOfBoundsException(","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"dylansiew"},"content":"                    String.format(\"Unrecognised input index! Recognised range: 1 to %d\", this.list.size()));","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"dylansiew"},"content":"        Task deletedTask \u003d this.list.get(args - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"dylansiew"},"content":"        this.list.remove(args - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"dylansiew"},"content":"        return (String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n%s\", deletedTask.toString(),","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"dylansiew"},"content":"                stringNumberTask()));","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"dylansiew"},"content":"    public String stringNumberTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"dylansiew"},"content":"        return String.format(\"Now you have %d %s in your list.\\n\", this.list.size(),","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"dylansiew"},"content":"                (this.list.size() \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"dylansiew"},"content":"    public String findTask(String keyword) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"dylansiew"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"dylansiew"},"content":"        String resultString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"dylansiew"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"dylansiew"},"content":"            if (task.getTaskString().contains(keyword)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"dylansiew"},"content":"                resultString +\u003d String.format(\"%d. %s\\n\", i, task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"dylansiew"},"content":"                i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"dylansiew"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Unable to find keyword!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"dylansiew"},"content":"        return resultString;","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"dylansiew"},"content":"    public String findDate(BaseDate otherDate) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"dylansiew"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"dylansiew"},"content":"        String resultString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"dylansiew"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"dylansiew"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"dylansiew"},"content":"                if (((Deadline) task).getDeadlineDateTime().equals(otherDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"dylansiew"},"content":"                    resultString +\u003d String.format(\"%d. %s\\n\", i, task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"dylansiew"},"content":"                    i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"dylansiew"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"dylansiew"},"content":"                if (((Event) task).getStartDateTime().equals(otherDate)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"dylansiew"},"content":"                    resultString +\u003d String.format(\"%d. %s\\n\", i, task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"dylansiew"},"content":"                    i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"dylansiew"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"dylansiew"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"dylansiew"},"content":"                continue;","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"dylansiew"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(\"Unable to find keyword!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"dylansiew"},"content":"        return resultString;","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"dylansiew"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"dylansiew"},"content":"            return \"List is empty\";","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"dylansiew"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"dylansiew"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"dylansiew"},"content":"            String listHeader \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"dylansiew"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"dylansiew"},"content":"                listHeader +\u003d i + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"dylansiew"},"content":"                i +\u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"dylansiew"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"dylansiew"},"content":"            return listHeader;","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":140}},{"path":"src/templates/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package templates.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its subclasses representing different types of tasks within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Task is the base class providing common properties such as task description and completion status.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * Event, Deadline, and ToDo extend Task to implement specific behaviors and properties relevant to their respective types,","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * such as start and end dates for Event, a deadline date for Deadline, and basic task properties for ToDo.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    private BaseDate deadlineDateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"    public static String keyword \u003d \"/by\";","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    public Deadline(String args, BaseDate deadlineDateTime) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"        super(args, \"D\", \"Deadline\");","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"    public void setDeadline(BaseDate newDate){","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        assert newDate !\u003d null : \"Error setting new date for deadline\";","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        this.deadlineDateTime \u003d newDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"    public BaseDate getDeadlineDateTime(){return this.deadlineDateTime;}","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"    public String toString(){","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"        return super.toString() + String.format(\" (by: %s)\", deadlineDateTime.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":31}},{"path":"src/templates/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package templates.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"import templates.BaseDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its subclasses representing different types of tasks within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * Task is the base class providing common properties such as task description and completion status.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" * Event, Deadline, and ToDo extend Task to implement specific behaviors and properties relevant to their respective types,","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":" * such as start and end dates for Event, a deadline date for Deadline, and basic task properties for ToDo.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    private BaseDate startDateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"    private BaseDate endDateTime \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    public static String KEYWORD_START \u003d \"/from\";","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"    public static String KEYWORD_END \u003d \"/to\";","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    public Event(String args, BaseDate startDateTime, BaseDate endDateTime) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        super(args, \"E\", \"Event\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"    public void setDate(BaseDate newStartDate, BaseDate newEndDate){","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"        assert newStartDate !\u003d null : \"Start date is null!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"        assert newEndDate !\u003d null : \"End date is null!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"        this.startDateTime \u003d newStartDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"        this.endDateTime \u003d newEndDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"    public BaseDate getStartDateTime() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"        return this.startDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"    public BaseDate getEndDateTime() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"        return this.endDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"dylansiew"},"content":"        return super.toString() + String.format(\" (from: %s to: %s)\", startDateTime.toString(), endDateTime.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":46}},{"path":"src/templates/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package templates.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its subclasses representing different types of tasks within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" * Task is the base class providing common properties such as task description and completion status.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * Event, Deadline, and ToDo extend Task to implement specific behaviors and properties relevant to their respective types,","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * such as start and end dates for Event, a deadline date for Deadline, and basic task properties for ToDo.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"public abstract class Task{","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"    private String taskString \u003d \"Null\";","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"    private Boolean completed \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    private String typeCode;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"    public Task(String args, String typeCode, String typeName) throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"            throw new Exception(String.format(\"The description of a %s cannot be empty.\\n\", typeName));","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"        args.strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"        this.taskString \u003d args;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"        this.typeCode \u003d typeCode;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"    public Boolean getCompleted() {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"        return this.completed;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"    public String getTaskString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"        return this.taskString;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"    public void setCompleted(Boolean args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"dylansiew"},"content":"        this.completed \u003d args;","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"dylansiew"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"dylansiew"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"dylansiew"},"content":"        return String.format(\"\\t[%s][%s] %s\", typeCode, (completed ? \"X\" : \" \"), taskString);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":42}},{"path":"src/templates/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"package templates.task;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":" * Abstract base class and its subclasses representing different types of tasks within the Mario application.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":" * Task is the base class providing common properties such as task description and completion status.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":" * Event, Deadline, and ToDo extend Task to implement specific behaviors and properties relevant to their respective types,","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":" * such as start and end dates for Event, a deadline date for Deadline, and basic task properties for ToDo.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"    public ToDo(String args) throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"        super(args, \"T\", \"Todo\");","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":15}},{"path":"src/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"list","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"bye","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":2}},{"path":"src/text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"dylansiew"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"dylansiew"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"dylansiew"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"dylansiew"},"content":"then","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"dylansiew"},"content":"    mkdir ../bin","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"dylansiew"},"content":"fi","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"dylansiew"},"content":"# delete output from previous run","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"dylansiew"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"dylansiew"},"content":"then","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"dylansiew"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"dylansiew"},"content":"fi","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"dylansiew"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"dylansiew"},"content":"if ! javac -cp ../ -Xlint:none -d ../bin ../**/*.java","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"dylansiew"},"content":"then","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"dylansiew"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"dylansiew"},"content":"    exit 1","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"dylansiew"},"content":"fi","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"dylansiew"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"dylansiew"},"content":"java -classpath ../bin Logic.Mario \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"dylansiew"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"dylansiew"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"dylansiew"},"content":"# diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"dylansiew"},"content":"# if [ $? -eq 0 ]","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"dylansiew"},"content":"# then","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"dylansiew"},"content":"#     echo \"Test result: PASSED\"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"dylansiew"},"content":"#     exit 0","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"dylansiew"},"content":"# else","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"dylansiew"},"content":"#     echo \"Test result: FAILED\"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"dylansiew"},"content":"#     exit 1","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"dylansiew"},"content":"# fi","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"dylansiew":34}}]
