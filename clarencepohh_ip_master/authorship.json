[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"3. After that, locate the `src/main/java/Hachi.java` file, right-click it, and choose `Run Hachi.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":1,"-":23}},{"path":"src/main/java/hachi/Hachi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import hachi.data.HachiException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import hachi.data.task.*;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":" * This program currently starts the chatbot with a greeting,","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":" * awaits user input for commands relating to a to-do task manager","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":" * and ends off the program with a goodbye message.","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":" *","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":" * @author clarencepohh","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":" * @version 06/02/2024","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"public class Hachi {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    private static ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"     * Prints a greeting to the user in the console","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"     * with the bot\u0027s name, Hachi.","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        String logo \u003d \"._. ._.  ._____.  ._____.  ._. ._.  ._.\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"                + \"| | | |  | ._. |  |  ___|  | | | |  | |\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"                + \"| |_| |  | |_| |  | |      | |_| |  | |\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"                + \"| ._. |  | ._. |  | |___   |  _  |  | |\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"                + \"|_| |_|  |_| |_|  |_____|  |_| |_|  |_|\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"Hey, Hachi Here!\\n\" + logo + \"How can I assist you today?\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", false);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console a help message that details the commands","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"     * the user can use for interacting with the chatbot.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    private static void printHelpMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", true);","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"You can use the following commands:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027list\u0027 to retrieve your current list of tasks,\");","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027mark \u003c#\u003e\u0027 to mark task number # as complete,\");","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027unmark \u003c#\u003e\u0027 to mark task number # as incomplete,\");","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027todo \u003ctask name\u003e\u0027 to create a to-do,\");","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027deadline \u003ctask name\u003e /by \u003cby date\u003e\u0027 to create a task with a deadline,\");","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027event \u003ctask name\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027 to create an event with a start and end date,\");","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\t\u0027bye\u0027 to stop chatting :(\u0027\");","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\tAnd if you need to see this again, type \u0027help\u0027!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", true);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console a spacer line made of tildes.","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     * Function call has option to choose length of the spacer,","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"     * as well as whether there is a 4-space indent before the spacer.","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"     * @param length The desired length of the spacer line. Medium is chosen by default.","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"     * @param hasTab Whether the spacer line has a 4-space indent.","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"    public static void spacerInsert(String length, boolean hasTab) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"        String spacer;","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"        if (hasTab) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"        switch (length) {","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"        case \"small\": // 20 tildes","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"            spacer \u003d \"~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"        case \"medium\": // 40 tildes","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"            spacer \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"        case \"large\": // 60 tildes","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"            spacer \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(spacer);","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"     * Retrieves the current list of tasks and prints it to","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"     * the console for the user to see.","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"     * @throws HachiException If the current list is empty.","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"    public static void retrieveList() throws HachiException{","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"        int numTasks \u003d Task.getTotalNumTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"        HachiException.checkEmptyList(numTasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", true);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\tThe following are in your list:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"        taskArrayList.forEach(task -\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"            String taskType \u003d task.getTaskType();","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"clarencepohh"},"content":"            String statusIcon \u003d task.getStatusIcon();","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"            int currentIndex \u003d taskArrayList.indexOf(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(\"\\t\" + (currentIndex + 1) + \": \");","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(\"[\" + taskType + \"] \");","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(\"[\" + statusIcon + \"] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(task.getName());","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"        });","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"clarencepohh"},"content":"     * Given a task\u0027s name and the list of tasks, add a new task into the list.","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"clarencepohh"},"content":"     * Depending on the user\u0027s input, can create subclass of tasks: Todos, Deadlines and Events.","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"clarencepohh"},"content":"     * @param taskType Type of task to be added. (Todo, Event, Deadline)","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"clarencepohh"},"content":"     * @param line The line of text given by the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"clarencepohh"},"content":"     * @param cleanInput The cleaned line of text that will be used to determine the instruction.","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"    public static void addTask(TaskType taskType, String line, String cleanInput) throws HachiException {","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"clarencepohh"},"content":"        Task toAdd;","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"clarencepohh"},"content":"        HachiException.checkValidDescription(line);","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"clarencepohh"},"content":"        if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"clarencepohh"},"content":"            int indexOfTodo \u003d cleanInput.indexOf(\"TODO\") + 5;","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"clarencepohh"},"content":"            String name \u003d line.substring(indexOfTodo).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"clarencepohh"},"content":"            toAdd \u003d new Todo(name);","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"clarencepohh"},"content":"        } else if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"clarencepohh"},"content":"            // parse deadline here","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"clarencepohh"},"content":"            int indexOfName \u003d cleanInput.indexOf(\"DEADLINE\") + 9;","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"clarencepohh"},"content":"            int indexOfBy \u003d cleanInput.indexOf(\"/BY\") + 3;","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"            HachiException.checkDeadlineByDate(indexOfBy);","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"            String name \u003d line.substring(indexOfName, indexOfBy - 3).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"clarencepohh"},"content":"            String byDate \u003d line.substring(indexOfBy).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"            toAdd \u003d new Deadline(name, byDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"clarencepohh"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"clarencepohh"},"content":"            // parse to and from dates here","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"clarencepohh"},"content":"            int indexOfName \u003d cleanInput.indexOf(\"EVENT\") + 6;","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"clarencepohh"},"content":"            int indexOfStart \u003d cleanInput.indexOf(\"/FROM\") + 5;","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"clarencepohh"},"content":"            int indexOfEnd \u003d cleanInput.indexOf(\"/TO\") + 3;","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"clarencepohh"},"content":"            HachiException.checkEventDates(indexOfStart, indexOfEnd);","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"clarencepohh"},"content":"            String name \u003d line.substring(indexOfName, indexOfStart - 5);","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"clarencepohh"},"content":"            String fromDate \u003d line.substring(indexOfStart, indexOfEnd - 3).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"clarencepohh"},"content":"            String toDate \u003d line.substring(indexOfEnd).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"clarencepohh"},"content":"            toAdd \u003d new Event(name, fromDate, toDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":158,"author":{"gitId":"clarencepohh"},"content":"        taskArrayList.add(toAdd);","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\tAdded to list: \" + toAdd.getName());","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"clarencepohh"},"content":"     * Function that cleans the user input for mark or unmark requests","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"clarencepohh"},"content":"     * and completes the function call as required.","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"clarencepohh"},"content":"     * @param cleanedInput Cleaned input string from user.","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"clarencepohh"},"content":"    public static void markOrUnmarkHandler(String cleanedInput) throws HachiException{","lastModifiedDate":"2024-02-17"},{"lineNumber":170,"author":{"gitId":"clarencepohh"},"content":"        int numTasks \u003d Task.getTotalNumTasks();","lastModifiedDate":"2024-02-17"},{"lineNumber":171,"author":{"gitId":"clarencepohh"},"content":"        HachiException.checkEmptyList(numTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"clarencepohh"},"content":"        int taskNumber \u003d getMarkTaskNumber(cleanedInput);","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"clarencepohh"},"content":"        HachiException.checkOutOfBounds(taskNumber);","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"clarencepohh"},"content":"        markOrUnmarkTask(taskNumber - 1, !cleanedInput.contains(\"UNMARK\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"clarencepohh"},"content":"     * Given a task\u0027s index and the list of tasks,","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"clarencepohh"},"content":"     * mark that task as complete or incomplete.","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"clarencepohh"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"clarencepohh"},"content":"     * @param isMark True if task is to be marked as complete, false otherwise","lastModifiedDate":"2024-02-13"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"clarencepohh"},"content":"    public static void markOrUnmarkTask(int index, boolean isMark) {","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"clarencepohh"},"content":"        taskArrayList.get(index).setCompleteness(isMark);","lastModifiedDate":"2024-02-17"},{"lineNumber":187,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\tSure, I\u0027ve done as you requested:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":188,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"clarencepohh"},"content":"        Task currentTask \u003d taskArrayList.get(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"clarencepohh"},"content":"        String taskType \u003d currentTask.getTaskType();","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"clarencepohh"},"content":"        String statusIcon \u003d currentTask.getStatusIcon();","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"\\t\" + (index + 1) + \": \");","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"[\" + taskType + \"] \");","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"[\" + statusIcon + \"] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(currentTask.getName());","lastModifiedDate":"2024-02-17"},{"lineNumber":196,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"clarencepohh"},"content":"    private static void deleteTask(String cleanedInput) throws HachiException {","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"clarencepohh"},"content":"        int numTasks \u003d Task.getTotalNumTasks();","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"clarencepohh"},"content":"        HachiException.checkEmptyList(numTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"clarencepohh"},"content":"        int taskNumber \u003d getDeleteTaskNumber(cleanedInput);","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"clarencepohh"},"content":"        HachiException.checkOutOfBounds(taskNumber);","lastModifiedDate":"2024-02-17"},{"lineNumber":203,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"clarencepohh"},"content":"        Task toDelete \u003d taskArrayList.get(taskNumber - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"clarencepohh"},"content":"        String taskType \u003d toDelete.getTaskType();","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"clarencepohh"},"content":"        String statusIcon \u003d toDelete.getStatusIcon();","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"clarencepohh"},"content":"        Task.decrementTotalNumTasks();","lastModifiedDate":"2024-02-17"},{"lineNumber":208,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":209,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\tSure, I\u0027ve done as you requested.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":210,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"\\t[\" + taskType + \"] \");","lastModifiedDate":"2024-02-17"},{"lineNumber":211,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"[\" + statusIcon + \"] \" + toDelete.getName());","lastModifiedDate":"2024-02-17"},{"lineNumber":212,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\" has been deleted from your list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":213,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":214,"author":{"gitId":"clarencepohh"},"content":"        taskArrayList.remove(taskNumber - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":215,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":216,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":217,"author":{"gitId":"clarencepohh"},"content":"    private static int getDeleteTaskNumber(String cleanedInput) throws HachiException {","lastModifiedDate":"2024-02-17"},{"lineNumber":218,"author":{"gitId":"clarencepohh"},"content":"        int indexOfTaskNum \u003d cleanedInput.indexOf(\"DELETE\") + 6; // find index of task number","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"clarencepohh"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"clarencepohh"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":222,"author":{"gitId":"clarencepohh"},"content":"            taskNumber \u003d Integer.parseInt(cleanedInput.substring(indexOfTaskNum).trim()); // parse string to int","lastModifiedDate":"2024-02-17"},{"lineNumber":223,"author":{"gitId":"clarencepohh"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-02-17"},{"lineNumber":224,"author":{"gitId":"clarencepohh"},"content":"            HachiException.checkOutOfBounds(indexOfTaskNum);","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":227,"author":{"gitId":"clarencepohh"},"content":"        return taskNumber;","lastModifiedDate":"2024-02-17"},{"lineNumber":228,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":229,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":230,"author":{"gitId":"clarencepohh"},"content":"    private static int getMarkTaskNumber(String cleanedInput) throws HachiException {","lastModifiedDate":"2024-02-17"},{"lineNumber":231,"author":{"gitId":"clarencepohh"},"content":"        int indexOfTaskNum \u003d cleanedInput.indexOf(\"MARK\") + 4; // find index of task number","lastModifiedDate":"2024-02-17"},{"lineNumber":232,"author":{"gitId":"clarencepohh"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":233,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":234,"author":{"gitId":"clarencepohh"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":235,"author":{"gitId":"clarencepohh"},"content":"            taskNumber \u003d Integer.parseInt(cleanedInput.substring(indexOfTaskNum).trim()); // parse string to int","lastModifiedDate":"2024-02-17"},{"lineNumber":236,"author":{"gitId":"clarencepohh"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-02-17"},{"lineNumber":237,"author":{"gitId":"clarencepohh"},"content":"            HachiException.checkOutOfBounds(indexOfTaskNum);","lastModifiedDate":"2024-02-17"},{"lineNumber":238,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":239,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":240,"author":{"gitId":"clarencepohh"},"content":"        return taskNumber;","lastModifiedDate":"2024-02-17"},{"lineNumber":241,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":242,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":243,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":244,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console a goodbye message for the user.","lastModifiedDate":"2024-01-23"},{"lineNumber":245,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":246,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"clarencepohh"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":248,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\tGoodbye! Hope you have a marvelous day.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":249,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":250,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":251,"author":{"gitId":"clarencepohh"},"content":"    private static void loadFile(ArrayList\u003cTask\u003e taskArrayList) throws FileNotFoundException, HachiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":252,"author":{"gitId":"clarencepohh"},"content":"        File taskFile \u003d new File(\"src/main/java/hachi.txt\");","lastModifiedDate":"2024-02-20"},{"lineNumber":253,"author":{"gitId":"clarencepohh"},"content":"        Scanner s \u003d new Scanner(taskFile);","lastModifiedDate":"2024-02-20"},{"lineNumber":254,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":255,"author":{"gitId":"clarencepohh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":256,"author":{"gitId":"clarencepohh"},"content":"            String[] line \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-02-20"},{"lineNumber":257,"author":{"gitId":"clarencepohh"},"content":"            Task toAdd;","lastModifiedDate":"2024-02-20"},{"lineNumber":258,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":259,"author":{"gitId":"clarencepohh"},"content":"            switch (line[0]){","lastModifiedDate":"2024-02-20"},{"lineNumber":260,"author":{"gitId":"clarencepohh"},"content":"            case \"T\":","lastModifiedDate":"2024-02-20"},{"lineNumber":261,"author":{"gitId":"clarencepohh"},"content":"                toAdd \u003d new Todo(line[2]);","lastModifiedDate":"2024-02-20"},{"lineNumber":262,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":263,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":264,"author":{"gitId":"clarencepohh"},"content":"            case \"D\":","lastModifiedDate":"2024-02-20"},{"lineNumber":265,"author":{"gitId":"clarencepohh"},"content":"                toAdd \u003d new Deadline(line[2], line[3]);","lastModifiedDate":"2024-02-20"},{"lineNumber":266,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":267,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":268,"author":{"gitId":"clarencepohh"},"content":"            case \"E\":","lastModifiedDate":"2024-02-20"},{"lineNumber":269,"author":{"gitId":"clarencepohh"},"content":"                toAdd \u003d new Event(line[2], line[3], line[4]);","lastModifiedDate":"2024-02-20"},{"lineNumber":270,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":271,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":272,"author":{"gitId":"clarencepohh"},"content":"            default:","lastModifiedDate":"2024-02-20"},{"lineNumber":273,"author":{"gitId":"clarencepohh"},"content":"                throw new HachiException(HachiException.CORRUPTED_SAVE_MESSAGE);","lastModifiedDate":"2024-02-20"},{"lineNumber":274,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":275,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":276,"author":{"gitId":"clarencepohh"},"content":"            if (line[1].equals(\"X\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":277,"author":{"gitId":"clarencepohh"},"content":"                toAdd.setCompleteness(true);","lastModifiedDate":"2024-02-20"},{"lineNumber":278,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":279,"author":{"gitId":"clarencepohh"},"content":"            taskArrayList.add(toAdd);","lastModifiedDate":"2024-02-20"},{"lineNumber":280,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":281,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":282,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":283,"author":{"gitId":"clarencepohh"},"content":"    private static void save(ArrayList\u003cTask\u003e taskArrayList) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":284,"author":{"gitId":"clarencepohh"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":285,"author":{"gitId":"clarencepohh"},"content":"            FileWriter fw \u003d new FileWriter(\"src/main/java/hachi.txt\", false);","lastModifiedDate":"2024-02-20"},{"lineNumber":286,"author":{"gitId":"clarencepohh"},"content":"            fw.write(\"\");","lastModifiedDate":"2024-02-20"},{"lineNumber":287,"author":{"gitId":"clarencepohh"},"content":"            fw.close(); // to clear text file","lastModifiedDate":"2024-02-20"},{"lineNumber":288,"author":{"gitId":"clarencepohh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":289,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(\"\\n\\tCreating new task list save...\");","lastModifiedDate":"2024-02-20"},{"lineNumber":290,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":291,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":292,"author":{"gitId":"clarencepohh"},"content":"        FileWriter fw \u003d new FileWriter(\"src/main/java/hachi.txt\");","lastModifiedDate":"2024-02-20"},{"lineNumber":293,"author":{"gitId":"clarencepohh"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":294,"author":{"gitId":"clarencepohh"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-02-20"},{"lineNumber":295,"author":{"gitId":"clarencepohh"},"content":"                fw.write(task.getSaveFormat() + \"\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":296,"author":{"gitId":"clarencepohh"},"content":"            } else break;","lastModifiedDate":"2024-02-20"},{"lineNumber":297,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":298,"author":{"gitId":"clarencepohh"},"content":"        fw.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":299,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":300,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":301,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":302,"author":{"gitId":"clarencepohh"},"content":"     * The main program that starts the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":303,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console for the user to read its messages.","lastModifiedDate":"2024-01-23"},{"lineNumber":304,"author":{"gitId":"clarencepohh"},"content":"     * Greets the user and awaits user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":305,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":306,"author":{"gitId":"clarencepohh"},"content":"     * Chatbot can:","lastModifiedDate":"2024-01-30"},{"lineNumber":307,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e1. retrieve list of tasks with user input \"list\"","lastModifiedDate":"2024-01-30"},{"lineNumber":308,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e2. mark or unmark tasks complete with user input \"mark #tasknumber\"","lastModifiedDate":"2024-02-06"},{"lineNumber":309,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e3. say goodbye to the user with user input \"bye\" or \"goodbye\"","lastModifiedDate":"2024-02-06"},{"lineNumber":310,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e4. add a to-do to the list of task with \"todo \u003cevent name\u003e\"","lastModifiedDate":"2024-02-06"},{"lineNumber":311,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e5. add a deadline to the list of task with \"deadline \u003cevent name\u003e /by \u003cby date\u003e\"","lastModifiedDate":"2024-02-06"},{"lineNumber":312,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e6. add an event to the list of task with \"event \u003cevent name\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\"","lastModifiedDate":"2024-02-06"},{"lineNumber":313,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e7. retrieve a list of chatbot commands with \"help\"","lastModifiedDate":"2024-02-06"},{"lineNumber":314,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":315,"author":{"gitId":"clarencepohh"},"content":"     * @param args Command line arguments - not used.","lastModifiedDate":"2024-01-23"},{"lineNumber":316,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":317,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":318,"author":{"gitId":"clarencepohh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":319,"author":{"gitId":"clarencepohh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":320,"author":{"gitId":"clarencepohh"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":321,"author":{"gitId":"clarencepohh"},"content":"        boolean isUpdated \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":322,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", false);","lastModifiedDate":"2024-02-20"},{"lineNumber":323,"author":{"gitId":"clarencepohh"},"content":"        printGreetingMessage();","lastModifiedDate":"2024-02-20"},{"lineNumber":324,"author":{"gitId":"clarencepohh"},"content":"        printHelpMessage();","lastModifiedDate":"2024-02-20"},{"lineNumber":325,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":326,"author":{"gitId":"clarencepohh"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":327,"author":{"gitId":"clarencepohh"},"content":"            loadFile(taskArrayList);","lastModifiedDate":"2024-02-20"},{"lineNumber":328,"author":{"gitId":"clarencepohh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":329,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(\"Error finding save file. Creating empty task list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":330,"author":{"gitId":"clarencepohh"},"content":"        } catch (HachiException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":331,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(\"Save file is corrupted. Creating empty task list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":332,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":333,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":334,"author":{"gitId":"clarencepohh"},"content":"        while (!isBye) {","lastModifiedDate":"2024-01-29"},{"lineNumber":335,"author":{"gitId":"clarencepohh"},"content":"            try {","lastModifiedDate":"2024-02-13"},{"lineNumber":336,"author":{"gitId":"clarencepohh"},"content":"                isUpdated \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":337,"author":{"gitId":"clarencepohh"},"content":"                String line \u003d in.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":338,"author":{"gitId":"clarencepohh"},"content":"                String cleanedInput \u003d line.toUpperCase().trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":339,"author":{"gitId":"clarencepohh"},"content":"                String firstWord;","lastModifiedDate":"2024-02-06"},{"lineNumber":340,"author":{"gitId":"clarencepohh"},"content":"                int indexOfSpace \u003d cleanedInput.indexOf(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":341,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":342,"author":{"gitId":"clarencepohh"},"content":"                if (indexOfSpace \u003d\u003d -1) { // check for single-word inputs","lastModifiedDate":"2024-02-06"},{"lineNumber":343,"author":{"gitId":"clarencepohh"},"content":"                    firstWord \u003d cleanedInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":344,"author":{"gitId":"clarencepohh"},"content":"                } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":345,"author":{"gitId":"clarencepohh"},"content":"                    firstWord \u003d cleanedInput.substring(0, indexOfSpace);","lastModifiedDate":"2024-02-06"},{"lineNumber":346,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-02-06"},{"lineNumber":347,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":348,"author":{"gitId":"clarencepohh"},"content":"                switch (firstWord) {","lastModifiedDate":"2024-02-06"},{"lineNumber":349,"author":{"gitId":"clarencepohh"},"content":"                case \"MARK\":","lastModifiedDate":"2024-02-13"},{"lineNumber":350,"author":{"gitId":"clarencepohh"},"content":"                case \"UNMARK\":","lastModifiedDate":"2024-02-13"},{"lineNumber":351,"author":{"gitId":"clarencepohh"},"content":"                    markOrUnmarkHandler(cleanedInput);","lastModifiedDate":"2024-02-17"},{"lineNumber":352,"author":{"gitId":"clarencepohh"},"content":"                    isUpdated \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":353,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-02-13"},{"lineNumber":354,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":355,"author":{"gitId":"clarencepohh"},"content":"                case \"LIST\":","lastModifiedDate":"2024-02-06"},{"lineNumber":356,"author":{"gitId":"clarencepohh"},"content":"                    retrieveList();","lastModifiedDate":"2024-02-17"},{"lineNumber":357,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-02-06"},{"lineNumber":358,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":359,"author":{"gitId":"clarencepohh"},"content":"                case \"DELETE\":","lastModifiedDate":"2024-02-17"},{"lineNumber":360,"author":{"gitId":"clarencepohh"},"content":"                    deleteTask(cleanedInput);","lastModifiedDate":"2024-02-17"},{"lineNumber":361,"author":{"gitId":"clarencepohh"},"content":"                    isUpdated \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":362,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":363,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":364,"author":{"gitId":"clarencepohh"},"content":"                case \"TODO\":","lastModifiedDate":"2024-02-06"},{"lineNumber":365,"author":{"gitId":"clarencepohh"},"content":"                case \"EVENT\":","lastModifiedDate":"2024-02-06"},{"lineNumber":366,"author":{"gitId":"clarencepohh"},"content":"                case \"DEADLINE\":","lastModifiedDate":"2024-02-06"},{"lineNumber":367,"author":{"gitId":"clarencepohh"},"content":"                    TaskType currentTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":368,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":369,"author":{"gitId":"clarencepohh"},"content":"                    if (cleanedInput.startsWith(\"EVENT\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":370,"author":{"gitId":"clarencepohh"},"content":"                        currentTask \u003d TaskType.EVENT;","lastModifiedDate":"2024-02-13"},{"lineNumber":371,"author":{"gitId":"clarencepohh"},"content":"                    } else if (cleanedInput.startsWith(\"DEADLINE\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":372,"author":{"gitId":"clarencepohh"},"content":"                        currentTask \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-02-06"},{"lineNumber":373,"author":{"gitId":"clarencepohh"},"content":"                    } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":374,"author":{"gitId":"clarencepohh"},"content":"                        currentTask \u003d TaskType.TODO;","lastModifiedDate":"2024-02-13"},{"lineNumber":375,"author":{"gitId":"clarencepohh"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":376,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":377,"author":{"gitId":"clarencepohh"},"content":"                    addTask(currentTask, line, cleanedInput);","lastModifiedDate":"2024-02-17"},{"lineNumber":378,"author":{"gitId":"clarencepohh"},"content":"                    isUpdated \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":379,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-02-06"},{"lineNumber":380,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":381,"author":{"gitId":"clarencepohh"},"content":"                case \"BYE\":","lastModifiedDate":"2024-01-29"},{"lineNumber":382,"author":{"gitId":"clarencepohh"},"content":"                case \"GOODBYE\":","lastModifiedDate":"2024-01-30"},{"lineNumber":383,"author":{"gitId":"clarencepohh"},"content":"                    isBye \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":384,"author":{"gitId":"clarencepohh"},"content":"                    printGoodbyeMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":385,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-02-06"},{"lineNumber":386,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":387,"author":{"gitId":"clarencepohh"},"content":"                case \"HELP\":","lastModifiedDate":"2024-02-06"},{"lineNumber":388,"author":{"gitId":"clarencepohh"},"content":"                    printHelpMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":389,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":390,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":391,"author":{"gitId":"clarencepohh"},"content":"                default:","lastModifiedDate":"2024-01-29"},{"lineNumber":392,"author":{"gitId":"clarencepohh"},"content":"                    HachiException.invalidInput();","lastModifiedDate":"2024-02-13"},{"lineNumber":393,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":394,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":395,"author":{"gitId":"clarencepohh"},"content":"            } catch (HachiException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":396,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":397,"author":{"gitId":"clarencepohh"},"content":"            } finally {","lastModifiedDate":"2024-02-13"},{"lineNumber":398,"author":{"gitId":"clarencepohh"},"content":"                if (isUpdated) { // save if there is a file update","lastModifiedDate":"2024-02-20"},{"lineNumber":399,"author":{"gitId":"clarencepohh"},"content":"                    try {","lastModifiedDate":"2024-02-20"},{"lineNumber":400,"author":{"gitId":"clarencepohh"},"content":"                        save(taskArrayList);","lastModifiedDate":"2024-02-20"},{"lineNumber":401,"author":{"gitId":"clarencepohh"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":402,"author":{"gitId":"clarencepohh"},"content":"                        System.out.println(\"There was an error saving tasks.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":403,"author":{"gitId":"clarencepohh"},"content":"                    }","lastModifiedDate":"2024-02-20"},{"lineNumber":404,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":405,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":406,"author":{"gitId":"clarencepohh"},"content":"                spacerInsert(\"medium\", true);","lastModifiedDate":"2024-02-13"},{"lineNumber":407,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":408,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":409,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":410,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"clarencepohh":410}},{"path":"src/main/java/hachi/data/HachiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.data;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import hachi.data.task.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":" * Represent the error handling class for the chatbot Hachi.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"public class HachiException extends Exception{","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    public static final String INVALID_INPUT_MESSAGE \u003d \"Not marvelous! I\u0027m not sure what you\u0027re saying here...\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"    public static final String EMPTY_TASK_LIST_MESSAGE \u003d \"It appears you have no tasks at the moment...\";","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public static final String EMPTY_TASK_DESCRIPTION_MESSAGE \u003d \"Where\u0027s the task description? \" +","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"            \"Type \u0027help\u0027 without quotes if you need to see the format! \";","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    public static final String MISSING_DEADLINE_BY_DATE_MESSAGE \u003d \"Looks like you\u0027re missing the complete-by date! Remember: /by \u003cdate here\u003e!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    public static final String MISSING_EVENT_START_END_DATE_MESSAGE \u003d \"Your start or end dates have some formatting issues. It\u0027s: /from \u003cstart date\u003e /to \u003cend date\u003e\";","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"    public static final String LIST_OUT_OF_BOUNDS_MESSAGE \u003d \"Woah, I\u0027m not so sure if that task exists. You might want to check that task number again.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    public static final String CORRUPTED_SAVE_MESSAGE \u003d \"The data stored looks corrupted. Getting rid of it.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    public HachiException (String errorMessage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    public static void invalidInput() throws HachiException {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"        throw new HachiException(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    public static void checkEmptyList(int numTasks) throws HachiException {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"            throw new HachiException(EMPTY_TASK_LIST_MESSAGE);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    public static void checkValidDescription (String line) throws HachiException {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"        String[] userWords \u003d line.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"        if (userWords.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"            throw new HachiException(EMPTY_TASK_DESCRIPTION_MESSAGE);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"    public static void checkDeadlineByDate (int indexOfBy) throws HachiException {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"        if (indexOfBy \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"            throw new HachiException(MISSING_DEADLINE_BY_DATE_MESSAGE);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"    public static void checkEventDates (int indexOfStart, int indexOfEnd) throws HachiException {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"        if (indexOfEnd \u003d\u003d 2 || indexOfStart \u003d\u003d 4) {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"            throw new HachiException(MISSING_EVENT_START_END_DATE_MESSAGE);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"    public static void checkOutOfBounds (int taskNumber) throws HachiException{","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"        int currentLastTask \u003d Task.getTotalNumTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        if (taskNumber \u003e currentLastTask) {","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"            throw new HachiException(LIST_OUT_OF_BOUNDS_MESSAGE);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"        return super.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"clarencepohh":62}},{"path":"src/main/java/hachi/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.data.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String byDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Deadlines are also considered as tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * @param by The date of the task\u0027s deadline as a string.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"        this.byDate \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"        return \"D\";","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    public String getName () {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        return name + \" (by: \" + byDate + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \" | \" + getStatusIcon() + \" | \" + this.name + \" | \" + byDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"clarencepohh":34}},{"path":"src/main/java/hachi/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.data.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String startDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    protected String endDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Events are also considered as tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * @param start The starting time/date of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     * @param end The ending time/date of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"        return \"E\";","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    public String getName () {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        return name + \"(from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \" | \" + getStatusIcon() + \" | \" + this.name + \" | \" + startDate + \" | \" + endDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"clarencepohh":36}},{"path":"src/main/java/hachi/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.data.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":" * Represents a Task with the elements task name, its completeness status","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":" * and a class-level element that tracks the total number of tasks currently active.","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":" * @author clarencepohh","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":" * @version 30/01/2024","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    protected String name;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    private static int totalNumTasks \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        totalNumTasks +\u003d 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * Returns the name of the task that invokes this function.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"     * @return Returns the string of the task\u0027s name.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    public String getName() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"        return name;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     * Sets the task\u0027s name to the given name.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name to set the task\u0027s name to.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     * Checks if a task is complete and returns true if complete, false if incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     * @return The boolean value that represents whether a task is completed:","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        return isCompleted;","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"     * Sets the completeness status of a task.","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     * @param completed Boolean value to set the task to.","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"    public void setCompleteness(boolean completed) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"        isCompleted \u003d completed;","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"     * Retrieves the class-level counter of total number of tasks active.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"     * @return The total number of tasks active.","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"    public static int getTotalNumTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"        return totalNumTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"    public static void decrementTotalNumTasks() {","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"        totalNumTasks -\u003d 1;","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"     * Checks the completeness status of a task and returns to the","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"     * caller the status icon of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"     * \"X\" for complete, \" \" for incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"     * @return String representation of completeness status icon.","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"        return \"?\";","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"        return \"?\";","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"clarencepohh":100}},{"path":"src/main/java/hachi/data/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.data.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    TODO,","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    EVENT","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"clarencepohh":7}},{"path":"src/main/java/hachi/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.data.task;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Todos are also considered as tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        return \"T\";","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \" | \" + getStatusIcon() + \" | \" + getName();","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"clarencepohh":25}},{"path":"src/main/java/hachi/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import hachi.ui.Ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":" * Parses user input in order to determine instructions for the chatbot.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":" * To be completed","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    public Parser (Ui ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"clarencepohh":16}},{"path":"src/main/java/hachi/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package hachi.ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":" * Represents the UI interface that the user interacts with.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":" * To be completed","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"public class Ui {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"    private final Scanner in;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public Ui () {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"clarencepohh":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\hachi\\*.java ..\\src\\main\\java\\hachi\\data\\task\\*.java ..\\src\\main\\java\\hachi\\data\\*.java ..\\src\\main\\java\\hachi\\parser\\*.java ..\\src\\main\\java\\hachi\\ui\\*.java","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"REM run the program, feed commands from test.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"java -classpath ..\\bin hachi.Hachi \u003c test.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":3,"-":18}},{"path":"text-ui-test/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"todo go to school","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"event chinese new year /from friday /to 15 days after friday","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"deadline project review /by thursday","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"mark 1","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"mark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"unmark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"delete 2","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"list","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"clarencepohh":14}}]
