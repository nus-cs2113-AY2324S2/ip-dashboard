[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"3. After that, locate the `src/main/java/Hachi.java` file, right-click it, and choose `Run Hachi.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":1,"-":23}},{"path":"src/main/java/Hachi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":" * This program currently starts the chatbot with a greeting,","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":" * and ends off the program with a goodbye message.","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":" *","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":" * @author clarencepohh","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":" * @version 30/01/2024","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"public class Hachi {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * Prints a greeting to the user in the console","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     * with the bot\u0027s name, Hachi.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        String logo \u003d \"._. ._.  ._____.  ._____.  ._. ._.  ._.\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"                + \"| | | |  | ._. |  |  ___|  | | | |  | |\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"                + \"| |_| |  | |_| |  | |      | |_| |  | |\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"                + \"| ._. |  | ._. |  | |___   |  _  |  | |\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"                + \"|_| |_|  |_| |_|  |_____|  |_| |_|  |_|\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"Hey, Hachi Here!\\n\" + logo + \"How can I assist you today?\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", false);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console a spacer line made of tildes.","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     * Function call has option to choose length of the spacer,","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * as well as whether there is a 4-space indent before the spacer.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"     * @param length The desired length of the spacer line. Medium is chosen by default.","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"     * @param hasTab Whether the spacer line has a 4-space indent.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"    public static void spacerInsert(String length, boolean hasTab) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"        String spacer;","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        if (hasTab) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(\"    \");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        switch (length) {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        case \"small\": // 20 tildes","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"            spacer \u003d \"~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"        case \"medium\": // 40 tildes","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"            spacer \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        case \"large\": // 60 tildes","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"            spacer \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(spacer);","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"     * Retrieves the current list of tasks and prints it to","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     * the console for the user to see.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * @param listOfTasks The Task[] array that contains the list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"    public static void retrieveList(Task[] listOfTasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        int numTasks \u003d Task.getTotalNumTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", true);","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"    The following tasks are in your to-do:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"            String statusIcon \u003d listOfTasks[i].getStatusIcon();","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(\"    [\" + statusIcon + \"] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"            System.out.print(i + \": \");","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(listOfTasks[i].getName());","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"     * Given a task\u0027s name and the list of tasks,","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"     * add a new task into the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"     * @param name Name of the task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"     * @param listOfTasks The Task[] array that the new task will be added to.","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"    public static void addTask(String name, Task[] listOfTasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"        int numTasks \u003d Task.getTotalNumTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"        Task toAdd \u003d new Task(name);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        listOfTasks[numTasks] \u003d toAdd;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"    Task added to list: \" + name);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"     * Given a task\u0027s index and the list of tasks,","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"     * mark that task as complete.","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"     * @param listOfTasks The Task[] array that contains the list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"    public static void markTask(int index, Task[] listOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"        listOfTasks[index].setCompleteness(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"    Sure, I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"        String statusIcon \u003d listOfTasks[index].getStatusIcon();","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"    [\" + statusIcon + \"] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(index + \": \");","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(listOfTasks[index].getName());","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"     * Given a task\u0027s index and the list of tasks,","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"clarencepohh"},"content":"     * mark that task as incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"     * @param listOfTasks The Task[] array that contains the list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"    public static void unmarkTask(int index, Task[] listOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"        listOfTasks[index].setCompleteness(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"    Okay, marking this task as incomplete now:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"clarencepohh"},"content":"        String statusIcon \u003d listOfTasks[index].getStatusIcon();","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(\"    [\" + statusIcon + \"] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"clarencepohh"},"content":"        System.out.print(index + \": \");","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(listOfTasks[index].getName());","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console a goodbye message for the user.","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"clarencepohh"},"content":"    public static void goodbye() {","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"    Goodbye! Hope you have a marvelous day.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", true);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"clarencepohh"},"content":"     * The main program that starts the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"clarencepohh"},"content":"     * Prints to the console for the user to read its messages.","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"clarencepohh"},"content":"     * Greets the user and awaits user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"clarencepohh"},"content":"     * Chatbot can:","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e1. retrieve list of tasks with user input \"list\"","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e2. add tasks to the list with user input \"#taskname\"","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e3. mark or unmark tasks complete with user input \"mark #tasknumber\"","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"clarencepohh"},"content":"     * \u003cp\u003e4. say goodbye to the user with user input \"bye\" or \"goodbye\"","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"clarencepohh"},"content":"     * @param args Command line arguments - not used.","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"clarencepohh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"clarencepohh"},"content":"        spacerInsert(\"medium\", false);","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"clarencepohh"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"clarencepohh"},"content":"        Task[] listOfTasks \u003d new Task[100];","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"clarencepohh"},"content":"        greet();","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"clarencepohh"},"content":"        while (!isBye) {","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"clarencepohh"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"clarencepohh"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"clarencepohh"},"content":"            String cleanedInput \u003d line.toUpperCase().trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"clarencepohh"},"content":"            if (cleanedInput.contains(\"MARK\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"clarencepohh"},"content":"                int indexOfTask \u003d cleanedInput.indexOf(\"MARK\") + 4; // find index of task number","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"clarencepohh"},"content":"                int taskNumber \u003d Integer.parseInt(cleanedInput.substring(indexOfTask).trim()); // parse string to int","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"clarencepohh"},"content":"                if (cleanedInput.contains(\"UNMARK\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"clarencepohh"},"content":"                    unmarkTask(taskNumber, listOfTasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"clarencepohh"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"clarencepohh"},"content":"                    markTask(taskNumber, listOfTasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"clarencepohh"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"clarencepohh"},"content":"                switch (cleanedInput) {","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"clarencepohh"},"content":"                case \"BYE\":","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"clarencepohh"},"content":"                case \"GOODBYE\":","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"clarencepohh"},"content":"                    isBye \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"clarencepohh"},"content":"                    goodbye();","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"clarencepohh"},"content":"                case \"LIST\":","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"clarencepohh"},"content":"                    retrieveList(listOfTasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"clarencepohh"},"content":"                default:","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"clarencepohh"},"content":"                    addTask(line, listOfTasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"clarencepohh":184}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":" * Represents a Task with the elements task name, its completeness status","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":" * and a class-level element that tracks the total number of tasks currently active.","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":" * @author clarencepohh","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":" * @version 30/01/2024","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    protected String name;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    private static int totalNumTasks \u003d 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"        totalNumTasks +\u003d 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Returns the name of the task that invokes this function.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @return Returns the string of the task\u0027s name.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    public String getName() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"        return name;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"     * Sets the task\u0027s name to the given name.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name to set the task\u0027s name to.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"     * Checks if a task is complete and returns true if complete, false if incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     * @return The boolean value that represents whether a task is completed:","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"        return isCompleted;","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"     * Sets the completeness status of a task.","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"     * @param completed Boolean value to set the task to.","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"    public void setCompleteness(boolean completed) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"        isCompleted \u003d completed;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"     * Retrieves the class-level counter of total number of tasks active.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"     * @return The total number of tasks active.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"    public static int getTotalNumTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"        return totalNumTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"     * Checks the completeness status of a task and returns to the","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"     * caller the status icon of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"     * \"X\" for complete, \" \" for incomplete.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"     * @return String representation of completeness status icon.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"clarencepohh":86}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"java -classpath ..\\bin Hachi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":1,"-":20}}]
