[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"# User Guide for Quill","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"## Quick Start","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"1. Ensure you have `Java-11` installed on your computer","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"2. Download the `ip.jar` from the project GitHub","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"3. Copy the jar file to your desired folder","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"4. Open a command prompt in the same directory as the jar file","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"5. Run `java -jar ip.jar` to run the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"### Task list","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"Quill helps user to keep track of todos, deadlines and events ","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"in the form of a task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"### Mark as done / not done","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"Quill allows user to mark tasks as done or not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"### Memory Storage","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"Quill saves your task list in a text file, ensuring your tasks ","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"are retained between sessions. This enables you to effortlessly","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"pick up where you left off each time you use Quill.","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user.\\","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    \u003e e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"\u003e - `DATE` must be in the format `YYYY-MM-DD HH:mm`, where HH:mm is time in 24 hours format.\\","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    \u003e e.g. `2024-03-02 18:16`","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"\u003e - `INDEX` must be an integer and is not larger than the size of task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"Adds a new todo task to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"Example of usage: `todo read book`","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"Expected outcome: ","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"The new todo task has now been added to the task list ","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"and a confirmation message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"[T][ ] read book","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"____________________________________________________________`","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"Adds a new deadline task to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"Example of usage: `deadline return book /by 2024-03-02 18:16`","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"nyh3"},"content":"Expected outcome: ","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"nyh3"},"content":"The new deadline task has now been added to the task list","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"nyh3"},"content":"and a confirmation message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"nyh3"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"nyh3"},"content":"[D][ ] return book (by: 02 Mar 2024 06:16 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"nyh3"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"nyh3"},"content":"### `event` - Add a event task","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"nyh3"},"content":"Adds a new event task to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"nyh3"},"content":"Format: `event DESCRIPTION /from DATE /to DATE`","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"nyh3"},"content":"Example of usage: `event book signing /from 2024-03-01 02:30 /to 2024-03-30 21:40`","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"nyh3"},"content":"Expected outcome:","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"nyh3"},"content":"The new event task has now been added to the task list ","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"nyh3"},"content":"and a confirmation message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"nyh3"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"nyh3"},"content":"[E][ ] book signing (from: 01 Mar 2024 02:30 AM to: 30 Mar 2024 09:40 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"nyh3"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"nyh3"},"content":"### `list` - List all tasks","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"nyh3"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"nyh3"},"content":"Format: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"nyh3"},"content":"The task list will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"nyh3"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"nyh3"},"content":"1.[T][ ] read book","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"nyh3"},"content":"2.[D][ ] return book (by: 02 Mar 2024 06:16 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"nyh3"},"content":"3.[E][ ] book signing (from: 01 Mar 2024 02:30 AM to: 30 Mar 2024 09:40 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"nyh3"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"nyh3"},"content":"Marks a task as done in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"nyh3"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"nyh3"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"nyh3"},"content":"Task will be mark as done and a confirmation message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"nyh3"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"nyh3"},"content":"[T][X] read book","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"nyh3"},"content":"### `unmark` - Mark a task as not done","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"nyh3"},"content":"Marks a task as not done in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"nyh3"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"nyh3"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"nyh3"},"content":"Expected outcome:","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"nyh3"},"content":"Task will be mark as not done and a confirmation message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"nyh3"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"nyh3"},"content":"[T][ ] read book","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"nyh3"},"content":"### `delete` - Delete a task","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"nyh3"},"content":"Delete a task from the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"nyh3"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":160,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"nyh3"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2024-02-25"},{"lineNumber":162,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":163,"author":{"gitId":"nyh3"},"content":"Expected outcome: ","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"nyh3"},"content":"Task will be deleted from task list and a confirmation message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":167,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":168,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":169,"author":{"gitId":"nyh3"},"content":"Got it. I\u0027ve removed this task:","lastModifiedDate":"2024-02-25"},{"lineNumber":170,"author":{"gitId":"nyh3"},"content":"[T][ ] read book","lastModifiedDate":"2024-02-25"},{"lineNumber":171,"author":{"gitId":"nyh3"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":172,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":174,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":175,"author":{"gitId":"nyh3"},"content":"### `find` - Find tasks by keyword","lastModifiedDate":"2024-02-25"},{"lineNumber":176,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":177,"author":{"gitId":"nyh3"},"content":"Finds matching tasks in the task list by keyword.","lastModifiedDate":"2024-02-25"},{"lineNumber":178,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":179,"author":{"gitId":"nyh3"},"content":"Format: `find DESCRIPTION`","lastModifiedDate":"2024-02-25"},{"lineNumber":180,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":181,"author":{"gitId":"nyh3"},"content":"Example of usage: `find return`","lastModifiedDate":"2024-02-25"},{"lineNumber":182,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":183,"author":{"gitId":"nyh3"},"content":"Expected outcome: ","lastModifiedDate":"2024-02-25"},{"lineNumber":184,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":185,"author":{"gitId":"nyh3"},"content":"A list of tasks that have matching descriptions to the keyword will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":186,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":187,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":188,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":189,"author":{"gitId":"nyh3"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-25"},{"lineNumber":190,"author":{"gitId":"nyh3"},"content":"1.[D][ ] return book (by: 02 Mar 2024 06:16 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":191,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":192,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":193,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":194,"author":{"gitId":"nyh3"},"content":"### `bye` - Close Quill","lastModifiedDate":"2024-02-25"},{"lineNumber":195,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":196,"author":{"gitId":"nyh3"},"content":"Close Quill and store the data into the memory file.","lastModifiedDate":"2024-02-25"},{"lineNumber":197,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":198,"author":{"gitId":"nyh3"},"content":"Format: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":199,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":200,"author":{"gitId":"nyh3"},"content":"Expected outcome: ","lastModifiedDate":"2024-02-25"},{"lineNumber":201,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":202,"author":{"gitId":"nyh3"},"content":"A goodbye message will be shown.","lastModifiedDate":"2024-02-25"},{"lineNumber":203,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":204,"author":{"gitId":"nyh3"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":205,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":206,"author":{"gitId":"nyh3"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2024-02-25"},{"lineNumber":207,"author":{"gitId":"nyh3"},"content":"____________________________________________________________","lastModifiedDate":"2024-02-25"},{"lineNumber":208,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"nyh3":179,"-":30}},{"path":"src/main/java/Quill.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"import quill.command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"import quill.command.ExitCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.parser.Parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.storage.Save;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import quill.task.*;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" * The Quill Class represents the main application class for Quill, a task management application.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" * It initializes the user interface, task storage and task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" * It runs the application loop, managing the user interface, task storage, and task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"public class Quill {","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"    private static TextUi ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     * Constructs a Quill object","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     * Initializes the user interface and task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    public Quill() {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"        tasks \u003d Save.readFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     * Runs the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     * It displays a welcome message, reads user commands, and executes corresponding actions.","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     * The application continues running until the user exits.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"    public void run() {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"        TextUi.showWelcomeMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"        Command c;","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"        do {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"            String line \u003d ui.getUserCommand();","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"            TextUi.showDivider();","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"            c \u003d Parser.parse(line);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"            c.execute(tasks, ui);","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"            TextUi.showDivider();","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"        } while (!ExitCommand.isExit(c));","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"     * The main method that starts the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"        new Quill().run();","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"nyh3":51}},{"path":"src/main/java/quill/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.exception.QuillException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.storage.Save;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import quill.task.*;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" * The AddCommand Class represents a command for adding a task to the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior for adding different types of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     * Constructs the AddCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"    public AddCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     * Executes the AddCommand to add the latest task to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"    public void execute(TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"            handleAddTodo(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"            handleAddDeadline(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"        case \"event\":","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"            handleAddEvent(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"        default:","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Error adding task: unknown task type\");","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"     * Adds todo task to the task list and save it to storage.","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"    public void handleAddTodo(TaskList tasks) {","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"        int taskNumber \u003d TaskList.getTotalTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"        if (parameter.isEmpty()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"No empty descriptions allowed for todos. Fill it in!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"            tasks.addTask(new Todo(parameter));","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"            TextUi.showAddTask(tasks.getTask(taskNumber));","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"nyh3"},"content":"            Save.writeToFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"nyh3"},"content":"     * Adds deadline task to the task list and save it to storage.","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"nyh3"},"content":"    public void handleAddDeadline(TaskList tasks) {","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"nyh3"},"content":"        int taskNumber \u003d TaskList.getTotalTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"nyh3"},"content":"            tasks.addTask(new Deadline(parameter));","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"nyh3"},"content":"            TextUi.showAddTask(tasks.getTask(taskNumber));","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"nyh3"},"content":"            Save.writeToFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"nyh3"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Seriously? You call that a deadline?\");","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"It\u0027s \u0027deadline [task] /by yyyy-MM-dd HH:mm\u0027. Get it right!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"nyh3"},"content":"        } catch (QuillException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"No empty descriptions allowed for deadline. Fill it in!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"nyh3"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Listen, it\u0027s simple: /by yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"nyh3"},"content":"     * Adds event task to the task list and save it to storage.","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"nyh3"},"content":"    public void handleAddEvent(TaskList tasks) {","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"nyh3"},"content":"        int taskNumber \u003d TaskList.getTotalTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"nyh3"},"content":"            tasks.addTask(new Event(parameter));","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"nyh3"},"content":"            TextUi.showAddTask(tasks.getTask(taskNumber));","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"nyh3"},"content":"            Save.writeToFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"nyh3"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Seriously? You call that an event?\");","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"It\u0027s \u0027event [task] /from yyyy-MM-dd HH:mm /to yyyy-MM-dd HH:mm\u0027. Get it right!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"nyh3"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Listen, it\u0027s simple: /by yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"nyh3"},"content":"        } catch (QuillException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"No empty descriptions allowed for event. Fill it in!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":106}},{"path":"src/main/java/quill/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" * The Command class represents an abstract command in the Luke application.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" * It serves as the base class for more specific command types.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"    protected String commandWord;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"    protected String parameter;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     * Constructs a command object with the specified command word and parameters.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"    public Command(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"        this.parameter \u003d parameter;","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * Executes the Command.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"    public void execute (TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":33}},{"path":"src/main/java/quill/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.storage.Save;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" * The DeleteCommand Class represents a command for deleting a task.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior for deleting a task.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     * Constructs the DeleteCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"    public DeleteCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"     * Executes the DeleteCommand to delete the task from task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    public void execute(TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"            int taskNumber \u003d Integer.parseInt(parameter) - 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"            TextUi.showDeleteTask(tasks.getTask(taskNumber));","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"            tasks.removeTask(taskNumber);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"            Save.writeToFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Hey, wake up! That task? Non-existent. Try something real.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Listen up! Numbers only, got it? Don\u0027t bother with anything else\");","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":42}},{"path":"src/main/java/quill/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.storage.Save;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" * The ExitCommand Class represents a command for exiting from Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior exiting the application.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     * Constructs the ExitCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"    public ExitCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"     * Executes the ExitCommand to exit the application.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    public void execute(TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"        Save.writeToFile(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"        TextUi.showGoodbyeMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"     * Checks if the command is ExitCommand.","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"     * @param command The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"     * @return True if command is ExitCommand, false otherwise.","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":45}},{"path":"src/main/java/quill/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.task.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" * The FindCommand Class represents a command for finding a task from the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior for finding different tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * Constructs the FindCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    public FindCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * Executes the FindCommand to find tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    public void execute(TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"        ArrayList\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTotalTasks(); i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"            if (tasks.getTask(i).getDescription().contains(parameter)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"                matchingTask.add(tasks.getTask(i));","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"        TextUi.showFindList(matchingTask);","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"nyh3":42}},{"path":"src/main/java/quill/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" * The ListCommand Class represents a command for listing task form the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior for listing tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"     * Constructs the ListCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"    public ListCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"     * Executes the ListCommand to list tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"    public void execute (TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"        TextUi.showList(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":31}},{"path":"src/main/java/quill/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.storage.Save;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" * The MarkCommand Class represents a command to mark task as done or not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior marking tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     * Constructs the MarkCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"    public MarkCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"     * Executes the MarkCommand to mark tasks as done or not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    public void execute(TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"            int taskNumber \u003d Integer.parseInt(parameter) - 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"            if (commandWord.equals(\"mark\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"                tasks.getTask(taskNumber).markAsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"                tasks.getTask(taskNumber).markAsNotDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"            System.out.println(tasks.getTask(taskNumber).toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"            Save.writeToFile(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Hey, wake up! That task? Non-existent. Try something real.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Listen up! Numbers only, got it? Don\u0027t bother with anything else\");","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":48}},{"path":"src/main/java/quill/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.ui.TextUi;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" * The UnknownCommand Class represents a command that is unknown.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" * It extends the Command class and includes specific behavior for unknown commands.","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"public class UnknownCommand extends Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"     * Constructs the UnknownCommand object with the specified commandWord and parameter.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * @param parameter The user input excluding the command word.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"    public UnknownCommand(String commandWord, String parameter) {","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"        super(commandWord, parameter);","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"     * Executes the unknownCommand to display an error message.","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"    public void execute(TaskList tasks, TextUi ui) {","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"        TextUi.showUnknownMessage();","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":32}},{"path":"src/main/java/quill/exception/QuillException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.exception;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":" * The QuillException Class represents custom","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":" * exceptions specific to the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"public class QuillException extends Exception{","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"nyh3":9}},{"path":"src/main/java/quill/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.command.*;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":" * The Parser Class handles the parsing of user input into valid commands.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"public class Parser {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"     * Parses the user input and returns an appropriate Command object.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"        String command;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"        int index \u003d input.indexOf(\" \");","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"            command \u003d input.substring(0, index);","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"            input \u003d input.substring(index + 1);","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"            command \u003d input;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"            input \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"        Command c;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"        switch(command) {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"            c \u003d new ExitCommand(command, input);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"        case \"list\":","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"            c \u003d new ListCommand(command, input);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"            c \u003d new MarkCommand(command, input);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"        case \"event\":","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"            c \u003d new AddCommand(command, input);","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"            c \u003d new DeleteCommand(command, input);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"        case \"find\":","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"            c \u003d new FindCommand(command, input);","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"        default:","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"            c\u003d new UnknownCommand(command, input);","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"        return c;","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":56}},{"path":"src/main/java/quill/storage/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.exception.QuillException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.task.*;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"import java.io.*;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" * The Save Class handles the reading from and writing","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" * task data to a file as well as creating a new file.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"public class Save {","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * Creates a memory file at the specified file path.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"    private static void createNewFile() {","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"        File file \u003d new File(\"./data/quill.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"        File directory \u003d new File(file.getParent());","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"                if (directory.mkdirs()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"                    System.out.println(\"Directory created: \" + directory.getAbsolutePath());","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"                } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"                    System.out.println(\"Failed to create directory: \" + directory.getAbsolutePath());","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"                System.out.println(\"New file created: \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"            } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"                System.out.println(\"Failed to create new file: \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Error creating new file: \" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"     * Reads tasks from a specified file and returns them as a TaskList of Task objects.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"     * @return A TaskList of Task of objects read from the file.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"    public static TaskList readFile() {","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"        File file \u003d new File(\"./data/quill.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"            createNewFile();","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"            return tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"                Task task \u003d getTask(line);","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"                tasks.addTask(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Error\" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"        } catch (QuillException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"QuillException while reading file\");","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"        return tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"nyh3"},"content":"     * Reformat a string as a Task object.","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"nyh3"},"content":"     * @param line The string to be reformatted.","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"nyh3"},"content":"     * @return The Task object containing the reformatted string.","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"nyh3"},"content":"     * @throws QuillException If the string is of invalid format.","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"nyh3"},"content":"    private static Task getTask(String line) throws QuillException {","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"nyh3"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"nyh3"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"nyh3"},"content":"            throw new QuillException();","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"nyh3"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"nyh3"},"content":"        boolean isDone \u003d Boolean.parseBoolean(parts[1].trim());","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"nyh3"},"content":"        String taskDetails \u003d parts[2].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"nyh3"},"content":"        Task task;","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"nyh3"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"nyh3"},"content":"        case \"T\":","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"nyh3"},"content":"            task \u003d new Todo(taskDetails);","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"nyh3"},"content":"        case \"D\":","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"nyh3"},"content":"            task \u003d new Deadline(taskDetails);","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"nyh3"},"content":"        case \"E\":","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"nyh3"},"content":"            task \u003d new Event(taskDetails);","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"nyh3"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"nyh3"},"content":"            task \u003d new Task(\"Error\");","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"nyh3"},"content":"            break;","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"nyh3"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"nyh3"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"nyh3"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"nyh3"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"nyh3"},"content":"        return task;","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"nyh3"},"content":"     * Write the TaskList into the specified file.","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"nyh3"},"content":"     * @param tasks The TaskList to be written into the file.","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"nyh3"},"content":"    public static void writeToFile(TaskList tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"nyh3"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"nyh3"},"content":"            PrintWriter fw \u003d new PrintWriter(\"./data/quill.txt\");","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"nyh3"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTotalTasks(); i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"nyh3"},"content":"                fw.println(tasks.getTask(i).saveTask());","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"nyh3"},"content":"            fw.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"nyh3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Error writing file\" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"nyh3":121}},{"path":"src/main/java/quill/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"import quill.exception.QuillException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":" * The Deadline class represents a task of type \"Deadline\" in the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" * It extends the Task class and includes specific behavior for deadline tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * Constructs a Deadline task with the specified task description and completion date.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     * @param description The description of the event task including completion date.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     * @throws QuillException If the task description is empty.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     * @throws DateTimeParseException If the format completion date is incorrect.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"    public Deadline(String description) throws QuillException, DateTimeParseException {","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"        int index \u003d description.indexOf(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"        this.description \u003d description.substring(0, index);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"        if (this.description.isEmpty()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"            throw new QuillException();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"        this.by \u003d LocalDateTime.parse(description.substring(index + 3)","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"                        .replace(\u0027T\u0027, \u0027 \u0027),","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"                        DateTimeFormatter.ofPattern(\" yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the deadline task for printing.","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"        String formattedBy \u003d by.format(formatter);","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + formattedBy + \")\";","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the deadline task for storing.","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"        return \"D | \" + super.saveTask() + \"/by \" + by;","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"nyh3":56}},{"path":"src/main/java/quill/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.exception.QuillException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" * The Event class represents a task of type \"Event\" in the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" * It extends the Task class and includes specific behavior for event tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"     * Constructs an Event task with the specified task description, start date, and end date.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     * @param description The description of the event task including start and end dates.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"     * @throws QuillException If the task description is empty.","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"     * @throws DateTimeParseException If the format of start and end date is incorrect.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"    public Event(String description) throws QuillException, DateTimeParseException {","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"        int fromIndex \u003d description.indexOf(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"        this.description \u003d description.substring(0, fromIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"        if (this.description.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"            throw new QuillException();","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"        int toIndex \u003d description.indexOf(\"/to\");","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"        this.from \u003d LocalDateTime.parse(description.substring(fromIndex + 5, toIndex - 1)","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"                        .replace(\u0027T\u0027, \u0027 \u0027),","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"                        DateTimeFormatter.ofPattern(\" yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"        this.to \u003d LocalDateTime.parse(description.substring(toIndex + 3)","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"                        .replace(\u0027T\u0027, \u0027 \u0027),","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"                        DateTimeFormatter.ofPattern(\" yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the event task for printing.","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"        String formattedFrom \u003d from.format(formatter);","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"        String formattedTo \u003d to.format(formatter);","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the event task for storing.","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"        return \"E | \" + super.saveTask() + \"/from \" + from + \" /to \" + to;","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"nyh3":63}},{"path":"src/main/java/quill/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":" * The Task Class represents a class in the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":" * It serves as the base class for different types of tasks","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":" * and provides common task attributes and methods.","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"     * Constructs a Task object with the specified description","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     * and sets its initial completion status to false.","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"     * Get the string representation of the task\u0027s completion status.","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * @return \"[X] \"if the task is done, \"[ ] \" if the task is not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"     * Get description of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"        return this.description;","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"     * Sets the completion status of the task as done.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"     * Sets the completion status of the task as not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the task for printing.","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"nyh3"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the task for storing.","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"nyh3"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"nyh3"},"content":"        return isDone + \" | \" + description;","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"nyh3"},"content":"    ","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"nyh3":73}},{"path":"src/main/java/quill/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.task;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":" * The TaskList Class contains the task list and provides","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":" * methods to manage and retrieve tasks from the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"public class TaskList {","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"     * Remove a task from the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"     * @return True if the task list is empty, false otherwise.","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"        return (tasks.isEmpty());","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"     * Retrieves a specific task from the task list by its index.","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"nyh3"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":65}},{"path":"src/main/java/quill/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":" * The Todo class represents a task of type \"Todo\" in the Quill application.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":" * It extends the Task class and includes specific behavior for todo tasks.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"     * Constructs a Todo task with the specific description.","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the todo task for printing.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     * Returns a string representation of the todo task for storing.","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"     * @return A string representation of the todo task.","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"    public String saveTask() {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"        return \"T | \" + super.saveTask();","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"nyh3":37}},{"path":"src/main/java/quill/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"package quill.ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"import quill.task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"import quill.task.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":" * The TextUi Class is responsible for user interaction,","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":" * including reading user input and displaying messages.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"public class TextUi {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"    public static final String NAME \u003d \"Quill\";","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"    private final Scanner in;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"     * Constructs a TextUi object and initializes the user input scanner.","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"    public TextUi() {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"     * Reads the command from the user and returns it as a string.","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"     * @return The user\u0027s input command as a string.","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nyh3"},"content":"    public String getUserCommand() {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"nyh3"},"content":"        return in.nextLine();","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nyh3"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nyh3"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"nyh3"},"content":"        System.out.println(DIVIDER + \"\\nHello! I\u0027m \" + NAME + \".\");","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"What can i do for you?\\n\" + DIVIDER);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"nyh3"},"content":"     * Displays the message for adding tasks to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"nyh3"},"content":"     * @param tasks The task being added to the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"nyh3"},"content":"    public static void showAddTask(Task tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"nyh3"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"Now you have \" + TaskList.getTotalTasks() + \" tasks in the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"nyh3"},"content":"     * Displays the message for deleting tasks from the task list","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"nyh3"},"content":"     * @param tasks The task to be deleted from the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"nyh3"},"content":"    public static void showDeleteTask(Task tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"nyh3"},"content":"        System.out.println(tasks.toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"Now you have \" + (TaskList.getTotalTasks() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nyh3"},"content":"     * Displays a divider line to separate different section of output.","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"nyh3"},"content":"    public static void showDivider() {","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"nyh3"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"nyh3"},"content":"     * Displays the goodbye message when exiting the application.","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"nyh3"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"nyh3"},"content":"     * Displays the list of tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"nyh3"},"content":"    public static void showList(TaskList tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"nyh3"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Zero tasks. Add something already.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"nyh3"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"nyh3"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTotalTasks(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"nyh3"},"content":"                System.out.println(i + 1 + \".\" + tasks.getTask(i).toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"nyh3"},"content":"     * Displays the list of matching tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"nyh3"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"nyh3"},"content":"     * @param tasks The list of matching tasks to be displayed.","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"nyh3"},"content":"    public static void showFindList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"nyh3"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Nothing. Tough luck.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"nyh3"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"nyh3"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"nyh3"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"nyh3"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"nyh3"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"nyh3"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"nyh3"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"nyh3"},"content":"     * Displays error message for unknown commands.","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"nyh3"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"nyh3"},"content":"    public static void showUnknownMessage() {","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"Enough with the gibberish. Stick to the commands I understand:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"nyh3"},"content":"        System.out.println(\"bye, list, todo, deadline, event, mark, unmark, delete, find. Got it? Next!\");","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"nyh3"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"nyh3"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"nyh3"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"nyh3":118}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nyh3"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"nyh3"},"content":"todo","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"nyh3"},"content":"todo read book","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"nyh3"},"content":"deadline","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"nyh3"},"content":"deadline /by","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"nyh3"},"content":"deadline return book /by","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"nyh3"},"content":"deadline return book /by 2024-03-02 18:16","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nyh3"},"content":"event","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"nyh3"},"content":"event /from /to","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"nyh3"},"content":"event book signing /from /to","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"nyh3"},"content":"event book signing /from 2024-03-01 02:30 /to 2024-03-30 21:40","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nyh3"},"content":"list","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"nyh3"},"content":"mark","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"nyh3"},"content":"mark 100","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"nyh3"},"content":"mark 1","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"nyh3"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"nyh3"},"content":"unmark","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"unmark 100","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"nyh3"},"content":"unmark 1","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"nyh3"},"content":"list","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"nyh3"},"content":"delete","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"nyh3"},"content":"delete 100","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"delete 1","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"nyh3"},"content":"list","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"nyh3"},"content":"find blah","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nyh3"},"content":"find return","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nyh3"},"content":"blah","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"nyh3"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"nyh3":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nyh3"},"content":"java -classpath ..\\bin Quill \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nyh3":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nyh3"},"content":"java -classpath ../bin Quill \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nyh3":1,"-":37}}]
