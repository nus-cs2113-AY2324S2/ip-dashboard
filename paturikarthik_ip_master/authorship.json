[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"PeeKay is a desktop app for managing your daily tasks, **optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"while still having the benefits of a Graphical User Interface (GUI)**.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"This app is especially catered towards those who can **type fast**,","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"as you can get your daily tasks done much faster than traditional GUI apps.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"PeeKay categorises a `Task` into one of three types - `ToDo`, `Deadline` or `Event`","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"- Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"- Features","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"    - Viewing help : `help`","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    - Adding a `ToDo` : `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    - Adding a `Deadline` : `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    - Adding an `Event` : `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    - Listing all tasks in the task list : `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"    - Deleting a task from the task list : `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"    - Marking a task as done : `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"    - Marking a task as not done : `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"    - Finding tasks using a keyword : `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    - Exiting the app : `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"- Command Summary","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"## Quick Start","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"1. **Download PeeKay:**","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"  - Download the PeeKay application (JAR file) from here.","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"2. **Setup Storage File:**","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"  - Ensure you have a storage file (`peekay.txt`) containing your existing tasks, located in the `src/data/` directory.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"3. **Run PeeKay:**","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"  - Open a command prompt or terminal window.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"4. **Navigate to the Directory:**","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"  - Navigate to the directory where the PeeKay JAR file is located.","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"5. **Run the Application:**","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"  - Run the PeeKay application by executing the following command:","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"    ```","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"    java -jar PeeKay.jar","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    ```","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"6. **Use PeeKay:**","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"  - Once the application is running, you will be greeted with a welcome message and a command line interface.","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"  - For help with PeeKay\u0027s commands, enter the `help` command or refer to the features list below!","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"\u003e [!NOTE] Notes about the command format:","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"    \u003e e.g. in `todo /DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo Assignment`.","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"\u003e - Parameters must be in the specified order.","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters (such as `help`, `list` and `bye`) will be","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"    ignored.","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"    e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"### Viewing help: `help`","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"Shows a message explaining the different commands.","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"Format:`help`","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome: ![Help Command](/docs/assets/help.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"paturikarthik"},"content":"### Adding a `ToDo` : `todo`","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"paturikarthik"},"content":"Adds a ToDo task to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"paturikarthik"},"content":"Format:`todo /DESCRIPTION`","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"paturikarthik"},"content":"- Adds the ToDo with corresponding `DESCRIPTION` to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"paturikarthik"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"paturikarthik"},"content":"- `todo assignment`","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"paturikarthik"},"content":"### Adding a `Deadline`: `deadline`","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"paturikarthik"},"content":"Adds a Deadline task to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"paturikarthik"},"content":"Format:`deadline /DESCRIPTION /by DEADLINE`","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"paturikarthik"},"content":"- Adds the Deadline task with corresponding `DESCRIPTION` and `DEADLINE`  the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"paturikarthik"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"paturikarthik"},"content":"- `deadline go to supermarket /by 7 March 2024`","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"paturikarthik"},"content":"- `deadline submit internship application /by 2359hrs`","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"paturikarthik"},"content":"### Adding an `Event`: `event`","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"paturikarthik"},"content":"Adds an Event task to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"paturikarthik"},"content":"Format: `event /DESCRIPTION /from START_TIME /to END_TIME`","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"paturikarthik"},"content":"- Adds the Event task with corresponding `DESCRIPTION`, `START_TIME` and `END_TIME` to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"paturikarthik"},"content":"Examples:","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"paturikarthik"},"content":"- `event lecture /from 7 March 2024 4pm /to 7 March 2024 6pm `","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"paturikarthik"},"content":"- `event technical interview /from 8pm /to 10pm`","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"paturikarthik"},"content":"### Listing all tasks in the task list: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"paturikarthik"},"content":"Displays all tasks currently stored in the task list, including their type, description, and completion status.","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"paturikarthik"},"content":"Format: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome:\\","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"paturikarthik"},"content":"![List Command](/docs/assets/list.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"paturikarthik"},"content":"### Deleting a task from the task list: `delete`","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"paturikarthik"},"content":"Allows the user to remove a task from the task list based on its index.","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"paturikarthik"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"paturikarthik"},"content":"- Deletes the task at the given INDEX of the task list","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"paturikarthik"},"content":"- User can refer to the list using the `list` command","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"paturikarthik"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"paturikarthik"},"content":"- `delete 1`","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome: \\","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"paturikarthik"},"content":"![Delete Command](/docs/assets/delete.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"paturikarthik"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"paturikarthik"},"content":"Marks a task in the task list as **completed** based on its index.","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"paturikarthik"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"paturikarthik"},"content":"- Marks the task at the given INDEX of the task list as **completed**","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"paturikarthik"},"content":"- User can refer to the list using the `list` command","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"paturikarthik"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"paturikarthik"},"content":"- `mark 1`","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome:\\","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"paturikarthik"},"content":"![Mark Command](/docs/assets/mark.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"paturikarthik"},"content":"### Marking a task as not done: `unmark`","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"paturikarthik"},"content":"Marks a task in the task list as **uncompleted** based on its index.","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":150,"author":{"gitId":"paturikarthik"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"paturikarthik"},"content":"- Marks the task at the given INDEX of the task list as **uncompleted**","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"paturikarthik"},"content":"- User can refer to the list using the `list` command","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"paturikarthik"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"paturikarthik"},"content":"- `unmark 1`","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome:\\","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"paturikarthik"},"content":"![Unmark Command](/docs/assets/unmark.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"paturikarthik"},"content":"### Finding tasks using a keyword: `find`","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"paturikarthik"},"content":"Searches for tasks in the task list containing a specific keyword in their description and displays the matched tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"paturikarthik"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"paturikarthik"},"content":"- Searches and prints the task list for task descriptions containing `KEYWORD`","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"paturikarthik"},"content":"Example:","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"paturikarthik"},"content":"- `find assignment`","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"paturikarthik"},"content":"- `find lecture`","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome:\\","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"paturikarthik"},"content":"![Find Command](/docs/assets/find.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":178,"author":{"gitId":"paturikarthik"},"content":"### Exiting the app: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"paturikarthik"},"content":"Saves the current task list to the storage file and exits the app.","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":182,"author":{"gitId":"paturikarthik"},"content":"Format: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":183,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"paturikarthik"},"content":"Expected Outcome:\\","lastModifiedDate":"2024-03-08"},{"lineNumber":185,"author":{"gitId":"paturikarthik"},"content":"![Bye Command](/docs/assets/bye.png)","lastModifiedDate":"2024-03-08"},{"lineNumber":186,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":187,"author":{"gitId":"paturikarthik"},"content":"## Command Summary","lastModifiedDate":"2024-03-08"},{"lineNumber":188,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"paturikarthik"},"content":"- `help` : Displays available commands and their descriptions.","lastModifiedDate":"2024-03-08"},{"lineNumber":190,"author":{"gitId":"paturikarthik"},"content":"- `todo [DESCRIPTION]` : Adds a ToDo task to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":191,"author":{"gitId":"paturikarthik"},"content":"- `deadline [DESCRIPTION] /by [DEADLINE]` : Adds a Deadline task to the task list with the specified deadline.","lastModifiedDate":"2024-03-08"},{"lineNumber":192,"author":{"gitId":"paturikarthik"},"content":"- `event [DESCRIPTION] /from [START TIME] /to [END TIME]` : Adds an Event task to the task list with the specified start","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"paturikarthik"},"content":"  and end times.","lastModifiedDate":"2024-03-08"},{"lineNumber":194,"author":{"gitId":"paturikarthik"},"content":"- `list` : Displays all tasks in the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"paturikarthik"},"content":"- `delete [INDEX]` : Deletes the task at the specified index from the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"paturikarthik"},"content":"- `mark [INDEX]` : Marks the task at the specified index as done.","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"paturikarthik"},"content":"- `unmark [INDEX]` : Marks the task at the specified index as not done.","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"paturikarthik"},"content":"- `find [KEYWORD]` : Finds tasks containing the specified keyword in their description and displays them.","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"-":25,"paturikarthik":173}},{"path":"src/data/peekay.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"T | 1 | read book","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"D | 0 | push code | now","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"T | 1 | assignment","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"T | 1 | Level-8","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"T | 0 | example","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"paturikarthik":7}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package Parser;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import exceptions.MissingDeadlineException;","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"import exceptions.MissingStartException;","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"import exceptions.ArrayListOutOfBoundsException;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"import exceptions.UnknownInputException;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"import static Storage.UploadData.updateFile;","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.showHelp;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.showLine;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printRemainingTaskNumber;","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printError;","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.closeApp;","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printChangesNotSavedMessage;","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printDeleteMessage;","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printMarkedAsDoneMessage;","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printMarkedAsUndoneMessage;","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printTaskAddedMessage;","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printTaskList;","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printUnknownInputMessage;","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printMatchingTasks;","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"import static Ui.Ui.printNoIndexError;","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":" * Represents a utility class for parsing user commands based on actions relevant to the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":" * This class provides methods for creating, deleting, marking/unmarking, and listing tasks based on user input.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"public class Parser {","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"    static TaskList tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"    static String filepath;","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"    static final int CONVERT_TO_ZERO_INDEXING \u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    static final int SIZE_OF_TODO_COMMAND \u003d 5;","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"    static final int SIZE_OF_BY_PARAM \u003d 4;","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"    static final int SIZE_OF_FROM_PARAM \u003d 6;","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"    static final int FIRST_ELEMENT \u003d 0;","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"    static final int SIZE_OF_DELETE_PARAM \u003d 7;","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"    static final int SIZE_OF_SPACING \u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a Parser object with the specified file path and TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The file path of the storage","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"     * @param tasks    The TaskList to be managed","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"    public Parser(String filepath, TaskList tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"        Parser.filepath \u003d filepath;","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"        Parser.tasks \u003d tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"     * Prints confirmation messages after adding a task. The task added is shown first,","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"paturikarthik"},"content":"     * before the total number of tasks is shown.","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"paturikarthik"},"content":"    private static void echo() {","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"paturikarthik"},"content":"        printTaskAddedMessage(tasks.get(tasks.size() - CONVERT_TO_ZERO_INDEXING));","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"paturikarthik"},"content":"        printRemainingTaskNumber(tasks.size());","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"paturikarthik"},"content":"     * Saves tasks to the storage file and closes the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"paturikarthik"},"content":"    private static void sayBye() {","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"paturikarthik"},"content":"            updateFile(filepath, tasks);","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"paturikarthik"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"paturikarthik"},"content":"            printChangesNotSavedMessage();","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"paturikarthik"},"content":"        closeApp();","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"paturikarthik"},"content":"     * Creates a new Todo based on the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the task description","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"paturikarthik"},"content":"    public static void createTodo(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"paturikarthik"},"content":"            String todo \u003d input.substring(input.indexOf(\"todo \") + SIZE_OF_TODO_COMMAND);","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"paturikarthik"},"content":"            if (todo.isBlank()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"paturikarthik"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"paturikarthik"},"content":"            ToDo newEntry \u003d new ToDo(todo);","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"paturikarthik"},"content":"            tasks.add(newEntry);","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"paturikarthik"},"content":"            echo();","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"paturikarthik"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"paturikarthik"},"content":"            printError(e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"paturikarthik"},"content":"     * Creates a new Deadline based on the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the task description and deadline","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"paturikarthik"},"content":"    private static void createDeadline(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"paturikarthik"},"content":"            String description \u003d input.replaceFirst(\"deadline \", \"\");","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"paturikarthik"},"content":"            int by \u003d description.indexOf(\"/\");","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"paturikarthik"},"content":"            if (by \u003d\u003d -1) {","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"paturikarthik"},"content":"                throw new MissingDeadlineException();","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"paturikarthik"},"content":"            String deadline \u003d description.substring(FIRST_ELEMENT, by - CONVERT_TO_ZERO_INDEXING);","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"paturikarthik"},"content":"            if (deadline.isBlank()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"paturikarthik"},"content":"                throw new EmptyTaskException();","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"paturikarthik"},"content":"            String date \u003d description.substring(by + SIZE_OF_BY_PARAM);","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"paturikarthik"},"content":"            Deadline newEntry \u003d new Deadline(deadline, date);","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"paturikarthik"},"content":"            tasks.add(newEntry);","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"paturikarthik"},"content":"            echo();","lastModifiedDate":"2024-03-04"},{"lineNumber":121,"author":{"gitId":"paturikarthik"},"content":"        } catch (EmptyTaskException | MissingDeadlineException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"paturikarthik"},"content":"            printError(e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":123,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"paturikarthik"},"content":"     * Creates a new Event based on the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the task description, start date, and end date","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"paturikarthik"},"content":"    private static void createEvent(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"paturikarthik"},"content":"            String description \u003d input.replaceFirst(\"event \", \"\");","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"paturikarthik"},"content":"            int from \u003d description.indexOf(\"/from\");","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"paturikarthik"},"content":"            if (from \u003d\u003d -1) {","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"paturikarthik"},"content":"                throw new MissingStartException();","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"paturikarthik"},"content":"            Event newEntry \u003d getEvent(description, from);","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"paturikarthik"},"content":"            tasks.add(newEntry);","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"paturikarthik"},"content":"            echo();","lastModifiedDate":"2024-03-04"},{"lineNumber":141,"author":{"gitId":"paturikarthik"},"content":"        } catch (MissingStartException | MissingDeadlineException | EmptyTaskException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":142,"author":{"gitId":"paturikarthik"},"content":"            printError(e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":143,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"paturikarthik"},"content":"     * Creates a new Event object based on the description and start date index.","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"paturikarthik"},"content":"     * @param description The description of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"paturikarthik"},"content":"     * @param from        The index of the start date","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"paturikarthik"},"content":"     * @return The Event object","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"paturikarthik"},"content":"     * @throws MissingDeadlineException If the end date is missing","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"paturikarthik"},"content":"     * @throws EmptyTaskException       If the description is empty","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"paturikarthik"},"content":"    private static Event getEvent(String description, int from) throws MissingDeadlineException, EmptyTaskException {","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"paturikarthik"},"content":"        int by \u003d description.indexOf(\"/to\");","lastModifiedDate":"2024-03-04"},{"lineNumber":157,"author":{"gitId":"paturikarthik"},"content":"        if (by \u003d\u003d -1) {","lastModifiedDate":"2024-03-04"},{"lineNumber":158,"author":{"gitId":"paturikarthik"},"content":"            throw new MissingDeadlineException();","lastModifiedDate":"2024-03-04"},{"lineNumber":159,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"paturikarthik"},"content":"        String startDate \u003d description.substring(from + SIZE_OF_FROM_PARAM, by - CONVERT_TO_ZERO_INDEXING);","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"paturikarthik"},"content":"        String endDate \u003d description.substring(by + SIZE_OF_BY_PARAM);","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"paturikarthik"},"content":"        if (from \u003d\u003d 0) {","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"paturikarthik"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"paturikarthik"},"content":"        String event \u003d description.substring(FIRST_ELEMENT, from - CONVERT_TO_ZERO_INDEXING);","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"paturikarthik"},"content":"        if (event.isBlank()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"paturikarthik"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"paturikarthik"},"content":"        return new Event(event, startDate, endDate);","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":172,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"paturikarthik"},"content":"     * Deletes a task based on the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the index of the task to delete","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"paturikarthik"},"content":"    private static void deleteTask(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"paturikarthik"},"content":"            int index \u003d Integer.parseInt(input.substring(SIZE_OF_DELETE_PARAM)) - CONVERT_TO_ZERO_INDEXING;","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"paturikarthik"},"content":"            if (tasks.size() \u003c index || index \u003d\u003d -1) {","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"paturikarthik"},"content":"                throw new ArrayListOutOfBoundsException();","lastModifiedDate":"2024-03-04"},{"lineNumber":182,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":183,"author":{"gitId":"paturikarthik"},"content":"            printDeleteMessage(tasks.get(index).toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":184,"author":{"gitId":"paturikarthik"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-03-04"},{"lineNumber":185,"author":{"gitId":"paturikarthik"},"content":"            printRemainingTaskNumber(tasks.size());","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"paturikarthik"},"content":"        } catch (ArrayListOutOfBoundsException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"paturikarthik"},"content":"            printError(e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":188,"author":{"gitId":"paturikarthik"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"paturikarthik"},"content":"            printNoIndexError();","lastModifiedDate":"2024-03-08"},{"lineNumber":190,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":191,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":192,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":193,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"paturikarthik"},"content":"     * Handles user input by executing corresponding actions.","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"paturikarthik"},"content":"     * If an unknown input is given, it prints a corresponding error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":196,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"paturikarthik"},"content":"     * @param input The user input","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":199,"author":{"gitId":"paturikarthik"},"content":"    private static void handleInput(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":200,"author":{"gitId":"paturikarthik"},"content":"        if (input.contains(\"todo\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":201,"author":{"gitId":"paturikarthik"},"content":"            createTodo(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":202,"author":{"gitId":"paturikarthik"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":203,"author":{"gitId":"paturikarthik"},"content":"            createDeadline(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":204,"author":{"gitId":"paturikarthik"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":205,"author":{"gitId":"paturikarthik"},"content":"            createEvent(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":206,"author":{"gitId":"paturikarthik"},"content":"        } else if (input.contains(\"bye\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":207,"author":{"gitId":"paturikarthik"},"content":"            sayBye();","lastModifiedDate":"2024-03-04"},{"lineNumber":208,"author":{"gitId":"paturikarthik"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":209,"author":{"gitId":"paturikarthik"},"content":"            deleteTask(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":210,"author":{"gitId":"paturikarthik"},"content":"        } else {","lastModifiedDate":"2024-03-04"},{"lineNumber":211,"author":{"gitId":"paturikarthik"},"content":"            printUnknownInputMessage();","lastModifiedDate":"2024-03-04"},{"lineNumber":212,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":213,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":214,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":215,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":216,"author":{"gitId":"paturikarthik"},"content":"     * Parses the input string to get the index of the task to mark.","lastModifiedDate":"2024-03-07"},{"lineNumber":217,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":218,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the index of the task","lastModifiedDate":"2024-03-07"},{"lineNumber":219,"author":{"gitId":"paturikarthik"},"content":"     * @return The index of the task to mark","lastModifiedDate":"2024-03-07"},{"lineNumber":220,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":221,"author":{"gitId":"paturikarthik"},"content":"    public static int getIndexToMark(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":222,"author":{"gitId":"paturikarthik"},"content":"        int idx \u003d Integer.parseInt(input.substring(input.indexOf(\" \") + SIZE_OF_SPACING));","lastModifiedDate":"2024-03-08"},{"lineNumber":223,"author":{"gitId":"paturikarthik"},"content":"        return idx - 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":224,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":225,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":226,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":227,"author":{"gitId":"paturikarthik"},"content":"     * Prints all tasks in the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":228,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":229,"author":{"gitId":"paturikarthik"},"content":"    public static void listItems() {","lastModifiedDate":"2024-03-04"},{"lineNumber":230,"author":{"gitId":"paturikarthik"},"content":"        printTaskList(tasks);","lastModifiedDate":"2024-03-04"},{"lineNumber":231,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":232,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":233,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":234,"author":{"gitId":"paturikarthik"},"content":"     * Unmarks a task as done based on the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":235,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":236,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the index of the task to unmark","lastModifiedDate":"2024-03-07"},{"lineNumber":237,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":238,"author":{"gitId":"paturikarthik"},"content":"    public static void unmarkItem(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":239,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-08"},{"lineNumber":240,"author":{"gitId":"paturikarthik"},"content":"            int idx \u003d getIndexToMark(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":241,"author":{"gitId":"paturikarthik"},"content":"            tasks.get(idx).setDone(false);","lastModifiedDate":"2024-03-04"},{"lineNumber":242,"author":{"gitId":"paturikarthik"},"content":"            printMarkedAsUndoneMessage(tasks.get(idx));","lastModifiedDate":"2024-03-04"},{"lineNumber":243,"author":{"gitId":"paturikarthik"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":244,"author":{"gitId":"paturikarthik"},"content":"            printNoIndexError();","lastModifiedDate":"2024-03-08"},{"lineNumber":245,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":246,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":247,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":248,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":249,"author":{"gitId":"paturikarthik"},"content":"     * Marks a task as done based on the input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":250,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":251,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the index of the task to mark","lastModifiedDate":"2024-03-07"},{"lineNumber":252,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":253,"author":{"gitId":"paturikarthik"},"content":"    public static void markItem(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":254,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-08"},{"lineNumber":255,"author":{"gitId":"paturikarthik"},"content":"            int idx \u003d getIndexToMark(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":256,"author":{"gitId":"paturikarthik"},"content":"            tasks.get(idx).setDone(true);","lastModifiedDate":"2024-03-04"},{"lineNumber":257,"author":{"gitId":"paturikarthik"},"content":"            printMarkedAsDoneMessage(tasks.get(idx));","lastModifiedDate":"2024-03-04"},{"lineNumber":258,"author":{"gitId":"paturikarthik"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":259,"author":{"gitId":"paturikarthik"},"content":"            printNoIndexError();","lastModifiedDate":"2024-03-08"},{"lineNumber":260,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":261,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":262,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":263,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":264,"author":{"gitId":"paturikarthik"},"content":"     * Finds tasks containing a specific keyword and prints them.","lastModifiedDate":"2024-03-07"},{"lineNumber":265,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":266,"author":{"gitId":"paturikarthik"},"content":"     * @param input The input string containing the keyword to search for","lastModifiedDate":"2024-03-07"},{"lineNumber":267,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":268,"author":{"gitId":"paturikarthik"},"content":"    public static void findItems(String input) {","lastModifiedDate":"2024-03-04"},{"lineNumber":269,"author":{"gitId":"paturikarthik"},"content":"        TaskList matchedItems \u003d new TaskList();","lastModifiedDate":"2024-03-04"},{"lineNumber":270,"author":{"gitId":"paturikarthik"},"content":"        for (Task task : tasks.getAll()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":271,"author":{"gitId":"paturikarthik"},"content":"            if (task.getDescription().contains(input)) {","lastModifiedDate":"2024-03-04"},{"lineNumber":272,"author":{"gitId":"paturikarthik"},"content":"                matchedItems.add(task);","lastModifiedDate":"2024-03-04"},{"lineNumber":273,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":274,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":275,"author":{"gitId":"paturikarthik"},"content":"        printMatchingTasks(matchedItems);","lastModifiedDate":"2024-03-04"},{"lineNumber":276,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":277,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":278,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":279,"author":{"gitId":"paturikarthik"},"content":"     * Handles user interaction by reading input commands and executing corresponding actions","lastModifiedDate":"2024-03-07"},{"lineNumber":280,"author":{"gitId":"paturikarthik"},"content":"     * until \"bye\" is entered.","lastModifiedDate":"2024-03-07"},{"lineNumber":281,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":282,"author":{"gitId":"paturikarthik"},"content":"    public static void chat() {","lastModifiedDate":"2024-03-04"},{"lineNumber":283,"author":{"gitId":"paturikarthik"},"content":"        String input;","lastModifiedDate":"2024-03-04"},{"lineNumber":284,"author":{"gitId":"paturikarthik"},"content":"        do {","lastModifiedDate":"2024-03-04"},{"lineNumber":285,"author":{"gitId":"paturikarthik"},"content":"            input \u003d new Scanner(System.in).nextLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":286,"author":{"gitId":"paturikarthik"},"content":"            showLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":287,"author":{"gitId":"paturikarthik"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":288,"author":{"gitId":"paturikarthik"},"content":"                listItems();","lastModifiedDate":"2024-03-04"},{"lineNumber":289,"author":{"gitId":"paturikarthik"},"content":"            } else if (input.contains(\"unmark\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":290,"author":{"gitId":"paturikarthik"},"content":"                unmarkItem(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":291,"author":{"gitId":"paturikarthik"},"content":"            } else if (input.contains(\"mark\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":292,"author":{"gitId":"paturikarthik"},"content":"                markItem(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":293,"author":{"gitId":"paturikarthik"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":294,"author":{"gitId":"paturikarthik"},"content":"                findItems(input.substring(\"find\".length()).trim());","lastModifiedDate":"2024-03-04"},{"lineNumber":295,"author":{"gitId":"paturikarthik"},"content":"            } else if (input.startsWith(\"help\")) {","lastModifiedDate":"2024-03-08"},{"lineNumber":296,"author":{"gitId":"paturikarthik"},"content":"                showHelp();","lastModifiedDate":"2024-03-08"},{"lineNumber":297,"author":{"gitId":"paturikarthik"},"content":"            } else {","lastModifiedDate":"2024-03-04"},{"lineNumber":298,"author":{"gitId":"paturikarthik"},"content":"                handleInput(input);","lastModifiedDate":"2024-03-04"},{"lineNumber":299,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":300,"author":{"gitId":"paturikarthik"},"content":"            showLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":301,"author":{"gitId":"paturikarthik"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":302,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":303,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"paturikarthik":303}},{"path":"src/main/java/PeeKay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"import static Parser.Parser.chat;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import Parser.Parser;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import Storage.Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import Ui.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":" * Represents the PeeKay bot and its methods.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"public class PeeKay {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"     * Instantiates a new iteration of PeeKay app. Creates a TaskList containing existing tasks from","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"     * the storage file, if any. Else, creates an empty TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath path of the storage file containing the existing tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    public PeeKay(String filepath) {","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"            tasks \u003d new TaskList(Storage.load(filepath));","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"            Ui.printLoadingErrorMessage();","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"        Parser parser \u003d new Parser(filepath, tasks);","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"     * Start the app, and checks for commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    public void run() {","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"        Ui.showLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"        Ui.sayHi();","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"        Ui.showLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"        chat();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"        new PeeKay(\"src/data/peekay.txt\").run();","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"paturikarthik":46}},{"path":"src/main/java/Storage/AppendData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":" * Represents a utility class which appends news tasks to an existing file.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":" * This class provides methods to add ToDos, Deadlines and Events to a specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"public class AppendData {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"     * Appends a ToDo to a specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"     * @param input The ToDo task to append","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"     * @param fw    The FileWriter object which appends the ToDo to the file","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"     * @throws IOException If an I/O error occurs (such as being unable to access the specified file)","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"    public static void appendToDo(ToDo input, FileWriter fw) throws IOException {","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"        String description \u003d input.getDescription();","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"        String taskType \u003d input.getTaskType();","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"        String isCompleted \u003d (input.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"        String textToAppend \u003d taskType + \" | \" + isCompleted + \" | \" + description;","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"        fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"     * Appends a Deadline to a specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"     * @param input The Deadline task to append","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"     * @param fw    The FileWriter object which appends the Deadline to the file","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"     * @throws IOException If an I/O error occurs (such as being unable to access the specified file)","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"    public static void appendDeadline(Deadline input, FileWriter fw) throws IOException {","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"        String description \u003d input.getDescription();","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"        String taskType \u003d input.getTaskType();","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"        String isCompleted \u003d (input.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"        String by \u003d input.getEndDate();","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"        String textToAppend \u003d taskType + \" | \" + isCompleted + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"        fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"     * Appends an Event to a specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"     * @param input The Event task to append","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"     * @param fw    The FileWriter object which appends the Event to the file","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"     * @throws IOException If an I/O error occurs (such as being unable to access the specified file)","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"    public static void appendEvent(Event input, FileWriter fw) throws IOException {","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"        String description \u003d input.getDescription();","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"paturikarthik"},"content":"        String taskType \u003d input.getTaskType();","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"        String isCompleted \u003d (input.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"paturikarthik"},"content":"        String by \u003d input.getEndDate();","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"        String from \u003d input.getStartDate();","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"paturikarthik"},"content":"        String textToAppend \u003d taskType + \" | \" + isCompleted + \" | \" + description + \" | \" + from + \" | \" + by;","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"paturikarthik"},"content":"        fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"paturikarthik":67}},{"path":"src/main/java/Storage/LoadData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import java.io.File;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"import exceptions.MissingDeadlineException;","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"import exceptions.MissingStartException;","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":" * Represents a utility class used to load tasks from a file.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":" * This class extends the Storage class and provides methods to load tasks from a specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"public class LoadData extends Storage {","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    public static ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a LoadData object with the specified file path.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The path to the file from which tasks will be loaded","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"    public LoadData(String filepath) {","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"        super(filepath);","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The path to the file from which tasks will be loaded","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"     * @return The ArrayList of tasks loaded from the file","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"     * @throws FileNotFoundException If the specified file is not found","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"    public static ArrayList\u003cTask\u003e loadData(String filepath) throws FileNotFoundException {","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"        File data \u003d new File(filepath);","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"        Scanner input \u003d new Scanner(data);","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"        do {","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"            String task \u003d input.nextLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"            count++;","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"            char type \u003d task.charAt(0);","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"            String description \u003d task.substring(8);","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"            boolean isCompleted \u003d task.charAt(4) !\u003d \u00270\u0027;","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"            String[] params \u003d description.split(\"\\\\|\");","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"                savedTasks.add(new ToDo(description));","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"                String taskDescription \u003d params[0].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"                String deadline \u003d params[1].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"                savedTasks.add(new Deadline(taskDescription, deadline));","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"                String taskDescription \u003d params[0].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"paturikarthik"},"content":"                String from \u003d params[1].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"                String by \u003d params[2].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"paturikarthik"},"content":"                savedTasks.add(new Event(taskDescription, from, by));","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"            } else {","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"paturikarthik"},"content":"                break;","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"paturikarthik"},"content":"            int index \u003d savedTasks.size() - 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"paturikarthik"},"content":"            savedTasks.get(index).setDone(isCompleted);","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"paturikarthik"},"content":"        } while (input.hasNext());","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"paturikarthik"},"content":"        return savedTasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"paturikarthik":69}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":" * Represents a utility class for storing and loading tasks to/from a file.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":" * This class provides methods to load tasks from a file and upload tasks to a file.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"public class Storage {","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    private static String filepath;","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The path to the file for storing and loading tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"        Storage.filepath \u003d filepath;","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"     * Loads tasks from the specified file in the filepath.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The path to the file from which tasks will be loaded","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"     * @return The ArrayList of tasks loaded from the file","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"     * @throws FileNotFoundException If the specified file is not found","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"    public static ArrayList\u003cTask\u003e load(String filepath) throws FileNotFoundException {","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"        return LoadData.loadData(filepath);","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"     * Appends tasks to the specified file.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The path to the file to which tasks will be uploaded","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"     * @param tasks    The list of tasks to upload to the file","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"     * @throws IOException If an I/O error occurs while uploading tasks to the file","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"    public static void upload(String filepath, TaskList tasks) throws IOException {","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"        UploadData.updateFile(filepath, tasks);","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"paturikarthik":48}},{"path":"src/main/java/Storage/UploadData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"import static Storage.AppendData.appendDeadline;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"import static Storage.AppendData.appendToDo;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"import static Storage.AppendData.appendEvent;","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":" * Represents a utility class which updates the storage file with the current TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"public class UploadData {","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error saving file.\";","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"    private static boolean isFirstWrite \u003d true;","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"     * Updates the storage file with the tasks from the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"     * @param filepath The path to the storage file","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"     * @param tasks    The TaskList containing the tasks to be updated in the file","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"     * @throws IOException If an I/O error occurs while updating the file","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"    public static void updateFile(String filepath, TaskList tasks) throws IOException {","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"        for (Task task : tasks.getAll()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"            FileWriter fw \u003d new FileWriter(filepath, !isFirstWrite);","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"            if (task.getTaskType().equals(\"T\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"                try {","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"                    appendToDo((ToDo) task, fw);","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"                    System.out.println(ERROR_MESSAGE);","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"                }","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"            } else if (task.getTaskType().equals(\"E\")) {","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"                try {","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"                    appendEvent((Event) task, fw);","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"                    System.out.println(ERROR_MESSAGE);","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"                }","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"            } else {","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"                try {","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"                    appendDeadline((Deadline) task, fw);","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"                    System.out.println(ERROR_MESSAGE);","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"                }","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"            isFirstWrite \u003d false;","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"            fw.close();","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"paturikarthik":57}},{"path":"src/main/java/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":" * TaskList provides methods to add, remove, and retrieve tasks from the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"public class TaskList {","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a TaskList from the given list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"     * @param tasks The list of tasks to initialise the TaskList","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"     * @param newEntry The task to add to the TaskList","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"    public void add(Task newEntry) {","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"        tasks.add(newEntry);","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the number of tasks in the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"     * @return The number of tasks in the TaskList","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    public int size() {","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"        return tasks.size();","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the task at a specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"     * @param i The index of the task to retrieve","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"     * @return The task at the specified index","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"     * Deletes the task from a specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"     * @param index The index of the task to delete","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"paturikarthik"},"content":"    public void remove(int index) {","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves all tasks in the TaskList.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"paturikarthik"},"content":"     * @return The list of all tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"paturikarthik"},"content":"    public ArrayList\u003cTask\u003e getAll() {","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"paturikarthik"},"content":"        return tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"paturikarthik":69}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import TaskList.TaskList;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":" * Represents all interactions between PeeKay and the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"public class Ui {","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"    public Ui() {","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"     * Prints a dotted line out between commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"    public static void showLine() {","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"     * Prints a welcome message when PeeKay is first activated.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"    public static void sayHi() {","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Hello! I\u0027m PeeKay\");","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"     * Prints a goodbye message when PeeKay is closed.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"    public static void closeApp() {","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"     * Prints confirmation of deleting a task.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"     * @param description Name of the task that was deleted","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"    public static void printDeleteMessage(String description) {","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t   \" + description);","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"     * Prints number of tasks remaining. This function is called after the user adds or deletes a task.","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"     * @param taskNumber Number of tasks in the list of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"    public static void printRemainingTaskNumber(int taskNumber) {","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"        String task \u003d (taskNumber \u003d\u003d 1) ? \"task \" : \"tasks \";","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Now you have \" + taskNumber + \" \" + task + \"in the list.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"     * Prints confirmation of the task that was added.","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"     * @param task Task that was added","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"    public static void printTaskAddedMessage(Task task) {","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"paturikarthik"},"content":"        printSingleTask(task);","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"paturikarthik"},"content":"     * Prints \u003ccode\u003etask\u003c/code\u003e in a string format","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"paturikarthik"},"content":"     * @param task Task object","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"paturikarthik"},"content":"    public static void printSingleTask(Task task) {","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"paturikarthik"},"content":"        System.out.println((\"\\t   \" + task.toString()));","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"paturikarthik"},"content":"     * Prints error message to the terminal when an error is caught.","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"paturikarthik"},"content":"     * @param errorMessage Error message that is thrown","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"paturikarthik"},"content":"    public static void printError(String errorMessage) {","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Error: \" + errorMessage);","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"paturikarthik"},"content":"     * Prints a message indicating unknown input from the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"paturikarthik"},"content":"    public static void printUnknownInputMessage() {","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t I\u0027ve not seen this input before. Please tell me something else I can help you with.\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"paturikarthik"},"content":"                \"Try the help command to see the list of available inputs!\");","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"paturikarthik"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"paturikarthik"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"paturikarthik"},"content":"    public static void printTaskList(TaskList tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"paturikarthik"},"content":"        for (int x \u003d 0; x \u003c tasks.size(); x++) {","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"paturikarthik"},"content":"            System.out.println(\"\\t  \" + (x + 1) + \".\" + tasks.get(x).toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"paturikarthik"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"paturikarthik"},"content":"     * @param task The task marked as done","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"paturikarthik"},"content":"    public static void printMarkedAsDoneMessage(Task task) {","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t \" + task.toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"paturikarthik"},"content":"     * Prints a message indicating that a task has been marked as not done yet.","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"paturikarthik"},"content":"     * @param task The task marked as not done yet","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"paturikarthik"},"content":"    public static void printMarkedAsUndoneMessage(Task task) {","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":123,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t \" + task.toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"paturikarthik"},"content":"     * Prints an error message indicating that the saved file was not found.","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"paturikarthik"},"content":"    public static void printLoadingErrorMessage() {","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Saved file not found.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":131,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"paturikarthik"},"content":"     * Prints an error message indicating that changes could not be saved to the file.","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"paturikarthik"},"content":"    public static void printChangesNotSavedMessage() {","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Could not save changes to file.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"paturikarthik"},"content":"     * Prints the list of matching tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"paturikarthik"},"content":"     * @param tasks The list of matching tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"paturikarthik"},"content":"    public static void printMatchingTasks(TaskList tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"paturikarthik"},"content":"        for (int x \u003d 0; x \u003c tasks.size(); x++) {","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"paturikarthik"},"content":"            System.out.println(\"\\t  \" + (x + 1) + \".\" + tasks.get(x).toString());","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"paturikarthik"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":150,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"paturikarthik"},"content":"     * Prints a quick guide for users who need help using PeeKay\u0027s commands.","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"paturikarthik"},"content":"    public static void showHelp() {","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t PeeKay Command List:\");","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - help: Displays a list of available commands and their descriptions.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - todo \u003cdescription\u003e: Adds a ToDo task with the specified description.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - deadline \u003cdescription\u003e /by \u003cdeadline\u003e: Adds a Deadline task with the specified\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"paturikarthik"},"content":"                \" description and deadline.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e: \" +","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"paturikarthik"},"content":"                \"Adds an Event task with the specified description, start time, and end time.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - list: Displays all tasks currently stored in the task list.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - delete \u003cindex\u003e: Deletes the task at the specified index from the task list.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - mark \u003cindex\u003e: Marks the task at the specified index as done.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - unmark \u003cindex\u003e: Marks the task at the specified index as not done.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t - find \u003ckeyword\u003e: Searches and prints the task list\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"paturikarthik"},"content":"                \" for task descriptions containing \u003ckeyword\u003e\");","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"paturikarthik"},"content":"     * Prints an error message when user does not include the index required for the action.","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"paturikarthik"},"content":"    public static void printNoIndexError() {","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t Please include the index of the task you want to modify.\");","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"paturikarthik":177}},{"path":"src/main/java/exceptions/ArrayListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents an exception thrown when trying to access an item in an ArrayList that is out of bounds.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" * This exception is thrown when the index that is being accessed does not exist in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"public class ArrayListOutOfBoundsException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the error message for the exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"     * @return The error message string indicating that the item does not exist in the list","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"        return \"\\t This item does not exist in your list. Try a different item.\";","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"paturikarthik":17}},{"path":"src/main/java/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents an exception thrown when creating a blank task.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"public class EmptyTaskException extends Exception{","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the error message for this exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"     * @return The error message indicating that the task is empty","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    public String getMessage(){","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"        return \"Task cannot be empty!\";","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"paturikarthik":15}},{"path":"src/main/java/exceptions/MissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents an exception thrown when creating a task with no end date or deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"public class MissingDeadlineException extends Exception{","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the error message for this exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"     * @return The error message indicating that the end date/deadline is missing","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    public String getMessage(){","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"        return \"Include when this task ends.\";","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"paturikarthik":15}},{"path":"src/main/java/exceptions/MissingStartException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":" * Represents an exception thrown when creating an event with no start date or time.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"public class MissingStartException extends Exception{","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the error message for this exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"     * @return The error message indicating that the start date/time is missing","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    public String getMessage(){","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"        return \"Start Date is missing. Include when this event starts as such:\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"                \"{event} /from {start date} /to {end date}\";","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"paturikarthik":15}},{"path":"src/main/java/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package exceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents an exception thrown when the input is unknown.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"public class UnknownInputException extends Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the error message for this exception.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"     * @return The error message indicating that the input is unknown","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"        return \"\\t I\u0027ve not seen this input before. Please tell me something else I can help you with.\" +","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"                \"Try the help command to see the list of available inputs!\";","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"paturikarthik":18}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents a Deadline that has been completed or to be completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"     * Character Symbol which represents the task type","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    private String taskType \u003d \"D\";","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"     * Ending DateTime of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    private String endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a Deadline object with the given description, and end date.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"     * @param date Ending DateTime of the deadline","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    public Deadline(String description, String date){","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"        super(description);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"        this.endDate \u003d date;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"        return taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"        return endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"    public void setEndDate(String date) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"        endDate \u003d date;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"     * Converts the deadline to its string representation.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"     * @return The string representation of the deadline","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"        return \"[\" + this.getTaskType() + \"]\" + super.toString() + (\" (by: \" + this.getEndDate() + \")\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"paturikarthik":45}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" * Represents an Event that has been completed or to be completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     * Character Symbol which represents the task type","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"    private String taskType \u003d \"E\";","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"     * Starting DateTime of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    private String startDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"     * Ending DateTime of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"    private String endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"     * Constructs an Event object with the given description, startDate and endDate.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"     * @param startDate Starting DateTime of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"     * @param endDate Ending DateTime of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"    public Event(String description, String startDate, String endDate){","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"        super(description);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"        return taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"        return startDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    public void setStartDate(String startDate) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"        return endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"    public void setEndDate(String endDate) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"paturikarthik"},"content":"     * Converts the event to its string representation.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"paturikarthik"},"content":"     * @return The string representation of the event","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"paturikarthik"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"paturikarthik"},"content":"        return \"[\" + this.getTaskType() + \"]\" + super.toString()","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"paturikarthik"},"content":"                + \" (from: \" +this.getStartDate() + \" to: \" + this.getEndDate() + \" )\";","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"paturikarthik":63}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents a task that has been completed or to be completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" * This is an abstract class which serves as a template for the 3 different types of tasks - ToDo, Event, Deadline.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"public abstract class Task {","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"        return description;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"        return isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"     * Retrieves the status icon for the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"     * @return The status icon (\u0027X\u0027 if the task is done, \u0027 \u0027 if it\u0027s not done)","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"     * Converts the task into its string format.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"paturikarthik"},"content":"     * @return The task in string format","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"paturikarthik"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"paturikarthik"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"paturikarthik"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"paturikarthik":52}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":" * Represents a ToDo that has been completed or to be completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"public class ToDo extends tasks.Task {","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"     * Character Symbol which represents the task type","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    private String taskType \u003d \"T\";","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"     * Constructs a ToDo object with the given description.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"     * @param description Description of the ToDo","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"   public ToDo(String description){","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"       super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"   }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"        return taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"     * Converts the ToDo to its string representation.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"     * @return The string representation of the ToDo","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"        return \"[\" + this.getTaskType() + \"]\" + super.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"paturikarthik":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"REM run the program, feed commands from Parser.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"java -classpath ..\\bin Duke \u003c Parser.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"paturikarthik":2}}]
