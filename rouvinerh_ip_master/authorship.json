[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"# ByteBrew User Guide","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"ByteBrew is a bot used for managing a task list, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"* [Features](#features)","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"  - [Saving Data](#saving-data)","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"  - [Add Todo task: `todo`](#add-todo-task-todo)","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"  - [Add Deadline Task: `deadline`](#add-deadline-task-deadline)","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"  - [Add Event Task: `event`](#add-event-task-event)","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"  - [List Tasks: `list`](#list-tasks-list)","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"  - [Mark Task as Done: `mark`](#mark-task-as-done-mark)","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"  - [Mark Task as Undone: `unmark`](#mark-task-as-undone-unmark)","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"  - [Deleting Tasks: `delete`](#deleting-tasks-delete)","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"  - [Find a Task: `find`](#find-a-task-find)","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"  - [Print Help Message: `help`](#print-help-message-help)","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"  - [Exit and Write Data: `bye`](#exit-and-write-data-bye)","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"* [Frequently Asked Questions (FAQ)](#faq)","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"## Quick Start","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"1. Ensure that you have the latest Java 11.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"2. Download the latest `ip.jar` file from https://github.com/rouvinerh/ip/releases.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"3. Copy the file to the folder you want to use as the home folder for ByteBrew.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"4. Open a command terminal (either cmd.exe or bash), `cd` to the folder with `ip.jar` in it, and use `java -jar ip.jar` to run the application.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"5. The welcome message for ByteBrew should be printed to the screen.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"6. Type commands in the command line and press Enter to execute it. Using help and pressing Enter will print the help message.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"$ java -jar ip.jar","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"Hello! I\u0027m ByteBrew!","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"What can I do for you?","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"Data file NOT present. Creating one now!","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"Some example commands:","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"* `help`: Prints the help message out.","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"* `list`: Lists out all tasks recorded.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"### Notes about Command Format","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"* Words in `UPPER_CASE` are parameters supplied **by the user**.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"  - E.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo Finish DukeBot`.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"### Saving Data","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"Each time the task list is modified, ByteBrew will automatically save the data to `bytebrew_data.txt`. No other actions are required from the user to save data.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"If `bytebrew_data.txt` is found in the same directory, starting the bot will produce the following output:","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"$ java -jar ip.jar","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"Hello! I\u0027m ByteBrew!","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"What can I do for you?","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"Data file present!","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"### Add Todo Task: `todo`","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"Adds a todo task. Does not have specific deadline nor start or end date.","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"* All fields must be provided.","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"* `DESCRIPTION` represents the task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"* `todo homework`","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"* `todo run 5km`","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"todo homework","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"Added Todo: homework","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"Total Number of Tasks: 1","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"### Add Deadline Task: `deadline`","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"Adds a deadline task, which has **one** specific deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"Format: `deadline DESCRIPTION /by DATETIME`","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"* `DESCRIPTION` represents the task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"* `DATETIME` is in `yyyy-mm-dd HHmm` format.","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"* Note that deadline specified **must NOT be before current time**.","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"* `deadline return book /by 2024-08-05 1500`","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"* `deadline sleep /by 2024-05-05 0100`","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"deadline sleep /by 2024-05-05 0100","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"Added Deadline: sleep","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"Total Number of Tasks: 1","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"### Add Event Task: `event`","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"Adds an event task, which has a start time and end time.","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"Format: `event DESCRIPTION /by STARTTIME /to ENDTIME`","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"* `DESCRIPTION` represents the task description.","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"* `STARTTIME` and `ENDTIME` are in `yyyy-mm-dd HHmm` format.","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"* Note that `STARTTIME` and `ENDTIME` specified **must NOT be before current time**.","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"rouvinerh"},"content":"* `event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700`","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"Added Event: project meeting","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"Total Number of Tasks: 1","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"rouvinerh"},"content":"### List Tasks: `list`","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"rouvinerh"},"content":"Lists all tasks within the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"rouvinerh"},"content":"Format: `list`","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":146,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"rouvinerh"},"content":"1. [T] [ ] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"2. [D] [ ] sleep (by: 2024-05-05 0100)","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"3. [E] [ ] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"rouvinerh"},"content":"### Mark Task as Done: `mark`","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"rouvinerh"},"content":"Marks a task as done. Task list will use an `X` to denote a task is marked as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"rouvinerh"},"content":"Format: `mark INDEX`.","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"rouvinerh"},"content":"* `INDEX` represents the task number. Check `list` to see each number.","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"rouvinerh"},"content":"* `mark 1`","lastModifiedDate":"2024-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":164,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":166,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":167,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":168,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":169,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":170,"author":{"gitId":"rouvinerh"},"content":"1. [T] [ ] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":171,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":172,"author":{"gitId":"rouvinerh"},"content":"mark 1","lastModifiedDate":"2024-02-24"},{"lineNumber":173,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":174,"author":{"gitId":"rouvinerh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-24"},{"lineNumber":175,"author":{"gitId":"rouvinerh"},"content":"[T] [X] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":176,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":177,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":178,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":179,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":180,"author":{"gitId":"rouvinerh"},"content":"1. [T] [X] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":181,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":182,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":183,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":184,"author":{"gitId":"rouvinerh"},"content":"### Mark Task as Undone: `unmark`","lastModifiedDate":"2024-02-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":186,"author":{"gitId":"rouvinerh"},"content":"Marks a task as undone. Task list will use a blank space character to denote a task is marked as undone.","lastModifiedDate":"2024-02-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":188,"author":{"gitId":"rouvinerh"},"content":"Format: `unmark INDEX`.","lastModifiedDate":"2024-03-04"},{"lineNumber":189,"author":{"gitId":"rouvinerh"},"content":"* `INDEX` represents the task number. Check `list` to see each number.","lastModifiedDate":"2024-02-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-02-24"},{"lineNumber":192,"author":{"gitId":"rouvinerh"},"content":"* `unmark 2`","lastModifiedDate":"2024-02-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":197,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":198,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":199,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":200,"author":{"gitId":"rouvinerh"},"content":"1. [T] [ ] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":201,"author":{"gitId":"rouvinerh"},"content":"2. [E] [X] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":202,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":203,"author":{"gitId":"rouvinerh"},"content":"unmark 2","lastModifiedDate":"2024-02-24"},{"lineNumber":204,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":205,"author":{"gitId":"rouvinerh"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-24"},{"lineNumber":206,"author":{"gitId":"rouvinerh"},"content":"[E] [ ] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":207,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":208,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":209,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":210,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":211,"author":{"gitId":"rouvinerh"},"content":"1. [T] [ ] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":212,"author":{"gitId":"rouvinerh"},"content":"2. [E] [ ] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":213,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":214,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":215,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":216,"author":{"gitId":"rouvinerh"},"content":"### Deleting Tasks: `delete`","lastModifiedDate":"2024-02-24"},{"lineNumber":217,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":218,"author":{"gitId":"rouvinerh"},"content":"Deletes a task from the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":219,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":220,"author":{"gitId":"rouvinerh"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-24"},{"lineNumber":221,"author":{"gitId":"rouvinerh"},"content":"* `INDEX` represents the task number. Check `list` to see each number.","lastModifiedDate":"2024-02-24"},{"lineNumber":222,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":223,"author":{"gitId":"rouvinerh"},"content":"Example: ","lastModifiedDate":"2024-02-24"},{"lineNumber":224,"author":{"gitId":"rouvinerh"},"content":"* `delete 3`","lastModifiedDate":"2024-02-24"},{"lineNumber":225,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":226,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":227,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":228,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":229,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":230,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":231,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":232,"author":{"gitId":"rouvinerh"},"content":"1. [T] [ ] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":233,"author":{"gitId":"rouvinerh"},"content":"2. [E] [ ] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":234,"author":{"gitId":"rouvinerh"},"content":"3. [D] [ ] return book (by: 2024-08-05 1500)","lastModifiedDate":"2024-02-24"},{"lineNumber":235,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":236,"author":{"gitId":"rouvinerh"},"content":"delete 3","lastModifiedDate":"2024-02-24"},{"lineNumber":237,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":238,"author":{"gitId":"rouvinerh"},"content":"Deleted task 3: [D] [ ] return book (by: 2024-08-05 1500)","lastModifiedDate":"2024-02-24"},{"lineNumber":239,"author":{"gitId":"rouvinerh"},"content":"Number of tasks left: 2","lastModifiedDate":"2024-02-24"},{"lineNumber":240,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":241,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":242,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":243,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":244,"author":{"gitId":"rouvinerh"},"content":"1. [T] [ ] homework","lastModifiedDate":"2024-02-24"},{"lineNumber":245,"author":{"gitId":"rouvinerh"},"content":"2. [E] [ ] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":246,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":247,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"rouvinerh"},"content":"### Find a Task: `find`","lastModifiedDate":"2024-02-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"rouvinerh"},"content":"Finds a task based on ONE keyword and prints it out.","lastModifiedDate":"2024-02-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":253,"author":{"gitId":"rouvinerh"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-24"},{"lineNumber":254,"author":{"gitId":"rouvinerh"},"content":"* `KEYWORD` can only be 1 word long.","lastModifiedDate":"2024-02-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-02-24"},{"lineNumber":257,"author":{"gitId":"rouvinerh"},"content":"* `find book`","lastModifiedDate":"2024-02-24"},{"lineNumber":258,"author":{"gitId":"rouvinerh"},"content":"* `find CS2113`","lastModifiedDate":"2024-02-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":260,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":262,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":263,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-24"},{"lineNumber":264,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":265,"author":{"gitId":"rouvinerh"},"content":"Here\u0027s the task list:","lastModifiedDate":"2024-02-24"},{"lineNumber":266,"author":{"gitId":"rouvinerh"},"content":"1. [D] [ ] return book (by: 2024-08-05 1500)","lastModifiedDate":"2024-02-24"},{"lineNumber":267,"author":{"gitId":"rouvinerh"},"content":"2. [E] [ ] project meeting (from: 2024-08-24 1500 to: 2024-08-24 1700)","lastModifiedDate":"2024-02-24"},{"lineNumber":268,"author":{"gitId":"rouvinerh"},"content":"3. [T] [ ] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":269,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":270,"author":{"gitId":"rouvinerh"},"content":"find book","lastModifiedDate":"2024-02-24"},{"lineNumber":271,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":272,"author":{"gitId":"rouvinerh"},"content":"Finding matching tasks in list...","lastModifiedDate":"2024-02-24"},{"lineNumber":273,"author":{"gitId":"rouvinerh"},"content":"1. [D] [ ] return book (by: 2024-08-05 1500)","lastModifiedDate":"2024-02-24"},{"lineNumber":274,"author":{"gitId":"rouvinerh"},"content":"3. [T] [ ] borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":275,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":276,"author":{"gitId":"rouvinerh"},"content":"find alife","lastModifiedDate":"2024-02-24"},{"lineNumber":277,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":278,"author":{"gitId":"rouvinerh"},"content":"Finding matching tasks in list...","lastModifiedDate":"2024-02-24"},{"lineNumber":279,"author":{"gitId":"rouvinerh"},"content":"Found no tasks with keyword of: \u0027alife\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":280,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":282,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":283,"author":{"gitId":"rouvinerh"},"content":"### Print Help Message: `help`","lastModifiedDate":"2024-02-24"},{"lineNumber":284,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":285,"author":{"gitId":"rouvinerh"},"content":"Prints help message.","lastModifiedDate":"2024-02-24"},{"lineNumber":286,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":287,"author":{"gitId":"rouvinerh"},"content":"Format: `help`","lastModifiedDate":"2024-02-24"},{"lineNumber":288,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":289,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":290,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":291,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":292,"author":{"gitId":"rouvinerh"},"content":"help","lastModifiedDate":"2024-02-24"},{"lineNumber":293,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":294,"author":{"gitId":"rouvinerh"},"content":"Use either \u0027todo\u0027, \u0027event\u0027 or \u0027deadline\u0027 to add an item to the task list!","lastModifiedDate":"2024-02-24"},{"lineNumber":295,"author":{"gitId":"rouvinerh"},"content":"Deadline Usage: deadline return book /by 2024-08-05 1500","lastModifiedDate":"2024-02-24"},{"lineNumber":296,"author":{"gitId":"rouvinerh"},"content":"Event Usage: event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700","lastModifiedDate":"2024-02-24"},{"lineNumber":297,"author":{"gitId":"rouvinerh"},"content":"Todo Usage: todo borrow book","lastModifiedDate":"2024-02-24"},{"lineNumber":298,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":299,"author":{"gitId":"rouvinerh"},"content":"Use \u0027mark\u0027 OR \u0027unmark\u0027 to mark tasks as done or undone!","lastModifiedDate":"2024-02-24"},{"lineNumber":300,"author":{"gitId":"rouvinerh"},"content":"Mark usage: mark 2","lastModifiedDate":"2024-02-24"},{"lineNumber":301,"author":{"gitId":"rouvinerh"},"content":"Unmark usage: unmark 3","lastModifiedDate":"2024-02-24"},{"lineNumber":302,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":303,"author":{"gitId":"rouvinerh"},"content":"Use \u0027delete\u0027 to delete tasks from the list!","lastModifiedDate":"2024-02-24"},{"lineNumber":304,"author":{"gitId":"rouvinerh"},"content":"Delete usage: delete 1","lastModifiedDate":"2024-02-24"},{"lineNumber":305,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":306,"author":{"gitId":"rouvinerh"},"content":"Use \u0027find\u0027 to search for a task by ONE keyword","lastModifiedDate":"2024-02-24"},{"lineNumber":307,"author":{"gitId":"rouvinerh"},"content":"Find usage: find book","lastModifiedDate":"2024-02-24"},{"lineNumber":308,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":309,"author":{"gitId":"rouvinerh"},"content":"Use \u0027bye\u0027 to end the bot!","lastModifiedDate":"2024-02-24"},{"lineNumber":310,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":311,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":312,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":313,"author":{"gitId":"rouvinerh"},"content":"### Exit Bot: `bye`","lastModifiedDate":"2024-02-24"},{"lineNumber":314,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":315,"author":{"gitId":"rouvinerh"},"content":"Exits bot gracefully.","lastModifiedDate":"2024-02-24"},{"lineNumber":316,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":317,"author":{"gitId":"rouvinerh"},"content":"Format: `bye`","lastModifiedDate":"2024-02-24"},{"lineNumber":318,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":319,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-02-24"},{"lineNumber":320,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":321,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":322,"author":{"gitId":"rouvinerh"},"content":"bye","lastModifiedDate":"2024-02-24"},{"lineNumber":323,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":324,"author":{"gitId":"rouvinerh"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2024-02-24"},{"lineNumber":325,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":326,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":327,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":328,"author":{"gitId":"rouvinerh"},"content":"## FAQ","lastModifiedDate":"2024-02-24"},{"lineNumber":329,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":330,"author":{"gitId":"rouvinerh"},"content":"1. If I exit the bot using anything other than `bye`, will I lose data?","lastModifiedDate":"2024-02-24"},{"lineNumber":331,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":332,"author":{"gitId":"rouvinerh"},"content":"No. Data will be saved each time the task list is edited.","lastModifiedDate":"2024-02-24"},{"lineNumber":333,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":334,"author":{"gitId":"rouvinerh"},"content":"2. How do I transfer data to other machines?","lastModifiedDate":"2024-02-24"},{"lineNumber":335,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":336,"author":{"gitId":"rouvinerh"},"content":"Copy the `ip.jar` file and `bytebrew_data.txt` to the other machine. Place both of the files in the same directory, and ByteBrew will read the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":337,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":338,"author":{"gitId":"rouvinerh"},"content":"If `bytebrew_data.txt` is found in the same directory, starting the bot will produce the following output:","lastModifiedDate":"2024-02-24"},{"lineNumber":339,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":340,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":341,"author":{"gitId":"rouvinerh"},"content":"$ java -jar ip.jar","lastModifiedDate":"2024-02-24"},{"lineNumber":342,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":343,"author":{"gitId":"rouvinerh"},"content":"Hello! I\u0027m ByteBrew!","lastModifiedDate":"2024-02-24"},{"lineNumber":344,"author":{"gitId":"rouvinerh"},"content":"What can I do for you?","lastModifiedDate":"2024-02-24"},{"lineNumber":345,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":346,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":347,"author":{"gitId":"rouvinerh"},"content":"Data file present!","lastModifiedDate":"2024-02-24"},{"lineNumber":348,"author":{"gitId":"rouvinerh"},"content":"__________________________________________________","lastModifiedDate":"2024-02-24"},{"lineNumber":349,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"rouvinerh":321,"-":28}},{"path":"src/main/java/ByteBrew.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import utility.Parse;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import command.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":" * Represents the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"public class ByteBrew{","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code ByteBrew} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    public ByteBrew(){","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * Runs the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    public void run() throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"        ui.startUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        Storage.processFile(this.tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"                Command command \u003d Parse.parseCommand(fullCommand);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"            catch (ByteBrewException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * Starts the ByteBrew bot by creating a {@code ByteBrew} object and calling {@code run}.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     * @param args Command-line arguments from the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    public static void main(String[] args) throws ByteBrewException{","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        new ByteBrew().run();","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"rouvinerh":56}},{"path":"src/main/java/bytebrew/ByteBrewException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package bytebrew;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":" * Represents a custom exception class for ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"public class ByteBrewException extends Exception {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new ByteBrewException with the specified error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    public ByteBrewException(String message) {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"        super(Constants.HORIZONTAL_LINE + \"\\n\" + message + \"\\n\" + Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":17}},{"path":"src/main/java/bytebrew/ByteBrewTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package bytebrew;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Represents a custom exception class for all time-based errors for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"public class ByteBrewTimeException extends ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new ByteBrewTimeException with the specified error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    public ByteBrewTimeException(String message) {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"        super(message);","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"rouvinerh":16}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code bye} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"public class ByeCommand implements Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code bye} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * Writes all task data to a file, then displays the shutdown message.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        Storage.writeFile(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        Ui.shutDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * Returns {@code true} if command entered is {@code bye}, exiting the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code true} as {@code bye} is an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit(){","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"        return true;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"rouvinerh":37}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":" * Represents a Command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"public interface Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code true} If the command is an exit command. Otherwise, {@code false} is returned.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * Executes the command entered.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"rouvinerh":28}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewTimeException;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import utility.Parse;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code deadline} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"public class DeadlineCommand implements Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    private final String INPUTLINE;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    private final String[] WORDS;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code deadline} command object with user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * @param input User input for the {@code deadline} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"    public DeadlineCommand(String input, String[] words) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        this.INPUTLINE \u003d input;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        this.WORDS \u003d words;","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code deadline} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     * Adds a new deadline to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        addDeadline(this.WORDS, this.INPUTLINE, tasks, tasks.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} as {@code deadline} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     * Adds a {@code deadline} task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     * @param inputLine User input for the {@code deadline} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"    public static void addDeadline(String[] words, String inputLine, ArrayList\u003cTask\u003e tasks, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"        if (words.length \u003c Constants.MIN_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Description of a deadline cannot be empty!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"                    \"Usage: deadline return book /by 2024-08-05 1500\");","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"            String[] deadlineInformation \u003d getDeadlineInformation(inputLine);","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"            String deadlineDescription \u003d deadlineInformation[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"            String by \u003d deadlineInformation[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"            Deadline deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"            tasks.add(taskCount, deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"            Ui.printAcknowledgement(\"Deadline\", deadlineDescription, taskCount);","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"            Storage.writeFile(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        catch (ByteBrewTimeException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"        catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid syntax for deadline!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"                                        \"Usage: deadline return book /by 2024-08-05 1500\");","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"     * Extracts and returns the deadline description and time from user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"     * @param inputLine User input for the {@code deadline} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"     * @return An array containing the description and deadline time.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"    public static String[] getDeadlineInformation(String inputLine) {","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"        String inputWithoutTaskType \u003d Parse.removeFirstWord(inputLine);","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"        String[] deadlineInformation \u003d new String[2];","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"        deadlineInformation[0] \u003d inputWithoutTaskType.split(\" /by \",2)[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"        deadlineInformation[1] \u003d inputWithoutTaskType.split(\" /by \",2)[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"        return deadlineInformation;","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":103}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import utility.Parse;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code delete} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    private final String[] WORDS;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code delete} command object with user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    public DeleteCommand(String[] words) {","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        this.WORDS \u003d words;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code delete} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * Adds a new deadline to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"        deleteItem( WORDS, tasks, tasks.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} as {@code delete} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"    public static void deleteItem(String[] words, ArrayList\u003cTask\u003e tasks, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"        if (words.length \u003c Constants.MIN_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Task index to delete must be specified!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"                    \"Usage: delete 1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"            int taskIndex \u003d Parse.getTaskIndex(words, taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"            taskCount -\u003d 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Deleted task \" + (taskIndex + 1) + \": \" + tasks.get(taskIndex));","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Number of tasks left: \" + taskCount);","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"            Storage.writeFile(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"        catch (NumberFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Please enter a valid number for the index!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":81}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewTimeException;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"import utility.Parse;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code event} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    private final String INPUTLINE;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    private final String[] WORDS;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code event} command object with user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @param input User input for the deadline command.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    public EventCommand(String input, String[] words) {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        this.INPUTLINE \u003d input;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        this.WORDS \u003d words;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code event} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * Adds a new event to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        addEvent(this.WORDS, this.INPUTLINE, tasks, tasks.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} Since the {@code event} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     * Extracts and return event description from user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @param inputLine User input for the {@code event} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     * @return A string containing the event description.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"    public static String getEventDescription(String inputLine) {","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"        String inputWithoutTaskType \u003d Parse.removeFirstWord(inputLine);","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"        return inputWithoutTaskType.split(\" /from \",2)[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"     * Extracts and return event times from user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"     * @param inputLine User input for the {@code event} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"     * @return An array containing the {@code from} and {@code to} time for the event.","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"    public static String[] getEventTimings(String inputLine) {","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"        String inputWithoutTaskType \u003d Parse.removeFirstWord(inputLine);","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        String[] timings \u003d new String[2];","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"        String timing \u003d inputWithoutTaskType.split(\" /from \", 2)[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        timings[0] \u003d timing.split(\" /to \", 2)[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        timings[1] \u003d timing.split(\" /to \", 2)[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"        return timings;","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"     * Adds an {@code event} task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"     * @param inputLine User input for the deadline command.","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"    public static void addEvent(String[] words, String inputLine, ArrayList\u003cTask\u003e tasks, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"        if (words.length \u003c Constants.MIN_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Description of an event cannot be empty!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"                    \"Usage: event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700\");","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"            String[] timings \u003d getEventTimings(inputLine);","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"            String eventDescription \u003d getEventDescription(inputLine);","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"            Event event \u003d new Event(eventDescription, timings[0], timings[1]);","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"            tasks.add(taskCount, event);","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"            Ui.printAcknowledgement(\"Event\", eventDescription, taskCount);","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"            Storage.writeFile(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"        catch (ByteBrewTimeException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"        catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid syntax for event!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"                        \"Usage: event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700\");","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":114}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code find} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"public class FindCommand implements Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public final String[] WORDS;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code find} command object with user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    public FindCommand(String[] words) {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        this.WORDS \u003d words;","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} Since the {@code find} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code event} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * Finds a task based on the given keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"        if (WORDS.length \u003c Constants.MIN_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Please specify a keyword!\\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"                                        \"Usage: find book\");","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"        if (WORDS.length \u003e Constants.MAX_FIND_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Please specify ONE keyword!\\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"                                        \"Usage: find book\");","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"        final String KEYWORD \u003d WORDS[1];","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Finding matching tasks in list...\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"        int foundTaskCount \u003d 0;","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"            if (t.getDescription().contains(KEYWORD)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"                System.out.println((i + 1) + \". \"  + t);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"                foundTaskCount +\u003d 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        if (foundTaskCount \u003d\u003d 0) {","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Found no tasks with keyword of: \u0027\" + KEYWORD + \"\u0027\");","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"rouvinerh":76}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code help} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} as {@code help} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * Executes the \u0027exit\u0027 command.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * Writes all task data to a file, then displays the shutdown message.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Use either \u0027todo\u0027, \u0027event\u0027 or \u0027deadline\u0027 to add a task to the task list!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Deadline Usage: deadline return book /by 2024-08-05 1500\");","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Event Usage: event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700\");","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Todo Usage: todo borrow book\");","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Use \u0027mark\u0027 OR \u0027unmark\u0027 to mark tasks as done or undone!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Mark usage: mark 2\");","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Unmark usage: unmark 3\");","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Use \u0027delete\u0027 to delete tasks from the list!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Delete usage: delete 1\");","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Use \u0027find\u0027 to search for a task by ONE keyword\");","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Find usage: find book\");","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Use \u0027bye\u0027 to end the bot!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":53}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code list} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"public class ListCommand implements Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code list} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     * Prints out all tasks within the {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"There is nothing in the task list!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Here\u0027s the task list:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"            System.out.println((i + 1) + \". \"  + tasks.get(i));","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} Since the {@code list} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit(){","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":48}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import utility.Parse;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code mark} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"public class MarkCommand implements Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    private final boolean IS_MARK;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    private final String[] WORDS;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code mark} command object with user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * @param isMark Boolean variable set to {@code true} if command entered is {@code mark}, and {@code false} if command is {@code unmark}.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    public MarkCommand(boolean isMark, String[] words) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        this.IS_MARK \u003d isMark;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        this.WORDS \u003d words;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code mark} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * Adds a new deadline to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        processMarkingCommand(IS_MARK, WORDS, tasks, tasks.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} Since the {@code mark} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"     * Marks a task as done or undone depending on {@code isDone}.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"     * If {@code isDone} is true, mark as done. Otherwise, mark as not done.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @param taskIndex The task element index.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     * @param isDone Boolean variable indicating whether to mark task as done or not done.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, int taskIndex, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"        Task taskToEdit \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"        if (taskToEdit.isDone \u003d\u003d isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Task is already marked as \" + (isDone ? \"done!\" : \"undone!\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"            return;","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        else if (isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"            taskToEdit.setStatus(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"        else {","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"            taskToEdit.setStatus(false);","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(taskToEdit);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"     * Processes {@code mark} command and determines whether to mark or unmark a task as done.","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"     * @param IS_MARK Boolean variable set to {@code true} if command entered is {@code mark}, and {@code false} if command is {@code unmark}.","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"    public static void processMarkingCommand(boolean IS_MARK, String[] words, ArrayList\u003cTask\u003e tasks, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"        String action;","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"        if (IS_MARK) {","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"            action \u003d \"mark\";","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"        else {","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"            action \u003d \"unmark\";","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"        if (words.length \u003c Constants.MIN_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Please specify an index to \" + action + \"\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"                    \"Usage: \" + action + \" 1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"        int taskIndex \u003d Parse.getTaskIndex(words, taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"        markTask(tasks, taskIndex, action.equals(\"mark\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":112}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import utility.Parse;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"import utility.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code todo} command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"public class TodoCommand implements Command{","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    private final String INPUTLINE;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    private final String[] WORDS;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code todo} command object with user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @param input User input for the {@code todo} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    public TodoCommand(String input, String[] words) {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        this.INPUTLINE \u003d input;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        this.WORDS \u003d words;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * Executes the {@code todo} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * Adds a new todo to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks   The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param ui      The {@code Ui} instance for the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @param storage The {@code Storage} instance for managing all reading and writing of data from files.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        addTodo(this.WORDS, this.INPUTLINE, tasks, tasks.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     * Indicates whether command entered is an exit command for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * @return {@code false} as {@code help} command is not an exit command.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"     * Adds a {@code todo} task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @param inputLine User input for the {@code todo} command.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"    public static void addTodo(String[] words, String inputLine, ArrayList\u003cTask\u003e tasks, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"        if (words.length \u003c Constants.MIN_INPUT_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Description of a todo cannot be empty!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"                    \"Usage: todo borrow book\");","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"            Todo newTodo \u003d new Todo(Parse.removeFirstWord(inputLine).trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"            tasks.add(taskCount, newTodo);","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"            Ui.printAcknowledgement(\"Todo\", Parse.removeFirstWord(inputLine), taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"            Storage.writeFile(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid syntax for todo!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"                    \"Usage: todo borrow book\");","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":81}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"import utility.Constants;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":" * Represents the Storage interface for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":" * Used for reading and writing from data files.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"public class Storage {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * Checks whether a task is marked as done or not done by checking \"X\" character from data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * @param symbol The symbol indicating the task\u0027s completion status. \"X\" means the task is done. Otherwise, task is not done.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    public static void checkIsDone(ArrayList\u003cTask\u003e tasks, String symbol, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"        if (symbol.equals(\"X\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"            tasks.get(taskCount).setStatus(true);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        else if (symbol.isEmpty()){","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"            tasks.get(taskCount).setStatus(false);","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"        else {","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid isDone symbol!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     * Adds tasks to the task list based on data read from the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The task list representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    public static void processFile(ArrayList\u003cTask\u003e tasks)  {","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"            File dataFile \u003d new File(Constants.DATA_FILE_NAME);","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"            checkDataFile(dataFile);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"            final Scanner READ_FILE \u003d new Scanner(dataFile);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"            while (READ_FILE.hasNext()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"                String[] words \u003d READ_FILE.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"                switch (words[0].trim()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"                case \"todo\": {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"                    processToDo(tasks, words, taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"                case \"deadline\": {","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"                    processDeadline(tasks, words, taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"                case \"event\": {","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"                    processEvent(tasks, words, taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"                    break;","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"                default: {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"                    System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"                    System.out.println(\"Invalid task type at task: \" + (taskCount + 1) + \"!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"                    System.out.println(\"Valid tasks are: event, deadline and todo\");","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"                    System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"                    System.exit(1);","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"                taskCount +\u003d 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"         catch (Exception e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Task input error at task: \"  + (taskCount + 1) + \"!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"            System.exit(1);","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"     * Processes an {@code event} task by extracting the relevant fields from the data file contents.","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"     * Creates an {@code event} object, adds it to the task list, then checks its completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"     * @param words An array of words read from a line within the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"    public static void processEvent(ArrayList\u003cTask\u003e tasks, String[] words, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"        String[] eventInfo \u003d words[2].split(\"from:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"        if (eventInfo[0].isEmpty()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Description of an event cannot be empty!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"        if (eventInfo.length \u003c Constants.MIN_EVENT_INFO_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid event format!\\n\" +","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"                                        \"Example format: event| |project meeting from: 2024-08-24 1500 to: 2024-08-24 1600\");","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"        String eventDescription \u003d eventInfo[0].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"        String[] eventTimes \u003d eventInfo[1].split(\" to:\");","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"        if (eventTimes.length \u003c Constants.MIN_EVENT_TIMES_LENGTH) {","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid event time format!\\n\" +","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"                                        \"Example format: event| |project meeting from: 2024-08-24 1500 to: 2024-08-24 1600\");","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"        String from \u003d eventTimes[0].trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"        String to \u003d eventTimes[1].trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"        Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"        checkIsDone(tasks, words[1].trim(), taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"rouvinerh"},"content":"     * Processes an {@code deadline} task by extracting the relevant fields from the data file contents.","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"rouvinerh"},"content":"     * Creates an {@code deadline} object, adds it to the task list, then checks its completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"     * @param words An array of words read from a line within the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"rouvinerh"},"content":"    public static void processDeadline(ArrayList\u003cTask\u003e tasks, String[] words, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"        String[] deadlineInfo \u003d words[2].split(\"by:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"rouvinerh"},"content":"        String by;","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"rouvinerh"},"content":"        if (deadlineInfo[0].isEmpty()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Description of a deadline cannot be empty!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":141,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":142,"author":{"gitId":"rouvinerh"},"content":"            by \u003d deadlineInfo[1].trim().substring(0, deadlineInfo[1].length() - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"rouvinerh"},"content":"        catch (Exception e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid deadline format!\\n\" +","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"rouvinerh"},"content":"                                        \"Example format: deadline| |return book by: 2024-08-05 0000\");","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"        Deadline deadline \u003d new Deadline(deadlineInfo[0].trim(), by);","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"rouvinerh"},"content":"        checkIsDone(tasks, words[1].trim(), taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"rouvinerh"},"content":"     * Processes an {@code todo} task by extracting the relevant fields from the data file contents.","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"rouvinerh"},"content":"     * Creates an {@code todo} object, adds it to the task list, then checks its completion status.","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":159,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"rouvinerh"},"content":"     * @param words An array of words read from a line within the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":163,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":164,"author":{"gitId":"rouvinerh"},"content":"    public static void processToDo(ArrayList\u003cTask\u003e tasks, String[] words, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":165,"author":{"gitId":"rouvinerh"},"content":"        String toDoDescription \u003d words[2];","lastModifiedDate":"2024-02-24"},{"lineNumber":166,"author":{"gitId":"rouvinerh"},"content":"        if (toDoDescription.isEmpty()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Description of a todo cannot be empty!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"rouvinerh"},"content":"            Todo newTodo \u003d new Todo(toDoDescription);","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"rouvinerh"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"rouvinerh"},"content":"            checkIsDone(tasks, words[1].trim(), taskCount);","lastModifiedDate":"2024-02-24"},{"lineNumber":174,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"rouvinerh"},"content":"        catch (Exception e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":176,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid todo format!\\n\"+","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"rouvinerh"},"content":"                                        \"Example format: todo| |return book\");","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":180,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":182,"author":{"gitId":"rouvinerh"},"content":"     * Checks for the existence of the data file. If not created, it creates one.","lastModifiedDate":"2024-03-04"},{"lineNumber":183,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":184,"author":{"gitId":"rouvinerh"},"content":"     * @param dataFile The {@code File} object representing the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":185,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":186,"author":{"gitId":"rouvinerh"},"content":"    public static void checkDataFile(File dataFile) {","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":188,"author":{"gitId":"rouvinerh"},"content":"            if (dataFile.createNewFile()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"rouvinerh"},"content":"                System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":190,"author":{"gitId":"rouvinerh"},"content":"                System.out.println(\"Data file NOT present. Creating one now!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"rouvinerh"},"content":"                System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":192,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":193,"author":{"gitId":"rouvinerh"},"content":"            else {","lastModifiedDate":"2024-03-04"},{"lineNumber":194,"author":{"gitId":"rouvinerh"},"content":"                System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":195,"author":{"gitId":"rouvinerh"},"content":"                System.out.println(\"Data file present!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"rouvinerh"},"content":"                System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":197,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"rouvinerh"},"content":"        catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":200,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-03-04"},{"lineNumber":201,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"File creation error\");","lastModifiedDate":"2024-03-04"},{"lineNumber":202,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-03-04"},{"lineNumber":203,"author":{"gitId":"rouvinerh"},"content":"            System.exit(1);","lastModifiedDate":"2024-03-04"},{"lineNumber":204,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":205,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":206,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":208,"author":{"gitId":"rouvinerh"},"content":"     * Writes the tasks from the task list to the data file.","lastModifiedDate":"2024-02-24"},{"lineNumber":209,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":210,"author":{"gitId":"rouvinerh"},"content":"     * @param tasks The {@code TaskList} representing the current list of tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":211,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":212,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":213,"author":{"gitId":"rouvinerh"},"content":"    public static void writeFile(ArrayList\u003cTask\u003e tasks) throws ByteBrewException {","lastModifiedDate":"2024-02-17"},{"lineNumber":214,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":215,"author":{"gitId":"rouvinerh"},"content":"            FileWriter dataFile \u003d new FileWriter(Constants.DATA_FILE_NAME);","lastModifiedDate":"2024-02-24"},{"lineNumber":216,"author":{"gitId":"rouvinerh"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":217,"author":{"gitId":"rouvinerh"},"content":"                dataFile.write(t.getType() + \"|\" + t.getStatusIcon() + \"|\" + t.getDescription() + \" \" +","lastModifiedDate":"2024-02-17"},{"lineNumber":218,"author":{"gitId":"rouvinerh"},"content":"                        t.getTimes() + \u0027\\n\u0027);","lastModifiedDate":"2024-02-17"},{"lineNumber":219,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":220,"author":{"gitId":"rouvinerh"},"content":"            dataFile.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":221,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":222,"author":{"gitId":"rouvinerh"},"content":"        catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":223,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"File write error occurred!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":224,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":225,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"rouvinerh":226}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewTimeException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code Deadline} task for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    private String type \u003d \"deadline\";","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code Deadline} task object.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     * @param description Description of the {@code Deadline} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * @param stringBy Deadline for the {@code Deadline} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    public Deadline(String description, String stringBy) throws ByteBrewTimeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        this.by \u003d parseTime(stringBy);","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representing the task type.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * @return A string \u0027deadline\u0027 representing {@code Deadline} tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    public String getType() {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        return this.type;","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * Formats the actual deadline within from the {@code Deadline} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string with the deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    public String getTimes() {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        String formattedDateTime \u003d this.by.format(formatter).replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"        return \"by: \" + formattedDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of the {@code Deadline} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     * @return A foramtted string representing the {@code Deadline} task, inclusive of the symbol representing completion status, description and the actual deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"        return \"[D] [\" + getStatusIcon() + \"] \" + getDescription() + \" (\" + getTimes() + \")\";","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"    public static LocalDateTime parseTime(String dateTime) throws ByteBrewTimeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"        LocalDateTime formattedDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"            formattedDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewTimeException(\"Invalid deadline time format!\\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"                                            \"Format: deadline \u003cdescription\u003e /by yyyy-mm-dd HHmm\\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"                                            \"Example: deadline return book /by 2024-08-05 1500\");","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        if (formattedDateTime.isBefore(currentTime)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewTimeException(\"Time specified BEFORE current time!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"rouvinerh":76}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewTimeException;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code Event} task for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    private String type \u003d \"event\";","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code Event} task object.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * @param description Description of the {@code Event} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * @param stringFrom Start time for the {@code Event} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * @param stringTo End time for the {@code Event} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewTimeException If \u0027to\u0027 time is before \u0027from\u0027 time.","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    public Event(String description, String stringFrom, String stringTo) throws ByteBrewTimeException{","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        super(description);","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        this.from \u003d parseTime(stringFrom);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        this.to \u003d parseTime(stringTo);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewTimeException(\"\u0027to\u0027 time cannot be before \u0027from\u0027 time!\");","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representing the task type.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @return A string \u0027event\u0027 representing {@code Event} tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    public String getType() {","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        return this.type;","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of the {@code Event} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * @return A foramtted string representing the {@code Event} task, inclusive of the symbol representing completion status, description, start and end times.","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    public String getTimes() {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"        String formattedFrom \u003d this.from.format(formatter).replace(\u0027T\u0027, \u0027 \u0027);;","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        String formattedTo \u003d this.to.format(formatter).replace(\u0027T\u0027, \u0027 \u0027);","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"        return \"from: \" + formattedFrom + \" to: \" + formattedTo;","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     * Formats the start and end times from the {@code Event} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string with the start and end times.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"        return \"[E] [\" + getStatusIcon() + \"] \" + getDescription() + \" (\" + getTimes() + \")\";","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"    public static LocalDateTime parseTime(String dateTime) throws ByteBrewTimeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        LocalDateTime formattedDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"            formattedDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewTimeException(\"Invalid event time format!\\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"                    \"Format: event \u003cdescription\u003e /from yyyy-mm-dd HHmm /to yyyy-mm-dd HHmm\\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"                    \"Example: event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700\");","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        LocalDateTime currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        if (formattedDateTime.isBefore(currentTime)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewTimeException(\"Time specified BEFORE current time!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"rouvinerh":85}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Represent a general {@code Task} for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    public boolean isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    private String description;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    private String type \u003d \"task\";","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code Task} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the description of a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @return A string representing the description of a {@code Task} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        return this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * Returns a symbol representing the completion status of a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * @return A string representing completion status of a task.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * Marks the task as done or not done based on {@code isDone} parameter. If {@code isDone} is {@code true}, task is done.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"     * @param isDone A boolean variable representing completion status of task.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representing the task type.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     * @return A string \u0027task\u0027 representing {@code Task} tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    public String getType() {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        return this.type;","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representing the time within a {@code Task} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @return An empty string since {@code Task} has no time stored.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"    public String getTimes() {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        return \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"     * Returns a formatted string representing the {@code Task} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"     * @return A string representing a {@code Task} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"    public String printTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"        return \"[\" + getStatusIcon() + \"]\" + getDescription();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"rouvinerh":75}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":" * Represents the list of tasks stored within ByteBrew.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"rouvinerh":9}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Represents the {@code Todo} task for the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    private String type \u003d \"todo\";","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new {@code Todo} task object.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * @param description Description of the {@code Todo} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"        super(description);","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representing the task type.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * @return A string \u0027todo\u0027 representing {@code Todo} tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    public String getType() {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        return this.type;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representing the time within a {@code Todo} object.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     * @return An empty string since {@code Todo} has no time stored.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    public String getTimes() {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        return \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of the {@code Todo} task.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing the {@code Todo} task, inclusive of the symbol representing completion status and description.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        return \"[T] [\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"rouvinerh":48}},{"path":"src/main/java/utility/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Represents all constant variables used in the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"public class Constants {","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    public static final String HORIZONTAL_LINE \u003d \"__________________________________________________\";","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    public static final int MIN_INPUT_LENGTH \u003d 2;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    public static final int MIN_DEADLINE_INFO_LENGTH \u003d 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    public static final int MIN_EVENT_INFO_LENGTH \u003d 2;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    public static final int MIN_EVENT_TIMES_LENGTH \u003d 2;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    public static final int MAX_FIND_INPUT_LENGTH \u003d 2;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    public static final String DATA_FILE_NAME \u003d \"./bytebrew_data.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":15}},{"path":"src/main/java/utility/Parse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import bytebrew.ByteBrewException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import command.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import command.DeleteCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import command.EventCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import command.HelpCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import command.ListCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import command.TodoCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"import command.FindCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"import command.ByeCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":" * Represents the user input parser of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"public class Parse {","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * Removes the first word from a string.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * @param input The input string from which the first word will be removed.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * @return The {@code input} string after the first word is removed.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    public static String removeFirstWord(String input){","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        return input.split(\" \",2)[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the task index from the user input when using the {@code mark}, {@code unmark} or {@code delete} commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * @param words Array of words obtained from the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount The number of elements within {@code TaskList}.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     * @return An integer representing the task index specified in the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"    public static int getTaskIndex(String[] words, int taskCount) throws ByteBrewException {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"            int taskIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskCount) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"                throw new ByteBrewException(\"Please specify a valid index!\\n\" +","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"                        \"Current number of tasks: \" + taskCount);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"            return taskIndex;","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"        catch (NumberFormatException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Please enter a valid number for the index!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     * Parses user input into words, then creates {@code Command} object based on details entered.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"     * Verifies user input to ensure that only valid commands are entered.","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"     * @param userInput A string representing the user input.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"     * @return A {@code Command} object to be created.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     * @throws ByteBrewException","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"    public static Command parseCommand(String userInput) throws ByteBrewException {","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        switch (words[0]) {","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"        case \"help\":","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        case \"find\":","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"            return new FindCommand(words);","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"            return new DeadlineCommand(userInput, words);","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        case \"event\":","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"            return new EventCommand(userInput, words);","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"            return new TodoCommand(userInput, words);","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"        case \"list\":","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"            return new MarkCommand(false, words);","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"            return new MarkCommand(true, words);","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"            return new DeleteCommand(words);","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"        default:","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"            throw new ByteBrewException(\"Invalid command! Use \u0027help\u0027 to see the commands available!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":98}},{"path":"src/main/java/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" * Represents the user interface of the ByteBrew bot.","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"public class Ui {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    Scanner in;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    public Ui() {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * Prints the startup message.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    public static void startUp() {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Hello! I\u0027m ByteBrew!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * Prints the shutdown message.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    public static void shutDown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * Prints the acknowledgement to indicate a successful adding of a task to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @param taskType A string representing the type of task added.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param description A string representing the description of the task added.","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @param taskCount An integer representing the number of tasks there are within the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    public static void printAcknowledgement(String taskType, String description, int taskCount){","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Added \" + taskType + \": \" + description);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"Total Number of Tasks: \" + taskCount);","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constants.HORIZONTAL_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * Reads one line from user input and removes excess empty spaces.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     * @return A string representing the line the user entered","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        return this.in.nextLine().trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     * Prints out the error message if any.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     * ","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @param error A string representing the error message to print.","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"    public void showError(String error) {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(error);","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":65}},{"path":"text-ui-test/EXPECTED_DATA.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"event| |project meeting from: 2024-08-24 1500 to: 2024-08-24 1700","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"todo| |borrow book ","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"todo| |1 ","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"rouvinerh":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"help","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"deadline return book /by 2024-08-05 1500","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"event project meeting /from 2024-08-24 1500 /to 2024-08-24 1700","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"todo borrow book","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"unmark 1","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"mark 1","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"unmark 1","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"mark 2","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"unmark 2","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"deadline","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"deadline 1","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"deadline return book /by 2024-01-05 1500","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"deadline return book /by 2024-08-05 150","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"event","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"event 1","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"event project meeting /from 2024-01-24 1500 /to 2024-08-24 1700","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"event project meeting /from 2024-08-24 1500 /to 2024-08-24 170","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"todo 1","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"todo","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"delete 1","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"list","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"delete 4","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"find","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"find fake tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"find duck","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"find meeting","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"bye","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"rouvinerh":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"del \"./bytebrew_data.txt\"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"java -classpath ..\\bin ByteBrew \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"FC bytebrew_data.txt EXPECTED_DATA.txt","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"rouvinerh":4,"-":19}}]
