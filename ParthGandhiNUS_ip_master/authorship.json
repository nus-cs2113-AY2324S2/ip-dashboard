[{"path":"data/Kowalski.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"E | X | go for swimming | Sat 6pm - 7pm","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"T | 0 | code 2113","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ParthGandhiNUS":2}},{"path":"src/main/java/Kowalski/Kowalski.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"package Kowalski;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ParthGandhiNUS"},"content":"import Kowalski.commands.KowalskiException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"ParthGandhiNUS"},"content":"import Kowalski.tasks.Deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"ParthGandhiNUS"},"content":"import Kowalski.tasks.Event;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"ParthGandhiNUS"},"content":"import Kowalski.tasks.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"ParthGandhiNUS"},"content":"import Kowalski.tasks.Todo;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.util.List;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ParthGandhiNUS"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ParthGandhiNUS"},"content":"public class Kowalski {","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ParthGandhiNUS"},"content":"    private static final String DIVIDING_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"ParthGandhiNUS"},"content":"    private static final String TEXT_FILE_FOLDER \u003d \"data\";","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ParthGandhiNUS"},"content":"    private static final String TEXT_FILE_DIRECTORY \u003d \"/Kowalski.txt\";","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ParthGandhiNUS"},"content":"    private static final String FULL_FILE_PATH \u003d TEXT_FILE_FOLDER+TEXT_FILE_DIRECTORY;","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static List \u003cTask\u003e currentTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static Scanner in \u003d new Scanner (System.in);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Prints out the message introducing the functionalities of Kowalski Bot","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void printIntro(){","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Welcome Skipper! I\u0027m Kowalski, reporting for Duty!\"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"ParthGandhiNUS"},"content":"                + System.lineSeparator() );","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"ParthGandhiNUS"},"content":"        printHelpCommands();","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(System.lineSeparator()","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"ParthGandhiNUS"},"content":"                +\"What can I do for you today?\" );","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void printHelpCommands(){","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Enter commands, and I will echo them back to you, as well as add them to your list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027list\u0027 to see your to-do list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027mark\u0027 to mark a task as done.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027unmark\u0027 to mark a task as not done.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027todo \u003cdescription\u003e\u0027 to add a task to the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027deadline \u003cdescription\u003e /by \u003cdeadline\u003e\u0027 to add a task with a deadline to the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027 to add an event to the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027delete \u003cindex\u003e\u0027 to delete a task from your list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Type \u0027bye\u0027 to end the conversation.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Used to check if the user has accurately input the deadline by stating the \"/by\"","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param deadlineDetails : Contains the details of the deadline task","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @throws KowalskiException In the event that the input has no \"/by\"","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void checkDeadlineInput(String deadlineDetails) throws KowalskiException{","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"ParthGandhiNUS"},"content":"        if (!(deadlineDetails.contains(\"/by\"))) {","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"ParthGandhiNUS"},"content":"            throw new KowalskiException();","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Used to check if the user has accurately input the deadline by stating the \"/from\" and \"/to\"","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param eventDetails : Contains the details of the event task","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @throws KowalskiException In the event that the input has no \"/from\" or \"/to\" or both","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void checkEventInput(String eventDetails) throws KowalskiException{","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"ParthGandhiNUS"},"content":"        if (!((eventDetails.contains(\"/from\")) \u0026\u0026 (eventDetails.contains(\"/to\")))) {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"ParthGandhiNUS"},"content":"            throw new KowalskiException();","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Used to process the different variations of the users inputs","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param userInput : String which the user inputs","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @return String which is in lowercase and clear of any unnecessary whitespace","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static String processInput(String userInput){","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"ParthGandhiNUS"},"content":"        return (userInput.trim()).toLowerCase();","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Prints out an accurate message for the number of tasks in the list.","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param numberOfTasks : represents the total current task count","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void printCurrentTaskMessage(int numberOfTasks){","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"ParthGandhiNUS"},"content":"        switch (numberOfTasks){","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"ParthGandhiNUS"},"content":"        case 0:","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Now you have 0 tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"ParthGandhiNUS"},"content":"        case 1:","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ParthGandhiNUS"},"content":"        default:","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Used in the \"list\" command to print all the Current Tasks in the proper format","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void printCurrentTaskItems(){","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"ParthGandhiNUS"},"content":"        for (int i \u003d 1; i \u003c\u003d currentTask.size(); i++){","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(i + \".\" + currentTask.get(i-1));","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Cleans up the user input and forms new Deadline Task","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param deadlineDetails : User input for details of the deadline task","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @return new deadline task created","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"ParthGandhiNUS"},"content":"    private static Task getNewDeadlineTask(String deadlineDetails) {","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"ParthGandhiNUS"},"content":"        String[] deadlineArray \u003d deadlineDetails.split(\"/by\");","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"ParthGandhiNUS"},"content":"        for (int i \u003d 0; i \u003c deadlineArray.length; i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"ParthGandhiNUS"},"content":"            deadlineArray[i] \u003d deadlineArray[i].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"ParthGandhiNUS"},"content":"        return new Deadline(deadlineArray[0], deadlineArray[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Cleans up the user input and forms new event Task","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param eventDetails : User input for details of the event task","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @return new event task created","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"ParthGandhiNUS"},"content":"    private static Task getNewEventTask(String eventDetails) {","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"ParthGandhiNUS"},"content":"        String[] eventArray \u003d eventDetails.split(\"/from\");","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"ParthGandhiNUS"},"content":"        String eventInformation \u003d eventArray[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"ParthGandhiNUS"},"content":"        String [] fromAndTo \u003d eventArray[1].split(\"/to\");","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"ParthGandhiNUS"},"content":"        String eventFrom \u003d fromAndTo[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"ParthGandhiNUS"},"content":"        String eventTo \u003d fromAndTo[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"ParthGandhiNUS"},"content":"        return new Event(eventInformation, eventFrom, eventTo);","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Processes all the inputs from the user and categorises the User Commands","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param UserCommand: The first word input by the user","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void parseUserCommand(String UserCommand) {","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"ParthGandhiNUS"},"content":"        int taskNumber;","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"ParthGandhiNUS"},"content":"        int lastTaskIndex;","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"ParthGandhiNUS"},"content":"        String remainingCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"ParthGandhiNUS"},"content":"        switch (UserCommand){","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"list\":","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"ParthGandhiNUS"},"content":"            printCurrentTaskItems();","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"ParthGandhiNUS"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"ParthGandhiNUS"},"content":"                taskNumber \u003d in.nextInt();","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (InputMismatchException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper input a god damn number! I am now gonna add the text which you inputted into our list!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"ParthGandhiNUS"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"ParthGandhiNUS"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println( \"Damn Skipper, you\u0027re got some courage removing this task:\");","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"  \" + currentTask.get(taskNumber - 1));","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"ParthGandhiNUS"},"content":"                printCurrentTaskMessage(currentTask.size()-1);","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"ParthGandhiNUS"},"content":"                currentTask.remove(taskNumber-1);","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"ParthGandhiNUS"},"content":"                writeText();","lastModifiedDate":"2024-02-24"},{"lineNumber":181,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Invalid Task Number! Skipper stop acting like Private!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":186,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":187,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":188,"author":{"gitId":"ParthGandhiNUS"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"ParthGandhiNUS"},"content":"                taskNumber \u003d in.nextInt();","lastModifiedDate":"2024-02-08"},{"lineNumber":190,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (InputMismatchException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper input a god damn number! I am now gonna add the text which you inputted into our list!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"ParthGandhiNUS"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"ParthGandhiNUS"},"content":"            try{","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"ParthGandhiNUS"},"content":"                currentTask.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":198,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println( \"C\u0027mon Skipper, you\u0027re much better than that! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2024-02-15"},{"lineNumber":199,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"  \" + currentTask.get(taskNumber - 1));","lastModifiedDate":"2024-02-08"},{"lineNumber":200,"author":{"gitId":"ParthGandhiNUS"},"content":"                writeText();","lastModifiedDate":"2024-02-24"},{"lineNumber":201,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Invalid Task Number! Skipper stop acting like Private!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":204,"author":{"gitId":"ParthGandhiNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":206,"author":{"gitId":"ParthGandhiNUS"},"content":"            //System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-21"},{"lineNumber":207,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":209,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":210,"author":{"gitId":"ParthGandhiNUS"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"ParthGandhiNUS"},"content":"                taskNumber \u003d in.nextInt();","lastModifiedDate":"2024-02-08"},{"lineNumber":212,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (InputMismatchException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper input a god damn number! I am now gonna add the text which you inputted into our list!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-21"},{"lineNumber":215,"author":{"gitId":"ParthGandhiNUS"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":218,"author":{"gitId":"ParthGandhiNUS"},"content":"            try{","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"ParthGandhiNUS"},"content":"                currentTask.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":220,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println( \"Way to go Skipper! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-15"},{"lineNumber":221,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"  \" + currentTask.get(taskNumber - 1));","lastModifiedDate":"2024-02-08"},{"lineNumber":222,"author":{"gitId":"ParthGandhiNUS"},"content":"                writeText();","lastModifiedDate":"2024-02-24"},{"lineNumber":223,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Invalid Task Number! Skipper stop acting like Private!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"ParthGandhiNUS"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":229,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":230,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":231,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-08"},{"lineNumber":232,"author":{"gitId":"ParthGandhiNUS"},"content":"            String toDoDetails \u003d in.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":233,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":234,"author":{"gitId":"ParthGandhiNUS"},"content":"            Task newToDoTask \u003d new Todo(toDoDetails.trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":235,"author":{"gitId":"ParthGandhiNUS"},"content":"            currentTask.add(newToDoTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":236,"author":{"gitId":"ParthGandhiNUS"},"content":"            lastTaskIndex \u003d currentTask.size() - 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":237,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Skipper you\u0027ve got this work to do:\");","lastModifiedDate":"2024-02-15"},{"lineNumber":239,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"  \" + currentTask.get( lastTaskIndex));","lastModifiedDate":"2024-02-08"},{"lineNumber":240,"author":{"gitId":"ParthGandhiNUS"},"content":"            printCurrentTaskMessage(currentTask.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":241,"author":{"gitId":"ParthGandhiNUS"},"content":"            writeText();","lastModifiedDate":"2024-02-24"},{"lineNumber":242,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":243,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":244,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":245,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-08"},{"lineNumber":246,"author":{"gitId":"ParthGandhiNUS"},"content":"            String deadlineDetails \u003d in.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":247,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":248,"author":{"gitId":"ParthGandhiNUS"},"content":"            try{","lastModifiedDate":"2024-02-15"},{"lineNumber":249,"author":{"gitId":"ParthGandhiNUS"},"content":"                checkDeadlineInput(deadlineDetails);","lastModifiedDate":"2024-02-15"},{"lineNumber":250,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":251,"author":{"gitId":"ParthGandhiNUS"},"content":"                //Adding the new deadline task into currentTask List after processing and cleaning inputs","lastModifiedDate":"2024-02-15"},{"lineNumber":252,"author":{"gitId":"ParthGandhiNUS"},"content":"                Task newDeadlineTask \u003d getNewDeadlineTask(deadlineDetails);","lastModifiedDate":"2024-02-15"},{"lineNumber":253,"author":{"gitId":"ParthGandhiNUS"},"content":"                currentTask.add(newDeadlineTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":254,"author":{"gitId":"ParthGandhiNUS"},"content":"                lastTaskIndex \u003d currentTask.size() - 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":255,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":256,"author":{"gitId":"ParthGandhiNUS"},"content":"                //Printing the appropriate information for the User","lastModifiedDate":"2024-02-15"},{"lineNumber":257,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper, I have recorded this deadline:\");","lastModifiedDate":"2024-02-15"},{"lineNumber":258,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"  \" + currentTask.get( lastTaskIndex));","lastModifiedDate":"2024-02-08"},{"lineNumber":259,"author":{"gitId":"ParthGandhiNUS"},"content":"                printCurrentTaskMessage(currentTask.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":260,"author":{"gitId":"ParthGandhiNUS"},"content":"                writeText();","lastModifiedDate":"2024-02-24"},{"lineNumber":261,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":262,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (KowalskiException e){","lastModifiedDate":"2024-02-15"},{"lineNumber":263,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper your inputs are wrong! Try again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":264,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-15"},{"lineNumber":265,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":266,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":267,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":268,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"event\":","lastModifiedDate":"2024-02-08"},{"lineNumber":269,"author":{"gitId":"ParthGandhiNUS"},"content":"            String eventDetails \u003d in.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":270,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":271,"author":{"gitId":"ParthGandhiNUS"},"content":"            try{","lastModifiedDate":"2024-02-15"},{"lineNumber":272,"author":{"gitId":"ParthGandhiNUS"},"content":"                checkEventInput(eventDetails);","lastModifiedDate":"2024-02-15"},{"lineNumber":273,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":274,"author":{"gitId":"ParthGandhiNUS"},"content":"                //Adding the new event task into currentTask List after processing and cleaning inputs","lastModifiedDate":"2024-02-15"},{"lineNumber":275,"author":{"gitId":"ParthGandhiNUS"},"content":"                Task newEventTask \u003d getNewEventTask(eventDetails);","lastModifiedDate":"2024-02-15"},{"lineNumber":276,"author":{"gitId":"ParthGandhiNUS"},"content":"                currentTask.add(newEventTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":277,"author":{"gitId":"ParthGandhiNUS"},"content":"                lastTaskIndex \u003d currentTask.size() - 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":278,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":279,"author":{"gitId":"ParthGandhiNUS"},"content":"                //Printing the appropriate information for the User","lastModifiedDate":"2024-02-15"},{"lineNumber":280,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper I\u0027ve noted this event in my calendar:\");","lastModifiedDate":"2024-02-15"},{"lineNumber":281,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"  \" + currentTask.get(lastTaskIndex));","lastModifiedDate":"2024-02-08"},{"lineNumber":282,"author":{"gitId":"ParthGandhiNUS"},"content":"                printCurrentTaskMessage(currentTask.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":283,"author":{"gitId":"ParthGandhiNUS"},"content":"                writeText();","lastModifiedDate":"2024-02-24"},{"lineNumber":284,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":285,"author":{"gitId":"ParthGandhiNUS"},"content":"            } catch (KowalskiException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":286,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Skipper your inputs are wrong! Try again!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":287,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-15"},{"lineNumber":288,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":289,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":290,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":291,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":292,"author":{"gitId":"ParthGandhiNUS"},"content":"        default:","lastModifiedDate":"2024-02-08"},{"lineNumber":293,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Skipper pull up your socks!\"","lastModifiedDate":"2024-02-21"},{"lineNumber":294,"author":{"gitId":"ParthGandhiNUS"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2024-02-21"},{"lineNumber":295,"author":{"gitId":"ParthGandhiNUS"},"content":"            printHelpCommands();","lastModifiedDate":"2024-02-21"},{"lineNumber":296,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":297,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":298,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":299,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":300,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":301,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":302,"author":{"gitId":"ParthGandhiNUS"},"content":"     * This function takes in the lines of code from the Kowalski.txt and processes them to","lastModifiedDate":"2024-02-24"},{"lineNumber":303,"author":{"gitId":"ParthGandhiNUS"},"content":"     * list out all the previous tasks which we had saved.","lastModifiedDate":"2024-02-24"},{"lineNumber":304,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param fileInput: String containing each line of input from Kowalski.txt","lastModifiedDate":"2024-02-24"},{"lineNumber":305,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":306,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void restoreTaskList(String fileInput){","lastModifiedDate":"2024-02-24"},{"lineNumber":307,"author":{"gitId":"ParthGandhiNUS"},"content":"        String [] inputArray \u003d fileInput.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-24"},{"lineNumber":308,"author":{"gitId":"ParthGandhiNUS"},"content":"        switch (inputArray[0].trim()){","lastModifiedDate":"2024-02-24"},{"lineNumber":309,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"T\":","lastModifiedDate":"2024-02-24"},{"lineNumber":310,"author":{"gitId":"ParthGandhiNUS"},"content":"            Task newToDoTask \u003d new Todo(inputArray[2].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":311,"author":{"gitId":"ParthGandhiNUS"},"content":"            if (inputArray[1].trim().equals(\"X\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":312,"author":{"gitId":"ParthGandhiNUS"},"content":"                newToDoTask.markAsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":313,"author":{"gitId":"ParthGandhiNUS"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":314,"author":{"gitId":"ParthGandhiNUS"},"content":"                newToDoTask.markAsNotDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":315,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":316,"author":{"gitId":"ParthGandhiNUS"},"content":"            currentTask.add(newToDoTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":317,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":318,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":319,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"D\":","lastModifiedDate":"2024-02-24"},{"lineNumber":320,"author":{"gitId":"ParthGandhiNUS"},"content":"            Task newDeadlineTask \u003d new Deadline(inputArray[2].trim(), inputArray[3].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":321,"author":{"gitId":"ParthGandhiNUS"},"content":"            if (inputArray[1].trim().equals(\"X\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":322,"author":{"gitId":"ParthGandhiNUS"},"content":"                newDeadlineTask.markAsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":323,"author":{"gitId":"ParthGandhiNUS"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":324,"author":{"gitId":"ParthGandhiNUS"},"content":"                newDeadlineTask.markAsNotDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":325,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":326,"author":{"gitId":"ParthGandhiNUS"},"content":"            currentTask.add(newDeadlineTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":327,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":328,"author":{"gitId":"ParthGandhiNUS"},"content":"        case \"E\":","lastModifiedDate":"2024-02-24"},{"lineNumber":329,"author":{"gitId":"ParthGandhiNUS"},"content":"            String [] fromAndTo \u003d inputArray[3].trim().split(\" - \");","lastModifiedDate":"2024-02-24"},{"lineNumber":330,"author":{"gitId":"ParthGandhiNUS"},"content":"            Task newEventTask \u003d new Event(inputArray[2].trim(), fromAndTo[0].trim(), fromAndTo[1].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":331,"author":{"gitId":"ParthGandhiNUS"},"content":"            if (inputArray[1].trim().equals(\"X\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":332,"author":{"gitId":"ParthGandhiNUS"},"content":"                newEventTask.markAsDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":333,"author":{"gitId":"ParthGandhiNUS"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":334,"author":{"gitId":"ParthGandhiNUS"},"content":"                newEventTask.markAsNotDone();","lastModifiedDate":"2024-02-24"},{"lineNumber":335,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":336,"author":{"gitId":"ParthGandhiNUS"},"content":"            currentTask.add(newEventTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":337,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":338,"author":{"gitId":"ParthGandhiNUS"},"content":"        default:","lastModifiedDate":"2024-02-24"},{"lineNumber":339,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Kowalski Analysis Error: Text File Corrupted!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":340,"author":{"gitId":"ParthGandhiNUS"},"content":"            break;","lastModifiedDate":"2024-02-24"},{"lineNumber":341,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":342,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":343,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":344,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":345,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Read text file accesses Kowalski.txt and calls the restoreTaskList function","lastModifiedDate":"2024-02-24"},{"lineNumber":346,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @throws IOException when unable to get the Kowalski file or has any input errors","lastModifiedDate":"2024-02-24"},{"lineNumber":347,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":348,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void readTextFile() throws IOException{","lastModifiedDate":"2024-02-24"},{"lineNumber":349,"author":{"gitId":"ParthGandhiNUS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":350,"author":{"gitId":"ParthGandhiNUS"},"content":"            createTextFileFolder(Paths.get(TEXT_FILE_FOLDER));","lastModifiedDate":"2024-02-24"},{"lineNumber":351,"author":{"gitId":"ParthGandhiNUS"},"content":"            Path filePath \u003d Paths.get(FULL_FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":352,"author":{"gitId":"ParthGandhiNUS"},"content":"            if (!Files.exists(filePath)){","lastModifiedDate":"2024-02-24"},{"lineNumber":353,"author":{"gitId":"ParthGandhiNUS"},"content":"                System.out.println(\"Creating new Kowalski.txt file\");","lastModifiedDate":"2024-02-24"},{"lineNumber":354,"author":{"gitId":"ParthGandhiNUS"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-02-24"},{"lineNumber":355,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":356,"author":{"gitId":"ParthGandhiNUS"},"content":"            FileReader fileReader \u003d new FileReader(TEXT_FILE_FOLDER + TEXT_FILE_DIRECTORY);","lastModifiedDate":"2024-02-24"},{"lineNumber":357,"author":{"gitId":"ParthGandhiNUS"},"content":"            BufferedReader line \u003d new BufferedReader(fileReader);","lastModifiedDate":"2024-02-24"},{"lineNumber":358,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Kowalski retrieving previous data...\");","lastModifiedDate":"2024-02-24"},{"lineNumber":359,"author":{"gitId":"ParthGandhiNUS"},"content":"            while (line.ready()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":360,"author":{"gitId":"ParthGandhiNUS"},"content":"                restoreTaskList(line.readLine());","lastModifiedDate":"2024-02-24"},{"lineNumber":361,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":362,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Kowalski Data Retrieval Complete!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":363,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":364,"author":{"gitId":"ParthGandhiNUS"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-24"},{"lineNumber":365,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Kowalski Data Retrieval Failed!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":366,"author":{"gitId":"ParthGandhiNUS"},"content":"            throw e;","lastModifiedDate":"2024-02-24"},{"lineNumber":367,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":368,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":369,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":370,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":371,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Function which is called to generate an arrayList \"lines\" which updates according to the users\u0027 inputs.","lastModifiedDate":"2024-02-24"},{"lineNumber":372,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Calls the writeTextFile function to update Kowalski.txt","lastModifiedDate":"2024-02-24"},{"lineNumber":373,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":374,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void writeText(){","lastModifiedDate":"2024-02-24"},{"lineNumber":375,"author":{"gitId":"ParthGandhiNUS"},"content":"        List \u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":376,"author":{"gitId":"ParthGandhiNUS"},"content":"        for (Task task:currentTask){","lastModifiedDate":"2024-02-24"},{"lineNumber":377,"author":{"gitId":"ParthGandhiNUS"},"content":"            lines.add(task.textFileInputString());","lastModifiedDate":"2024-02-24"},{"lineNumber":378,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":379,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-24"},{"lineNumber":380,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Kowalski analysing inputs...\");","lastModifiedDate":"2024-02-24"},{"lineNumber":381,"author":{"gitId":"ParthGandhiNUS"},"content":"        writeTextFile(lines);","lastModifiedDate":"2024-02-24"},{"lineNumber":382,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":383,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":384,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":385,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Accesses the Kowalski.txt and updates it in the correct format.","lastModifiedDate":"2024-02-24"},{"lineNumber":386,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param lines: Arraylist containing the processed current tasks in the CurrentTask","lastModifiedDate":"2024-02-24"},{"lineNumber":387,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":388,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void writeTextFile(List \u003cString\u003e lines) {","lastModifiedDate":"2024-02-24"},{"lineNumber":389,"author":{"gitId":"ParthGandhiNUS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":390,"author":{"gitId":"ParthGandhiNUS"},"content":"            Path parentPath \u003d Paths.get(TEXT_FILE_FOLDER);","lastModifiedDate":"2024-02-24"},{"lineNumber":391,"author":{"gitId":"ParthGandhiNUS"},"content":"            createTextFileFolder(parentPath);","lastModifiedDate":"2024-02-24"},{"lineNumber":392,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":393,"author":{"gitId":"ParthGandhiNUS"},"content":"            FileWriter writer \u003d new FileWriter(FULL_FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":394,"author":{"gitId":"ParthGandhiNUS"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-24"},{"lineNumber":395,"author":{"gitId":"ParthGandhiNUS"},"content":"                writer.write(line + \"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":396,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":397,"author":{"gitId":"ParthGandhiNUS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":398,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Task recorded in the Text file!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":399,"author":{"gitId":"ParthGandhiNUS"},"content":"            writer.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":400,"author":{"gitId":"ParthGandhiNUS"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-24"},{"lineNumber":401,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Kowalski Analysis failed - Issue with directory/text file!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":402,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":403,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":404,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":405,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":406,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Used to create the data folder to store the Kowalski.txt file","lastModifiedDate":"2024-02-24"},{"lineNumber":407,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @param parentPath: Path file containing the path we intend to make Kowalski.txt in","lastModifiedDate":"2024-02-24"},{"lineNumber":408,"author":{"gitId":"ParthGandhiNUS"},"content":"     * @throws IOException whenever the input for the path or creation of the directory is improper","lastModifiedDate":"2024-02-24"},{"lineNumber":409,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":410,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void createTextFileFolder(Path parentPath ) throws IOException{","lastModifiedDate":"2024-02-24"},{"lineNumber":411,"author":{"gitId":"ParthGandhiNUS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":412,"author":{"gitId":"ParthGandhiNUS"},"content":"            Files.createDirectories(parentPath);","lastModifiedDate":"2024-02-24"},{"lineNumber":413,"author":{"gitId":"ParthGandhiNUS"},"content":"        } catch (FileAlreadyExistsException ignored){","lastModifiedDate":"2024-02-24"},{"lineNumber":414,"author":{"gitId":"ParthGandhiNUS"},"content":"            //Ignore this error if file exists","lastModifiedDate":"2024-02-24"},{"lineNumber":415,"author":{"gitId":"ParthGandhiNUS"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-24"},{"lineNumber":416,"author":{"gitId":"ParthGandhiNUS"},"content":"            System.out.println(\"Skipper, I am unable to create the data directory for you!\");","lastModifiedDate":"2024-02-24"},{"lineNumber":417,"author":{"gitId":"ParthGandhiNUS"},"content":"            throw e;","lastModifiedDate":"2024-02-24"},{"lineNumber":418,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":419,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":420,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":421,"author":{"gitId":"ParthGandhiNUS"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":422,"author":{"gitId":"ParthGandhiNUS"},"content":"     * Prints out the message to end conversation with the user","lastModifiedDate":"2024-02-08"},{"lineNumber":423,"author":{"gitId":"ParthGandhiNUS"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":424,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void printEndConversation(){","lastModifiedDate":"2024-02-08"},{"lineNumber":425,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(\"Bye Skipper! Hope to serve you again for your next mission!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":426,"author":{"gitId":"ParthGandhiNUS"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":427,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":428,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":429,"author":{"gitId":"ParthGandhiNUS"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":430,"author":{"gitId":"ParthGandhiNUS"},"content":"        printIntro();","lastModifiedDate":"2024-02-08"},{"lineNumber":431,"author":{"gitId":"ParthGandhiNUS"},"content":"        readTextFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":432,"author":{"gitId":"ParthGandhiNUS"},"content":"        String userCommand \u003d processInput(in.next());","lastModifiedDate":"2024-02-08"},{"lineNumber":433,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":434,"author":{"gitId":"ParthGandhiNUS"},"content":"        while (!(userCommand.equals(\"bye\"))){","lastModifiedDate":"2024-02-08"},{"lineNumber":435,"author":{"gitId":"ParthGandhiNUS"},"content":"            parseUserCommand(processInput(userCommand));","lastModifiedDate":"2024-02-08"},{"lineNumber":436,"author":{"gitId":"ParthGandhiNUS"},"content":"            userCommand \u003d in.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":437,"author":{"gitId":"ParthGandhiNUS"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":438,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":439,"author":{"gitId":"ParthGandhiNUS"},"content":"        printEndConversation();","lastModifiedDate":"2024-02-08"},{"lineNumber":440,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":441,"author":{"gitId":"ParthGandhiNUS"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"ParthGandhiNUS":441}},{"path":"src/main/java/Kowalski/commands/KowalskiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"package Kowalski.commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ParthGandhiNUS"},"content":"public class KowalskiException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ParthGandhiNUS"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"ParthGandhiNUS":4}},{"path":"src/main/java/Kowalski/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"package Kowalski.tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ParthGandhiNUS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ParthGandhiNUS"},"content":"    protected String deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ParthGandhiNUS"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ParthGandhiNUS"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ParthGandhiNUS"},"content":"        return deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String textFileInputString(){","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ParthGandhiNUS"},"content":"        return String.format(\"D | %s | %s | %s\",","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ParthGandhiNUS"},"content":"                isDone? \"X\" : \"0\",","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ParthGandhiNUS"},"content":"                getDescription().trim(),","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ParthGandhiNUS"},"content":"                getDeadline());","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"ParthGandhiNUS"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"ParthGandhiNUS"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ParthGandhiNUS":28}},{"path":"src/main/java/Kowalski/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"package Kowalski.tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ParthGandhiNUS"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ParthGandhiNUS"},"content":"    protected String startDayAndTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"ParthGandhiNUS"},"content":"    protected String endDayAndTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ParthGandhiNUS"},"content":"    public Event (String description, String startDayAndTime, String endDayAndTime) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ParthGandhiNUS"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.startDayAndTime \u003d startDayAndTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.endDayAndTime \u003d endDayAndTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String getStartDayAndTime() {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ParthGandhiNUS"},"content":"        return startDayAndTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String getEndDayAndTime() {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ParthGandhiNUS"},"content":"        return endDayAndTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String textFileInputString(){","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ParthGandhiNUS"},"content":"        return String.format(\"E | %s | %s | %s - %s\",","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ParthGandhiNUS"},"content":"                isDone? \"X\" : \"0\",","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"ParthGandhiNUS"},"content":"                getDescription().trim(),","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"ParthGandhiNUS"},"content":"                getStartDayAndTime(),","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ParthGandhiNUS"},"content":"                getEndDayAndTime());","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"ParthGandhiNUS"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDayAndTime + \" to: \" + endDayAndTime + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"ParthGandhiNUS"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ParthGandhiNUS":34}},{"path":"src/main/java/Kowalski/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"package Kowalski.tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ParthGandhiNUS"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ParthGandhiNUS"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ParthGandhiNUS"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ParthGandhiNUS"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ParthGandhiNUS"},"content":"        return description;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ParthGandhiNUS"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ParthGandhiNUS"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ParthGandhiNUS"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ParthGandhiNUS"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String textFileInputString() {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ParthGandhiNUS"},"content":"        return String.format(\"%s | %s\",","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ParthGandhiNUS"},"content":"                isDone? \"X\" : \"0\",","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ParthGandhiNUS"},"content":"                getDescription().trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"ParthGandhiNUS"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"ParthGandhiNUS"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ParthGandhiNUS":40}},{"path":"src/main/java/Kowalski/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ParthGandhiNUS"},"content":"package Kowalski.tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"ParthGandhiNUS"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ParthGandhiNUS"},"content":"    public Todo(String description){","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"ParthGandhiNUS"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String textFileInputString(){","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ParthGandhiNUS"},"content":"        return String.format(\"T | %s | %s\",","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ParthGandhiNUS"},"content":"                isDone? \"X\" : \"0\",","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ParthGandhiNUS"},"content":"                getDescription().trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ParthGandhiNUS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ParthGandhiNUS"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"ParthGandhiNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"ParthGandhiNUS"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"ParthGandhiNUS"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ParthGandhiNUS"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ParthGandhiNUS":21}}]
