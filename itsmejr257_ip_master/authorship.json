[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"# JunBot","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"JunBot is a **desktop app for task management, created for use via a","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"Command Line Interface (CLI).** If you can type fast, JunBot can ","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"speed up your task management.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"   - [Adding a Todo task](#adding-a-todo-task--todo)","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"   - [Adding a Deadline task](#adding-a-deadline-task--deadline)","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"   - [Adding an Event task](#adding-a-event-task---event)","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"   - [Listing all tasks](#listing-all-tasks--list)","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"   - [Locating tasks by name](#locating-tasks-by-name--find)","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"   - [Deleting a task](#deleting-a-task--delete)","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"   - [Marking a task](#marking-a-task--mark)","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"   - [Unmarking a task](#unmarking-a-task--unmark)","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"   - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"   - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"## Quick Start","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"1. Ensure you have Java 11 installed in your Computer","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"2. Download the latest ```JunBot.jar``` from [here]()","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"3. Copy the file to the folder you want to use as the home folder for your JunBot","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"4. Open a command terminal, ```cd``` into the folder you put the jar file in, and use the ```java -jar JunBot.jar``` command to run the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing ```list``` and pressing Enter will open all tasks in the list  ","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"Some example commands you can try :","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"     - ```todo find a job``` : Adds a todo task to the current list","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"     - ```deadline assignment /by 5/6/2024``` : Adds a deadline task named \"assignment\" with the due date as 5/6/2024 to the current list","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"     - ```bye``` : Exits the app.","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"6. Refer to the [Features](#features) below for details of each command","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"## Features","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"### Adding a Todo task : ```todo```","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"Adds a todo task to the task list","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"Format : ```todo TASK```   ","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"Examples :","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"  - ```todo find a job```","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"  - ```todo do the laundry```","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"### Adding a Deadline task : ```deadline```","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"Adds a deadline task to the task list  ","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"Format : ```deadline TASK /by DATE```  ","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"  - Adds a task with name ```TASK``` with a deadline of ```DATE```.","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"  - ```DATE``` should be in the format of ```d/m/yyyy```                 ","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"itsmejr257"},"content":"Examples :","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"  * ```deadline find a job /by 5/11/2024``` Adds a task called find a job, with a deadline of 5/11/2024","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"itsmejr257"},"content":"  * ````deadline assignment /by 10/11/2024```` Adds a task called assignment with a deadline of 10/11/2024","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"### Adding a Event task : ``` event```","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"Adds a Event task to the task list  ","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"Format : ```event TASK /from START /to END```","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"  - Adds a task with name ```TASK```, with a start date of ```START``` and end date of ```END```","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"  - Both ```START``` and ```END``` should be in the format of ```d/m/yyyy```  ","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"Examples :","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"itsmejr257"},"content":" * ```event class /from 05/12/2024 /to 06/12/2024``` Adds a task called class, with a start date of 05/12/2024 and end date of 06/12/2024","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"### Listing all tasks : ```list```","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"Shows a list of all tasks in the task list","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"Format : ```list```","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"### Locating tasks by name : ```find```","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"Finds tasks whose names contain the given keyword  ","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"Format : ```find KEYWORD```","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":" - The search is case-sensitive e.g. ```job``` will not match ```Job```","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":" - Similar words will be matched. e.g. ```job``` will match ```jobbers```","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"Examples : ","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":" * ```find job``` returns ```job``` and ```jobbers```","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"itsmejr257"},"content":"### Deleting a task : ```delete```","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"Deletes the specified task from the task list  ","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"itsmejr257"},"content":"Format : ```delete INDEX```","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"itsmejr257"},"content":" - Deletes the task at the specified ```INDEX```","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"itsmejr257"},"content":" - The index refers to the index number shown in the displayed task list","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"itsmejr257"},"content":" - The index ***must be a positive integer and a valid list number***  ","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"itsmejr257"},"content":" - The index number is ***always relative to the displayed task list*** from the use of ```list```","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"itsmejr257"},"content":"Examples :","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"itsmejr257"},"content":" * ```list``` followed by ```delete 2``` deletes the 2nd task in the task list","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"itsmejr257"},"content":"### Marking a task : ```mark```","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"itsmejr257"},"content":"Marks the specified task from the task list  ","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"itsmejr257"},"content":"Format : ```mark INDEX```","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"itsmejr257"},"content":" - Marks the task at the specified ```INDEX```","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"itsmejr257"},"content":" - The index refers to the index number shown in the displayed task list","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"itsmejr257"},"content":" - The index ***must be a positive integer and a valid list number***","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"itsmejr257"},"content":" - The index number is ***always relative to the displayed task list*** from the use of ```list```  ","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"itsmejr257"},"content":"Examples :","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"itsmejr257"},"content":" * ```list``` followed by ```mark 2``` marks the 2nd task in the task list","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"itsmejr257"},"content":"### Unmarking a task : ```unmark```","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"itsmejr257"},"content":"Marks the specified task from the task list  ","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"itsmejr257"},"content":"Format : ```unmark INDEX```","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"itsmejr257"},"content":"- Unmarks the task at the specified ```INDEX```","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"itsmejr257"},"content":"- The index refers to the index number shown in the displayed task list","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"itsmejr257"},"content":"- The index ***must be a positive integer and a valid list number***","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"itsmejr257"},"content":"- The index number is ***always relative to the displayed task list*** from the use of ```list```","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"itsmejr257"},"content":"Examples :","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"itsmejr257"},"content":"* ```list``` followed by ```unmark 2``` marks the 2nd task in the task list","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"itsmejr257"},"content":"### Saving the data","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"itsmejr257"},"content":"JunBot data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"itsmejr257"},"content":"### Editing the data file","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"itsmejr257"},"content":"JunBot data is saved automatically as a txt file ```[JAR file location]/data/tasks.txt```. Advanced users are welcome to update data directly by editing that data file","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"itsmejr257"},"content":"\u003e ⚠️ **Caution:** Certain edits can cause JunBot to behave in unexpected ways (e.g. if value entered is outside of acceptable range, or the entries are not in the right format). Therefore, edit the data file only","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"itsmejr257"},"content":"\u003e if you are confident that you can update it correctly  ","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"itsmejr257"},"content":"\u003e ","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"itsmejr257"},"content":"\u003e ","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"itsmejr257"},"content":"\u003e ","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"itsmejr257"},"content":"## FAQ","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"itsmejr257"},"content":"***Q:*** How do i transfer my data to another Computer?  ","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"itsmejr257"},"content":"***A:*** Install the app in the other computer and run it once. Simply overwrite the tasks.txt file that JunBot creates with your previous tasks.txt .","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"itsmejr257"},"content":"## Known issues","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"itsmejr257"},"content":"1. ***When setting dates in deadline and event***, users can place out of order dates, etc. ```event task /from 05/10/2024 /to 05/10/1999```","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"itsmejr257"},"content":"Should the unintended dates be inputted, the remedy is to delete the corresponding task, and create it again with the corrected dates.","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"itsmejr257"},"content":"## Command Summary","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"itsmejr257"},"content":"| Action                  | Format, Examples                                                                                 |","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"itsmejr257"},"content":"|-------------------------|--------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"itsmejr257"},"content":"| ***Add*** todo task     | ```todo TASK``` \u003cbr/\u003e e.g. ```todo find a job```                                                 |","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"itsmejr257"},"content":"| ***Add*** deadline task | ```deadline TASK /by DATE``` \u003cbr/\u003e e.g. deadline find a job /by 5/11/2024                        | ","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"itsmejr257"},"content":"| ***Add*** event task    | ```event TASK /from START /to END```\u003cbr/\u003e e.g. ```event class /from 05/12/2024 /to 06/12/2024``` |","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"itsmejr257"},"content":"| ***Mark***              | ```mark INDEX``` \u003cbr/\u003e e.g.  ```mark 2```                                                        | ","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"itsmejr257"},"content":"| ***Unmark***            | ```unmark INDEX``` \u003cbr/\u003e e.g.  ```unmark 2```                                                    | ","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"itsmejr257"},"content":"| ***Delete***            | ```delete INDEX``` \u003cbr/\u003e e.g.  ```delete 2```                                                    | ","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"itsmejr257"},"content":"| ***Find***              | ```find KEYWORD``` \u003cbr/\u003e e.g.  ```find job```                                                    |","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"itsmejr257"},"content":"| ***List***              | ```list```                                                                                       | ","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"itsmejr257":130}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"# JunBot","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"JunBot is a **desktop app for task management, created for use via a Command Line Interface (CLI).** If you can type fast, JunBot can speed up your task management.","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"    - [Adding a Todo task](#adding-a-todo-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    - [Adding a Deadline task](#adding-a-deadline-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"    - [Adding an Event task](#adding-an-event-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"    - [Listing all tasks](#listing-all-tasks)","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"    - [Locating tasks by name](#locating-tasks-by-name)","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"    - [Deleting a task](#deleting-a-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"    - [Marking a task](#marking-a-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"    - [Unmarking a task](#unmarking-a-task)","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"## Quick Start","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"1. Ensure you have Java 11 installed on your computer.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"2. Download the latest `JunBot.jar`.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"3. Copy the file to the folder you want to use as the home folder for your JunBot.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"4. Open a command terminal, navigate to the folder containing the JAR file, and run the command `java -jar JunBot.jar` to execute the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"5. Type the desired command in the command box and press Enter to execute it. For example, typing `list` and pressing Enter will display all tasks in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"   Some example commands you can try:","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"    - `todo find a job`: Adds a todo task to the current list","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"    - `deadline assignment /by 5/6/2024`: Adds a deadline task named \"assignment\" with the due date set to 5/6/2024","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"    - `bye`: Exits the app.","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"6. Refer to the [Features](#features) section below for details on each command.","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"### Adding a Todo task","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"- Format: `todo TASK`","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"    - `todo find a job`","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"    - `todo do the laundry`","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"### Adding a Deadline task","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"- Format: `deadline TASK /by DATE`","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"    - `deadline find a job /by 5/11/2024`: Adds a task named \"find a job\" with a deadline of 5/11/2024.","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"    - `deadline assignment /by 10/11/2024`: Adds a task named \"assignment\" with a deadline of 10/11/2024.","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"### Adding an Event task","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"Adds an event task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"- Format: `event TASK /from START /to END`","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"    - `event class /from 05/12/2024 /to 06/12/2024`: Adds a task named \"class\" with a start date of 05/12/2024 and an end date of 06/12/2024.","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"### Listing all tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"- Format: `list`","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":"### Locating tasks by name","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"Finds tasks whose names contain the given keyword.","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"itsmejr257"},"content":"- Format: `find KEYWORD`","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"itsmejr257"},"content":"    - `find job` returns tasks with names containing \"job\".","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"itsmejr257"},"content":"### Deleting a task","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"itsmejr257"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"itsmejr257"},"content":"- Format: `delete INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"itsmejr257"},"content":"    - `list` followed by `delete 2` deletes the second task in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"itsmejr257"},"content":"### Marking a task","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"itsmejr257"},"content":"Marks the specified task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"itsmejr257"},"content":"- Format: `mark INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"itsmejr257"},"content":"    - `list` followed by `mark 2` marks the second task in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"itsmejr257"},"content":"### Unmarking a task","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"itsmejr257"},"content":"Unmarks the specified task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"itsmejr257"},"content":"- Format: `unmark INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"itsmejr257"},"content":"- Examples:","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"itsmejr257"},"content":"    - `list` followed by `unmark 2` unmarks the second task in the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"itsmejr257"},"content":"### Saving the data","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"itsmejr257"},"content":"JunBot data is automatically saved to the hard disk after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"itsmejr257"},"content":"### Editing the data file","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"itsmejr257"},"content":"JunBot data is saved automatically as a text file `[JAR file location]/data/tasks.txt`. Advanced users are welcome to update the data directly by editing this file. However, caution is advised as certain edits may cause JunBot to behave unexpectedly.","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"itsmejr257"},"content":"## FAQ","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"itsmejr257"},"content":"***Q:*** How do I transfer my data to another computer?  ","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"itsmejr257"},"content":"***A:*** Install the app on the other computer and run it once. Simply overwrite the `tasks.txt` file that JunBot creates with your previous `tasks.txt`.","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"itsmejr257"},"content":"## Known issues","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"itsmejr257"},"content":"1. **When setting dates in deadline and event tasks**, users can input out-of-order dates, etc. (`event task /from 05/10/2024 /to 05/10/1999`). If unintended dates are inputted, the remedy is to delete the corresponding task and create it again with the corrected dates.","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"itsmejr257"},"content":"---","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"itsmejr257"},"content":"## Command Summary","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"itsmejr257"},"content":"| Action            | Format, Examples                                                                          |","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"itsmejr257"},"content":"|-------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"itsmejr257"},"content":"| Add todo task     | `todo TASK` \u003cbr/\u003e e.g. `todo find a job`                                                  |","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"itsmejr257"},"content":"| Add deadline task | `deadline TASK /by DATE` \u003cbr/\u003e e.g. `deadline find a job /by 5/11/2024`                   |","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"itsmejr257"},"content":"| Add event task    | `event TASK /from START /to END` \u003cbr/\u003e e.g. `event class /from 05/12/2024 /to 06/12/2024` |","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"itsmejr257"},"content":"| Mark              | `mark INDEX` \u003cbr/\u003e e.g.  `mark 2`                                                         |","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"itsmejr257"},"content":"| Unmark            | `unmark INDEX` \u003cbr/\u003e e.g.  `unmark 2`                                                     |","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"itsmejr257"},"content":"| Delete            | `delete INDEX` \u003cbr/\u003e e.g.  `delete 2`                                                     |","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"itsmejr257"},"content":"| Find              | `find KEYWORD` \u003cbr/\u003e e.g.  `find job`                                                     |","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"itsmejr257"},"content":"| List              | `list`                                                                                    |                     ","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"-":19,"itsmejr257":110}},{"path":"src/main/java/JunBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"import junbot.common.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"import junbot.error.InvalidInputException;","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import junbot.error.JunBotException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import junbot.parser.Parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"import junbot.storage.Storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"import junbot.ui.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"public class JunBot {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"    private static Storage storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    private static Parser parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"     * Constructs a JunBot object with the specified filepath.","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"     * Initializes the user interface, storage, parser, and task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"     * If an exception occurs during initialization, an empty task list is created.","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"     * @param filePath The filepath of the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"    public JunBot(String filePath) {","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"            parser \u003d new Parser();","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"        } catch (JunBotException | IOException | InvalidInputException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"     * Adds an event task with the given description to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"     * Prints success message after adding the task and updates the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input is not in the correct format","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while updating the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"    public static void addEvent(String description) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"        Task eventTask \u003d tasks.addEvent(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"        ui.printAddSuccessMessage(eventTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"itsmejr257"},"content":"        ui.printNumTasks(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"        storage.updateFile(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"     * Adds a deadline task with the given description to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"itsmejr257"},"content":"     * Prints success message after adding the task and updates the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input is not in the correct format","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while updating the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"    public static void addDeadline(String description) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":"        Task deadlineTask \u003d tasks.addDeadline(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"        ui.printAddSuccessMessage(deadlineTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":"        ui.printNumTasks(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"        storage.updateFile(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"itsmejr257"},"content":"     * Adds a todo task with the given description to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"itsmejr257"},"content":"     * Prints success message after adding the task and updates the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"itsmejr257"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while updating the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"itsmejr257"},"content":"    public static void addTodo(String description) throws InvalidInputException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"itsmejr257"},"content":"        Task todoTask \u003d tasks.addTodo(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"itsmejr257"},"content":"        ui.printAddSuccessMessage(todoTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"itsmejr257"},"content":"        ui.printNumTasks(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"itsmejr257"},"content":"        storage.updateFile(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"itsmejr257"},"content":"     * Checks if the given command represents a valid list position.","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"itsmejr257"},"content":"     * This method parses the full command of the user to obtain inputted list position, and determines","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"itsmejr257"},"content":"     * the validity of the list position","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"itsmejr257"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"itsmejr257"},"content":"     * @return True if the list position is \u003c size of tasks list and \u003e 0, false otherwise.","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"itsmejr257"},"content":"    public static boolean isValidListPosition(String command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"itsmejr257"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"itsmejr257"},"content":"            return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"itsmejr257"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"itsmejr257"},"content":"            int listPosition \u003d Integer.parseInt(command);","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"itsmejr257"},"content":"            return listPosition \u003c\u003d tasks.getSize() \u0026\u0026 listPosition \u003e 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"itsmejr257"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"itsmejr257"},"content":"            return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"itsmejr257"},"content":"     * Unmarks a task in the task list based on the given command.","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"itsmejr257"},"content":"     * This method parses command from user input and unmarks the task corresponding to the obtained list","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"itsmejr257"},"content":"     * number.","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"itsmejr257"},"content":"     * Prints success message after unmarking the task and updates the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full command input by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while updating the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"itsmejr257"},"content":"    public static void unmarkTaskInList(String command) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"itsmejr257"},"content":"        String listNumber \u003d parser.removeCommandIndicator(command,\"unmark\");","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"itsmejr257"},"content":"        int taskArrayIndex \u003d parser.convertToArrayIndex(listNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"itsmejr257"},"content":"        if (!isValidListPosition(listNumber)){","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"itsmejr257"},"content":"            System.out.println(\"Invalid List Number\");","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"itsmejr257"},"content":"            return;","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"itsmejr257"},"content":"        Task taskToUnmark \u003d tasks.unmarkTaskInList(taskArrayIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"itsmejr257"},"content":"        ui.printUnmarkSuccessMessage(taskToUnmark);","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"itsmejr257"},"content":"        storage.updateFile(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"itsmejr257"},"content":"     * Marks a task in the task list based on the given command.","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"itsmejr257"},"content":"     * This method parses command from user input and marks the task corresponding to the obtained list","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"itsmejr257"},"content":"     * number.","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"itsmejr257"},"content":"     * Prints success message after marking the task and updates the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full command input by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while updating the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"itsmejr257"},"content":"    public static void markTaskInList(String command) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"itsmejr257"},"content":"        String listNumber \u003d parser.removeCommandIndicator(command, \"mark\");","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"itsmejr257"},"content":"        int taskArrayIndex \u003d parser.convertToArrayIndex(listNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"itsmejr257"},"content":"        if (!isValidListPosition(listNumber)){","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"itsmejr257"},"content":"            System.out.println(\"Invalid List Number\");","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"itsmejr257"},"content":"            return;","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"itsmejr257"},"content":"        Task taskToMark \u003d tasks.markTaskInList(taskArrayIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"itsmejr257"},"content":"        ui.printMarkSuccessMessage(taskToMark);","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"itsmejr257"},"content":"        storage.updateFile(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":158,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":162,"author":{"gitId":"itsmejr257"},"content":"     * Prints the list of tasks in the task list. If the task list is empty, only the header is printed","lastModifiedDate":"2024-02-27"},{"lineNumber":163,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"itsmejr257"},"content":"    public static void printList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"itsmejr257"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"itsmejr257"},"content":"        for(int i \u003d 0; i \u003c tasks.getSize(); i++){","lastModifiedDate":"2024-02-27"},{"lineNumber":170,"author":{"gitId":"itsmejr257"},"content":"            System.out.print( taskNumber + \". \");","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"itsmejr257"},"content":"            System.out.println(tasks.getTasksList().get(i));","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"itsmejr257"},"content":"            taskNumber +\u003d 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"itsmejr257"},"content":"     * Deletes a task from the task list based on the given command.","lastModifiedDate":"2024-02-27"},{"lineNumber":179,"author":{"gitId":"itsmejr257"},"content":"     * This method parses the full user input and deletes the corresponding task based on the obtained","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"itsmejr257"},"content":"     * list number. Prints success message after deleting the task and updates the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":181,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":182,"author":{"gitId":"itsmejr257"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while updating the storage file.","lastModifiedDate":"2024-02-27"},{"lineNumber":184,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":185,"author":{"gitId":"itsmejr257"},"content":"    public static void deleteTask(String command) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":186,"author":{"gitId":"itsmejr257"},"content":"        String listNumber \u003d parser.removeCommandIndicator(command, \"delete\");","lastModifiedDate":"2024-02-27"},{"lineNumber":187,"author":{"gitId":"itsmejr257"},"content":"        int taskArrayIndex \u003d parser.convertToArrayIndex(listNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":188,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"itsmejr257"},"content":"        if (!isValidListPosition(listNumber)){","lastModifiedDate":"2024-02-27"},{"lineNumber":190,"author":{"gitId":"itsmejr257"},"content":"            System.out.println(\"Invalid List Number\");","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"itsmejr257"},"content":"            return;","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"itsmejr257"},"content":"        Task taskToDisplay \u003d tasks.getTasksList().get(taskArrayIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":195,"author":{"gitId":"itsmejr257"},"content":"        tasks.getTasksList().remove(taskArrayIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":196,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"itsmejr257"},"content":"        ui.printDeleteSuccessMessage(taskToDisplay);","lastModifiedDate":"2024-02-27"},{"lineNumber":198,"author":{"gitId":"itsmejr257"},"content":"        storage.updateFile(tasks.getTasksList());","lastModifiedDate":"2024-02-27"},{"lineNumber":199,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":203,"author":{"gitId":"itsmejr257"},"content":"    public static void findTasks(String command) {","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"itsmejr257"},"content":"        String keyword \u003d parser.removeCommandIndicator(command, \"find\");","lastModifiedDate":"2024-02-27"},{"lineNumber":205,"author":{"gitId":"itsmejr257"},"content":"        tasks.printMatchingTasks(keyword);","lastModifiedDate":"2024-02-27"},{"lineNumber":206,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":207,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":208,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":209,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":210,"author":{"gitId":"itsmejr257"},"content":"     * Handles different types of commands based on the command type.","lastModifiedDate":"2024-02-27"},{"lineNumber":211,"author":{"gitId":"itsmejr257"},"content":"     * Executes corresponding functions for each command.","lastModifiedDate":"2024-02-27"},{"lineNumber":212,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":213,"author":{"gitId":"itsmejr257"},"content":"     * @param command The command type extracted from user input.","lastModifiedDate":"2024-02-27"},{"lineNumber":214,"author":{"gitId":"itsmejr257"},"content":"     * @param userInput The full user input string.","lastModifiedDate":"2024-02-27"},{"lineNumber":215,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs during task handling.","lastModifiedDate":"2024-02-27"},{"lineNumber":216,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the user input is invalid for any of the relevant functions","lastModifiedDate":"2024-02-27"},{"lineNumber":217,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":218,"author":{"gitId":"itsmejr257"},"content":"    public static void handleCommands(String command, String userInput) throws IOException, InvalidInputException {","lastModifiedDate":"2024-02-27"},{"lineNumber":219,"author":{"gitId":"itsmejr257"},"content":"        switch (command) {","lastModifiedDate":"2024-01-27"},{"lineNumber":220,"author":{"gitId":"itsmejr257"},"content":"        case \"list\":","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"itsmejr257"},"content":"            printList();","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":223,"author":{"gitId":"itsmejr257"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":224,"author":{"gitId":"itsmejr257"},"content":"            markTaskInList(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":225,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":226,"author":{"gitId":"itsmejr257"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"itsmejr257"},"content":"            unmarkTaskInList(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":228,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":229,"author":{"gitId":"itsmejr257"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"itsmejr257"},"content":"            addTodo(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":231,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"itsmejr257"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":233,"author":{"gitId":"itsmejr257"},"content":"            addDeadline(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":234,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"itsmejr257"},"content":"        case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":236,"author":{"gitId":"itsmejr257"},"content":"            addEvent(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":237,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":238,"author":{"gitId":"itsmejr257"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-17"},{"lineNumber":239,"author":{"gitId":"itsmejr257"},"content":"            deleteTask(userInput);","lastModifiedDate":"2024-02-17"},{"lineNumber":240,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":241,"author":{"gitId":"itsmejr257"},"content":"        case \"find\":","lastModifiedDate":"2024-02-27"},{"lineNumber":242,"author":{"gitId":"itsmejr257"},"content":"            findTasks(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":243,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":244,"author":{"gitId":"itsmejr257"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":245,"author":{"gitId":"itsmejr257"},"content":"            System.out.println(\"Enter a valid command\");","lastModifiedDate":"2024-02-03"},{"lineNumber":246,"author":{"gitId":"itsmejr257"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":247,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":248,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":251,"author":{"gitId":"itsmejr257"},"content":"     * Handles user input until the \"bye\" command is received.","lastModifiedDate":"2024-02-27"},{"lineNumber":252,"author":{"gitId":"itsmejr257"},"content":"     * Reads user input from the UI, parses the command, and executes corresponding actions.","lastModifiedDate":"2024-02-27"},{"lineNumber":253,"author":{"gitId":"itsmejr257"},"content":"     * Continuously prompts the user for input until the \"bye\" command is entered.","lastModifiedDate":"2024-02-27"},{"lineNumber":254,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":255,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while reading input.","lastModifiedDate":"2024-02-27"},{"lineNumber":256,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":257,"author":{"gitId":"itsmejr257"},"content":"    public static void handleUserInput() throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":258,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":259,"author":{"gitId":"itsmejr257"},"content":"        String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-02-27"},{"lineNumber":260,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":261,"author":{"gitId":"itsmejr257"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":262,"author":{"gitId":"itsmejr257"},"content":"            String command \u003d parser.getCommandIndicator(userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":263,"author":{"gitId":"itsmejr257"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":264,"author":{"gitId":"itsmejr257"},"content":"                handleCommands(command, userInput);","lastModifiedDate":"2024-02-27"},{"lineNumber":265,"author":{"gitId":"itsmejr257"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":266,"author":{"gitId":"itsmejr257"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-27"},{"lineNumber":267,"author":{"gitId":"itsmejr257"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":268,"author":{"gitId":"itsmejr257"},"content":"            userInput \u003d ui.readCommand();","lastModifiedDate":"2024-02-27"},{"lineNumber":269,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":270,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":271,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":272,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":273,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":274,"author":{"gitId":"itsmejr257"},"content":"     * The main method of the application.","lastModifiedDate":"2024-02-27"},{"lineNumber":275,"author":{"gitId":"itsmejr257"},"content":"     * Initializes the JunBot, prints a welcome message, handles user input, and prints a goodbye message.","lastModifiedDate":"2024-02-27"},{"lineNumber":276,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":277,"author":{"gitId":"itsmejr257"},"content":"     * @param args The command-line arguments (not used).","lastModifiedDate":"2024-02-27"},{"lineNumber":278,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while handling user input.","lastModifiedDate":"2024-02-27"},{"lineNumber":279,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":280,"author":{"gitId":"itsmejr257"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":281,"author":{"gitId":"itsmejr257"},"content":"        String FILEPATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-02-28"},{"lineNumber":282,"author":{"gitId":"itsmejr257"},"content":"        new JunBot(FILEPATH);","lastModifiedDate":"2024-02-27"},{"lineNumber":283,"author":{"gitId":"itsmejr257"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-27"},{"lineNumber":284,"author":{"gitId":"itsmejr257"},"content":"        handleUserInput();","lastModifiedDate":"2024-02-03"},{"lineNumber":285,"author":{"gitId":"itsmejr257"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2024-02-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"itsmejr257":285}},{"path":"src/main/java/junbot/common/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.common;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"import junbot.parser.Parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"import junbot.error.InvalidInputException;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"import junbot.ui.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"public class TaskList {","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    protected Ui ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"    protected Parser parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"        return getTasksList().size();","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"     * Adds a deadline task to the task list. This method parses the full user input and obtains the name,","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"     * and end date of the given task, and returns the newly added deadline task","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full deadline command inputted by user","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"     * @return The deadline task added to the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"itsmejr257"},"content":"    public Task addDeadline(String command) throws InvalidInputException {","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"        String description;","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"itsmejr257"},"content":"        description \u003d command.replace(\"deadline\", \"\").trim();","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"            throw new InvalidInputException(\"Include a /by for deadline\");","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"itsmejr257"},"content":"        String[] details \u003d new String[2];","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"        details \u003d description.split(\"/by\", 2);","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"        String deadlineDescription \u003d details[0].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"        String deadlineDateTimeString \u003d details[1].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"        LocalDate deadlineDate \u003d parser.parseDate(deadlineDateTimeString);","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"        Task userTask \u003d new Deadline(deadlineDescription, deadlineDate);","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":"        tasks.add(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":"        return userTask;","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"itsmejr257"},"content":"     * Adds an event task to the task list. This method parses the full user input and obtains the name,","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"     * start date and end date of the given task, and returns the newly added event task","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full event command inputted by user","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"itsmejr257"},"content":"     * @return The event task added to the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input does not include a /from and /to","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"itsmejr257"},"content":"    public Task addEvent(String command) throws InvalidInputException {","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"itsmejr257"},"content":"        String description;","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"itsmejr257"},"content":"        description \u003d command.replace(\"event\", \"\").trim();","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"itsmejr257"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"itsmejr257"},"content":"            throw new InvalidInputException(\"Include a /from and /to for event\");","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"itsmejr257"},"content":"        String[] details \u003d new String[3];","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"itsmejr257"},"content":"        details \u003d description.split(\"/from|/to\", 3);","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"itsmejr257"},"content":"        String eventDescription \u003d details[0].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"itsmejr257"},"content":"        String eventStartDateString \u003d details[1].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"itsmejr257"},"content":"        String eventEndDateString \u003d details[2].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"itsmejr257"},"content":"        LocalDate startDate \u003d parser.parseDate(eventStartDateString);","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"itsmejr257"},"content":"        LocalDate endDate \u003d parser.parseDate(eventEndDateString);","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"itsmejr257"},"content":"        Task userTask \u003d new Event(eventDescription, startDate, endDate);","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"itsmejr257"},"content":"        tasks.add(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"itsmejr257"},"content":"        return userTask;","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"itsmejr257"},"content":"     * Adds a todo task to the task list. This method parses the entire full user input and obtains the name","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"itsmejr257"},"content":"     * of the todo task, and returns the newly added todo task","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full todo command inputted by user","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"itsmejr257"},"content":"     * @return The todo task added to the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input is does not have format todo \u003ctask\u003e.","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"itsmejr257"},"content":"    public Task addTodo(String command) throws InvalidInputException {","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"itsmejr257"},"content":"        String description;","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"itsmejr257"},"content":"        description \u003d command.replace(\"todo\", \"\").trim();","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"itsmejr257"},"content":"        if(description.isEmpty()){","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"itsmejr257"},"content":"            throw new InvalidInputException(\"Please state a task : todo \u003ctask\u003e\");","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"itsmejr257"},"content":"        Task userTask \u003d new Todo(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"itsmejr257"},"content":"        tasks.add(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"itsmejr257"},"content":"        return userTask;","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"itsmejr257"},"content":"     * Marks a task as done in the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"itsmejr257"},"content":"     * @param listPosition The position of the task in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"itsmejr257"},"content":"     * @return The task marked as done.","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"itsmejr257"},"content":"    public Task markTaskInList(int listPosition) {","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"itsmejr257"},"content":"        Task task \u003d this.getTasksList().get(listPosition);","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"itsmejr257"},"content":"        task.markTask();","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"itsmejr257"},"content":"        return task;","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"itsmejr257"},"content":"     * Unmarks a previously marked task in the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"itsmejr257"},"content":"     * @param listPosition The position of the task in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"itsmejr257"},"content":"     * @return The task unmarked.","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"itsmejr257"},"content":"    public Task unmarkTaskInList(int listPosition) {","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"itsmejr257"},"content":"        Task task \u003d this.getTasksList().get(listPosition);","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"itsmejr257"},"content":"        task.unmarkTask();","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"itsmejr257"},"content":"        return task;","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"itsmejr257"},"content":"     * Finds a task in the task list containing the inputted keyword, returns an ArrayList of all found tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"itsmejr257"},"content":"     * @param keyword the word to find in task list","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"itsmejr257"},"content":"     * @return The ArrayList containing all found tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"itsmejr257"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"itsmejr257"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"itsmejr257"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"itsmejr257"},"content":"            String taskDescription \u003d tasks.get(i).getDescription();","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"itsmejr257"},"content":"            if (taskDescription.contains(keyword)){","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"itsmejr257"},"content":"                foundTasks.add(tasks.get(i));","lastModifiedDate":"2024-02-27"},{"lineNumber":154,"author":{"gitId":"itsmejr257"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"itsmejr257"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":158,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"itsmejr257"},"content":"     * Prints all matching tasks which contains the inputted keyword. Method first uses findTasks() function to create","lastModifiedDate":"2024-03-03"},{"lineNumber":161,"author":{"gitId":"itsmejr257"},"content":"     * a ArrayList containing all found tasks, before printing all elements of obtained ArrayList","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"itsmejr257"},"content":"     * @param keyword the word to find in task list","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":165,"author":{"gitId":"itsmejr257"},"content":"    public void printMatchingTasks(String keyword) {","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"itsmejr257"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"itsmejr257"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d findTasks(keyword);","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-02-27"},{"lineNumber":170,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"itsmejr257"},"content":"        for (Task foundTask : foundTasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":172,"author":{"gitId":"itsmejr257"},"content":"            System.out.print(taskNumber + \". \");","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"itsmejr257"},"content":"            System.out.println(foundTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":174,"author":{"gitId":"itsmejr257"},"content":"            taskNumber +\u003d 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"itsmejr257"},"content":"        ui.printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":177,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"itsmejr257":178}},{"path":"src/main/java/junbot/error/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.error;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"itsmejr257":7}},{"path":"src/main/java/junbot/error/JunBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.error;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"public class JunBotException extends Exception {","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"itsmejr257":4}},{"path":"src/main/java/junbot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import junbot.error.InvalidInputException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"public class Parser {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"     * Converts a list number (as string) to an array index. A task with a displayed list number n would have","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"     * a corresponding array index of n-1","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"     * @param listNumberAsString The list number as a string.","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"     * @return The corresponding array index.","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    public int convertToArrayIndex(String listNumberAsString) {","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"        int listNumberAsInt \u003d Integer.parseInt(listNumberAsString);","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"        int arrayIndex \u003d listNumberAsInt - 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"        return arrayIndex;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"     * Removes the command indicator from the user input and returns the remaining user input","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full command input by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"     * @param commandIndicator The indicator of the command (e.g., \"mark\", \"unmark\").","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"     * @return The user input without the command indicator.","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"    public String removeCommandIndicator(String command, String commandIndicator) {","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"        String userInput \u003d command.replace(commandIndicator, \"\").trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"        return userInput;","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"     * Extracts the command indicator from the full user command.","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"     * @param command The full command input by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"     * @return The command indicator (e.g., \"mark\", \"unmark\").","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"    public String getCommandIndicator(String command) {","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"        int i \u003d command.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"        String commandIndicator;","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"        if (i !\u003d -1) {","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"            commandIndicator \u003d command.substring(0, i);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"        } else {","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"            commandIndicator \u003d command;","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"        return commandIndicator;","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"     * Parses the input date string into a LocalDate object.","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"itsmejr257"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input date string is in an invalid format.","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"    public LocalDate parseDate(String date) throws InvalidInputException {","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"            return LocalDate.parse(date, formatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":"            throw new InvalidInputException(\"Invalid date/time format. Please provide the date in the format \u0027d/M/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"itsmejr257":69}},{"path":"src/main/java/junbot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import junbot.common.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import junbot.error.InvalidInputException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"import junbot.error.JunBotException;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"import java.io.File;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"public class Storage {","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"    protected String filepath;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"    protected TaskList tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"     * Loads all entries from tasks.txt and returns a TaskList containing all imported tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"     * @return TaskList containing all imported tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If any inputs are invalid when importing commands","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"    public TaskList importCommands(TaskList tasks, File f) throws FileNotFoundException, InvalidInputException {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"            String[] commands \u003d s.nextLine().split(\"-\");","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"            switch (commands[0]) {","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"            case \"T\":","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"                tasks.addTodo(\"todo \" + commands[2]);","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"            case \"D\":","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"                tasks.addDeadline(\"deadline \" + commands[2] +","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"                        \" /by \" + commands[3]);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"            case \"E\":","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"itsmejr257"},"content":"                tasks.addEvent(\"event \" + commands[2] +","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"                        \" /from \" + commands[3] +","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"itsmejr257"},"content":"                        \" /to \" + commands[4]);","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"            default :","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"            if (commands[1].equals(\"X\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"itsmejr257"},"content":"                tasks.markTaskInList(counter);","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"itsmejr257"},"content":"            counter +\u003d 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"        return tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":"     * Loads tasks from the storage file. Creates a new tasks.txt file if file does not exist.","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"     * @return The list of tasks loaded from the storage file.","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"itsmejr257"},"content":"     * @throws InvalidInputException If the input is invalid.","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"     * @throws JunBotException If there is an issue with the JunBot.","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"itsmejr257"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, InvalidInputException, JunBotException {","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"itsmejr257"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"itsmejr257"},"content":"        if(!f.exists()){","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"itsmejr257"},"content":"            Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"itsmejr257"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"itsmejr257"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"itsmejr257"},"content":"            throw new JunBotException();","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"itsmejr257"},"content":"        this.tasks \u003d importCommands(this.tasks, f);","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"itsmejr257"},"content":"        return tasks.getTasksList();","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"itsmejr257"},"content":"     * Updates the storage file with the provided list of tasks.","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"itsmejr257"},"content":"     * @param tasks The list of tasks to be written to the file.","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"itsmejr257"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"itsmejr257"},"content":"    public void updateFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"itsmejr257"},"content":"        FileWriter fw \u003d new FileWriter(this.filepath);","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"itsmejr257"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"itsmejr257"},"content":"            String taskType \u003d task.getTag();","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"itsmejr257"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"itsmejr257"},"content":"            case \"T\":","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"itsmejr257"},"content":"                fw.write(task.getTag() + \"-\" + task.getStatusIcon() +","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"itsmejr257"},"content":"                        \"-\" + task.getDescription() +","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"itsmejr257"},"content":"                        System.lineSeparator());","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"itsmejr257"},"content":"            case \"D\":","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"itsmejr257"},"content":"                fw.write(task.getTag() + \"-\" + task.getStatusIcon() +","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"itsmejr257"},"content":"                        \"-\" + task.getDescription() +","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"itsmejr257"},"content":"                        \"-\" + task.getEndDate() +","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"itsmejr257"},"content":"                        System.lineSeparator());","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"itsmejr257"},"content":"            case \"E\":","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"itsmejr257"},"content":"                fw.write(task.getTag() + \"-\" + task.getStatusIcon() +","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"itsmejr257"},"content":"                        \"-\" + task.getDescription() +","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"itsmejr257"},"content":"                        \"-\" + task.getStartDate() +","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"itsmejr257"},"content":"                        \"-\" + task.getEndDate() +","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"itsmejr257"},"content":"                        System.lineSeparator());","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"itsmejr257"},"content":"            default:","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"itsmejr257"},"content":"                break;","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"itsmejr257"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"itsmejr257"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"itsmejr257"},"content":"        fw.close();","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"itsmejr257":124}},{"path":"src/main/java/junbot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    public Deadline(String description, LocalDate endDate) {","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"        this.tag \u003d \"D\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"        String endDateString \u003d endDate.format(formatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"        return endDateString;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"        String formattedDeadline \u003d this.endDate.format(outputFormatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"        return super.toString() + \" (by: \" + formattedDeadline + \")\";","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"itsmejr257":29}},{"path":"src/main/java/junbot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"public class Event extends Todo {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"        this.tag \u003d \"E\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"        String startDateString \u003d startDate.format(formatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"        return startDateString;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"        String endDateString \u003d endDate.format(formatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"        return endDateString;","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"        String formattedStartDate \u003d startDate.format(outputFormatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"        String formattedEndDate \u003d endDate.format(outputFormatter);","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"        return super.toString() + \" (from: \" + formattedStartDate","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"                + \" to: \" + formattedEndDate + \")\";","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"itsmejr257":40}},{"path":"src/main/java/junbot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"public class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"    protected String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"        return this.description;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"    public void markTask() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"    public String getTag() {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"        return \" \";","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"        return \" \";","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"        return \" \";","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"itsmejr257":41}},{"path":"src/main/java/junbot/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"    protected String tag;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"        super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"        this.tag \u003d \"T\";","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"    public String getTag() {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"        return this.tag;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"        return \"[\" + tag + \"]\" + \"[\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"                + description ;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"itsmejr257":21}},{"path":"src/main/java/junbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"package junbot.ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"import junbot.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"public class Ui {","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"    protected static String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"    protected static String GREETING \u003d \"Hello! I\u0027m JunBot\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"    protected static String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"    protected static Scanner userInputScanner;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"itsmejr257"},"content":"    public Ui(){","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"itsmejr257"},"content":"        userInputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"    public void printDivider(){","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"itsmejr257"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"itsmejr257"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"itsmejr257"},"content":"    public void printDeleteSuccessMessage(Task userTask) {","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"itsmejr257"},"content":"    public void printAddSuccessMessage(Task userTask) {","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Got it. I\u0027ve added this tasks:\");","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"itsmejr257"},"content":"    public void printUnmarkSuccessMessage(Task userTask) {","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"itsmejr257"},"content":"    public void printMarkSuccessMessage(Task userTask) {","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(userTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"itsmejr257"},"content":"        printDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"itsmejr257"},"content":"    public void printNumTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"itsmejr257"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"itsmejr257"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"itsmejr257"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"itsmejr257"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"itsmejr257"},"content":"     * @return The command inputted by the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"itsmejr257"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"itsmejr257"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"itsmejr257"},"content":"        return userInputScanner.nextLine();","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"itsmejr257"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"itsmejr257"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"itsmejr257"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"itsmejr257":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itsmejr257"},"content":"hello","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"itsmejr257"},"content":"todo find a job","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"itsmejr257"},"content":"deadline find a job on tuesday 10pm","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"itsmejr257"},"content":"deadline find a job /by tuesday 10pm","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"itsmejr257"},"content":"event dancing /from mon 2pm /to tuesday 9am","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"itsmejr257"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"mark 3","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"itsmejr257"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"itsmejr257"},"content":"unmark 3","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"itsmejr257"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"itsmejr257"},"content":"delete 2","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"itsmejr257"},"content":"list","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"itsmejr257"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"itsmejr257":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"itsmejr257"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"itsmejr257"},"content":"java -classpath ..\\bin JunBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"itsmejr257":2}}]
