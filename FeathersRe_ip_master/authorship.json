[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"# Daisy User Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"This is the user guide for Daisy, a Command Line Interface (CLI) application optimised for the tracking of daily tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"This guide will go through all the available operations to utilise Daisy, as well as how user inputs should be correctly","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"formatted to avoid encountering errors while interacting with the app.","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"## Setting up Daisy","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"To set up daisy, simply go through the following list of operations.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"1.    Download the \u003ci\u003eip.jar\u003c/i\u003e file from the latest release ","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"2.    Place the file into your desired directory. It is \u003cb\u003erecommended\u003c/b\u003e that you create a \u003cb\u003eseparate directory\u003c/b\u003e ","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"      to hold the application instead of directly using the \u003cb\u003eroot directory\u003c/b\u003e.","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"If all is well, Daisy will have the following folder structure during its operation. There is no need to create any of the","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"shown directories/files, as Daisy will be able to automatically do so for you during while running normally.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"   \u003cYour created directory\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"│  ip.jar","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"│","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"└─data","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"        Daisy.txt","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"Use the \u003ci\u003ejava -jar\u003c/i\u003e operation to execute the  ip.jar file. You will be greeted with the following ui printouts if","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"initial execution is successful.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"   Please wait while Daisy loads your previous data!","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"   No previous data found! Daisy will create a new one for this entry!","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"   Good day! This is Daisy.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"   Any task for today?","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"## List of Features","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"* Notes about the command  format:","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"  * Values field within the \u003c\u003e symbol are required user defined parameters.","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"  * Keywords starting with the / symbol are important formatting keywords used to separate parameters.","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"  * The first word within every user command will be identified as the action keyword used to signify the desired ","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"    operation.","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"### Adding Tasks: Todo, Deadline, Event","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"There are a total of 3 different task type for you to categorise their daily tasks into. ","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eTodo\u003c/b\u003e task type is suitable for activities which only the task name is important. To add a task of \u003cb\u003eTodo\u003c/b\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"  type, format your task information according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"   todo \u003ctask name\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"   //e.g. todo do homework","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"  ","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eDeadline\u003c/b\u003e task type is suitable for activities with an important due date. To add a task of \u003cb\u003eDeadline\u003c/b\u003e ","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"  type, format your task information according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"   deadline \u003ctask name\u003e /by \u003cdue date in yyyy-MM-dd HHmm\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"   //e.g. deadline do homework /by 2024-03-08 2359","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"  ","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eEvent\u003c/b\u003e task type deals with activities that have both a starting and ending time. To add a task of \u003cb\u003eEvent\u003c/b\u003e ","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"  type, format your task information according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"   event \u003ctask name\u003e /from \u003cstarting date\u003e \u003cstarting time\u003e /to \u003cending date\u003e \u003cending time\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"   //e.g. event do homework /from 2024-03-08 1200 /to 2024-03-08 2359","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"If the adding operation is successful, Daisy will alert you by printing out the success message. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"Task received! The following has been added to your list of todos:","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"[E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"Now you have 1 tasks in your todo list.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"### Listing Tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"To get an overview of your current list of tasks, use the following input:","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"  list","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"Daisy will output the list correspondingly if operation is successful. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"  1.[E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"  2.[T][ ] eat breakfast","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"Note that the first square bracket value depicts the task type (\u003ci\u003e\"T\" - Todo, \"D\" - Deadline, \"E\" - Event\u003c/i\u003e), while the","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"second depicts the isDone status of the task (\u003ci\u003e\"X\" - Done, \" \" - Undone\u003c/i\u003e).","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"### Changing Tasks: Mark, Unmark, Delete","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"There are 3 different operations available for you to edit the current list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eMark\u003c/b\u003e operation helps you mark a task into Done status. To \u003cb\u003emark\u003c/b\u003e a task, format your input according to the ","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"FeathersRe"},"content":"  following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"FeathersRe"},"content":"  mark \u003ctask index as shown in the task list\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"FeathersRe"},"content":"  //e.g. mark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"FeathersRe"},"content":"  Daisy will display the updated task if everything goes well. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"FeathersRe"},"content":"  Congrats on completing the task!","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"FeathersRe"},"content":"  [E][X] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eUnmark\u003c/b\u003e operation helps you unmark a task into Undone status. To \u003cb\u003eunmark\u003c/b\u003e a task, format your input according","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"FeathersRe"},"content":"  to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2020-05-25"},{"lineNumber":108,"author":{"gitId":"FeathersRe"},"content":"  unmark \u003ctask index as shown in the task list\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"FeathersRe"},"content":"  //e.g. unmark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"FeathersRe"},"content":"  Daisy will display the updated task if everything goes well. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"FeathersRe"},"content":"  More time needed for the following task? Sure!","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"FeathersRe"},"content":"  [E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eDelete\u003c/b\u003e operation helps you delete a task entirely. To \u003cb\u003edelete\u003c/b\u003e a task, format your input according","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"FeathersRe"},"content":"  to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"FeathersRe"},"content":"  delete \u003ctask index as shown in the task list\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"FeathersRe"},"content":"  //e.g. delete 1","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"FeathersRe"},"content":"  Daisy will display the task that is deleted as well as the number of remaining tasks if everything goes well. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"FeathersRe"},"content":"  I see. The following task will be removed from your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"FeathersRe"},"content":"  [E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"FeathersRe"},"content":"  Now you have 1 tasks in your todo list.","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"FeathersRe"},"content":"  ","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"FeathersRe"},"content":"### Finding Tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"FeathersRe"},"content":"Daisy is also able to return you a list of tasks with task name containing a specified \u003cb\u003ekeyword\u003c/b\u003e. To do so, format your","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"FeathersRe"},"content":"input according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"FeathersRe"},"content":"  find \u003ckeyword\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"FeathersRe"},"content":"  //e.g. find assignment","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"FeathersRe"},"content":"The list of matching tasks will be returned if operation is successful. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"FeathersRe"},"content":"  find assignment //find operation","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"FeathersRe"},"content":"  1.[T][ ] math assignment","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"FeathersRe"},"content":"  2.[T][ ] physics assignment","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":150,"author":{"gitId":"FeathersRe"},"content":"### Ending the program","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"FeathersRe"},"content":"The following command can be used to end a call to Daisy.","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"FeathersRe"},"content":"  bye","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"FeathersRe"},"content":"After receiving the ending prompt, Daisy will attempt to save the current task data. If successful, the following message","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"FeathersRe"},"content":"will be displayed.","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"FeathersRe"},"content":"  Daisy will begin saving the data for this entry!","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"FeathersRe"},"content":"  Successfully saved file. Program will now exit.","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"FeathersRe"},"content":"This will allow all task data to be written in the form of Comma-Separated Values within the storage file \"Daisy.txt\".","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"FeathersRe"},"content":"## Common Errors","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"FeathersRe"},"content":"### Failure to adhere to command format","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"FeathersRe"},"content":"Error messages will be output by daisy in the event if your user output is not matching the corresponding formatting for","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"FeathersRe"},"content":"your desired operation. For e.g.","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"FeathersRe"},"content":"   Error! No event detected for todo. Try again!","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"FeathersRe"},"content":"   Or","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":178,"author":{"gitId":"FeathersRe"},"content":"   Error! Event entry is not following format. Try again!","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"FeathersRe"},"content":"This is could be caused by","lastModifiedDate":"2024-03-08"},{"lineNumber":182,"author":{"gitId":"FeathersRe"},"content":"* Misspelled Action keywords (e.g. lsit instead of list)","lastModifiedDate":"2024-03-08"},{"lineNumber":183,"author":{"gitId":"FeathersRe"},"content":"* Absence of required user parameters","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"FeathersRe"},"content":"* Absence of important formatting keywords (e.g. /by)","lastModifiedDate":"2024-03-08"},{"lineNumber":185,"author":{"gitId":"FeathersRe"},"content":"* User parameters does not follow intended standards (e.g. Index field receives a character value)","lastModifiedDate":"2024-03-08"},{"lineNumber":186,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":187,"author":{"gitId":"FeathersRe"},"content":"### I/O permission errors","lastModifiedDate":"2024-03-08"},{"lineNumber":188,"author":{"gitId":"FeathersRe"},"content":"Daisy\u0027s operation include reading and writing of text files. If permission is not granted on the administrative level,","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"FeathersRe"},"content":"the saving of task data may be aborted with the following error message thrown.","lastModifiedDate":"2024-03-08"},{"lineNumber":190,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":191,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":192,"author":{"gitId":"FeathersRe"},"content":"  Daisy will begin saving the data for this entry!","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"FeathersRe"},"content":"  Error has occurred when saving. This entry will not be saved!","lastModifiedDate":"2024-03-08"},{"lineNumber":194,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"FeathersRe"},"content":"This is could be caused by","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"FeathersRe"},"content":"* ip.jar is directly thrown to the root directory","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"FeathersRe"},"content":"* ip.jar was not executed in administrative mode","lastModifiedDate":"2024-03-08"},{"lineNumber":199,"author":{"gitId":"FeathersRe"},"content":"* ip.jar was not given read/write permissions to ./data/Daisy.txt","lastModifiedDate":"2024-03-08"},{"lineNumber":200,"author":{"gitId":"FeathersRe"},"content":"* ./data/ was deleted during program operation","lastModifiedDate":"2024-03-08"},{"lineNumber":201,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":202,"author":{"gitId":"FeathersRe"},"content":"## Summary of Commands","lastModifiedDate":"2024-03-08"},{"lineNumber":203,"author":{"gitId":"FeathersRe"},"content":"| Operation           | Command Format                                                                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":204,"author":{"gitId":"FeathersRe"},"content":"|---------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-08"},{"lineNumber":205,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eAdd\u003c/b\u003e Todo     | todo \\\u003ctask name\\\u003e                                                                                |","lastModifiedDate":"2024-03-08"},{"lineNumber":206,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eAdd\u003c/b\u003e Deadline | deadline \\\u003ctask name\\\u003e /by \\\u003cdue date in yyyy-MM-dd HHmm\\\u003e                                        |","lastModifiedDate":"2024-03-08"},{"lineNumber":207,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eAdd\u003c/b\u003e Event    | event \\\u003ctask name\\\u003e /from \\\u003cstarting date\\\u003e \\\u003cstarting time\\\u003e /to \\\u003cending date\\\u003e \\\u003cending time\\\u003e |","lastModifiedDate":"2024-03-08"},{"lineNumber":208,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eList\u003c/b\u003e Tasks   | list                                                                                              |","lastModifiedDate":"2024-03-08"},{"lineNumber":209,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eMark\u003c/b\u003e Task    | mark \\\u003ctask index as shown in the task list\u003e                                                      |","lastModifiedDate":"2024-03-08"},{"lineNumber":210,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eUnmark\u003c/b\u003e Task  | unmark \\\u003ctask index as shown in the task list\u003e                                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":211,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eDelete\u003c/b\u003e Task  | delete \\\u003ctask index as shown in the task list\u003e                                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":212,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eFind\u003c/b\u003e Task    | find \\\u003ckeyword\u003e                                                                                   |","lastModifiedDate":"2024-03-08"},{"lineNumber":213,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eEnd Program\u003c/b\u003e  | bye                                                                                               |","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"FeathersRe":205,"-":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"# Daisy User Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"This is the user guide for Daisy, a Command Line Interface (CLI) application optimised for the tracking of daily tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"This guide will go through all the available operations to utilise Daisy, as well as how user inputs should be correctly","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"formatted to avoid encountering errors while interacting with the app.","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"## Setting up Daisy","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"To set up daisy, simply go through the following list of operations.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"1.    Download the \u003ci\u003eip.jar\u003c/i\u003e file from the latest release","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"2.    Place the file into your desired directory. It is \u003cb\u003erecommended\u003c/b\u003e that you create a \u003cb\u003eseparate directory\u003c/b\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"      to hold the application instead of directly using the \u003cb\u003eroot directory\u003c/b\u003e.","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"If all is well, Daisy will have the following folder structure during its operation. There is no need to create any of the","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"shown directories/files, as Daisy will be able to automatically do so for you during while running normally.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"   \u003cYour created directory\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"│  ip.jar","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"│","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"└─data","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"        Daisy.txt","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"Use the \u003ci\u003ejava -jar\u003c/i\u003e operation to execute the  ip.jar file. You will be greeted with the following ui printouts if","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"initial execution is successful.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"   Please wait while Daisy loads your previous data!","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"   No previous data found! Daisy will create a new one for this entry!","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"   Good day! This is Daisy.","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"   Any task for today?","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"## List of Features","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"* Notes about the command  format:","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"    * Values field within the \u003c\u003e symbol are required user defined parameters.","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"    * Keywords starting with the / symbol are important formatting keywords used to separate parameters.","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"    * The first word within every user command will be identified as the action keyword used to signify the desired","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"      operation.","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"### Adding Tasks: Todo, Deadline, Event","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"There are a total of 3 different task type for you to categorise their daily tasks into.","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eTodo\u003c/b\u003e task type is suitable for activities which only the task name is important. To add a task of \u003cb\u003eTodo\u003c/b\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"  type, format your task information according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"   todo \u003ctask name\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"   //e.g. todo do homework","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eDeadline\u003c/b\u003e task type is suitable for activities with an important due date. To add a task of \u003cb\u003eDeadline\u003c/b\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"  type, format your task information according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"   deadline \u003ctask name\u003e /by \u003cdue date in yyyy-MM-dd HHmm\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"   //e.g. deadline do homework /by 2024-03-08 2359","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eEvent\u003c/b\u003e task type deals with activities that have both a starting and ending time. To add a task of \u003cb\u003eEvent\u003c/b\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"  type, format your task information according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"   event \u003ctask name\u003e /from \u003cstarting date\u003e \u003cstarting time\u003e /to \u003cending date\u003e \u003cending time\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"   //e.g. event do homework /from 2024-03-08 1200 /to 2024-03-08 2359","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"If the adding operation is successful, Daisy will alert you by printing out the success message. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"Task received! The following has been added to your list of todos:","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"[E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"Now you have 1 tasks in your todo list.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"### Listing Tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"To get an overview of your current list of tasks, use the following input:","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"  list","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"Daisy will output the list correspondingly if operation is successful. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"  1.[E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"  2.[T][ ] eat breakfast","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"Note that the first square bracket value depicts the task type (\u003ci\u003e\"T\" - Todo, \"D\" - Deadline, \"E\" - Event\u003c/i\u003e), while the","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"second depicts the isDone status of the task (\u003ci\u003e\"X\" - Done, \" \" - Undone\u003c/i\u003e).","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"### Changing Tasks: Mark, Unmark, Delete","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"There are 3 different operations available for you to edit the current list of tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eMark\u003c/b\u003e operation helps you mark a task into Done status. To \u003cb\u003emark\u003c/b\u003e a task, format your input according to the","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"FeathersRe"},"content":"  following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"FeathersRe"},"content":"  mark \u003ctask index as shown in the task list\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"FeathersRe"},"content":"  //e.g. mark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"FeathersRe"},"content":"  Daisy will display the updated task if everything goes well. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"FeathersRe"},"content":"  Congrats on completing the task!","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"FeathersRe"},"content":"  [E][X] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eUnmark\u003c/b\u003e operation helps you unmark a task into Undone status. To \u003cb\u003eunmark\u003c/b\u003e a task, format your input according","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"FeathersRe"},"content":"  to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"FeathersRe"},"content":"  unmark \u003ctask index as shown in the task list\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"FeathersRe"},"content":"  //e.g. unmark 1","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"FeathersRe"},"content":"  Daisy will display the updated task if everything goes well. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"FeathersRe"},"content":"  More time needed for the following task? Sure!","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"FeathersRe"},"content":"  [E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"FeathersRe"},"content":"* The \u003cb\u003eDelete\u003c/b\u003e operation helps you delete a task entirely. To \u003cb\u003edelete\u003c/b\u003e a task, format your input according","lastModifiedDate":"2024-03-08"},{"lineNumber":120,"author":{"gitId":"FeathersRe"},"content":"  to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"FeathersRe"},"content":"  delete \u003ctask index as shown in the task list\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":123,"author":{"gitId":"FeathersRe"},"content":"  //e.g. delete 1","lastModifiedDate":"2024-03-08"},{"lineNumber":124,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"FeathersRe"},"content":"  Daisy will display the task that is deleted as well as the number of remaining tasks if everything goes well. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"FeathersRe"},"content":"  I see. The following task will be removed from your list:","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"FeathersRe"},"content":"  [E][ ] do homework (from: Mar 08 2024 12:00PM to: Mar 08 2024 11:59PM)","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"FeathersRe"},"content":"  Now you have 1 tasks in your todo list.","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":133,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":134,"author":{"gitId":"FeathersRe"},"content":"### Finding Tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":135,"author":{"gitId":"FeathersRe"},"content":"Daisy is also able to return you a list of tasks with task name containing a specified \u003cb\u003ekeyword\u003c/b\u003e. To do so, format your","lastModifiedDate":"2024-03-08"},{"lineNumber":136,"author":{"gitId":"FeathersRe"},"content":"input according to the following structure.","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":138,"author":{"gitId":"FeathersRe"},"content":"  find \u003ckeyword\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":139,"author":{"gitId":"FeathersRe"},"content":"  //e.g. find assignment","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"FeathersRe"},"content":"The list of matching tasks will be returned if operation is successful. For e.g.,","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"FeathersRe"},"content":"  find assignment //find operation","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"FeathersRe"},"content":"  1.[T][ ] math assignment","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"FeathersRe"},"content":"  2.[T][ ] physics assignment","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":150,"author":{"gitId":"FeathersRe"},"content":"### Ending the program","lastModifiedDate":"2024-03-08"},{"lineNumber":151,"author":{"gitId":"FeathersRe"},"content":"The following command can be used to end a call to Daisy.","lastModifiedDate":"2024-03-08"},{"lineNumber":152,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"FeathersRe"},"content":"  bye","lastModifiedDate":"2024-03-08"},{"lineNumber":154,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":155,"author":{"gitId":"FeathersRe"},"content":"After receiving the ending prompt, Daisy will attempt to save the current task data. If successful, the following message","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"FeathersRe"},"content":"will be displayed.","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"FeathersRe"},"content":"  Daisy will begin saving the data for this entry!","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"FeathersRe"},"content":"  Successfully saved file. Program will now exit.","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"FeathersRe"},"content":"This will allow all task data to be written in the form of Comma-Separated Values within the storage file \"Daisy.txt\".","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"FeathersRe"},"content":"## Common Errors","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"FeathersRe"},"content":"### Failure to adhere to command format","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"FeathersRe"},"content":"Error messages will be output by daisy in the event if your user output is not matching the corresponding formatting for","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"FeathersRe"},"content":"your desired operation. For e.g.","lastModifiedDate":"2024-03-08"},{"lineNumber":170,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":171,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":172,"author":{"gitId":"FeathersRe"},"content":"   Error! No event detected for todo. Try again!","lastModifiedDate":"2024-03-08"},{"lineNumber":173,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":174,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":175,"author":{"gitId":"FeathersRe"},"content":"Or","lastModifiedDate":"2024-03-08"},{"lineNumber":176,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":177,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":178,"author":{"gitId":"FeathersRe"},"content":"   Error! Event entry is not following format. Try again!","lastModifiedDate":"2024-03-08"},{"lineNumber":179,"author":{"gitId":"FeathersRe"},"content":"   ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":180,"author":{"gitId":"FeathersRe"},"content":"   ```","lastModifiedDate":"2024-03-08"},{"lineNumber":181,"author":{"gitId":"FeathersRe"},"content":"This is could be caused by","lastModifiedDate":"2024-03-08"},{"lineNumber":182,"author":{"gitId":"FeathersRe"},"content":"* Misspelled Action keywords (e.g. lsit instead of list)","lastModifiedDate":"2024-03-08"},{"lineNumber":183,"author":{"gitId":"FeathersRe"},"content":"* Absence of required user parameters","lastModifiedDate":"2024-03-08"},{"lineNumber":184,"author":{"gitId":"FeathersRe"},"content":"* Absence of important formatting keywords (e.g. /by)","lastModifiedDate":"2024-03-08"},{"lineNumber":185,"author":{"gitId":"FeathersRe"},"content":"* User parameters does not follow intended standards (e.g. Index field receives a character value)","lastModifiedDate":"2024-03-08"},{"lineNumber":186,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":187,"author":{"gitId":"FeathersRe"},"content":"### I/O permission errors","lastModifiedDate":"2024-03-08"},{"lineNumber":188,"author":{"gitId":"FeathersRe"},"content":"Daisy\u0027s operation include reading and writing of text files. If permission is not granted on the administrative level,","lastModifiedDate":"2024-03-08"},{"lineNumber":189,"author":{"gitId":"FeathersRe"},"content":"the saving of task data may be aborted with the following error message thrown.","lastModifiedDate":"2024-03-08"},{"lineNumber":190,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":191,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":192,"author":{"gitId":"FeathersRe"},"content":"  Daisy will begin saving the data for this entry!","lastModifiedDate":"2024-03-08"},{"lineNumber":193,"author":{"gitId":"FeathersRe"},"content":"  Error has occurred when saving. This entry will not be saved!","lastModifiedDate":"2024-03-08"},{"lineNumber":194,"author":{"gitId":"FeathersRe"},"content":"  ____________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":195,"author":{"gitId":"FeathersRe"},"content":"  ```","lastModifiedDate":"2024-03-08"},{"lineNumber":196,"author":{"gitId":"FeathersRe"},"content":"This is could be caused by","lastModifiedDate":"2024-03-08"},{"lineNumber":197,"author":{"gitId":"FeathersRe"},"content":"* ip.jar is directly thrown to the root directory","lastModifiedDate":"2024-03-08"},{"lineNumber":198,"author":{"gitId":"FeathersRe"},"content":"* ip.jar was not executed in administrative mode","lastModifiedDate":"2024-03-08"},{"lineNumber":199,"author":{"gitId":"FeathersRe"},"content":"* ip.jar was not given read/write permissions to ./data/Daisy.txt","lastModifiedDate":"2024-03-08"},{"lineNumber":200,"author":{"gitId":"FeathersRe"},"content":"* ./data/ was deleted during program operation","lastModifiedDate":"2024-03-08"},{"lineNumber":201,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":202,"author":{"gitId":"FeathersRe"},"content":"## Summary of Commands","lastModifiedDate":"2024-03-08"},{"lineNumber":203,"author":{"gitId":"FeathersRe"},"content":"| Operation           | Command Format                                                                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":204,"author":{"gitId":"FeathersRe"},"content":"|---------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-08"},{"lineNumber":205,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eAdd\u003c/b\u003e Todo     | todo \\\u003ctask name\\\u003e                                                                                |","lastModifiedDate":"2024-03-08"},{"lineNumber":206,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eAdd\u003c/b\u003e Deadline | deadline \\\u003ctask name\\\u003e /by \\\u003cdue date in yyyy-MM-dd HHmm\\\u003e                                        |","lastModifiedDate":"2024-03-08"},{"lineNumber":207,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eAdd\u003c/b\u003e Event    | event \\\u003ctask name\\\u003e /from \\\u003cstarting date\\\u003e \\\u003cstarting time\\\u003e /to \\\u003cending date\\\u003e \\\u003cending time\\\u003e |","lastModifiedDate":"2024-03-08"},{"lineNumber":208,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eList\u003c/b\u003e Tasks   | list                                                                                              |","lastModifiedDate":"2024-03-08"},{"lineNumber":209,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eMark\u003c/b\u003e Task    | mark \\\u003ctask index as shown in the task list\u003e                                                      |","lastModifiedDate":"2024-03-08"},{"lineNumber":210,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eUnmark\u003c/b\u003e Task  | unmark \\\u003ctask index as shown in the task list\u003e                                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":211,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eDelete\u003c/b\u003e Task  | delete \\\u003ctask index as shown in the task list\u003e                                                    |","lastModifiedDate":"2024-03-08"},{"lineNumber":212,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eFind\u003c/b\u003e Task    | find \\\u003ckeyword\u003e                                                                                   |","lastModifiedDate":"2024-03-08"},{"lineNumber":213,"author":{"gitId":"FeathersRe"},"content":"| \u003cb\u003eEnd Program\u003c/b\u003e  | bye                                                                                               |","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"FeathersRe":198,"-":15}},{"path":"src/main/java/Daisy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"import daisy.error.*;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"import daisy.parser.Parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import daisy.storage.Storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"import daisy.tasklist.TaskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"import daisy.ui.Ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"import java.io.File;","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":" * The Daisy program implements check list application for the user to keep track of a list of tasks. The program works with","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":" * 3 kind of tasks in total: todo, deadline and event. For the list of commands and input format, please check the user guide.","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"public class Daisy {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"    protected static String defaultStorageLocation \u003d \"\\\\data\";","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"     * Main running process for the Daisy application","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"        File executingFilePath \u003d new File(Daisy.class.getProtectionDomain().getCodeSource().getLocation().getPath());","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"        String storageLocation \u003d executingFilePath.getParentFile().getAbsolutePath() + defaultStorageLocation;","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"        Storage storage \u003d new Storage(storageLocation);","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"        storage.loadData(tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"        ui.sendIntro();","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"            ui.setLineBreak();","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"            Parser userInput \u003d new Parser(command);","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"            switch (userInput.getAction()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"                case \"list\":","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"                    tasks.listTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"                case \"find\":","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"                        String keyWord \u003d userInput.getFindInfo();","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"                        tasks.findTasks(keyWord);","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"                    } catch (IllegalFindFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"                        ui.printFindMissingError();","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"                case \"mark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"                        int taskNo \u003d userInput.getIndexFromCommand();","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"                        tasks.markDone(taskNo, ui);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"                    } catch (MissingIndexException | NumberFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"                        ui.printIndexMissingError();","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"                case \"unmark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"                        int taskNo \u003d userInput.getIndexFromCommand();","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"                        tasks.markUndone(userInput.getIndexFromCommand(), ui);","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"                    } catch (MissingIndexException | NumberFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"                        ui.printIndexMissingError();","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"                case \"delete\":","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"FeathersRe"},"content":"                        int taskNo \u003d userInput.getIndexFromCommand();","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"                    tasks.deleteTask(userInput.getIndexFromCommand());","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"                    } catch (MissingIndexException | NumberFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"                        ui.printIndexMissingError();","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"                case \"todo\":","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"                        tasks.createTodo(userInput.getTodoInfo(),true, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"                    } catch (IllegalTodoFormatException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"                        ui.printTodoMissingError();","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"                case \"deadline\":","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"FeathersRe"},"content":"                        String[] separate_deadlines \u003d userInput.getDeadlineInfo();","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"                        tasks.createDeadline(separate_deadlines[0],separate_deadlines[1], true, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"                    } catch (IllegalDeadlineFormatException | DateTimeParseException e) {","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"FeathersRe"},"content":"                        ui.printDeadlineInputError();","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"FeathersRe"},"content":"                case \"event\":","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"FeathersRe"},"content":"                        String[] separate_events \u003d userInput.getEventInfo();","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"FeathersRe"},"content":"                        tasks.createEvent(separate_events[0],separate_events[1], separate_events[2], true, false);","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"FeathersRe"},"content":"                    } catch (IllegalEventFormatException | DateTimeParseException e){","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"FeathersRe"},"content":"                        ui.printEventInputError();","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"FeathersRe"},"content":"                default:","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"FeathersRe"},"content":"                    try {","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"FeathersRe"},"content":"                        throw new IllegalEntryException();","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"FeathersRe"},"content":"                    } catch (IllegalEntryException e){","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"FeathersRe"},"content":"                        ui.printInvalidCommandError();","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"FeathersRe"},"content":"                    }","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"FeathersRe"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"FeathersRe"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"FeathersRe"},"content":"            ui.setLineBreak();","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"FeathersRe"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"FeathersRe"},"content":"        ui.sendExit();","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"FeathersRe"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"FeathersRe"},"content":"        ui.setLineBreak();","lastModifiedDate":"2024-03-08"},{"lineNumber":118,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"FeathersRe":118,"-":2}},{"path":"src/main/java/daisy/data/Daisy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"D,0,submit 2113 assignment,2024-03-08 2359","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"E,0,eat snacks,2024-03-08 2200,2359","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"FeathersRe":2}},{"path":"src/main/java/daisy/error/IllegalDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.error;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The IllegalDeadlineFormatException class signifies the error condition which a user input for a deadline does not match","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" * the expected format of the program. This is caused by either the user has a missing task name/due date, forgets to","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" * use \"/by\" to separate the task name and date, or has not followed the date and time format for the due date.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"public class IllegalDeadlineFormatException extends Exception{","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"FeathersRe":9}},{"path":"src/main/java/daisy/error/IllegalEntryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.error;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The IllegalEntryException class signifies the error condition which a user input not match any expected format of the","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" * program. This is caused by either the user have misspelled/forgot the operation keyword, or input an invalid string of","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" * characters (such as \"\\n\") in the first place.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"public class IllegalEntryException extends Exception{","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"FeathersRe":9}},{"path":"src/main/java/daisy/error/IllegalEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.error;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The IllegalEventFormatException class signifies the error condition which a user input for an event does not match the","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" * expected format of the program. This is caused by either the user have a missing task name/date/from time/to time,","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" * forgets to use \"/from\" and \"/to\" to separate the different information, or is not following the format for the date and","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":" * time inputs.","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"public class IllegalEventFormatException extends Exception{","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"FeathersRe":11}},{"path":"src/main/java/daisy/error/IllegalFindFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.error;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The IllegalTodoFormatException class signifies the error condition which a user input for find does not match the expected","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" * format of the program. This is caused by the user having a missing search keyword.","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"public class IllegalFindFormatException extends Exception{","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"FeathersRe":8}},{"path":"src/main/java/daisy/error/IllegalTodoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.error;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The IllegalTodoFormatException class signifies the error condition which a user input for a todo does not match the","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" * expected format of the program. This is caused by the user having a missing task name.","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"public class IllegalTodoFormatException extends Exception{","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"FeathersRe":9}},{"path":"src/main/java/daisy/error/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.error;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The MissingIndexException class signifies the error condition which the user provided missing information","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" * (e.g. index) when accessing a list operation(mark/unmark/delete).","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"public class MissingIndexException extends Exception{","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"FeathersRe":8}},{"path":"src/main/java/daisy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import daisy.error.*;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" * The Parser class handles all user input. It classifies information within the user input into suitable segments such","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":" * that it is understandable by the other classes.","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"    private static String action;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"    private static String additionalNotes;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"     * Constructs a Parser instance based on the user\u0027s input command. It identifies the first word of the user as the","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"     * operation keyword and the rest as additional information that could be needed by other class operations.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"     * @param command the user\u0027s input command","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"    public Parser(String command) {","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"        String[] separate_commands \u003d command.split(\" \",2);","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"        action \u003d separate_commands[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"        if (separate_commands.length \u003c 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"            additionalNotes \u003d null;","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"        else {","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"            additionalNotes \u003d separate_commands[1];","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"     * Returns the operation keyword extracted from the user\u0027s input command","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"     * @return the operation keyword of the user\u0027s input command","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"    public String getAction() {","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"        return action;","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"     * Attempts to extract an index variable from the user input\u0027s additional information. Is called when the main program","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"     * confirms that the user wish to execute list operations(delete/mark/unmark).","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"     * @return the index of the target task in the task list","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"     * @throws MissingIndexException if there are no additional information. This indicates that the user has missing","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"     * instructions for the index.","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"    public int getIndexFromCommand()","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"        throws MissingIndexException {","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"        if (additionalNotes \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"        return Integer.parseInt(additionalNotes)-1;","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"     * Attempts to extract a task name from the user input\u0027s additional information. Is called when the main program confirms","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"     * that the user wish to create a new todo.","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"     * @return the task name of the todo","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"     * @throws IllegalTodoFormatException if there are no additional information. This indicates that the user has missing","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"     * task name for the todo","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"    public String getTodoInfo()","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"        throws IllegalTodoFormatException {","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"        if (additionalNotes \u003d\u003d null) {","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"            throw new IllegalTodoFormatException();","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"        return additionalNotes;","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"     * Attempts to extract a String from the user input\u0027s additional information. Is called when the main program confirms","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"     * that the user wish to find a task by task title with his provided keywords.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"     * @return the user provided keywords","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"     * @throws IllegalFindFormatException if there are no additional information indicating user keywords are empty.","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"    public String getFindInfo()","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"        throws IllegalFindFormatException {","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"        if (additionalNotes \u003d\u003d null) {","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"            throw new IllegalFindFormatException();","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"        return additionalNotes;","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"     * Attempts to extract a task name and date from the user input\u0027s additional information. Is called when the main program","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"     * confirms that the user wish to create a new deadline.","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"     * @return a String array consisting of task name on its 0th index and due date on its 1st index","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"     * @throws IllegalDeadlineFormatException if there are no additional information or when the \"/by\" keyword does not","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"     * separate the task name and due date.","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"    public String[] getDeadlineInfo()","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"        throws IllegalDeadlineFormatException {","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"FeathersRe"},"content":"        if (additionalNotes \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"FeathersRe"},"content":"            throw new IllegalDeadlineFormatException();","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"FeathersRe"},"content":"        String [] taskNameDate \u003d additionalNotes.split(\" /by \");","lastModifiedDate":"2024-03-08"},{"lineNumber":94,"author":{"gitId":"FeathersRe"},"content":"        if (taskNameDate.length \u003c 2) {","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"FeathersRe"},"content":"            throw new IllegalDeadlineFormatException();","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"FeathersRe"},"content":"        return taskNameDate;","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"FeathersRe"},"content":"     * Attempts to extract a task name, date, from time and to time from the user input\u0027s additional information. Is called","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"FeathersRe"},"content":"     * when the main program confirms that the user wish to create a new event.","lastModifiedDate":"2024-03-08"},{"lineNumber":103,"author":{"gitId":"FeathersRe"},"content":"     * @return a String array consisting of task name on its 0th index, date on its 1st index, from time on its 2nd index,","lastModifiedDate":"2024-03-08"},{"lineNumber":104,"author":{"gitId":"FeathersRe"},"content":"     * and to time on its 3rd index.","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"FeathersRe"},"content":"     * @throws IllegalEventFormatException if there are no additional information or when the \"/from\" and \"/to\" does not","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"FeathersRe"},"content":"     * separate the task name, date, from time and to time.","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"FeathersRe"},"content":"    public String[] getEventInfo()","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"FeathersRe"},"content":"        throws IllegalEventFormatException {","lastModifiedDate":"2024-03-08"},{"lineNumber":110,"author":{"gitId":"FeathersRe"},"content":"        if (additionalNotes \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"FeathersRe"},"content":"            throw new IllegalEventFormatException();","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"FeathersRe"},"content":"        int from \u003d additionalNotes.indexOf(\" /from \");","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"FeathersRe"},"content":"        int to \u003d additionalNotes.indexOf(\" /to \");","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"FeathersRe"},"content":"        if (from \u003d\u003d -1 || to \u003d\u003d -1 ) {","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"FeathersRe"},"content":"            throw new IllegalEventFormatException();","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"FeathersRe"},"content":"        return new String[] {additionalNotes.substring(0, from),additionalNotes.substring(from + \" /from \".length(), to), additionalNotes.substring(to+\" /to \".length())};","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"FeathersRe":124}},{"path":"src/main/java/daisy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import daisy.tasklist.TaskList;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"import java.io.File;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":" * The storage class handles storage related operations. It loads previous task data to the current task list at the start","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":" * of the program, and helps to store task data in the current task list back to the \"Daisy.txt\" file at the end of the program.","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"    private String storageLocation;","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"    private String defaultFileName \u003d \"\\\\Daisy.txt\";","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"    private String filePath;","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"     * Constructs a Storage instance. It takes in the directory path of the \"Daisy.txt\" file for read and write operations.","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"     * @param storageLocation the directory path of the \"Daisy.txt\" storage file","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"    public Storage(String storageLocation) {","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"        this.storageLocation \u003d storageLocation;","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"        this.filePath \u003d storageLocation + defaultFileName;","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"     * Loads previous task data into the newly created task list. It first identifies the type of task stored by the first","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"     * comma separated entry, then breaks down the subsequent information such that a task of corresponding type is created.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"     * If the directory path of the \"Daisy.txt\" file is not found, creates one.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"     * @param tasks the task list that requires data to be loaded into","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"    public void loadData(TaskList tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"        File taskFile \u003d new File(filePath);","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Please wait while Daisy loads your previous data!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"            Scanner entryReader \u003d new Scanner(taskFile);","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"            while (entryReader.hasNextLine()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"                String[] entryData \u003d entryReader.nextLine().split(\",\");","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"                boolean setDone \u003d \"1\".equals(entryData[1]);","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"                switch(entryData[0]) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"                    case \"T\":","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"                        tasks.createTodo(entryData[2], false, setDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"                        break;","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"                    case \"D\":","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"                        tasks.createDeadline(entryData[2], entryData[3], false, setDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"                        break;","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"                    case \"E\":","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"                        tasks.createEvent(entryData[2], entryData[3], entryData[4], false, setDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"                        break;","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"            entryReader.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"            System.out.println(\"Data is successfully loaded! Program will now begin.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"            File taskFolder \u003d new File(storageLocation);","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"            taskFolder.mkdirs();","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"            System.out.println(\"No previous data found! Daisy will create a new one for this entry!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"     * Saves existing task data from the current task list. If the \"Daisy.txt\" file do not exist, creates one. For every","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"     * task entry, it calls the corresponding save() method from the task classes to convert entries into comma separated","lastModifiedDate":"2024-03-08"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"     * string values, then writes them into the \"Daisy.txt\" file. It will always overwrite all previous entries in the file.","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"     * Throws error message if the \"Daisy.txt\" file could not be created due to permission issues.","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"FeathersRe"},"content":"     * @param tasks the current task list that requires data to be saved","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.task.Task","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"    public void saveData(TaskList tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Daisy will begin saving the data for this entry!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"            FileWriter entryWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-08"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"                String entryInput \u003d tasks.getTask(i).save() + \"\\n\";","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"                entryWriter.write(entryInput);","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"            entryWriter.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"            System.out.println(\"Successfully saved file. Program will now exit.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"            System.out.println(\"Error has occurred when saving. This entry will not be saved!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"FeathersRe":90}},{"path":"src/main/java/daisy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":" * The deadline class handles the creation and saving formatting of deadline tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"     * Creates a deadline instance.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName the task name of the deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"     * @param dueDate the due date of the deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"        super(taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDate, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the deadline in the format such that it is suitable for program printouts.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the deadline suitable for printing","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", (this.isDone)? \"X\":\" \", this.taskName, this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\")));","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the deadline in the format such that it is suitable for loading and saving.","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the deadline suitable for loading and saving","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"    public String save() {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"D,%s,%s,%s\", (this.isDone)? \"1\":\"0\", this.taskName, this.dueDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"FeathersRe":40}},{"path":"src/main/java/daisy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":" * The event class handles the creation and saving formatting of event tasks. It is assumed that all event would happen","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":" * and end within the same day.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":"    protected LocalDateTime fromTime;","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"    protected LocalDateTime toTime;","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"     * Creates an event instance.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName the task name of the event task","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"     * @param fromTime the starting date and time of the event task","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"     * @param toTime the ending date and time of the event task","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"    public Event(String taskName, String fromTime, String toTime){","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"        super(taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"        this.fromTime \u003d LocalDateTime.parse(fromTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"        this.toTime \u003d LocalDateTime.parse(toTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the event in the format such that it is suitable for program printouts.","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the event suitable for printing","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", (this.isDone)? \"X\":\" \", this.taskName, this.fromTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\")), this.toTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\")));","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the event in the format such that it is suitable for loading and saving.","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the event suitable for loading and saving","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"    public String save() {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"E,%s,%s,%s,%s\", (this.isDone)? \"1\":\"0\", this.taskName, this.fromTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")), this.toTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"FeathersRe":44}},{"path":"src/main/java/daisy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The task class is the parent class of all task related classes. It sets the basic functionalities needed to create a task.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"public class Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"    protected String taskName;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"     * Creates a task instance. Sets the done status of the task to the default value of being undone.","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName the task name of the task","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"        setUndone();","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"     * Sets the done status of the task to being done.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"     * Sets the done status of the task to being undone.","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"    public void setUndone() {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the task in the format such that it is suitable for program printouts.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the task suitable for printing","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"[%s] %s\", (this.isDone)? \"X\":\" \", this.taskName);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the task in the format such that it is suitable for loading and saving.","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the task suitable for loading and saving","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"    public String save() {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"%s,%s\", (this.isDone)? \"1\":\"0\", this.taskName);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"     * Returns a boolean value to determine whether a task instance has a task name that contains the keyword.","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"     * @param keyWord keyword used to compare with the task name","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"     * @return a boolean value which determines whether the task instance has a task name that contains the keyword","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"    public boolean contains(String keyWord) {","lastModifiedDate":"2024-03-08"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"        return taskName.contains(keyWord);","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"FeathersRe":58}},{"path":"src/main/java/daisy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":" * The todo class handles the creation and saving formatting of todo tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"     * Creates a todo instance.","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName the task name of the todo","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"        super(taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the todo in the format such that it is suitable for program printouts.","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the todo suitable for printing","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"[T][%s] %s\", (this.isDone)? \"X\":\" \", this.taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"     * Returns a String representation of the todo in the format such that it is suitable for loading and saving.","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"     * @return a String representation of the todo suitable for loading and saving","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"    public String save() {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"        return String.format(\"T,%s,%s\", (this.isDone)? \"1\":\"0\", this.taskName);","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"FeathersRe":32}},{"path":"src/main/java/daisy/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.tasklist;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import daisy.task.Deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"import daisy.task.Event;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"import daisy.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":"import daisy.task.Todo;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":"import daisy.ui.Ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":" * The TaskList class handles all task list related operations according to user commands.","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"     * Creates a new task list","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"     * List all tasks within the task list. It goes through all task entries and calls the corresponding toString() method","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"     * to convert them into String representations suitable for printing.","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"     * @see Task","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"    public void listTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"            System.out.println((tasks.indexOf(task) + 1) + \".\" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"     * Returns the task object of the specified index in the task list","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"     * @param taskNo index of the task object to be returned","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"     * @return the task object","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"    public Task getTask(int taskNo) {","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"        return tasks.get(taskNo);","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"     * Changes the done status of the task object of the specified index to done. It then alerts the user by with a success","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"     * message by calling the corresponding method from ui.","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"     * @param taskNo index of the targeted task object","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"     * @param ui the current ui instance the program is working on","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"     * @see Ui","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"    public void markDone(int taskNo, Ui ui) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"        getTask(taskNo).setDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"        ui.printMarked(getTask(taskNo));","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"     * Changes the done status of the task object of the specified index to undone. It then alerts the user by with a success","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"     * message by calling the corresponding method from ui.","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"     * @param taskNo index of the targeted task object","lastModifiedDate":"2024-03-08"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"     * @param ui the current ui instance the program is working on","lastModifiedDate":"2024-03-08"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"     * @see Ui","lastModifiedDate":"2024-03-08"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"    public void markUndone(int taskNo, Ui ui) {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"        tasks.get(taskNo).setUndone();","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"        ui.printUnmarked(tasks.get(taskNo));","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"     * Deletes the task object of the specified index from the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"     * @param taskNo index of the targeted task object","lastModifiedDate":"2024-03-08"},{"lineNumber":72,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"    public void deleteTask(int taskNo) {","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"I see. The following task will be removed from your list:\\n\" + tasks.get(taskNo));","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"        tasks.remove(taskNo);","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"        outputSize();","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"     * Returns the current number of tasks on the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"     * @return the current number of tasks on the task list","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"    public int getSize() {","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"        return tasks.size();","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"     * Prints the number of tasks current existing on the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"FeathersRe"},"content":"    public void outputSize() {","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(String.format(\"Now you have %d tasks in your todo list.\", getSize()));","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":95,"author":{"gitId":"FeathersRe"},"content":"     * Adds a new task object to the task list. The method will only output the success message of the operation when the","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"FeathersRe"},"content":"     * printOut input is true. It should only output the success message when the user is adding new tasks during program","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"FeathersRe"},"content":"     * runtime, and ignore it when the program is loading task data.","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"FeathersRe"},"content":"     * @param task the task object to be added","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"FeathersRe"},"content":"     * @param sendPrintOut boolean to indicate whether a success message should be sent upon method completion","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"FeathersRe"},"content":"    public void addTask(Task task, boolean sendPrintOut) {","lastModifiedDate":"2024-03-08"},{"lineNumber":102,"author":{"gitId":"FeathersRe"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"FeathersRe"},"content":"        if (sendPrintOut) {","lastModifiedDate":"2024-03-08"},{"lineNumber":105,"author":{"gitId":"FeathersRe"},"content":"            System.out.println(\"Task received! The following has been added to your list of todos:\\n\" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"FeathersRe"},"content":"            outputSize();","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":111,"author":{"gitId":"FeathersRe"},"content":"     * Creates a todo task and adds it to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":112,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName task name of the todo","lastModifiedDate":"2024-03-08"},{"lineNumber":113,"author":{"gitId":"FeathersRe"},"content":"     * @param sendPrintOut boolean to indicate whether a success message should be sent upon method completion","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"FeathersRe"},"content":"     * @param setDone boolean to indicate whether to set the status of the todo object to done upon creation","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"FeathersRe"},"content":"    public void createTodo(String taskName, boolean sendPrintOut, boolean setDone) {","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"FeathersRe"},"content":"        Todo newTodo \u003d new Todo(taskName);","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"FeathersRe"},"content":"        if (setDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"FeathersRe"},"content":"            newTodo.setDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"FeathersRe"},"content":"        addTask(newTodo, sendPrintOut);","lastModifiedDate":"2024-03-08"},{"lineNumber":122,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":125,"author":{"gitId":"FeathersRe"},"content":"     * Creates a deadline task and adds it to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":126,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName task name of the deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":127,"author":{"gitId":"FeathersRe"},"content":"     * @param taskDeadline due date of the deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":128,"author":{"gitId":"FeathersRe"},"content":"     * @param sendPrintOut boolean to indicate whether a success message should be sent upon method completion","lastModifiedDate":"2024-03-08"},{"lineNumber":129,"author":{"gitId":"FeathersRe"},"content":"     * @param setDone boolean to indicate whether to set the status of the deadline object to done upon creation","lastModifiedDate":"2024-03-08"},{"lineNumber":130,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":131,"author":{"gitId":"FeathersRe"},"content":"    public void createDeadline(String taskName, String taskDeadline, boolean sendPrintOut, boolean setDone) {","lastModifiedDate":"2024-03-08"},{"lineNumber":132,"author":{"gitId":"FeathersRe"},"content":"        Deadline newDeadline \u003d new Deadline(taskName,taskDeadline);","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"FeathersRe"},"content":"        if (setDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"FeathersRe"},"content":"            newDeadline.setDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"FeathersRe"},"content":"        addTask(newDeadline, sendPrintOut);","lastModifiedDate":"2024-03-08"},{"lineNumber":137,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":140,"author":{"gitId":"FeathersRe"},"content":"     * Creates an event task and adds it to the task list.","lastModifiedDate":"2024-03-08"},{"lineNumber":141,"author":{"gitId":"FeathersRe"},"content":"     * @param taskName task name of the event","lastModifiedDate":"2024-03-08"},{"lineNumber":142,"author":{"gitId":"FeathersRe"},"content":"     * @param fromDate from date of the event","lastModifiedDate":"2024-03-08"},{"lineNumber":143,"author":{"gitId":"FeathersRe"},"content":"     * @param toDate to date of the event","lastModifiedDate":"2024-03-08"},{"lineNumber":144,"author":{"gitId":"FeathersRe"},"content":"     * @param sendPrintOut boolean to indicate whether a success message should be sent upon method completion","lastModifiedDate":"2024-03-08"},{"lineNumber":145,"author":{"gitId":"FeathersRe"},"content":"     * @param setDone boolean to indicate whether to set the status of the deadline object to done upon creation","lastModifiedDate":"2024-03-08"},{"lineNumber":146,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":147,"author":{"gitId":"FeathersRe"},"content":"    public void createEvent(String taskName, String fromDate, String toDate, boolean sendPrintOut, boolean setDone) {","lastModifiedDate":"2024-03-08"},{"lineNumber":148,"author":{"gitId":"FeathersRe"},"content":"        Event newEvent \u003d new Event(taskName, fromDate, toDate);","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"FeathersRe"},"content":"        if (setDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"FeathersRe"},"content":"            newEvent.setDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"FeathersRe"},"content":"        addTask(newEvent, sendPrintOut);","lastModifiedDate":"2024-03-08"},{"lineNumber":153,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":156,"author":{"gitId":"FeathersRe"},"content":"     * Returns a list of tasks with their task names containing the keyword.","lastModifiedDate":"2024-03-08"},{"lineNumber":157,"author":{"gitId":"FeathersRe"},"content":"     * @param keyWord search keyword used to find the task names","lastModifiedDate":"2024-03-08"},{"lineNumber":158,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":159,"author":{"gitId":"FeathersRe"},"content":"    public void findTasks(String keyWord) {","lastModifiedDate":"2024-03-08"},{"lineNumber":160,"author":{"gitId":"FeathersRe"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":161,"author":{"gitId":"FeathersRe"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-08"},{"lineNumber":162,"author":{"gitId":"FeathersRe"},"content":"            if (task.contains(keyWord)) {","lastModifiedDate":"2024-03-08"},{"lineNumber":163,"author":{"gitId":"FeathersRe"},"content":"                System.out.println(count + \".\" + task);","lastModifiedDate":"2024-03-08"},{"lineNumber":164,"author":{"gitId":"FeathersRe"},"content":"                count++;","lastModifiedDate":"2024-03-08"},{"lineNumber":165,"author":{"gitId":"FeathersRe"},"content":"            }","lastModifiedDate":"2024-03-08"},{"lineNumber":166,"author":{"gitId":"FeathersRe"},"content":"        }","lastModifiedDate":"2024-03-08"},{"lineNumber":167,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":168,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":169,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"FeathersRe":169}},{"path":"src/main/java/daisy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"package daisy.ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"import daisy.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"/**","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"FeathersRe"},"content":" * The Ui class handles the program printouts to the user.","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"FeathersRe"},"content":" */","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"FeathersRe"},"content":"public class Ui {","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"FeathersRe"},"content":"    protected static String INTRO_PROMPT \u003d \"Good day! This is Daisy.\\nAny task for today?\";","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"FeathersRe"},"content":"    protected final static String EXIT_PROMPT \u003d \"Ending prompt received. Remember to keep to the deadlines!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"FeathersRe"},"content":"    protected final static String LINE_BREAK \u003d \"____________________________________\";","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"FeathersRe"},"content":"     * Creates a ui instance.","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"    public Ui() {","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"     * Outputs a linebreak.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"FeathersRe"},"content":"    public void setLineBreak() {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"FeathersRe"},"content":"     * Sends intro prompt to the user. This should be executed at the start of the program","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"FeathersRe"},"content":"    public void sendIntro() {","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"FeathersRe"},"content":"        setLineBreak();","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(INTRO_PROMPT);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"FeathersRe"},"content":"        setLineBreak();","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"FeathersRe"},"content":"     * Sends ending prompt to the user. This should be executed at the end of the program.","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"FeathersRe"},"content":"    public void sendExit() {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(EXIT_PROMPT);","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"FeathersRe"},"content":"        setLineBreak();","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"FeathersRe"},"content":"     * Prints out the String representation of a task object. The String is obtained by calling the corresponding toString()","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"FeathersRe"},"content":"     * method of the task object","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"FeathersRe"},"content":"     * @param task task object which require printing","lastModifiedDate":"2024-03-08"},{"lineNumber":49,"author":{"gitId":"FeathersRe"},"content":"     * @see Task","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"FeathersRe"},"content":"    public void printTask(Task task) {","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"FeathersRe"},"content":"     * Prints out the success message for the successful marking of a task.","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"FeathersRe"},"content":"     * @param task task object that is marked","lastModifiedDate":"2024-03-08"},{"lineNumber":58,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"FeathersRe"},"content":"    public void printMarked(Task task) {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Congrats on completing the task!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"FeathersRe"},"content":"        printTask(task);","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":65,"author":{"gitId":"FeathersRe"},"content":"     * Prints out the success message for the successful unmarking of a task.","lastModifiedDate":"2024-03-08"},{"lineNumber":66,"author":{"gitId":"FeathersRe"},"content":"     * @param task task object that is unmarked","lastModifiedDate":"2024-03-08"},{"lineNumber":67,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":68,"author":{"gitId":"FeathersRe"},"content":"    public void printUnmarked(Task task) {","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"More time needed for the following task? Sure!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"FeathersRe"},"content":"        printTask(task);","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":74,"author":{"gitId":"FeathersRe"},"content":"     * Alerts the user on the MissingIndexException","lastModifiedDate":"2024-03-08"},{"lineNumber":75,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.error.MissingIndexException","lastModifiedDate":"2024-03-08"},{"lineNumber":76,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":77,"author":{"gitId":"FeathersRe"},"content":"    public void printIndexMissingError() {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Error! No index detected for this operation. Try again!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":82,"author":{"gitId":"FeathersRe"},"content":"     * Alerts the user on the IllegalFindFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":83,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.error.IllegalFindFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":84,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":85,"author":{"gitId":"FeathersRe"},"content":"    public void printFindMissingError() {","lastModifiedDate":"2024-03-08"},{"lineNumber":86,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Error! No keyword detected for find. Try again!\");","lastModifiedDate":"2024-03-08"},{"lineNumber":87,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-08"},{"lineNumber":88,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":89,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":90,"author":{"gitId":"FeathersRe"},"content":"     * Alerts the user on the IllegalTodoFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":91,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.error.IllegalTodoFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":92,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":93,"author":{"gitId":"FeathersRe"},"content":"    public void printTodoMissingError() {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Error! No event detected for todo. Try again!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":98,"author":{"gitId":"FeathersRe"},"content":"     * Alerts the user on the IllegalDeadlineFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.error.IllegalDeadlineFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":100,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":101,"author":{"gitId":"FeathersRe"},"content":"    public void printDeadlineInputError() {","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Error! Deadline entry is not following format. Try again!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":106,"author":{"gitId":"FeathersRe"},"content":"     * Alerts the user on the IllegalEventFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":107,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.error.IllegalEventFormatException","lastModifiedDate":"2024-03-08"},{"lineNumber":108,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":109,"author":{"gitId":"FeathersRe"},"content":"    public void printEventInputError() {","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Error! Event entry is not following format. Try again!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"FeathersRe"},"content":"    /**","lastModifiedDate":"2024-03-08"},{"lineNumber":114,"author":{"gitId":"FeathersRe"},"content":"     * Alerts the user on the IllegalEntryException","lastModifiedDate":"2024-03-08"},{"lineNumber":115,"author":{"gitId":"FeathersRe"},"content":"     * @see daisy.error.IllegalEntryException","lastModifiedDate":"2024-03-08"},{"lineNumber":116,"author":{"gitId":"FeathersRe"},"content":"     */","lastModifiedDate":"2024-03-08"},{"lineNumber":117,"author":{"gitId":"FeathersRe"},"content":"    public void printInvalidCommandError() {","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"FeathersRe"},"content":"        System.out.println(\"Your input does not match any of my programs! Try again!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"FeathersRe"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"FeathersRe"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"FeathersRe":121}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FeathersRe"},"content":"todo borrow book","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"FeathersRe"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"FeathersRe"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"FeathersRe"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"FeathersRe"},"content":"bye","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"FeathersRe":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"FeathersRe"},"content":"java -classpath ..\\bin Daisy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"FeathersRe"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"FeathersRe"},"content":"pause","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"FeathersRe":3,"-":20}}]
