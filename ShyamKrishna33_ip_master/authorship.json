[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"# Spike project template","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"3. After that, locate the `src/main/java/Spike.java` file, right-click it, and choose `Run Spike.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShyamKrishna33":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"# SPIKE User Guide","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"Welcome to **SPIKE!** - Your personal chatbot designed to help you manage tasks efficiently, including to-dos, deadlines, and events.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"### Add Task","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"You can add three types of tasks:","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"1. To-dos","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"2. Deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"3. Events","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"Each task type helps you categorize tasks for better organization.","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"### List tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"Display all tasks, including to-dos, deadlines, and events, with their status (completed or pending) and additional information like timeframe and deadline timing.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"### Mark Task as Done","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"Mark any task as completed based on its list number to track progress effectively.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"### Mark Task as Incomplete","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"Restore any completed task to pending status based on its list number for easy task management.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"### Delete Task","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"Remove tasks that are no longer needed or were added by mistake.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"### Find tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"Search for tasks by keywords to quickly find specific tasks in your list. This feature helps you find tasks and know their deadlines, timeframes, and indices for marking or unmarking.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"### Save Data","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"ShyamKrishna33"},"content":"All tasks are automatically saved and loaded when you start the program again.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"ShyamKrishna33"},"content":"## Getting Started","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"ShyamKrishna33"},"content":"### Prerequisites","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"ShyamKrishna33"},"content":"Make sure you have Java 11 or later installed on your computer.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"ShyamKrishna33"},"content":"### Installation","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"ShyamKrishna33"},"content":"1. Download the latest release of SPIKE from the releases page.","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"ShyamKrishna33"},"content":"2. Extract the downloaded zip file to a folder on your computer.","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"ShyamKrishna33"},"content":"3. Navigate to the folder where you extracted the zip file and open a terminal.","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"ShyamKrishna33"},"content":"4. Run the following command to start the SPIKE application:","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"ShyamKrishna33"},"content":"    ```bash","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"ShyamKrishna33"},"content":"    java -jar SPIKE.jar","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"ShyamKrishna33"},"content":"If the application starts successfully, it will display the following welcome message:","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"ShyamKrishna33"},"content":"```plaintext","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"ShyamKrishna33"},"content":"-----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"ShyamKrishna33"},"content":"     Hello, I\u0027m SPIKE","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"ShyamKrishna33"},"content":"     What can I do for you?","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"ShyamKrishna33"},"content":"-----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"ShyamKrishna33"},"content":"## Usage","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"ShyamKrishna33"},"content":"### `todo` - Add a To-do Task","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"ShyamKrishna33"},"content":"Adds a simple task with no additional informatiom","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"ShyamKrishna33"},"content":"      todo Clean the Room","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"ShyamKrishna33"},"content":"         Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"ShyamKrishna33"},"content":"         [T][ ] Clean the Room","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"ShyamKrishna33"},"content":"         Now you have 1 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"ShyamKrishna33"},"content":"### `deadline` - Add a Deadline Task","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"ShyamKrishna33"},"content":"Adds a task to complete it by specific deadline","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"ShyamKrishna33"},"content":"      deadline Submit Assignment /by Mar 23","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"ShyamKrishna33"},"content":"         Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"ShyamKrishna33"},"content":"         [D][ ] Submit Assignment (by: Mar 23)","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"ShyamKrishna33"},"content":"         Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"ShyamKrishna33"},"content":"### `event` - Add a Event Task","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"ShyamKrishna33"},"content":"Adds a task with specific date and time.","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"ShyamKrishna33"},"content":"      event Project Meeting /from Sunday 5pm /to 7pm","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"ShyamKrishna33"},"content":"         Got it. I\u0027ve added this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"ShyamKrishna33"},"content":"         [E][ ] Project Meeting (from: Sunday 5pm to: 7pm)","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"ShyamKrishna33"},"content":"         Now you have 3 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"ShyamKrishna33"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"ShyamKrishna33"},"content":"Display all of your tasks, including To-dos, Deadlines and Events along with their status (completed or pending) and their deadline or timeframe.","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"ShyamKrishna33"},"content":"      list","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"ShyamKrishna33"},"content":"         Here are the tasks in your list:","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"ShyamKrishna33"},"content":"         1.[T][ ] Clean the Room","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"ShyamKrishna33"},"content":"         2.[D][ ] Submit Assignment (by: Mar 23)","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"ShyamKrishna33"},"content":"         3.[E][ ] Project Meeting (from: Sunday 5pm to: 7pm)","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"ShyamKrishna33"},"content":"### `mark` - Mark Task as Completed","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"ShyamKrishna33"},"content":"Marks a specific Task as completed based on the list number provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"ShyamKrishna33"},"content":"      mark 2","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"ShyamKrishna33"},"content":"         Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"ShyamKrishna33"},"content":"         [D][X] Submit Assignment (by: Mar 23)","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"ShyamKrishna33"},"content":"### `unmark` - Mark Completed Task as not done","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"ShyamKrishna33"},"content":"Unmarks a specific Task based on the list number provided. It helps to revert the task status to not completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"ShyamKrishna33"},"content":"      unmark 2","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"ShyamKrishna33"},"content":"         OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"ShyamKrishna33"},"content":"         [D][ ] Submit Assignment (by: Mar 23)","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"ShyamKrishna33"},"content":"### `delete` - Remove a Task","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"ShyamKrishna33"},"content":"Removes a specific task from the list based on the list number provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"ShyamKrishna33"},"content":"      delete 1","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"ShyamKrishna33"},"content":"         Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"ShyamKrishna33"},"content":"         [T][ ] Clean the Room","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"ShyamKrishna33"},"content":"         Now you have 2 tasks in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"ShyamKrishna33"},"content":"### `find` - Find tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"ShyamKrishna33"},"content":"Search for tasks using keywords to quickly find specific tasks in the filtered list.","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"ShyamKrishna33"},"content":"      find Project","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"ShyamKrishna33"},"content":"      Here are the matching tasks in your list:","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"ShyamKrishna33"},"content":"      1.[T][ ] Project Meeting (from: Sunday 5pm to: 7pm) ","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"ShyamKrishna33"},"content":"### `bye` - Exit the Program","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"ShyamKrishna33"},"content":"Exits from the chatbot.","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"ShyamKrishna33"},"content":"**Example of usage:**","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"ShyamKrishna33"},"content":"      bye","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"ShyamKrishna33"},"content":"**Expected Outcome:**","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"ShyamKrishna33"},"content":"         Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"ShyamKrishna33"},"content":"      -----------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"ShyamKrishna33"},"content":"### User Commands:","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"ShyamKrishna33"},"content":"| Name | Format | Command Example                                                      |","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"ShyamKrishna33"},"content":"|--|--|----------------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"ShyamKrishna33"},"content":"| Todo | todo [name]  | todo Clean the Room                                                  |","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"ShyamKrishna33"},"content":"| Deadline | deadline [name] /by [DD/MM/YYYY HH:MM] | deadline Submit Assignment (by: Mar 23)                       |","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"ShyamKrishna33"},"content":"| Event| deadline [name] /from [DD/MM/YYYY HH:MM] /to [DD/MM/YYYY HH:MM] | event Project Meeting (from: Sunday 5pm to: 7pm) |","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"ShyamKrishna33"},"content":"| List | list  | list                                                                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"ShyamKrishna33"},"content":"| Mark |mark [task index]  | mark 2                                                               |","lastModifiedDate":"2024-03-07"},{"lineNumber":187,"author":{"gitId":"ShyamKrishna33"},"content":"| Unmark | unmark [task index]  | unmark 2                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"ShyamKrishna33"},"content":"| Delete | delete [task index] | delete 1                                                             |","lastModifiedDate":"2024-03-07"},{"lineNumber":189,"author":{"gitId":"ShyamKrishna33"},"content":"| Find | find [keyword] | find muscle                                                          |","lastModifiedDate":"2024-03-07"},{"lineNumber":190,"author":{"gitId":"ShyamKrishna33"},"content":"| Exit | bye  | bye                                                                  |","lastModifiedDate":"2024-03-07"},{"lineNumber":191,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":192,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":193,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"ShyamKrishna33":176,"-":17}},{"path":"src/main/java/Spike.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"import commandhandler.TaskList;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.IncorrectFormatException;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.TaskNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.ArgumentNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.CommandNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"import userinterface.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"public class Spike {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"    private static TaskList Tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ShyamKrishna33"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayWelcomeMsg();","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"ShyamKrishna33"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"        while (true) {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ShyamKrishna33"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"                startChatbot(in);","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"                ui.displayByeMsg();","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"            } catch (CommandNotFoundException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"                System.out.println(\"Command Not Found! Please Try Again\");","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ShyamKrishna33"},"content":"            } catch (ArgumentNotFoundException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"                System.out.println(\"Argument Not Found! Please Try Again\");","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"ShyamKrishna33"},"content":"            } catch (TaskNotFoundException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ShyamKrishna33"},"content":"                System.out.println(\"Task Not Found! Please Try Again\");","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ShyamKrishna33"},"content":"            } catch (IncorrectFormatException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"ShyamKrishna33"},"content":"                System.out.println(\"Incorrect Format! Please Try Again\");","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"ShyamKrishna33"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ShyamKrishna33"},"content":"                System.out.println(\"Something went wrong with the storage!\");","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"ShyamKrishna33"},"content":"                ui.displayByeMsg();","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"ShyamKrishna33"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ShyamKrishna33"},"content":"    private static void startChatbot(Scanner in)","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"ShyamKrishna33"},"content":"            throws CommandNotFoundException, ArgumentNotFoundException, TaskNotFoundException, IOException, IncorrectFormatException {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"ShyamKrishna33"},"content":"        Tasks \u003d new TaskList();","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"ShyamKrishna33"},"content":"        outerLoop:","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"ShyamKrishna33"},"content":"        while (true) {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ShyamKrishna33"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ShyamKrishna33"},"content":"            switch (input.split(\" \")[0]) {","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"list\":","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.printList();","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"find\":","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.printMatchingList(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.processMark(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.processUnmark(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.processTodo(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.processDeadline(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"event\":","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.processEvent(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ShyamKrishna33"},"content":"                Tasks.processDelete(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ShyamKrishna33"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"ShyamKrishna33"},"content":"                break outerLoop;","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"ShyamKrishna33"},"content":"            default:","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"ShyamKrishna33"},"content":"                throw new CommandNotFoundException();","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"ShyamKrishna33"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"ShyamKrishna33"},"content":"            Tasks.updateTaskList();","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ShyamKrishna33":83,"-":1}},{"path":"src/main/java/commandhandler/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package commandhandler;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.ArgumentNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.IncorrectFormatException;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.TaskNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"import parser.Parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"import storage.DataHandler;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Todo;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"import userinterface.Ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":" * The CommandHandler.TaskList class manages a list of tasks and provides methods to","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"ShyamKrishna33"},"content":" * process various user commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"public class TaskList{","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ShyamKrishna33"},"content":"    private final ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"    public TaskList() throws IOException {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"        // Read the data from the file and store it in the taskArray","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"ShyamKrishna33"},"content":"        this.taskArray \u003d DataHandler.readFileContents(DataHandler.FILE_PATH);","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"     *  Processes and initiate the command to delete a task from the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"ShyamKrishna33"},"content":"    public void processDelete(String input) {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"ShyamKrishna33"},"content":"        int indexDelete \u003d parser.getIndexDelete(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayDeleteMsg(taskArray.get(indexDelete), taskArray.size());","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"ShyamKrishna33"},"content":"        taskArray.remove(indexDelete);","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"ShyamKrishna33"},"content":"     *  Processes and initiate the command to add an Event to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"ShyamKrishna33"},"content":"    public void processEvent(String input) throws ArgumentNotFoundException, IncorrectFormatException {","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"ShyamKrishna33"},"content":"        Task newEvent \u003d new Todo(parser.parseEvent(input));","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ShyamKrishna33"},"content":"        taskArray.add(newEvent);","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayAcknowledgement(newEvent, taskArray.size());","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"ShyamKrishna33"},"content":"     *  Processes and initiate the command to add a Deadline to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"ShyamKrishna33"},"content":"    public void processDeadline(String input) throws ArgumentNotFoundException, IncorrectFormatException {","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"ShyamKrishna33"},"content":"        Task newDeadline \u003d new Todo(parser.parseDeadline(input));","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"ShyamKrishna33"},"content":"        taskArray.add(newDeadline);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayAcknowledgement(newDeadline, taskArray.size());","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"ShyamKrishna33"},"content":"     *  Processes and initiate the command to add a Todo to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"ShyamKrishna33"},"content":"    public void processTodo(String input) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"ShyamKrishna33"},"content":"        Task newTodo \u003d new Todo(parser.parseTodo(input));","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"ShyamKrishna33"},"content":"        taskArray.add(newTodo);","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayAcknowledgement(newTodo, taskArray.size());","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"ShyamKrishna33"},"content":"     *  Processes and initiate the command to mark a task as","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"ShyamKrishna33"},"content":"     *  not done in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"ShyamKrishna33"},"content":"    public void processUnmark(String input) throws ArgumentNotFoundException, TaskNotFoundException {","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"ShyamKrishna33"},"content":"        int indexUnmark \u003d parser.getIndexUnmark(taskArray, input);","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"ShyamKrishna33"},"content":"        taskArray.get(indexUnmark).setDone(false);","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayUnmarkMsg(indexUnmark, taskArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"ShyamKrishna33"},"content":"     *  Processes and initiate the command to mark a task as","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"ShyamKrishna33"},"content":"     *  done in the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"ShyamKrishna33"},"content":"    public void processMark(String input) throws ArgumentNotFoundException, TaskNotFoundException {","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"ShyamKrishna33"},"content":"        int indexMark \u003d parser.getIndexMark(taskArray, input);","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"ShyamKrishna33"},"content":"        taskArray.get(indexMark).setDone(true);","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayMarkMsg(indexMark, taskArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"ShyamKrishna33"},"content":"    public void printList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayList(taskArray, false);","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"ShyamKrishna33"},"content":"    public void printMatchingList(String input) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"ShyamKrishna33"},"content":"        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"ShyamKrishna33"},"content":"        String matchString \u003d parser.parseFind(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"ShyamKrishna33"},"content":"        for(Task t : taskArray){","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"ShyamKrishna33"},"content":"            if(t.description.contains(matchString)){","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"ShyamKrishna33"},"content":"                matchingList.add(t);","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"ShyamKrishna33"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"ShyamKrishna33"},"content":"        ui.displayList(matchingList, true);","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"ShyamKrishna33"},"content":"    public void updateTaskList() throws IOException {","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"ShyamKrishna33"},"content":"        // Writes the taskArray to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"ShyamKrishna33"},"content":"        DataHandler.tasksToFile(taskArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"ShyamKrishna33":104}},{"path":"src/main/java/exceptions/ArgumentNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":" * This exception deals with the case when a parameter is expected","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":" * for a specific command but not received.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"public class ArgumentNotFoundException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ShyamKrishna33":8}},{"path":"src/main/java/exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"public class CommandNotFoundException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"    public CommandNotFoundException(){ }","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ShyamKrishna33":5}},{"path":"src/main/java/exceptions/IncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"public class IncorrectFormatException extends Exception{","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"ShyamKrishna33":4}},{"path":"src/main/java/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package exceptions;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"public class TaskNotFoundException extends Exception{","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ShyamKrishna33":4}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package parser;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.ArgumentNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.IncorrectFormatException;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"import exceptions.TaskNotFoundException;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":" * The Parser.Parser class provides methods for parsing user input related to task commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"public class Parser {","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int MARK_TASK_INDEX \u003d 5;","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int UNMARK_TASK_INDEX \u003d 7;","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int EVENT_TASK_INDEX \u003d 6;","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int DEADLINE_TASK_INDEX \u003d 9;","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int TODO_TASK_INDEX \u003d 5;","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int DELETE_TASK_INDEX \u003d 7;","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final int FIND_TASK_INDEX \u003d 5;","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"ShyamKrishna33"},"content":"     * Parses an Event from the given input string.","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param input the input string containing the event task information","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return a formatted string representation of the parsed event task","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws ArgumentNotFoundException if the required arguments are not found in the input","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"ShyamKrishna33"},"content":"    public String parseEvent(String input) throws ArgumentNotFoundException, IncorrectFormatException {","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"ShyamKrishna33"},"content":"        if (EVENT_TASK_INDEX \u003e input.length()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"ShyamKrishna33"},"content":"        String event \u003d input.substring(EVENT_TASK_INDEX);","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"ShyamKrishna33"},"content":"        String[] parts \u003d event.split(\" /from \");","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"ShyamKrishna33"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"ShyamKrishna33"},"content":"        String[] time \u003d parts[1].split(\" /to \");","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"ShyamKrishna33"},"content":"        if (time.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"ShyamKrishna33"},"content":"        return parts[0] + \" (from: \" + time[0] + \" to: \" + time[1] + \")\";","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"ShyamKrishna33"},"content":"     * Parses a Deadline from the given input string.","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param input the input string containing the deadline task information","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return a formatted string representation of the parsed deadline task","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws ArgumentNotFoundException if the required arguments are not found in the input","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"ShyamKrishna33"},"content":"    public String parseDeadline(String input) throws ArgumentNotFoundException, IncorrectFormatException {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"ShyamKrishna33"},"content":"        if (DEADLINE_TASK_INDEX \u003e input.length()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ShyamKrishna33"},"content":"        String deadline \u003d input.substring(DEADLINE_TASK_INDEX);","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"ShyamKrishna33"},"content":"        String[] parts \u003d deadline.split(\" /by \");","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"ShyamKrishna33"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"ShyamKrishna33"},"content":"        return parts[0] + \" (by: \" + parts[1] + \")\";","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"ShyamKrishna33"},"content":"     * Parses a Todo from the given input string.","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param input the input string containing the todo task information","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return a formatted string representation of the parsed todo task","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws ArgumentNotFoundException if the required arguments are not found in the input","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"ShyamKrishna33"},"content":"    public String parseTodo(String input) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"ShyamKrishna33"},"content":"        if (TODO_TASK_INDEX \u003e input.length()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"ShyamKrishna33"},"content":"        return input.substring(TODO_TASK_INDEX);","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ShyamKrishna33"},"content":"    public String parseFind(String input) {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"ShyamKrishna33"},"content":"        return input.substring(FIND_TASK_INDEX);","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"ShyamKrishna33"},"content":"     * Gets the index of the task to mark as done from the input string.","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param inputList the list of task objects","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param input     the input string containing the index of the task to mark as done","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return the index of the task to mark as done","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws ArgumentNotFoundException if the required arguments are not found in the input","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws TaskNotFoundException     if the specified task index is out of bounds","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"ShyamKrishna33"},"content":"    public int getIndexMark(ArrayList\u003cTask\u003e inputList, String input) throws ArgumentNotFoundException, TaskNotFoundException {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"ShyamKrishna33"},"content":"        if (MARK_TASK_INDEX \u003e input.length()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ShyamKrishna33"},"content":"        int indexMark \u003d Integer.parseInt(input.substring(MARK_TASK_INDEX)) - 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"ShyamKrishna33"},"content":"        if (indexMark \u003c 0 || indexMark \u003e\u003d inputList.size() || inputList.get(indexMark) \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"ShyamKrishna33"},"content":"        return indexMark;","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"ShyamKrishna33"},"content":"     * Gets the index of the task to mark as not done from the input string.","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param inputList the list of task objects","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param input     the input string containing the index of the task to unmark as undone","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return the index of the task to unmark as undone","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws ArgumentNotFoundException if the required arguments are not found in the input","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws TaskNotFoundException     if the specified task index is out of bounds","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"ShyamKrishna33"},"content":"    public int getIndexUnmark(ArrayList\u003cTask\u003e inputList, String input) throws ArgumentNotFoundException, TaskNotFoundException {","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"ShyamKrishna33"},"content":"        if (UNMARK_TASK_INDEX \u003e input.length()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new ArgumentNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":121,"author":{"gitId":"ShyamKrishna33"},"content":"        int indexUnmark \u003d Integer.parseInt(input.substring(UNMARK_TASK_INDEX)) - 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":122,"author":{"gitId":"ShyamKrishna33"},"content":"        if (indexUnmark \u003c 0 || indexUnmark \u003e\u003d inputList.size() || inputList.get(indexUnmark) \u003d\u003d null) {","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"ShyamKrishna33"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"ShyamKrishna33"},"content":"        return indexUnmark;","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"ShyamKrishna33"},"content":"     * Gets the index of the task to delete from the input string.","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param input the input string containing the index of the task to delete","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return the index of the task to delete","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"ShyamKrishna33"},"content":"    public int getIndexDelete(String input) {","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"ShyamKrishna33"},"content":"        return Integer.parseInt(input.substring(DELETE_TASK_INDEX)) - 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"ShyamKrishna33":138}},{"path":"src/main/java/storage/DataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Todo;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"import java.io.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"import java.nio.file.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":" * The Storage.DataHandler class provides methods for reading and writing task data to a file.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"public class DataHandler {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final String FILE_PATH \u003d \"./data/data.txt\";","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"ShyamKrishna33"},"content":"     * Appends the specified text to the file at the given path.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param textToAdd the text to add to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"    private static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"ShyamKrishna33"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"        fw.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"ShyamKrishna33"},"content":"     * Writes the given list of tasks to the file.","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param taskList the list of task objects to write to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"ShyamKrishna33"},"content":"    public static void tasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ShyamKrishna33"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ShyamKrishna33"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ShyamKrishna33"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ShyamKrishna33"},"content":"            if (task \u003d\u003d null) break;","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ShyamKrishna33"},"content":"            String stringToWrite \u003d task.getBadge() + \",\" + (task.getStatusIcon().equals(\"X\") ? 1 : 0)","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ShyamKrishna33"},"content":"                    + \",\" + task.description + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ShyamKrishna33"},"content":"            writeToFile(stringToWrite);","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"ShyamKrishna33"},"content":"    private static void createDataFolderIfNotExists() throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"ShyamKrishna33"},"content":"        Path dataFolderPath \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"ShyamKrishna33"},"content":"        if (!Files.exists(dataFolderPath)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"ShyamKrishna33"},"content":"            Files.createDirectories(dataFolderPath);","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"ShyamKrishna33"},"content":"     * Reads the contents of the specified file and returns a list of task objects.","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param filePath the path of the file to read","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return an ArrayList of Task objects read from the file","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"ShyamKrishna33"},"content":"     * @throws IOException if an I/O error occurs while reading the file","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"ShyamKrishna33"},"content":"    public static ArrayList\u003cTask\u003e readFileContents(String filePath) throws IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ShyamKrishna33"},"content":"        createDataFolderIfNotExists();","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"ShyamKrishna33"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ShyamKrishna33"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"ShyamKrishna33"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"ShyamKrishna33"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ShyamKrishna33"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"ShyamKrishna33"},"content":"        for (int i \u003d 0; s.hasNext(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ShyamKrishna33"},"content":"            taskList.add(processData(s.nextLine()));","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ShyamKrishna33"},"content":"        return taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"ShyamKrishna33"},"content":"     * Processes a string containing task information and returns the corresponding Task object.","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"ShyamKrishna33"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"ShyamKrishna33"},"content":"     * @param s the string containing task information","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"ShyamKrishna33"},"content":"     * @return a Task object representing the processed task information","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"ShyamKrishna33"},"content":"    private static Task processData(String s) {","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"ShyamKrishna33"},"content":"        String[] taskInfo \u003d s.split(\",\");","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ShyamKrishna33"},"content":"        String badge \u003d taskInfo[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"ShyamKrishna33"},"content":"        switch (badge) {","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"ShyamKrishna33"},"content":"        case \"T\":","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ShyamKrishna33"},"content":"            Todo todoObj \u003d new Todo(taskInfo[2]);","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ShyamKrishna33"},"content":"            if (taskInfo[1].equals(\"1\")) todoObj.setDone(true);","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ShyamKrishna33"},"content":"            return todoObj;","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ShyamKrishna33"},"content":"        case \"D\":","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ShyamKrishna33"},"content":"            Deadline deadlineObj \u003d new Deadline(taskInfo[2]);","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ShyamKrishna33"},"content":"            if (taskInfo[1].equals(\"1\")) deadlineObj.setDone(true);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ShyamKrishna33"},"content":"            return deadlineObj;","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ShyamKrishna33"},"content":"        case \"E\":","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ShyamKrishna33"},"content":"            Event eventObj \u003d new Event(taskInfo[2]);","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ShyamKrishna33"},"content":"            if (taskInfo[1].equals(\"1\")) eventObj.setDone(true);","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ShyamKrishna33"},"content":"            return eventObj;","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ShyamKrishna33"},"content":"        return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"ShyamKrishna33":102}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"    /** BADGE is the symbol representing each type of subtask */","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"    private final static char BADGE \u003d \u0027D\u0027;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"    public char getBadge() {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"        return BADGE;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"    public Deadline(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ShyamKrishna33":16}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"    /** BADGE is the symbol representing each type of subtask */","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"    private final static char BADGE \u003d \u0027E\u0027;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"    public char getBadge() {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"        return BADGE;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"    public Event(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ShyamKrishna33":15}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":" * The Task class represents a task with a description and completion status.","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":" * It serves as a base class for different subtasks such as Todo, Deadline, and Event.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"    public String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"    /** BADGE is the symbol representing each type of subtask */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"    private final static char BADGE \u003d \u0027X\u0027;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ShyamKrishna33"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ShyamKrishna33"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"    public char getBadge() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"        return BADGE;","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ShyamKrishna33":30}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package tasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"    /** BADGE is the symbol representing each type of subtask */","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"    private final static char BADGE \u003d \u0027T\u0027;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"    public char getBadge() {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"        return BADGE;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ShyamKrishna33":15}},{"path":"src/main/java/userinterface/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShyamKrishna33"},"content":"package userinterface;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"ShyamKrishna33"},"content":"import tasks.Todo;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"ShyamKrishna33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"ShyamKrishna33"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"ShyamKrishna33"},"content":" * The UserInterface.Ui class handles user interface-related operations for the chatbot.","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"ShyamKrishna33"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"ShyamKrishna33"},"content":"public class Ui {","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"ShyamKrishna33"},"content":"    private static final String CHATBOT \u003d \"Spike\";","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"ShyamKrishna33"},"content":"    public static final String DIVIDER \u003d \"_________________________________________________\";","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"ShyamKrishna33"},"content":"     * Prints the task list in the order with the Badge, Status","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"ShyamKrishna33"},"content":"     * and the Description for each task.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayList(ArrayList\u003cTask\u003e inputList, boolean matching) {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"ShyamKrishna33"},"content":"        if (matching) {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ShyamKrishna33"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ShyamKrishna33"},"content":"        } else {","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ShyamKrishna33"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"ShyamKrishna33"},"content":"        for (int i \u003d 0; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"ShyamKrishna33"},"content":"            Task value \u003d inputList.get(i);","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"ShyamKrishna33"},"content":"            if (value \u003d\u003d null) {","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"ShyamKrishna33"},"content":"                break;","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"ShyamKrishna33"},"content":"            }","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"ShyamKrishna33"},"content":"            char badge \u003d getBadge(value);","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"ShyamKrishna33"},"content":"            System.out.println((i + 1) + \".[\" + badge + \"]\"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"ShyamKrishna33"},"content":"                    + \"[\" + value.getStatusIcon() + \"] \" + value.description);","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"ShyamKrishna33"},"content":"    private char getBadge(Task value) {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"ShyamKrishna33"},"content":"        char badge \u003d \u0027 \u0027;","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"ShyamKrishna33"},"content":"        if (value instanceof Todo) {","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"ShyamKrishna33"},"content":"            badge \u003d ((Todo) value).getBadge();","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"ShyamKrishna33"},"content":"        } else if (value instanceof Deadline) {","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"ShyamKrishna33"},"content":"            badge \u003d ((Deadline) value).getBadge();","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"ShyamKrishna33"},"content":"        } else if (value instanceof Event) {","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"ShyamKrishna33"},"content":"            badge \u003d ((Event) value).getBadge();","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"ShyamKrishna33"},"content":"        }","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"ShyamKrishna33"},"content":"        return badge;","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"ShyamKrishna33"},"content":"     * Prints a message stating that the intended task has been unmarked.","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"ShyamKrishna33"},"content":"     * It also prints the structure of the updated task.","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayUnmarkMsg(int index, ArrayList\u003cTask\u003e inputList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"ShyamKrishna33"},"content":"        char badge \u003d getBadge(inputList.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":62,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println((index + 1) + \".[\" + badge + \"]\" + \"[ ] \"","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"ShyamKrishna33"},"content":"                + inputList.get(index).description);","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"ShyamKrishna33"},"content":"     * Prints a message stating that the intended task has been marked.","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"ShyamKrishna33"},"content":"     * It also prints the structure of the updated task.","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayMarkMsg(int index, ArrayList\u003cTask\u003e inputList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"ShyamKrishna33"},"content":"        char badge \u003d getBadge(inputList.get(index));","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":75,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-02"},{"lineNumber":76,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println((index + 1) + \".[\" + badge + \"]\" + \"[X] \"","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"ShyamKrishna33"},"content":"                + inputList.get(index).description);","lastModifiedDate":"2024-03-02"},{"lineNumber":78,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":79,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":80,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":81,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayByeMsg() {","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":83,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-02"},{"lineNumber":84,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":85,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":86,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":87,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayWelcomeMsg() {","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":89,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"Hello! I\u0027m \" + CHATBOT);","lastModifiedDate":"2024-03-02"},{"lineNumber":90,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2024-03-02"},{"lineNumber":91,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":92,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":93,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":94,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"ShyamKrishna33"},"content":"     * Prints a message stating that the intended task has been deleted.","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"ShyamKrishna33"},"content":"     * It also prints the deleted task.","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayDeleteMsg(Task inputObj, int arrayLength) {","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"ShyamKrishna33"},"content":"        char badge \u003d getBadge(inputObj);","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":102,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"I\u0027ve removed this task:\");","lastModifiedDate":"2024-03-02"},{"lineNumber":103,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\" [\" + badge + \"]\" + \"[\" + inputObj.getStatusIcon()","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"ShyamKrishna33"},"content":"                + \"] \" + inputObj.description);","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"Now you have \" + (arrayLength - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-03-02"},{"lineNumber":106,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":107,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":108,"author":{"gitId":"ShyamKrishna33"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":109,"author":{"gitId":"ShyamKrishna33"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"ShyamKrishna33"},"content":"     * Prints acknowledgement stating that the intended task has been added to the list.","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"ShyamKrishna33"},"content":"     * It also prints the structure of the latest task.","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"ShyamKrishna33"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"ShyamKrishna33"},"content":"    public void displayAcknowledgement(Task inputObj, int arrayLength) {","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"ShyamKrishna33"},"content":"        char badge \u003d getBadge(inputObj);","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":116,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-02"},{"lineNumber":117,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\" [\" + badge + \"]\" + \"[ ] \" + inputObj.description);","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(\"Now you have \" + arrayLength + \" tasks in the list.\");","lastModifiedDate":"2024-03-02"},{"lineNumber":119,"author":{"gitId":"ShyamKrishna33"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-02"},{"lineNumber":120,"author":{"gitId":"ShyamKrishna33"},"content":"    }","lastModifiedDate":"2024-03-02"},{"lineNumber":121,"author":{"gitId":"ShyamKrishna33"},"content":"}","lastModifiedDate":"2024-03-02"}],"authorContributionMap":{"ShyamKrishna33":121}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ShyamKrishna33"},"content":"java -classpath ..\\bin Spike \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShyamKrishna33":1,"-":20}}]
