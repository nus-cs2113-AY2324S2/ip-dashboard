[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"T | 1 | walk the dog","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"D | 0 | walk the cat | 6pm","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"E | 1 | walk the turtle | Monday 4pm-6pm","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"T | 0 | hi","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"wjunjie01":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    public static boolean isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    public Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"            taskList \u003d storage.loadTaskList();","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"    public void run() {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"                String input \u003d Ui.readUserInput();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"                Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"                command.execute(input, taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"                storage.saveTask(taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"                Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"                Ui.printLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"wjunjie01"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"wjunjie01"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"wjunjie01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"wjunjie01"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wjunjie01":47,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"wjunjie01":7}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Exits the program.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     * Change the exit variable to be true, which exits the program.","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"        Duke.isExit \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"wjunjie01":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":" * Abstract class that groups all the commands together.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"     * Executes the command behaviour according to the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"    public abstract void execute(String input, TaskList taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"wjunjie01":16}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Adds a new deadline task to the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    private final String TASK_DESCRIPTION;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    private final String BY;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     * Create and initialise the parsed task and the by date from the parser class.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"     * @param taskDescription","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"     * @param by","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"    public DeadlineCommand(String taskDescription, String by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"        this.TASK_DESCRIPTION \u003d taskDescription;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"        this.BY \u003d by;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"     * Adds a new deadline task to the task list, and prints the changes.","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"        Deadline deadline \u003d new Deadline(TASK_DESCRIPTION, BY);","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"        Ui.printAddTask(TASK_DESCRIPTION, taskList);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" * Removes a task from the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     * Create and initialise task index from parsed task.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     * @param taskIndex","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"        this.TASK_INDEX \u003d taskIndex;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"     * Deletes the corresponding task from the task list according to task index - 1.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     * Prints the changes.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    public void execute (String input, TaskList taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"        Ui.printDeleteTask(TASK_INDEX - 1, taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"        taskList.taskList.remove(TASK_INDEX - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"wjunjie01":33}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Adds a new event task to the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    private final String TASK_DESCRIPTION;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    private final String FROM;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    private final String TO;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     * Create and initialise the parsed task, from and to date from the parser class.","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"     * @param taskDescription","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"     * @param from","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"     * @param to","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"    public EventCommand(String taskDescription, String from, String to) {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"        this.TASK_DESCRIPTION \u003d taskDescription;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"        this.FROM \u003d from;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"        this.TO \u003d to;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"     * Adds a new event task to the task list, and prints the changes.","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"        Event event \u003d new Event(TASK_DESCRIPTION, FROM, TO);","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"        Ui.printAddTask(TASK_DESCRIPTION, taskList);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"    public String description;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"        for (Task task : taskList.taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"            if (task.toString().contains(description)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"                count +\u003d 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"                Ui.printFoundTask(task, count);","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"        Ui.printNotFoundTask(count);","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"wjunjie01":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" * Lists all the task in the task list","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"     * Prints all the tasks in the list by calling the utility class Ui.","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"        if (taskList.taskList.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"            Ui.printListNoTasks();","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"            return;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"        Ui.printListTasks(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"wjunjie01":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" * Marks the corresponding task as done.","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Tasks that are done will display a \u0027[X]\u0027 symbol.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     * Create and initialise task index from parsed task.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     * @param taskIndex","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"        this.TASK_INDEX \u003d taskIndex;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     * Marks the corresponding task as done according to task index - 1.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"     * Prints the changes thereafter.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"        taskList.taskList.get(TASK_INDEX - 1).markTask();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"        Ui.printMarkTask(TASK_INDEX - 1, taskList);","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":34}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Adds a new todo task to the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    public static final int BEGIN_TODO_INDEX \u003d 5;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     * Adds a new todo task to the task list and prints the changes.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"        String taskDescription \u003d input.substring(BEGIN_TODO_INDEX);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"        taskList.addTask(new Todo(taskDescription));","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"        Ui.printAddTask(taskDescription, taskList);","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"wjunjie01":25}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" * Marks the corresponding task as not done.","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Tasks that are not done will display a \u0027[ ]\u0027 symbol.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    private final int TASK_INDEX;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     * Create and initialise task index from parsed task.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     * @param taskIndex","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"        this.TASK_INDEX \u003d taskIndex;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     * Marks the corresponding task as not done according to task index - 1.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"     * Prints the changes thereafter.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    public void execute(String input, TaskList taskList) {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"        taskList.taskList.get(TASK_INDEX - 1).unmarkTask();","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"        Ui.printUnmarkTask(TASK_INDEX - 1, taskList);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":33}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * Parser class parses the inputs provided by the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" * Matches it to the corresponding command to be executed.","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    public static final int BEGIN_DEADLINE_INDEX \u003d 9;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    public static final int BEGIN_EVENT_INDEX \u003d 6;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"     * Parses input provided by the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"     * Matches it to the appropriate parser method / command.","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"     * And throws an error if there is any error in the inputs.","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"    public static Command parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"        String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"        switch (firstWord) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"            return parseMarkTask(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"            return parseUnmarkTask(input, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"        case \"list\":","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"            return parseTodoTask(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"wjunjie01"},"content":"            return parseDeadlineTask(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"wjunjie01"},"content":"        case \"event\":","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"wjunjie01"},"content":"            return parseEventTask(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"wjunjie01"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"wjunjie01"},"content":"            return parseDeleteTask(input, taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"wjunjie01"},"content":"        case \"find\":","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"wjunjie01"},"content":"            return parseFindTask(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"wjunjie01"},"content":"        default:","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Not a valid command!!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the find function to check for errors","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"wjunjie01"},"content":"     * Returns the find command to find the keyword in the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseFindTask(String input) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"wjunjie01"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"wjunjie01"},"content":"        if (inputArray[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"You must specify a keyword to find! \"","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: find [keyword]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"wjunjie01"},"content":"        return new FindCommand(inputArray[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the delete function to check for errors.","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"wjunjie01"},"content":"     * Returns the delete command to be executed with the task index to be deleted.","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseDeleteTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"wjunjie01"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"wjunjie01"},"content":"        int taskIndex;","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"wjunjie01"},"content":"        if (inputArray.length \u003c 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Please specify a VALID task number to delete! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: mark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"wjunjie01"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"wjunjie01"},"content":"            taskIndex \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"wjunjie01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Task number must be in integer! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: delete [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"wjunjie01"},"content":"        if ((taskIndex \u003e taskList.taskList.size()) || (taskIndex \u003c\u003d 0)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Please specify a task number that is within the list! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: delete [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"wjunjie01"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the mark function to check for errors.","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"wjunjie01"},"content":"     * Returns the mark command to be executed with the task index to be marked.","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseMarkTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"wjunjie01"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"wjunjie01"},"content":"        if (inputArray.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Please specify a task number to mark! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: mark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"wjunjie01"},"content":"        int taskIndex;","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"wjunjie01"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"wjunjie01"},"content":"            taskIndex \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"wjunjie01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Task number must be in integer! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: mark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"wjunjie01"},"content":"        if (taskIndex \u003e taskList.taskList.size() || (taskIndex \u003c\u003d 0)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Please specify a task number that is within the list! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: mark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"wjunjie01"},"content":"        return new MarkCommand(taskIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the unmark function to check for errors.","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"wjunjie01"},"content":"     * Returns the unmark command to be executed with the task index to be unmark.","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseUnmarkTask(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"wjunjie01"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"wjunjie01"},"content":"        if (inputArray.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Please specify a task number to mark! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: unmark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"wjunjie01"},"content":"        int taskIndex;","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"wjunjie01"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"wjunjie01"},"content":"            taskIndex \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"wjunjie01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"duke.task.Task number must be in integer! \"","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: unmark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"wjunjie01"},"content":"        if (taskIndex \u003e taskList.taskList.size() || (taskIndex \u003c\u003d 0)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Please specify a task number that is within the list! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: unmark [task number]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"wjunjie01"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the Todo function to check for errors.","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"wjunjie01"},"content":"     * Returns the Todo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseTodoTask(String input) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"wjunjie01"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Your todo task cannot be empty! Correct usage: todo [name of task]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"wjunjie01"},"content":"        return new TodoCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the deadline function to check for errors.","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"wjunjie01"},"content":"     * Returns the deadline command to be executed with the task and the deadline.","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":191,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":192,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":194,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseDeadlineTask(String input) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":195,"author":{"gitId":"wjunjie01"},"content":"        String taskInformation \u003d input.substring(BEGIN_DEADLINE_INDEX);","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"wjunjie01"},"content":"        String[] taskInfoArray \u003d taskInformation.split(\" /by \");","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"wjunjie01"},"content":"        if (taskInfoArray[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":199,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Your deadline task cannot be empty! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: deadline [name of task] /by [due date]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"wjunjie01"},"content":"        if (taskInfoArray.length \u003c 2) {","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"You deadline task must include the \u0027/by\u0027 keyword! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: deadline [name of task] /by [due date]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"wjunjie01"},"content":"        if (taskInfoArray[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Your deadline cannot be empty! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: deadline [name of task] /by [due date]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"wjunjie01"},"content":"        return new DeadlineCommand(taskInfoArray[0], taskInfoArray[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":216,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":217,"author":{"gitId":"wjunjie01"},"content":"     * Parses the input under the event function to check for errors.","lastModifiedDate":"2024-02-18"},{"lineNumber":218,"author":{"gitId":"wjunjie01"},"content":"     * Returns the event command to be executed with the task, \u0027from\u0027 date and \u0027to\u0027 date.","lastModifiedDate":"2024-02-18"},{"lineNumber":219,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":220,"author":{"gitId":"wjunjie01"},"content":"     * @param input","lastModifiedDate":"2024-02-18"},{"lineNumber":221,"author":{"gitId":"wjunjie01"},"content":"     * @return Command","lastModifiedDate":"2024-02-18"},{"lineNumber":222,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":223,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":224,"author":{"gitId":"wjunjie01"},"content":"    public static Command parseEventTask(String input) throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":225,"author":{"gitId":"wjunjie01"},"content":"        String taskInformation \u003d input.substring(BEGIN_EVENT_INDEX);","lastModifiedDate":"2024-02-05"},{"lineNumber":226,"author":{"gitId":"wjunjie01"},"content":"        String[] fromSplitArray \u003d taskInformation.split(\" /from \");","lastModifiedDate":"2024-02-05"},{"lineNumber":227,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":228,"author":{"gitId":"wjunjie01"},"content":"        if (fromSplitArray.length \u003c 2 || !fromSplitArray[1].contains(\" /to \")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":229,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Your event task must include /from and /to ! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":230,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: event [name of task] /from [start date] /to [end date]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":231,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":232,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":233,"author":{"gitId":"wjunjie01"},"content":"        String[] toSplitArray \u003d fromSplitArray[1].split(\" /to \");","lastModifiedDate":"2024-02-05"},{"lineNumber":234,"author":{"gitId":"wjunjie01"},"content":"        String taskDescription \u003d fromSplitArray[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":235,"author":{"gitId":"wjunjie01"},"content":"        String startDate \u003d toSplitArray[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":236,"author":{"gitId":"wjunjie01"},"content":"        String endDate \u003d toSplitArray[1].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":237,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":238,"author":{"gitId":"wjunjie01"},"content":"        if (startDate.isEmpty() || endDate.isEmpty() || taskDescription.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"You have a missing field, in either your task, start date or end date! \"","lastModifiedDate":"2024-02-05"},{"lineNumber":240,"author":{"gitId":"wjunjie01"},"content":"                    + \"Correct usage: event [name of task] /from [start date] /to [end date]\");","lastModifiedDate":"2024-02-23"},{"lineNumber":241,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":242,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":243,"author":{"gitId":"wjunjie01"},"content":"        return new EventCommand(taskDescription, startDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":244,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":245,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"wjunjie01":245}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"import java.io.*;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":" * Class contains methods to load data from an external file,","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":" * and save the data to an external file.","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"public class Storage {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    private String filePath;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"    //Default file path given in main is \"data/duke.txt\"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"     * Loads data from the file specified by the file path.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     * In the absence of the file, creates a new file in the file path.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     * @return TaskList","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    public TaskList loadTaskList() throws IOException, DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"        String line;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"                //Parses the line to extract out the task from the file format","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"                Task task \u003d Task.loadFromFile(line);","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"                taskList.addTask(task);","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"wjunjie01"},"content":"            br.close();","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"wjunjie01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"wjunjie01"},"content":"            //Creates a file if there\u0027s no file found","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"wjunjie01"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"wjunjie01"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"wjunjie01"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"wjunjie01"},"content":"        return taskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"wjunjie01"},"content":"     * Saves the task list to the file.","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"wjunjie01"},"content":"     * @param taskList","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"wjunjie01"},"content":"    public void saveTask(TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"wjunjie01"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"wjunjie01"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"wjunjie01"},"content":"            for (Task task : taskList.taskList) {","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"wjunjie01"},"content":"                //Converts each task to the appropriate file format to be written in the file.","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"wjunjie01"},"content":"                bw.write(task.toFileFormat());","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"wjunjie01"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"wjunjie01"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"wjunjie01"},"content":"            bw.close();","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"wjunjie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Error saving task!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"wjunjie01":71}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":" * Deadline is a type of task that has a description and a deadline","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"    protected String by;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"     * Constructs the deadline class with the description and a by date to complete by","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     * @param description","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"        super(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"     * Returns the format of the deadline task to be printed","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"     * Converts the deadline task into the specific file format to be written","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"        return \"D\" + super.toFileFormat() + \" | \" + by;","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":" * Event is a type of task that has a description and a time frame for it is valid","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"    protected String from;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"    protected String to;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"     * Constructs the event class with the description, from and to dates","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     * @param description","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"        super(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"     * Returns the format of the event task to be printed","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"     * Converts the event task into the specific file format to be written","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"        return \"E\" + super.toFileFormat() + \" | \" + from + \"-\" + to;","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" * The task class is the base superclass for all the task derivatives that follow","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":" * It consists of the basic methods that can be used throughout the task derivative classes","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"     * Constructs the task class with the description and a \"not done\" status","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"      * @param description","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"     * Returns the status of the completion of the task","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"        return (isDone ? \"X\": \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"     * Marks the task as done","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"    public void markTask() {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"wjunjie01"},"content":"     * Marks the task as not done","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"wjunjie01"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"wjunjie01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"wjunjie01"},"content":"     * Returns the format of the task to be printed","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"wjunjie01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"wjunjie01"},"content":"        return \"[\" + getStatus() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"wjunjie01"},"content":"     * Converts the task into the file format to be written","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"wjunjie01"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"wjunjie01"},"content":"        return \" | \" + (this.isDone? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"wjunjie01"},"content":"     * Loads the file\u0027s inputs and categorises into its respective task type","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"wjunjie01"},"content":"     * Returns the task and its type to be added into the task list","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"wjunjie01"},"content":"     * Throws an error if the file format is incorrect","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"wjunjie01"},"content":"     * @param line","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"wjunjie01"},"content":"     * @return Task","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"wjunjie01"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"wjunjie01"},"content":"    public static Task loadFromFile(String line) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"wjunjie01"},"content":"        //splits according to \" | \"","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"wjunjie01"},"content":"        String[] taskDescArray \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"wjunjie01"},"content":"        String taskType \u003d taskDescArray[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"wjunjie01"},"content":"        boolean isDone \u003d taskDescArray[1].equals(\"1\");","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"wjunjie01"},"content":"        String taskDescription \u003d taskDescArray[2];","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"wjunjie01"},"content":"        Task task;","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"wjunjie01"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"wjunjie01"},"content":"        case \"T\":","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"wjunjie01"},"content":"            task \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"wjunjie01"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"wjunjie01"},"content":"        case \"D\":","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"wjunjie01"},"content":"            String by \u003d taskDescArray[3];","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"wjunjie01"},"content":"            task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"wjunjie01"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"wjunjie01"},"content":"        case \"E\":","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"wjunjie01"},"content":"            String eventFromTo \u003d taskDescArray[3];","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"wjunjie01"},"content":"            String[] eventFromToArray \u003d eventFromTo.split(\"-\");","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"wjunjie01"},"content":"            String from \u003d eventFromToArray[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"wjunjie01"},"content":"            String to \u003d eventFromToArray[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"wjunjie01"},"content":"            task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"wjunjie01"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"wjunjie01"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"wjunjie01"},"content":"            throw new DukeException(\"Error file format is incorrect and unable to load! \");","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"wjunjie01"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"wjunjie01"},"content":"            task.markTask();","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"wjunjie01"},"content":"        return task;","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"wjunjie01":108}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":" * TaskList class manages the tasks in the task list","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"public class TaskList {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     * Constructs a new taskList","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"     * Adds a task into the task list ArrayList","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"     * @param task","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"wjunjie01":26}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":" * Todo task is a type of task that only specifies a description","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":"     * Constructs the todo class with the description","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"     * @param description","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"        super(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"     * Returns the format of the todo task to be printed","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"     * Converts the todo task into the specific file format to be written","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"     * @return String","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"    public  String toFileFormat() {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"        return \"T\" + super.toFileFormat();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"wjunjie01":36}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"package duke.ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"wjunjie01"},"content":" * The UI class is in charge of printing the output to the user from all the commands","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"wjunjie01"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"wjunjie01"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"wjunjie01"},"content":"    static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wjunjie01"},"content":"    public static final String LINE \u003d \"---------------\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"wjunjie01"},"content":"    public static final String LOGO \u003d \"       __                 __ \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"wjunjie01"},"content":"            + \"      / /___ _____  ___  / /_\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"wjunjie01"},"content":"            + \" __  / / __ `/ __ \\\\/ _ \\\\/ __/\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"wjunjie01"},"content":"            + \"/ /_/ / /_/ / / / /  __/ /_  \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"wjunjie01"},"content":"            + \"\\\\____/\\\\__,_/_/ /_/\\\\___/\\\\__/  \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"wjunjie01"},"content":"            + \"                             \\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wjunjie01"},"content":"    public static String readUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wjunjie01"},"content":"        return in.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wjunjie01"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"wjunjie01"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"Goodbye! See you again!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"wjunjie01"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"Hi! I\u0027m Janet, your personal assistant.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"What is your request?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"wjunjie01"},"content":"    public static void printListTasks(TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"The tasks in your list are: \");","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"wjunjie01"},"content":"        //Iterates through the task in the task list, gets the task and prints it","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"wjunjie01"},"content":"        for (int i \u003d 0; i \u003c taskList.taskList.size(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"wjunjie01"},"content":"            System.out.println((i + 1) + \".\" + taskList.taskList.get(i).toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"wjunjie01"},"content":"    public static void printListNoTasks() {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"No task in your list, yay!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"wjunjie01"},"content":"    public static void printMarkTask(int taskIndex, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"Well done! This task is now done: \");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"wjunjie01"},"content":"        printTask(taskIndex, taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"wjunjie01"},"content":"    public static void printUnmarkTask(int taskIndex, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"Boo! This task is not done yet! \");","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"wjunjie01"},"content":"        printTask(taskIndex, taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"wjunjie01"},"content":"    private static void printTask(int taskIndex, TaskList taskList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"\\t\" + taskList.taskList.get(taskIndex).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"wjunjie01"},"content":"    public static void printAddTask(String taskDescription, TaskList taskList) {","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"added: \" + taskDescription);","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"You now have \" + taskList.taskList.size() + \" task\"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"wjunjie01"},"content":"                + (taskList.taskList.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"wjunjie01"},"content":"    public static void printDeleteTask(int taskIndex, TaskList taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"Okay, I\u0027ve removed the task\");","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"wjunjie01"},"content":"        printTask(taskIndex, taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(\"You now have \" + (taskList.taskList.size() - 1) + \" task\"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"wjunjie01"},"content":"                + (taskList.taskList.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"wjunjie01"},"content":"    public static void printFoundTask(Task task, int count) {","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"wjunjie01"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"wjunjie01"},"content":"            System.out.println(\"Here are the matching task(s) in your list: \");","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"wjunjie01"},"content":"            printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"wjunjie01"},"content":"        System.out.println(count + \". \" + task);","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"wjunjie01"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"wjunjie01"},"content":"    public static void printNotFoundTask(int count) {","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"wjunjie01"},"content":"        printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"wjunjie01"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"wjunjie01"},"content":"            System.out.println(\"Hmm... task not found :( \");","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"wjunjie01"},"content":"            printLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"wjunjie01"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"wjunjie01"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"wjunjie01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"wjunjie01":100}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjunjie01"},"content":"todo listen to music","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"wjunjie01"},"content":"deadline do chores! /by 6pm","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"wjunjie01"},"content":"mark 1","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"wjunjie01"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"wjunjie01"},"content":"event Attend CS2113T lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"wjunjie01"},"content":"unmark 1","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"wjunjie01"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"wjunjie01"},"content":"bye","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"wjunjie01":8}}]
