[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    protected String by;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"        return \"[D] \" + super.getStatusIcon() + \" \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":14}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class Events extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    protected String from;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"    protected String to;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"        return \"[E] \" + super.getStatusIcon() + \" \" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":16}},{"path":"src/main/java/Floda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"public class Floda {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"    private static int taskCounter \u003d 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"        String name \u003d \"Floda\";","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"I can keep track of a to-do list for you! Just type what you want to add to the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"        while (true) {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"                String line \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"shawnpong"},"content":"                String[] parts \u003d line.split(\" \", 2);","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"                String command \u003d parts[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"shawnpong"},"content":"                switch (command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shawnpong"},"content":"                    case \"bye\":","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shawnpong"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"shawnpong"},"content":"                        scanner.close();","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"shawnpong"},"content":"                        return;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"shawnpong"},"content":"                    case \"list\":","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"shawnpong"},"content":"                        if (taskCounter \u003d\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"shawnpong"},"content":"                            System.out.println(\"Your to-do list is empty.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"shawnpong"},"content":"                        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"shawnpong"},"content":"                            System.out.println(\"List so far: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shawnpong"},"content":"                            for (int i \u003d 0; i \u003c taskCounter; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shawnpong"},"content":"                                System.out.println((i + 1) + \".\" + list[i]);","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"shawnpong"},"content":"                            }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shawnpong"},"content":"                        }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"shawnpong"},"content":"                    case \"mark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"shawnpong"},"content":"                        handleMarkTask(line, list);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"shawnpong"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"shawnpong"},"content":"                        handleUnmarkTask(line, list);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"shawnpong"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"shawnpong"},"content":"                        handleDeadlineTask(line, list);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"shawnpong"},"content":"                    case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"shawnpong"},"content":"                        handleTodoTask(line, list);","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"shawnpong"},"content":"                    case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"shawnpong"},"content":"                        handleEventTask(line, list);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"shawnpong"},"content":"                    default:","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"shawnpong"},"content":"                        throw new InvalidInputException(\"Invalid input!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"shawnpong"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"shawnpong"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"shawnpong"},"content":"    private static void handleMarkTask(String line, Task[] list) throws InvalidInputException {","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shawnpong"},"content":"        if (taskScanner.hasNextInt()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shawnpong"},"content":"            int taskNumber \u003d taskScanner.nextInt() - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shawnpong"},"content":"            if (isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"shawnpong"},"content":"                list[taskNumber].setDone(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"I have marked this task as done:\\n\" + list[taskNumber]);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"shawnpong"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shawnpong"},"content":"                throw new InvalidInputException(\"Invalid task number! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shawnpong"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shawnpong"},"content":"        taskScanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"shawnpong"},"content":"    private static void handleUnmarkTask(String line, Task[] list) throws InvalidInputException {","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"shawnpong"},"content":"        if (taskScanner.hasNextInt()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"shawnpong"},"content":"            int taskNumber \u003d taskScanner.nextInt() - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"shawnpong"},"content":"            if (isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"shawnpong"},"content":"                list[taskNumber].setDone(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"I have marked this task as not done:\\n\" + list[taskNumber]);","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"shawnpong"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"shawnpong"},"content":"                throw new InvalidInputException(\"Invalid task number! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"shawnpong"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"shawnpong"},"content":"        taskScanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"shawnpong"},"content":"    private static void handleDeadlineTask(String line, Task[] list) throws InvalidInputException {","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"shawnpong"},"content":"        String remaining \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"shawnpong"},"content":"        String[] parts \u003d remaining.split(\"/by\");","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"shawnpong"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"shawnpong"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"shawnpong"},"content":"        list[taskCounter] \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"shawnpong"},"content":"        taskCounter++;","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Added: \" + list[taskCounter - 1] + \"\\nNow you have \" + (taskCounter) + \" items in the list!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"shawnpong"},"content":"    private static void handleTodoTask(String line, Task[] list) throws InvalidInputException {","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"shawnpong"},"content":"        String remaining \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"shawnpong"},"content":"        list[taskCounter] \u003d new ToDo(remaining);","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"shawnpong"},"content":"        taskCounter++;","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Added: \" + list[taskCounter - 1] + \"\\nNow you have \" + (taskCounter) + \" items in the list!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"shawnpong"},"content":"    private static void handleEventTask(String line, Task[] list) throws InvalidInputException {","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"shawnpong"},"content":"        String remaining \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"shawnpong"},"content":"        remaining \u003d remaining.replace(\"/to\", \"/from\");","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"shawnpong"},"content":"        String[] parts \u003d remaining.split(\"/from\");","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"shawnpong"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"shawnpong"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"shawnpong"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"shawnpong"},"content":"        list[taskCounter] \u003d new Events(description, from, to);","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"shawnpong"},"content":"        taskCounter++;","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Added: \" + list[taskCounter - 1] + \"\\nNow you have \" + (taskCounter) + \" items in the list!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"shawnpong"},"content":"    private static boolean isValidTaskNumber(int taskNumber) {","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"shawnpong"},"content":"        return taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c taskCounter;","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shawnpong":125,"-":3}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shawnpong":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"    protected String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"        return description;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"        return isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"shawnpong"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"shawnpong"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"shawnpong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"shawnpong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"shawnpong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"shawnpong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"shawnpong"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"shawnpong"},"content":"        return description;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":34}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"        return \"[T] \" + super.getStatusIcon() + \" \" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":11}}]
