[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    protected String by;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"        return by;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"shawnpong"},"content":"        return \"[D] \" + super.getStatusIcon() + \" \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":19}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class Events extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    protected String from;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"    protected String to;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"    public Events(String description, String from, String to, Boolean isDone) {","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"        return from;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"shawnpong"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"shawnpong"},"content":"        return to;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"shawnpong"},"content":"        return \"[E] \" + super.getStatusIcon() + \" \" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":26}},{"path":"src/main/java/Floda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"import java.io.File;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"public class Floda {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    private final static String NAME \u003d \"Floda\";","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"    private static final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Hello! I\u0027m \" + NAME);","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"shawnpong"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"shawnpong"},"content":"            checkIfFileExists();","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"shawnpong"},"content":"            readFromFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"shawnpong"},"content":"        } catch (FileNotFoundException | InvalidInputException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"shawnpong"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"shawnpong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"I can keep track of a to-do list for you! Just type what you want to add to the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"shawnpong"},"content":"        while (true) {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"shawnpong"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"shawnpong"},"content":"                String line \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"shawnpong"},"content":"                String[] parts \u003d line.split(\" \", 2);","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"shawnpong"},"content":"                String command \u003d parts[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"shawnpong"},"content":"                switch (command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"shawnpong"},"content":"                    case \"bye\":","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"shawnpong"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"shawnpong"},"content":"                        scanner.close();","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"shawnpong"},"content":"                        return;","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"shawnpong"},"content":"                    case \"list\":","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"shawnpong"},"content":"                        if (list.isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"shawnpong"},"content":"                            System.out.println(\"Your to-do list is empty.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"shawnpong"},"content":"                        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"shawnpong"},"content":"                            System.out.println(\"List so far: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shawnpong"},"content":"                            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"shawnpong"},"content":"                                System.out.println((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"shawnpong"},"content":"                            }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shawnpong"},"content":"                        }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"shawnpong"},"content":"                    case \"mark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"shawnpong"},"content":"                        handleMarkTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"shawnpong"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"shawnpong"},"content":"                        handleUnmarkTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"shawnpong"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"shawnpong"},"content":"                        handleDeadlineTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"shawnpong"},"content":"                    case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"shawnpong"},"content":"                        handleTodoTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"shawnpong"},"content":"                    case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"shawnpong"},"content":"                        handleEventTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"shawnpong"},"content":"                    case \"delete\":","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"shawnpong"},"content":"                        handleDeleteTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"shawnpong"},"content":"                        saveToFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"shawnpong"},"content":"                        break;","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"shawnpong"},"content":"                    default:","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"shawnpong"},"content":"                        throw new InvalidInputException(\"Invalid input!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"shawnpong"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"shawnpong"},"content":"            } catch (InvalidInputException | IOException e){","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"shawnpong"},"content":"    private static void handleDeleteTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"shawnpong"},"content":"        if (taskScanner.hasNextInt()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"shawnpong"},"content":"            int taskNumber \u003d taskScanner.nextInt() - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"shawnpong"},"content":"            if (isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"Deleting task: \" + list.get(taskNumber));","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"shawnpong"},"content":"                list.remove(taskNumber);","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"Task deleted successfully!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"shawnpong"},"content":"            } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"shawnpong"},"content":"                throw new InvalidInputException(\"Invalid task number! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"shawnpong"},"content":"    private static void handleMarkTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"shawnpong"},"content":"        if (taskScanner.hasNextInt()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"shawnpong"},"content":"            int taskNumber \u003d taskScanner.nextInt() - 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"shawnpong"},"content":"            if (isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"shawnpong"},"content":"                list.get(taskNumber).setDone(true);","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"I have marked this task as done:\\n\" + list.get(taskNumber));","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"shawnpong"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"shawnpong"},"content":"                throw new InvalidInputException(\"Invalid task number! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"shawnpong"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"shawnpong"},"content":"        taskScanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"shawnpong"},"content":"    private static void handleUnmarkTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"shawnpong"},"content":"        if (taskScanner.hasNextInt()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"shawnpong"},"content":"            int taskNumber \u003d taskScanner.nextInt() - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"shawnpong"},"content":"            if (isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"shawnpong"},"content":"                list.get(taskNumber).setDone(false);","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"I have marked this task as not done:\\n\" + list.get(taskNumber));","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"shawnpong"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"shawnpong"},"content":"                throw new InvalidInputException(\"Invalid task number! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"shawnpong"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input! Please check with \u0027list\u0027.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"shawnpong"},"content":"        taskScanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"shawnpong"},"content":"    private static void handleDeadlineTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"shawnpong"},"content":"        String remaining \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"shawnpong"},"content":"        int byIndex \u003d remaining.indexOf(\"/by\");","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"shawnpong"},"content":"        if (byIndex \u003d\u003d -1 || byIndex \u003d\u003d 0) {","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input format! Use: \u0027deadline \u003cdescription\u003e /by \u003ctime\u003e\u0027\");","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"shawnpong"},"content":"        String description \u003d remaining.substring(0, byIndex).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"shawnpong"},"content":"        String by \u003d remaining.substring(byIndex + 3).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"shawnpong"},"content":"        list.add(new Deadline(description, by, false));","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Added: \" + list.getLast() + \"\\nNow you have \" + list.size() + \" items in the list!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"shawnpong"},"content":"    private static void handleEventTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"shawnpong"},"content":"        String remaining \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"shawnpong"},"content":"        int fromIndex \u003d remaining.indexOf(\"/from\");","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"shawnpong"},"content":"        if (fromIndex \u003d\u003d -1 || fromIndex \u003d\u003d 0) {","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input format! Use: \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027\");","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"shawnpong"},"content":"        int toIndex \u003d remaining.indexOf(\"/to\");","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"shawnpong"},"content":"        if (toIndex \u003d\u003d -1 || toIndex \u003c\u003d fromIndex + 5) {","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input format! Use: \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027\");","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"shawnpong"},"content":"        String description \u003d remaining.substring(0, fromIndex).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"shawnpong"},"content":"        String from \u003d remaining.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"shawnpong"},"content":"        String to \u003d remaining.substring(toIndex + 3).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"shawnpong"},"content":"        list.add(new Events(description, from, to, false));","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Added: \" + list.getLast() + \"\\nNow you have \" + list.size() + \" items in the list!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"shawnpong"},"content":"    private static void handleTodoTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"shawnpong"},"content":"        Scanner taskScanner \u003d new Scanner(line);","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"shawnpong"},"content":"        taskScanner.next();","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"shawnpong"},"content":"        String remaining \u003d taskScanner.nextLine().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"shawnpong"},"content":"        list.add(new ToDo(remaining, false));","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Added: \" + list.getLast() + \"\\nNow you have \" + list.size() + \" items in the list!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":166,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"shawnpong"},"content":"    private static boolean isValidTaskNumber(int taskNumber) {","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"shawnpong"},"content":"        return taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c list.size();","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"shawnpong"},"content":"    private static void checkIfFileExists() {","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"shawnpong"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"shawnpong"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":177,"author":{"gitId":"shawnpong"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"shawnpong"},"content":"                f.createNewFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"File created: \" + f.getAbsolutePath());","lastModifiedDate":"2024-02-21"},{"lineNumber":180,"author":{"gitId":"shawnpong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"shawnpong"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":184,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":185,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"shawnpong"},"content":"    private static void readFromFile() throws FileNotFoundException, InvalidInputException {","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"shawnpong"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"shawnpong"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-21"},{"lineNumber":189,"author":{"gitId":"shawnpong"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"shawnpong"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-21"},{"lineNumber":191,"author":{"gitId":"shawnpong"},"content":"            parseTask(line);","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"shawnpong"},"content":"        scanner.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":194,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":195,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"shawnpong"},"content":"    private static void parseTask(String line) throws InvalidInputException {","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"shawnpong"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-21"},{"lineNumber":198,"author":{"gitId":"shawnpong"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-21"},{"lineNumber":199,"author":{"gitId":"shawnpong"},"content":"            throw new InvalidInputException(\"Invalid input format in file\");","lastModifiedDate":"2024-02-21"},{"lineNumber":200,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":201,"author":{"gitId":"shawnpong"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":202,"author":{"gitId":"shawnpong"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"shawnpong"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":204,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":205,"author":{"gitId":"shawnpong"},"content":"        switch (type) {","lastModifiedDate":"2024-02-21"},{"lineNumber":206,"author":{"gitId":"shawnpong"},"content":"            case \"T\":","lastModifiedDate":"2024-02-21"},{"lineNumber":207,"author":{"gitId":"shawnpong"},"content":"                list.add(new ToDo(description, isDone));","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"shawnpong"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"shawnpong"},"content":"            case \"D\":","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"shawnpong"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2024-02-21"},{"lineNumber":211,"author":{"gitId":"shawnpong"},"content":"                    throw new InvalidInputException(\"Invalid input format for deadline in file\");","lastModifiedDate":"2024-02-21"},{"lineNumber":212,"author":{"gitId":"shawnpong"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":213,"author":{"gitId":"shawnpong"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":214,"author":{"gitId":"shawnpong"},"content":"                list.add(new Deadline(description, by, isDone));","lastModifiedDate":"2024-02-21"},{"lineNumber":215,"author":{"gitId":"shawnpong"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":216,"author":{"gitId":"shawnpong"},"content":"            case \"E\":","lastModifiedDate":"2024-02-21"},{"lineNumber":217,"author":{"gitId":"shawnpong"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2024-02-21"},{"lineNumber":218,"author":{"gitId":"shawnpong"},"content":"                    throw new InvalidInputException(\"Invalid input format for event in file\");","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"shawnpong"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":220,"author":{"gitId":"shawnpong"},"content":"                String from \u003d parts[3].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":221,"author":{"gitId":"shawnpong"},"content":"                String to \u003d parts[4].trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"shawnpong"},"content":"                list.add(new Events(description, from, to, isDone));","lastModifiedDate":"2024-02-21"},{"lineNumber":223,"author":{"gitId":"shawnpong"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":224,"author":{"gitId":"shawnpong"},"content":"            default:","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"shawnpong"},"content":"                throw new InvalidInputException(\"Unknown task type in file\");","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":228,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"shawnpong"},"content":"    private static void saveToFile() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":230,"author":{"gitId":"shawnpong"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":231,"author":{"gitId":"shawnpong"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"shawnpong"},"content":"            fw.write(taskToLine(task) + \"\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":233,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":234,"author":{"gitId":"shawnpong"},"content":"        System.out.println(\"Saved to file\");","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"shawnpong"},"content":"        fw.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":236,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":237,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":238,"author":{"gitId":"shawnpong"},"content":"    private static String taskToLine(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":239,"author":{"gitId":"shawnpong"},"content":"        if (task instanceof ToDo todo) {","lastModifiedDate":"2024-02-21"},{"lineNumber":240,"author":{"gitId":"shawnpong"},"content":"            return \"T | \" + (todo.isDone() ? \"1\" : \"0\") + \" | \" + todo.getDescription();","lastModifiedDate":"2024-02-21"},{"lineNumber":241,"author":{"gitId":"shawnpong"},"content":"        } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2024-02-21"},{"lineNumber":242,"author":{"gitId":"shawnpong"},"content":"            return \"D | \" + (deadline.isDone() ? \"1\" : \"0\") + \" | \" + deadline.getDescription() + \" | \" + deadline.getBy();","lastModifiedDate":"2024-02-21"},{"lineNumber":243,"author":{"gitId":"shawnpong"},"content":"        } else if (task instanceof Events event) {","lastModifiedDate":"2024-02-21"},{"lineNumber":244,"author":{"gitId":"shawnpong"},"content":"            return \"E | \" + (event.isDone() ? \"1\" : \"0\") + \" | \" + event.getDescription() + \" | \" + event.getFrom() + \" | \" + event.getTo();","lastModifiedDate":"2024-02-21"},{"lineNumber":245,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":246,"author":{"gitId":"shawnpong"},"content":"        return \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":247,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shawnpong":245,"-":3}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shawnpong":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"    protected String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"        return description;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shawnpong"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shawnpong"},"content":"        return isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"shawnpong"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"shawnpong"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"shawnpong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"shawnpong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"shawnpong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"shawnpong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"shawnpong"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"shawnpong"},"content":"        return description;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":34}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shawnpong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shawnpong"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shawnpong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shawnpong"},"content":"        return \"[T] \" + super.getStatusIcon() + \" \" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shawnpong"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"shawnpong":12}}]
