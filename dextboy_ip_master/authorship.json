[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"# Natsu User Guide","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"Welcome to **Natsu**! This tool helps you keep track of your tasks, deadlines, and events, making your daily task","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"management more efficient and straightforward.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"### Add Task","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"You can add three types of tasks: Todos, Deadlines, and Events. Each task type helps categorize your tasks for better","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"organization.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"### List Tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"Displays all your tasks, including Todos, Deadlines, and Events, with their status (completed or pending).","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"### Mark Task as Done","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"Mark any task as done based on its list number. This feature helps you keep track of your task completion.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"### Unmark Task as Undone","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"Unmark any task as undone based on its list number. This feature helps you keep track of your task completion.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"### Delete Task","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"Remove tasks that are no longer relevant or were added by mistake.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"### Find Task","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"Search for tasks by keywords to quickly find specific tasks in your list.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"### Save Data","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"All your tasks are saved automatically and loaded when you start the program again.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"## Getting Started","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"### Prerequisites","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"- Java 11 or later installed on your computer.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"### Installation","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"1. Download the latest release of Natsu from the [releases page](","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"2. Extract the downloaded zip file to a folder on your computer.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"dextboy"},"content":"3. Open a terminal or command prompt and navigate to the folder where you extracted the zip file.","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"dextboy"},"content":"4. Run the following command to start Natsu:","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"dextboy"},"content":"```bash","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"dextboy"},"content":"java -jar natsu.jar","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"dextboy"},"content":"### `todo` - Add a Todo Task","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"dextboy"},"content":"Adds a task without any date/time attached to it.","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"dextboy"},"content":"`todo read book`","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"dextboy"},"content":"A new Todo task \"read book\" is added to your task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"dextboy"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"dextboy"},"content":"       [T][ ] read book","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"dextboy"},"content":"     Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"dextboy"},"content":"### `deadline` - Add a Deadline Task","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"dextboy"},"content":"Adds a task with a specific due date.","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"dextboy"},"content":"`deadline return book /by 01-01-2023 1300`","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"dextboy"},"content":"A new Deadline task \"return book\" with the due date \"Jan 1 2023 1:00pm\" is added to your task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"dextboy"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"dextboy"},"content":"       [D][ ] return book (by: Jan 1 2023 )","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"dextboy"},"content":"     Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"dextboy"},"content":"### `event` - Add an Event Task","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"dextboy"},"content":"Adds a task with a specific date and time.","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"dextboy"},"content":"`event project meeting /from Thursday 5pm /to Thursday 7pm`","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"dextboy"},"content":"A new Event task \"project meeting\" with the date \"Thursday 5pm to 7pm\" is added to your task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"dextboy"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"dextboy"},"content":"       [E][ ] project meeting (from: Thursday 5pm to: Thursday 7pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"dextboy"},"content":"     Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"dextboy"},"content":"### `list` - List all Tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"dextboy"},"content":"Displays all your tasks, including Todos, Deadlines, and Events, with their status (completed or pending).","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"dextboy"},"content":"`list`","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"dextboy"},"content":"All your tasks are displayed in a list format.","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"dextboy"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"dextboy"},"content":"     1. [T][ ] read book","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"dextboy"},"content":"     2. [D][ ] return book (by: Jan 1 2023 )","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"dextboy"},"content":"     3. [E][ ] project meeting (from: Thursday 5pm to: Thursday 7pm)","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"dextboy"},"content":"### `mark` - Mark Task as Done","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"dextboy"},"content":"Marks a task as done based on its list number.","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"dextboy"},"content":"`mark 1`","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"dextboy"},"content":"The first task in your list is marked as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"dextboy"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"dextboy"},"content":"       [T][X] read book","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"dextboy"},"content":"### `unmark` - Unmark Task as Undone","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"dextboy"},"content":"Unmarks a task as undone based on its list number.","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"dextboy"},"content":"`unmark 1`","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"dextboy"},"content":"The first task in your list is unmarked as undone.","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":168,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"dextboy"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"dextboy"},"content":"       [T][ ] read book","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":174,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":175,"author":{"gitId":"dextboy"},"content":"### `delete` - Delete Task","lastModifiedDate":"2024-02-26"},{"lineNumber":176,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"dextboy"},"content":"Removes a task from your list based on its list number.","lastModifiedDate":"2024-02-26"},{"lineNumber":178,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":179,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":180,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"dextboy"},"content":"`delete 1`","lastModifiedDate":"2024-02-26"},{"lineNumber":182,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"dextboy"},"content":"The first task in your list is removed.","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"dextboy"},"content":"     Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"dextboy"},"content":"       [T][ ] read book","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"dextboy"},"content":"     Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":192,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"dextboy"},"content":"### `find` - Find Task","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":197,"author":{"gitId":"dextboy"},"content":"Search for tasks by keywords to quickly find specific tasks in your list.","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":199,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":200,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":201,"author":{"gitId":"dextboy"},"content":"`find book`","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":203,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"dextboy"},"content":"All tasks with the keyword \"book\" are displayed.","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":207,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"dextboy"},"content":"     Here are the matching tasks in your list:","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"dextboy"},"content":"     1. [D][ ] return book (by: Jan 1 2023 )","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":212,"author":{"gitId":"dextboy"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":213,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"dextboy"},"content":"### `bye` - Exit the Program","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"dextboy"},"content":"Exits the program.","lastModifiedDate":"2024-02-26"},{"lineNumber":217,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":218,"author":{"gitId":"dextboy"},"content":"**Example of usage:**","lastModifiedDate":"2024-02-26"},{"lineNumber":219,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":220,"author":{"gitId":"dextboy"},"content":"`bye`","lastModifiedDate":"2024-02-26"},{"lineNumber":221,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":222,"author":{"gitId":"dextboy"},"content":"**Expected outcome:**","lastModifiedDate":"2024-02-26"},{"lineNumber":223,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":224,"author":{"gitId":"dextboy"},"content":"The program exits.","lastModifiedDate":"2024-02-26"},{"lineNumber":225,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":226,"author":{"gitId":"dextboy"},"content":"```plaintext","lastModifiedDate":"2024-02-26"},{"lineNumber":227,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":228,"author":{"gitId":"dextboy"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-26"},{"lineNumber":229,"author":{"gitId":"dextboy"},"content":"    ----------------------------------------------------------------","lastModifiedDate":"2024-02-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"dextboy":210,"-":20}},{"path":"src/main/java/natsu/Natsu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.util.Parser;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.util.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Storage.readFile;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * The main class of the Natsu application, responsible for initiating","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" * and managing the application\u0027s run loop.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":" * This class initializes the application, processes user input, and","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":" * delegates command execution to the {@link Parser} class.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"public class Natsu {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     * Initiates and manages the application\u0027s main loop.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     * This method starts the application, displays a welcome message,","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * reads the saved tasks from file, then continuously listens for and","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     * processes user input until the \"bye\" command is received.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"    public void run() {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"        try (Scanner input \u003d new Scanner(System.in)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"            boolean isActive \u003d true;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"            readFile(); // Load tasks from file at the start","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"            while (isActive) {","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"                String userInput \u003d input.nextLine();","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"                isActive \u003d Parser.executeCommand(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"     * The entry point of the Natsu application.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"     * Creates an instance of {@code Natsu} and calls the {@code run} method to start the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"     * @param args The command-line arguments passed to the application (not used).","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"        new Natsu().run();","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dextboy":42,"-":3}},{"path":"src/main/java/natsu/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.task.Deadline;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import natsu.util.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * Represents a command to add a new deadline task to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * The command parses user input to extract the task description and its deadline,","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" * then creates a new {@link Deadline} object and adds it to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"public class AddDeadlineCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * Constructs an {@code AddDeadlineCommand} and adds a new deadline to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full user input string containing the deadline description and date/time.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the input does not contain a \u0027/by\u0027 indicator,","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     *                                 if the description of the deadline is empty,","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     *                                 or if the deadline date/time is not specified.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"    public AddDeadlineCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"        if (!userInput.contains(CommandConstants.DEADLINE_INDICATOR)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but do add \u0027/by\u0027 along with the deadline of the task. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"        } else if (userInput.indexOf(CommandConstants.DEADLINE_INDICATOR) \u003d\u003d CommandConstants.DEADLINE_COMMAND_PREFIX_LENGTH) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but the description of a deadline cannot be empty. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        } else if (userInput.indexOf(CommandConstants.DEADLINE_INDICATOR) + CommandConstants.DEADLINE_INDICATOR.length() \u003e\u003d userInput.length()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but the deadline date/time cannot be empty. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"            int byIndex \u003d userInput.indexOf(CommandConstants.DEADLINE_INDICATOR);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"            String deadlineDescription \u003d userInput.substring(CommandConstants.DEADLINE_COMMAND_PREFIX_LENGTH, byIndex).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"            String deadlineBy \u003d userInput.substring(byIndex + CommandConstants.DEADLINE_INDICATOR.length() + 1).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"            Deadline deadline \u003d new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"            list.add(deadline);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"            Ui.printTaskAdded(deadline.toString());","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":40}},{"path":"src/main/java/natsu/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.task.Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import natsu.util.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * Represents a command to add a new event task to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * This command parses user input to extract the event description,","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" * start time, and end time. It then creates a new {@link Event} object","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":" * and adds it to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"public class AddEventCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     * Constructs an {@code AddEventCommand} and adds a new event to the task list based on user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     * The command checks for the presence of \u0027/from\u0027 and \u0027/to\u0027 in the user input to extract the necessary details.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full user input string containing the event description, start time, and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the input does not contain \u0027/from\u0027 and \u0027/to\u0027 indicators,","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     *                                 if the description of the event is empty, or if the event start or end time","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"     *                                 is not specified correctly.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"    public AddEventCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"        if (!userInput.contains(CommandConstants.EVENT_START_INDICATOR) || !userInput.contains(CommandConstants.EVENT_END_INDICATOR)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but do add \u0027/from\u0027 and \u0027/to\u0027 along with the event details. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"        if (userInput.indexOf(CommandConstants.EVENT_START_INDICATOR) \u003d\u003d CommandConstants.EVENT_COMMAND_PREFIX_LENGTH ||","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"                userInput.indexOf(CommandConstants.EVENT_END_INDICATOR) \u003d\u003d CommandConstants.EVENT_COMMAND_PREFIX_LENGTH) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but the description of an event cannot be empty. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"        Event event \u003d getEvent(userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"        list.add(event);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"        Ui.printTaskAdded(event.toString());","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"     * Extracts and creates an event from the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"     * This method parses the input to separate the event description from its start and end times.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"     * @param userInput The user input containing event details.","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"     * @return The {@link Event} created from the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the date/time details of an event cannot be parsed","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"     *                                 or are empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"dextboy"},"content":"    private static Event getEvent(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"dextboy"},"content":"        if (userInput.indexOf(CommandConstants.EVENT_START_INDICATOR) + CommandConstants.EVENT_START_INDICATOR.length() \u003e\u003d userInput.length() ||","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"dextboy"},"content":"                userInput.indexOf(CommandConstants.EVENT_END_INDICATOR) + CommandConstants.EVENT_END_INDICATOR.length() \u003d\u003d userInput.length()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but the date/time details of an event cannot be empty. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"dextboy"},"content":"        int fromIndex \u003d userInput.indexOf(CommandConstants.EVENT_START_INDICATOR);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"dextboy"},"content":"        int toIndex \u003d userInput.indexOf(CommandConstants.EVENT_END_INDICATOR);","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"dextboy"},"content":"        String eventDescription \u003d userInput.substring(CommandConstants.EVENT_COMMAND_PREFIX_LENGTH, fromIndex).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"dextboy"},"content":"        String eventFrom \u003d userInput.substring(fromIndex + CommandConstants.EVENT_START_INDICATOR.length() + 1, toIndex).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"dextboy"},"content":"        String eventTo \u003d userInput.substring(toIndex + CommandConstants.EVENT_END_INDICATOR.length() + 1).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"dextboy"},"content":"        return new Event(eventDescription, eventFrom, eventTo);","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":60}},{"path":"src/main/java/natsu/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.task.Todo;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import natsu.util.Ui;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * Represents a command to add a new todo task to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * This command parses user input to extract the todo description and","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" * then creates a new {@link Todo} object to add to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"public class AddTodoCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * Constructs an {@code AddTodoCommand} and adds a new todo task to the task list based on user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     * Validates that the user input contains a description for the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full user input string containing the todo description.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the description of the todo is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"    public AddTodoCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"        if (userInput.length() \u003c\u003d CommandConstants.TODO_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, but the description of a todo cannot be empty. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"        String todoDescription \u003d userInput.substring(CommandConstants.TODO_COMMAND_LENGTH).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"        Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        list.add(todo);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"        Ui.printTaskAdded(todo.toString());","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":32}},{"path":"src/main/java/natsu/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printExitMessage;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":" * This command triggers the application\u0027s exit sequence, displaying a farewell","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":" * message to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"public class ByeCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     * Constructs a {@code ByeCommand} instance which immediately triggers the","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     * printing of the application\u0027s exit message upon instantiation.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"        printExitMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":19}},{"path":"src/main/java/natsu/command/CommandConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":" * Contains constants used for parsing and handling commands within the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":" * This includes lengths for command strings to help with parsing user input and","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" * specific indicators for parsing command arguments.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"public class CommandConstants {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"    public static final int MARK_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"    public static final int UNMARK_COMMAND_LENGTH \u003d 7;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"    public static final int TODO_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"    public static final int DEADLINE_COMMAND_PREFIX_LENGTH \u003d 9;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"    public static final int EVENT_COMMAND_PREFIX_LENGTH \u003d 6;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"    public static final int DELETE_COMMAND_LENGTH \u003d 7;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"    public static final int FIND_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"    public static final String DEADLINE_INDICATOR \u003d \"/by\";","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"    public static final String EVENT_START_INDICATOR \u003d \"/from\";","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"    public static final String EVENT_END_INDICATOR \u003d \"/to\";","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":20}},{"path":"src/main/java/natsu/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printTaskDeleted;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * This command processes user input to identify and remove the specified task,","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" * then communicates the change to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"public class DeleteCommand {","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * Constructs a {@code DeleteCommand} instance that processes the deletion of a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     * Validates the user input to ensure it specifies a valid task number and","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     * removes the specified task from the task list if it exists.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full user input string, including the command and the task number to delete.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the specified task number is invalid, out of bounds,","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     *                                 or if the input format does not meet expectations.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"    public DeleteCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"        if (userInput.length() \u003c\u003d CommandConstants.DELETE_COMMAND_LENGTH) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     I\u0027m terribly sorry, please enter a valid number and try again!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        int taskNumber \u003d Integer.parseInt(userInput.substring(CommandConstants.DELETE_COMMAND_LENGTH).trim()) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"        if (taskNumber \u003e\u003d list.size() || taskNumber \u003c 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     You have \" + list.size() + \" items in your list, please enter a valid number.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"        Task deletedTask \u003d list.get(taskNumber);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"        list.remove(taskNumber);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"        printTaskDeleted(deletedTask.toString(), list.size());","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"dextboy":37}},{"path":"src/main/java/natsu/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.util.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import static natsu.command.CommandConstants.FIND_COMMAND_LENGTH;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printLine;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"public class FindCommand {","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"    public FindCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"        String keyword \u003d userInput.substring(FIND_COMMAND_LENGTH).trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"        if (keyword.trim().isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"The description of a find command cannot be empty.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"            printLine();","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"            int matchCount \u003d 0; // To keep track of the number of matching tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"            for (int i \u003d 0; i \u003c TaskList.list.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"                if (TaskList.list.get(i).toString().contains(keyword)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"                    System.out.println(\"     \" + (matchCount + 1) + \".\" + TaskList.list.get(i).toString());","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"                    matchCount++;","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"            if (matchCount \u003d\u003d 0) {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"                System.out.println(\"     No tasks match your search keyword.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"            printLine();","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"dextboy":30}},{"path":"src/main/java/natsu/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printList;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" * Represents a command to display all tasks in the task list to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":" * When executed, it invokes a utility method to print details of each task","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":" * currently stored in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"public class ListCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     * Constructs a {@code ListCommand} instance which, when instantiated,","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     * immediately triggers the printing of the entire task list. This provides","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     * users with a view of all tasks they have added.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"        printList();","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":20}},{"path":"src/main/java/natsu/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printTaskDone;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * This command updates the status of a specified task to indicate","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * that it has been completed, based on the user\u0027s input.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"public class MarkCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     * Constructs a {@code MarkCommand} instance that marks a task as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * It parses the user input to identify which task to mark, validates the","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     * input to ensure it corresponds to an existing task, updates the task\u0027s","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     * status to done, and then displays a confirmation message.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full user input string, including the command and the task number to mark as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the specified task number is invalid or out of bounds.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"    public MarkCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"        int itemIndex \u003d Integer.parseInt(userInput.substring(CommandConstants.MARK_COMMAND_LENGTH)) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"        if (itemIndex \u003e\u003d list.size() || itemIndex \u003c 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     You have \" + list.size() + \" items in your list, please enter a valid number.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"            list.get(itemIndex).markAsDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"            printTaskDone(list.get(itemIndex).toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":33}},{"path":"src/main/java/natsu/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.command;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printTaskUndone;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" * Represents a command to mark a task as not done in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * This command changes the status of a specified task to indicate","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" * that it has not been completed, as per the user\u0027s input.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"public class UnmarkCommand {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     * Constructs an {@code UnmarkCommand} instance that marks a task as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * It parses the user input to determine which task to unmark, validates the","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     * input to ensure it corresponds to an existing task in the list, updates the task\u0027s","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     * status to not done, and then displays a confirmation message to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full user input string, including the command and the task number to mark as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     * @throws InvalidCommandException If the specified task number is invalid, out of bounds,","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     *                                 or if the user input format does not meet the expected criteria.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"    public UnmarkCommand(String userInput) throws InvalidCommandException {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"        int itemIndex \u003d Integer.parseInt(userInput.substring(CommandConstants.UNMARK_COMMAND_LENGTH)) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"        if (itemIndex \u003e\u003d list.size() || itemIndex \u003c 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"            throw new InvalidCommandException(\"     You have \" + list.size() + \" items in your list, please enter a valid number.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"            list.get(itemIndex).markAsUndone();","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"            printTaskUndone(list.get(itemIndex).toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":34}},{"path":"src/main/java/natsu/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.exception;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":" * Custom exception class that represents an error condition when a command","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":" * given to the application is invalid. This exception is thrown to indicate","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" * various error states such as invalid task numbers, missing command parameters,","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":" * or unrecognized commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"     * Constructs an {@code InvalidCommandException} with the specified detail message.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     * The message provides more information about the error, such as what was invalid","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     * about the command and potential ways to correct it.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     * @param message The detail message explaining the reason this exception is thrown.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"        super(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":21}},{"path":"src/main/java/natsu/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":" * Represents a deadline task with a specific due date or time.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" * A deadline task is a task that needs to be completed before a particular date/time.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"    protected String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     * Constructs a {@code Deadline} task with the specified description and due date/time.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     * @param by          The due date or time of the deadline task, represented as a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(by.trim(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"     * Returns a string representation of the deadline task, including its status,","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"     * description, and due date/time.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"     * @return A string in the format \"[D][status] description (by: due date/time)\",","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"     * where \"[D]\" indicates a deadline task, \"[status]\" is the task\u0027s completion status","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"     * (marked as done or not done), and \"description\" and \"due date/time\" are the task\u0027s","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"     * description and due date/time, respectively.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"dextboy":43}},{"path":"src/main/java/natsu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":" * Represents an event task with a specific start and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":" * An event task is a type of task that occurs over a period, defined by a start and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"    protected String from;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"    protected String to;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"     * Constructs an {@code Event} task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     * @param from        The start time of the event, represented as a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     * @param to          The end time of the event, also represented as a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"     * Returns a string representation of the event task, including its status,","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"     * description, start time, and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"     * @return A string in the format \"[E][status] description (from: start time to: end time)\",","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"     * where \"[E]\" indicates an event task, \"[status]\" is the task\u0027s completion status","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"     * (marked as done or not done), \"description\" is the task\u0027s description,","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"     * and \"start time\" and \"end time\" are the event\u0027s start and end times, respectively.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"dextboy":37}},{"path":"src/main/java/natsu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":" * Represents a generic task in a task management application.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":" * A task is characterized by a description and a completion status.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"     * Constructs a new Task instance with the specified description.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     * By default, a new task is not completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     * @param description The descriptive text of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     * Returns the status icon representing the task\u0027s completion status.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"     * A completed task is marked with \"[X]\", and an incomplete task with \"[ ]\".","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"     * @return A string representing the completion status icon.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"     * Marks the task as completed by setting its completion status to true.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"     * Marks the task as not completed by setting its completion status to false.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"dextboy"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"dextboy"},"content":"     * @return A string that combines the task\u0027s completion status icon and its description.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"dextboy"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"dextboy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"dextboy"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"dextboy":55}},{"path":"src/main/java/natsu/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.task;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":" * Represents a todo task in a task management application.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":" * A todo is a basic task type that is characterized only by a description.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"     * Constructs a new {@code Todo} instance with the specified description.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"     * Inherits the basic task structure and initializes with the given description.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     * @param description The descriptive text of the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     * Returns a string representation of the todo task, including its type, status icon, and description.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     * Prepends \"[T]\" to indicate that this task is of type todo, followed by the status icon","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"     * and description from the {@code Task} superclass.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"     * @return A string that represents the todo task, indicating its type, completion status, and description.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"dextboy":30}},{"path":"src/main/java/natsu/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.util;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.command.AddDeadlineCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.command.AddEventCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import natsu.command.AddTodoCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import natsu.command.ByeCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"import natsu.command.DeleteCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"import natsu.command.FindCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"import natsu.command.ListCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"import natsu.command.MarkCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"import natsu.command.UnmarkCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"import natsu.exception.InvalidCommandException;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Ui.printLine;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"import static natsu.util.Storage.saveTasksToFile;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":" * The {@code Parser} class is responsible for parsing user input and executing the corresponding command.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":" * It supports a range of commands including adding tasks (todos, deadlines, events), marking tasks as done or not done,","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":" * listing all tasks, deleting tasks, and exiting the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"public class Parser {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"     * Parses the given user input and executes the corresponding command.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"     * This method identifies the command type from the user input and creates an instance","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"     * of the relevant command class to perform the action. It also handles any exceptions","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"     * thrown by invalid commands and saves the current state of tasks to a file.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"     * @param userInput The full command input by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"     * @return A {@code Boolean} indicating whether the application should continue running.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"     * Returns {@code false} if the \u0027bye\u0027 command is executed, signalling the application to terminate;","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"     * otherwise returns {@code true}.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"    public static Boolean executeCommand(String userInput) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"            if (userInput.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"                new ByeCommand();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"                return false;","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"                new AddTodoCommand(userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"                new AddDeadlineCommand(userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"                new AddEventCommand(userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"dextboy"},"content":"                new MarkCommand(userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"dextboy"},"content":"                new UnmarkCommand(userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"dextboy"},"content":"                new ListCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"dextboy"},"content":"                new DeleteCommand(userInput);","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"dextboy"},"content":"            } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"dextboy"},"content":"                new FindCommand(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"dextboy"},"content":"            else {","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"dextboy"},"content":"                throw new InvalidCommandException(\"     I\u0027m terribly sorry, but I do not know what that means. Please try again!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"dextboy"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"dextboy"},"content":"            printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"dextboy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"dextboy"},"content":"            printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"dextboy"},"content":"        saveTasksToFile(\"data/tasks.txt\");","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"dextboy"},"content":"        return true;","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":68}},{"path":"src/main/java/natsu/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.util;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.task.Deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"import natsu.task.Event;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import natsu.task.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"import natsu.task.Todo;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"import java.io.File;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":" * Handles the storage of tasks in a file, including reading from and writing to the file.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":" * Ensures that tasks persist between application sessions by saving them to a specified file path.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"public class Storage {","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"     * Saves the current list of tasks to the specified file.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"     * Iterates over each task in the list and writes its string representation to the file.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"     * @param filePath The path of the file where tasks will be saved.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"    public static void saveTasksToFile(String filePath) {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"            System.out.println(\"     An error occurred while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"     * Ensures that the directory for the specified file path exists.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"     * If the directory does not exist, it is created.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"     * @param filePath The file path whose directory should be checked and possibly created.","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"    public static void ensureDirectoryExists(String filePath) {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"        File file \u003d new java.io.File(filePath);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"dextboy"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"dextboy"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"dextboy"},"content":"     * Creates a new file at the specified file path.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"dextboy"},"content":"     * Before creating the file, it ensures that the directory path exists.","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"dextboy"},"content":"     * @param filePath The path of the file to be created.","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"dextboy"},"content":"    public static void createFile(String filePath) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"dextboy"},"content":"        ensureDirectoryExists(filePath);","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"dextboy"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"dextboy"},"content":"            FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"dextboy"},"content":"            file.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"dextboy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"dextboy"},"content":"            System.out.println(\"     An error occurred while creating file: \" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"dextboy"},"content":"     * Reads tasks from a file and adds them to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"dextboy"},"content":"     * Parses each line of the file to reconstruct tasks and their states (done or not done).","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"dextboy"},"content":"    public static void readFile() {","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"dextboy"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"dextboy"},"content":"            String filePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\").toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"dextboy"},"content":"            java.io.File file \u003d new java.io.File(filePath);","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"dextboy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"dextboy"},"content":"                createFile(filePath);","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"dextboy"},"content":"            java.util.Scanner input \u003d new java.util.Scanner(file);","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"dextboy"},"content":"            while (input.hasNext()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"dextboy"},"content":"                String line \u003d input.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"dextboy"},"content":"                boolean isDone \u003d line.contains(\"[X]\");","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"dextboy"},"content":"                Task task \u003d getTask(line, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"dextboy"},"content":"                list.add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"dextboy"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"dextboy"},"content":"            input.close();","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"dextboy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"dextboy"},"content":"            System.out.println(\"     An error occurred while reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"dextboy"},"content":"     * Parses a line from the tasks file and reconstructs the corresponding Task object.","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"dextboy"},"content":"     * @param line   The line from the tasks file representing a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"dextboy"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"dextboy"},"content":"     * @return A new instance of {@link Task}, which can be a {@link Todo}, {@link Deadline}, or {@link Event}.","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"dextboy"},"content":"    private static Task getTask(String line, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"dextboy"},"content":"        Task task;","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"dextboy"},"content":"        if (line.startsWith(\"[D]\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"dextboy"},"content":"            String by \u003d line.substring(line.indexOf(\"(by: \") + 5, line.length() - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"dextboy"},"content":"            String description \u003d line.substring(7, line.indexOf(\" (by:\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"dextboy"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"dextboy"},"content":"        } else if (line.startsWith(\"[E]\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"dextboy"},"content":"            String times \u003d line.substring(line.indexOf(\"(from: \") + 7);","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"dextboy"},"content":"            String start \u003d times.substring(0, times.indexOf(\" to:\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"dextboy"},"content":"            String end \u003d times.substring(times.indexOf(\"to: \") + 4, times.length() - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"dextboy"},"content":"            String description \u003d line.substring(7, line.indexOf(\" (from:\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"dextboy"},"content":"            task \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"dextboy"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"dextboy"},"content":"            task \u003d new Todo(line.substring(7));","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"dextboy"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"dextboy"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"dextboy"},"content":"        return task;","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"dextboy":119}},{"path":"src/main/java/natsu/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.util;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import natsu.task.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":" * Manages the list of tasks in the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" * This class provides a static list to store tasks, allowing for global access","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":" * and manipulation of tasks across the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"public class TaskList {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"     * A static list that holds all tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"     * This list is designed to be accessed from anywhere within the application","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"     * to perform operations on tasks such as adding, removing, and querying tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"    public static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"dextboy":20}},{"path":"src/main/java/natsu/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"package natsu.util;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"import static natsu.util.TaskList.list;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":" * Provides user interface functionalities for displaying messages to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":" * This class includes methods to print various types of messages, such as welcome and exit messages,","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":" * task addition, completion, deletion messages, and the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"public class Ui {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"     * Prints a line separator to the console.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"dextboy"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"dextboy"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Hello! I\u0027m Natsu\");","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"dextboy"},"content":"     * Prints the exit message to the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"dextboy"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"     * Prints a message indicating a task has been added, including the task\u0027s description","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"     * and the current total number of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"    public static void printTaskAdded(String task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"dextboy"},"content":"     * Prints a message indicating a task has been marked as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"dextboy"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"dextboy"},"content":"    public static void printTaskDone(String task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"dextboy"},"content":"     * Prints a message indicating a task has been marked as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"dextboy"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"dextboy"},"content":"    public static void printTaskUndone(String task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"dextboy"},"content":"     * Prints the list of all tasks currently in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"dextboy"},"content":"    public static void printList() {","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"dextboy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"dextboy"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"dextboy"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"dextboy"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"dextboy"},"content":"     * Prints a message indicating a task has been deleted, including the task\u0027s description","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"dextboy"},"content":"     * and the current total number of tasks after deletion.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"dextboy"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"dextboy"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"dextboy"},"content":"     * @param size The new total number of tasks after the deletion.","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"dextboy"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"dextboy"},"content":"    public static void printTaskDeleted(String task, int size) {","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"dextboy"},"content":"        System.out.println(\"     Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"dextboy"},"content":"        printLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"dextboy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"dextboy"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"dextboy":102}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dextboy"},"content":"todo Read book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"dextboy"},"content":"todo Watch lecture","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"dextboy"},"content":"deadline Submit assignment /by Monday 10pm","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"dextboy"},"content":"deadline Pay bills /by 30th July","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"dextboy"},"content":"event Sister\u0027s birthday party /from Saturday 5pm /to Saturday 8pm","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"dextboy"},"content":"event Conference /from 15th Aug 9am /to 15th Aug 5pm","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"dextboy"},"content":"mark 1","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"dextboy"},"content":"mark 2","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"dextboy"},"content":"unmark 1","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"dextboy"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"dextboy"},"content":"Go grocery shopping","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"dextboy"},"content":"mark 6","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"dextboy"},"content":"unmark 3","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"dextboy"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"dextboy"},"content":"bye","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"dextboy":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"dextboy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src -name \"*.java\")","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"dextboy"},"content":"java -classpath ../bin natsu.Natsu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"dextboy"},"content":"# Delete text.ui.test/data directory after running the test","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"dextboy"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"dextboy"},"content":"then","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"dextboy"},"content":"    rm -r ./data","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"dextboy"},"content":"    echo \"data directory deleted after tests.\"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"dextboy"},"content":"fi","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"dextboy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"dextboy"},"content":"# Exit with the status code from diff","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"dextboy"},"content":"exit $?","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"dextboy":12,"-":34}}]
