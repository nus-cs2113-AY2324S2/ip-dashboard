[{"path":"src/main/java/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":" * Represents a command to add new task based on user input.","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"public class AddTask {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"     * Check if user input words contains any valid task description.","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"     * @param userInputWords Words user input as an array.","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"     * @throws DukeExceptions.NoDescriptionException","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"     * If user did not put any valid task description.","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"    public static void checkDescription(String[] userInputWords) throws","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"            DukeExceptions.NoDescriptionException {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"        if (userInputWords.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"            DukeExceptions.throwNoDescriptionException();","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"     * Returns a new Task that is either of a special type (toDo, event, deadline)","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"     * or not.","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"     * @param description Text input by the user.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"     * @return A task with a special type or a task with description","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"     * \"Not special task\" but no special type.","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"    public static Task addSpecialTask(String description) {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"        String[] userInputWords \u003d description.split(\" \");","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"            checkDescription(userInputWords);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"        } catch(DukeExceptions.NoDescriptionException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"fxe025"},"content":"            String taskType \u003d userInputWords[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(taskType + \" must have a description.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"fxe025"},"content":"            return new Task(\"Not special task\");","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"fxe025"},"content":"        char type \u003d Character.toUpperCase(userInputWords[0].charAt(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"fxe025"},"content":"        return new Task(description, type);","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"fxe025"},"content":"     * Monitoring user input, print and update the list of tasks constantly","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"fxe025"},"content":"     * according to the keywords identified.","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"fxe025"},"content":"     * Stop only when user input equals to \"bye\".","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"fxe025"},"content":"     * @param tasks Arraylist of tasks stored.","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"fxe025"},"content":"    public static void taskListManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"fxe025"},"content":"        int index \u003d DukeFile.latestIndex();","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"fxe025"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"fxe025"},"content":"        while (isRunning) {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"fxe025"},"content":"            Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"fxe025"},"content":"            String text \u003d userInput.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"fxe025"},"content":"            String[] userInputWords \u003d text.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"fxe025"},"content":"            switch (userInputWords[0]) {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"fxe025"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"fxe025"},"content":"                isRunning \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"fxe025"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"fxe025"},"content":"            case \"list\":","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"fxe025"},"content":"                PrintText.print(PrintText.LINEBREAK);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"fxe025"},"content":"                PrintTask.list(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"fxe025"},"content":"                PrintText.print(PrintText.LINEBREAK + \"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"fxe025"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"fxe025"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"fxe025"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"fxe025"},"content":"                MarkTask.mark(userInputWords, tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"fxe025"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"fxe025"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"fxe025"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"fxe025"},"content":"            case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"fxe025"},"content":"                Task specialTask \u003d addSpecialTask(text);","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"fxe025"},"content":"                if (specialTask.type !\u003d \u0027 \u0027) {","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"fxe025"},"content":"                    tasks.add(specialTask);","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"fxe025"},"content":"                    index++;","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"fxe025"},"content":"                    PrintTask.specialTask(specialTask, index);","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"fxe025"},"content":"                    PrintTask.printToFile(specialTask, index, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"fxe025"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"fxe025"},"content":"                break;","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"fxe025"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"fxe025"},"content":"                DeleteTask.delete(userInputWords, tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"fxe025"},"content":"                index--;","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"fxe025"},"content":"                PrintTask.printMultipleToFile(tasks, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"fxe025"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"fxe025"},"content":"            case \"find\":","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"fxe025"},"content":"                String toFind \u003d text.replace(\"find \", \"\");","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"fxe025"},"content":"                SearchTasks.printMatchedTasks(toFind, tasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"fxe025"},"content":"                break;","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"fxe025"},"content":"            default:","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"fxe025"},"content":"                Task task \u003d new Task(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"fxe025"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"fxe025"},"content":"                index++;","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"fxe025"},"content":"                PrintTask.normalTask(task, index);","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"fxe025"},"content":"                PrintTask.printToFile(task, index, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"fxe025":100}},{"path":"src/main/java/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":" * Represents a command to delete a task form an existing list of tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":"public class DeleteTask {","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"     * Delete a task from the stored list based on the user input.","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"     * @param userInputWords The task to be printed.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"     * @param tasks Arraylist of tasks stored.","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"    public static void delete(String[] userInputWords, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"        int indexToDelete \u003d -1;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"            indexToDelete \u003d MarkTask.findIndexToMark(userInputWords, tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"Index out of range\");","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"            return;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"        } catch(DukeExceptions.InvalidItemException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"Please enter a valid item to delete.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"            return;","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"        int indexInList \u003d indexToDelete - 1;","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"        Task taskToDelete \u003d tasks.get(indexInList);","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"        char type \u003d taskToDelete.getTypeIcon();","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"        String typeMark \u003d \"[\" + type + \"]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"        String statusMark \u003d \"[\" + taskToDelete.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"        PrintText.printWithLinebreak(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"                typeMark + statusMark + taskToDelete.description);","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"        tasks.remove(taskToDelete);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"fxe025":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.io.File;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"        String botName \u003d \"Battch\";","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"        PrintText.printWithLinebreak(\"Hello! I\u0027m \" + botName + \"\\n\" +","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"        DukeFile.main(args);","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"        File newData \u003d DukeFile.getFileData();","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"        DukeFile.readFromFile(newData, tasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"        AddTask.taskListManager(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"        PrintText.printWithLinebreak(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"fxe025":21,"-":4}},{"path":"src/main/java/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":" * Represents a collection of custom exception types for Duke.","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":" * These exceptions are used to handle specific errors in Duke\u0027s functionality.","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":"public class DukeExceptions {","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":"    public static class InvalidItemException extends Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"    public static class NoDescriptionException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"    public static void throwInvalidItemException() throws InvalidItemException {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"        throw new InvalidItemException();","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"    public static void throwNoDescriptionException() throws NoDescriptionException {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"        throw new NoDescriptionException();","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"fxe025":19}},{"path":"src/main/java/DukeFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":" * Represents an add command where a new task is added to the existing list of task.","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":" * String \u003ccode\u003eFILENAME\u003c/code\u003e represents the designated relative file path for the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":" * File \u003ccode\u003edukeData\u003c/code\u003e represents the File object created to be updated.","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"public class DukeFile {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"    private static final String FILENAME \u003d \"./dukeData.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"    private static File dukeData;","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"     * @param filePath File path where the file is located.","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"     * @param textToAdd The line of text to write to the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"     * @param ifAppend Indicate if append the text at the end of the file (true)","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"     *                 or overwrite the file (false).","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"     * @throws IOException If file is not found at the indicated file path.","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"    private static void writeToFile(String filePath, String textToAdd, boolean ifAppend) throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"        FileWriter writer \u003d new FileWriter(filePath, ifAppend);","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"        writer.write(textToAdd);","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"        writer.close();","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"    public static void updateFile(String inputText, boolean ifAppend) {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"            writeToFile(FILENAME, inputText, ifAppend);","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"fxe025"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"IOExceptions occurred\");","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"fxe025"},"content":"     * Retrieve the index of the last line in a file at file path FILENAME.","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"fxe025"},"content":"     * Returns 0 if the file is not found.","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"fxe025"},"content":"    public static int latestIndex() {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"fxe025"},"content":"            File fileToLook \u003d new File(FILENAME);","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"fxe025"},"content":"            Scanner s \u003d new Scanner(fileToLook);","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"fxe025"},"content":"            String lastLine \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"fxe025"},"content":"            int index \u003d 0;","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"fxe025"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"fxe025"},"content":"                lastLine \u003d s.nextLine();","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"fxe025"},"content":"                index +\u003d 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"fxe025"},"content":"            return index;","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"fxe025"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"return index 0\");","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"fxe025"},"content":"            return 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"fxe025"},"content":"     * Returns the private File dukeData.","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"fxe025"},"content":"    public static File getFileData() {","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"fxe025"},"content":"        return dukeData;","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"fxe025"},"content":"     * Read lines from the file and identify tasks written inside.","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"fxe025"},"content":"     * Add the identified tasks into a list of existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"fxe025"},"content":"     * @param fileToRead The file to read from.","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"fxe025"},"content":"     * @param existTasks Arraylist storing existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"fxe025"},"content":"    public static void readFromFile(File fileToRead, ArrayList\u003cTask\u003e existTasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"fxe025"},"content":"            Scanner scanner \u003d new Scanner(fileToRead);","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"fxe025"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"fxe025"},"content":"                String lineSkipped \u003d scanner.nextLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"fxe025"},"content":"                String typeAsString \u003d lineSkipped.substring(2, 5);","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"fxe025"},"content":"                String isMarkedAsString \u003d lineSkipped.substring(5, 8);","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"fxe025"},"content":"                char taskType;","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"fxe025"},"content":"                boolean isDone;","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"fxe025"},"content":"                String description \u003d lineSkipped.substring(9);","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"fxe025"},"content":"                switch (typeAsString) {","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"fxe025"},"content":"                case \"[E]\":","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"fxe025"},"content":"                    taskType \u003d \u0027E\u0027;","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"fxe025"},"content":"                    break;","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"fxe025"},"content":"                case \"[D]\":","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"fxe025"},"content":"                    taskType \u003d \u0027D\u0027;","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"fxe025"},"content":"                    break;","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"fxe025"},"content":"                case \"[T]\":","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"fxe025"},"content":"                    taskType \u003d \u0027T\u0027;","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"fxe025"},"content":"                    break;","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"fxe025"},"content":"                default:","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"fxe025"},"content":"                    taskType \u003d \u0027 \u0027;","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"fxe025"},"content":"                    break;","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"fxe025"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"fxe025"},"content":"                isDone \u003d isMarkedAsString.equals(\"[X]\");","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"fxe025"},"content":"            existTasks.add(new Task(description, taskType, isDone));","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"fxe025"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"File does not exist.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"fxe025"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"fxe025"},"content":"        dukeData \u003d new File(FILENAME);","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"fxe025"},"content":"            writeToFile(dukeData.getPath(), \"\", true);","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"fxe025"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"File does not exist.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"fxe025":115}},{"path":"src/main/java/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":" * Represents a command to mark a task stored in the list.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":" * Print the task for user to see current task status.","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"public class MarkTask {","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"     * Return the index of the task needed to be marked as written in the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"     * @param userInputWords User input as an array of words.","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"     * @param tasks Arraylist of tasks stored.","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"     * @throws DukeExceptions.InvalidItemException If the index to mark is not","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"     * a valid index/cannot be converted to an integer.","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"     * @throws ArrayIndexOutOfBoundsException If the index input is out of the","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"     * Arraylist\u0027s bound.","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"    public static int findIndexToMark(String[] userInputWords, ArrayList\u003cTask\u003e tasks) throws","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"            DukeExceptions.InvalidItemException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"            int testIndex \u003d Integer.parseInt(userInputWords[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"        } catch(Exception e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"            DukeExceptions.throwInvalidItemException();","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"        int indexFound \u003d Integer.parseInt(userInputWords[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"        if (indexFound \u003e tasks.size() || indexFound \u003c 1) {","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"        return indexFound;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"     * Mark a task listed in file based on user input given.","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"fxe025"},"content":"     * @param userInputWords User input as an array of words.","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"fxe025"},"content":"     * @param tasks Arraylist of tasks stored.","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"fxe025"},"content":"    public static void mark(String[] userInputWords, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"fxe025"},"content":"        int indexToMark \u003d -1;","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"fxe025"},"content":"        String isMarked \u003d userInputWords[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"fxe025"},"content":"            indexToMark \u003d findIndexToMark(userInputWords, tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"fxe025"},"content":"        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"Index out of range\");","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"fxe025"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"fxe025"},"content":"        } catch(DukeExceptions.InvalidItemException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"Please enter a valid item to mark/unmark.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"fxe025"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"fxe025"},"content":"        int indexInList \u003d indexToMark - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"fxe025"},"content":"        if (isMarked.equals(\"mark\")) {","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"fxe025"},"content":"            tasks.get(indexInList).isDone \u003d true;","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"fxe025"},"content":"            String statusMark \u003d \"[\" + tasks.get(indexInList).getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"fxe025"},"content":"                    statusMark + tasks.get(indexInList).description);","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"fxe025"},"content":"        } else if (isMarked.equals(\"unmark\")) {","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"fxe025"},"content":"            tasks.get(indexInList).isDone \u003d false;","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"fxe025"},"content":"            String statusMark \u003d \"[\" + tasks.get(indexInList).getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"fxe025"},"content":"                    statusMark + tasks.get(indexInList).description);","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"fxe025"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"unknown instruction\");","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"fxe025"},"content":"        PrintTask.printMultipleToFile(tasks, false);","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"fxe025":67}},{"path":"src/main/java/PrintTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":" * Represents a command to print one or multiple tasks to the screen and file.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":"public class PrintTask {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"     * Print all the tasks stored in the list.","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"     * @param tasks Arraylist of tasks stored.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"    public static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"        PrintText.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"            String indexPrinted \u003d index + \".\";","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"            char type \u003d task.getTypeIcon();","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"            String typeMark \u003d \"[\" + type + \"]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"            String statusMark \u003d \"[\" + task.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"            PrintText.print(indexPrinted + typeMark + statusMark + task.description);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"            index++;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"     * Print a task to the file at path FILENAME.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"     * @param input The task to be printed to the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"     * @param index The task index to be written in the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"     * @param ifAppend Indicate if append the text at the end of the file (true)","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"     *                 or overwrite the file (false)","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"    public static void printToFile(Task input, int index, boolean ifAppend) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"fxe025"},"content":"        String indexPrinted \u003d index + \".\";","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"fxe025"},"content":"        char type \u003d input.getTypeIcon();","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"fxe025"},"content":"        String typeMark \u003d \"[\" + type + \"]\";","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"fxe025"},"content":"        String statusMark \u003d \"[\" + input.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"fxe025"},"content":"        output +\u003d indexPrinted + typeMark + statusMark + input.description + \"\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"fxe025"},"content":"        DukeFile.updateFile(output, ifAppend);","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"fxe025"},"content":"     * Print multiple tasks to the file at path FILENAME.","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"fxe025"},"content":"     * @param tasks Arraylist of tasks stored.","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"fxe025"},"content":"     * @param ifAppend Indicate if append the text at the end of the file (true)","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"fxe025"},"content":"     *                 or overwrite the file (false)","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"fxe025"},"content":"    public static void printMultipleToFile(ArrayList\u003cTask\u003e tasks, boolean ifAppend) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"fxe025"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"fxe025"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"fxe025"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"fxe025"},"content":"            String indexPrinted \u003d index + \".\";","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"fxe025"},"content":"            char type \u003d task.getTypeIcon();","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"fxe025"},"content":"            String typeMark \u003d \"[\" + type + \"]\";","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"fxe025"},"content":"            String statusMark \u003d \"[\" + task.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"fxe025"},"content":"            output +\u003d indexPrinted + typeMark + statusMark + task.description + \"\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"fxe025"},"content":"            index++;","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"fxe025"},"content":"        DukeFile.updateFile(output, ifAppend);","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"fxe025"},"content":"     * Print out the task with special type, toDo, event, or deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"fxe025"},"content":"     * Task description is updated to the proper format.","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"fxe025"},"content":"     * @param newTask The task to be printed.","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"fxe025"},"content":"     * @param taskNum Total number of tasks in the list.","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"fxe025"},"content":"    public static void specialTask(Task newTask, int taskNum) {","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"fxe025"},"content":"        String intro \u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"fxe025"},"content":"        char type \u003d newTask.getTypeIcon();","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"fxe025"},"content":"        String taskDisplayed;","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"fxe025"},"content":"        String[] descriptionWords \u003d newTask.description.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"fxe025"},"content":"        switch(descriptionWords[0]) {","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"fxe025"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"fxe025"},"content":"            taskDisplayed \u003d newTask.description.replace(\"todo \", \"\");","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"fxe025"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"fxe025"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"fxe025"},"content":"            taskDisplayed \u003d newTask.description.replace(\"deadline \", \"\");","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"fxe025"},"content":"            if (taskDisplayed.contains(\"/by \")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"fxe025"},"content":"                taskDisplayed \u003d taskDisplayed.replaceFirst(\"/by \", \"(by: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"fxe025"},"content":"                taskDisplayed +\u003d \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"fxe025"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"fxe025"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"fxe025"},"content":"            taskDisplayed \u003d newTask.description.replace(\"event \", \"\");","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"fxe025"},"content":"            if (taskDisplayed.contains(\"/from \") \u0026\u0026 taskDisplayed.contains(\"/to \")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"fxe025"},"content":"                taskDisplayed \u003d taskDisplayed.replaceFirst(\"/from \", \"(from: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"fxe025"},"content":"                taskDisplayed \u003d taskDisplayed.replaceFirst(\"/to \", \"to: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"fxe025"},"content":"                taskDisplayed +\u003d \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"fxe025"},"content":"            break;","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"fxe025"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"fxe025"},"content":"            taskDisplayed \u003d newTask.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"fxe025"},"content":"        String typeMark \u003d \"[\" + type + \"]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"fxe025"},"content":"        String statusMark \u003d \"[\" + newTask.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"fxe025"},"content":"        String taskCount \u003d String.format(\"Now you have %d tasks in the list.\", taskNum);","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"fxe025"},"content":"        String output \u003d intro +typeMark + statusMark + taskDisplayed + \"\\n\" + taskCount;","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"fxe025"},"content":"        PrintText.printWithLinebreak(output);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"fxe025"},"content":"        newTask.setDescription(taskDisplayed);","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"fxe025"},"content":"     * Print out the task without special type, toDo, event, or deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"fxe025"},"content":"     * @param newTask The task to be printed.","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"fxe025"},"content":"     * @param taskNum Total number of tasks in the list.","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"fxe025"},"content":"    public static void normalTask(Task newTask, int taskNum) {","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"fxe025"},"content":"        String taskCount \u003d String.format(\"Now you have %d tasks in the list.\", taskNum);","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"fxe025"},"content":"        PrintText.printWithLinebreak(\"added: \" + newTask.description + \"\\n\" + taskCount);","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"fxe025":116}},{"path":"src/main/java/PrintText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":" * Represents a command to print a line of text to the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":" * String \u003ccode\u003eLINEBREAK\u003c/code\u003e represents line break to be printed when required.","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":"public class PrintText {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":"    public final static String LINEBREAK \u003d \"____________________________\" +","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"            \"________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"     * Print a line of text.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"     * @param text The input text to be printed.","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"    public static void print(String text) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"        System.out.println(text);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"     * Print a line of text along with one line break above and another below.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"     * @param text The input text to be printed.","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"    public static void printWithLinebreak(String text) {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"        print(LINEBREAK);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"        print(text);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"        print(LINEBREAK + \"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"fxe025":28}},{"path":"src/main/java/SearchTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":"public class SearchTasks {","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":"    public static ArrayList\u003cTask\u003e matchedTasks(String toFind, ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":"        ArrayList\u003cTask\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":"        ArrayList\u003cString\u003e toFindWords \u003d new ArrayList\u003c\u003e(Arrays.asList(toFind.split(\" \")));","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"            ArrayList\u003cString\u003e descriptionWords \u003d new ArrayList\u003c\u003e(Arrays.asList(task.description.split(\" \")));","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"            boolean isOneWordMatched \u003d false;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"            for (String word : toFindWords) {","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"                if (descriptionWords.contains(word)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"                    isOneWordMatched \u003d true;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"                    break;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"            if (isOneWordMatched \u0026\u0026 task.description.contains(toFind)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"                outputList.add(task);","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"        return outputList;","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"    public static void printMatchedTasks(String toFind, ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"        if (toFind.isEmpty()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"Please enter a valid item to search.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"            return;","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d matchedTasks(toFind, allTasks);","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"            Task test \u003d tasksFound.get(0);","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"            PrintText.printWithLinebreak(\"There are no matching tasks in your list.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"            return;","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"fxe025"},"content":"        PrintText.print(PrintText.LINEBREAK);","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"fxe025"},"content":"        PrintText.print(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"fxe025"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"fxe025"},"content":"        for (Task task : tasksFound) {","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"fxe025"},"content":"            String indexPrinted \u003d index + \".\";","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"fxe025"},"content":"            char type \u003d task.getTypeIcon();","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"fxe025"},"content":"            String typeMark \u003d \"[\" + type + \"]\";","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"fxe025"},"content":"            String statusMark \u003d \"[\" + task.getStatusIcon() + \"] \";","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"fxe025"},"content":"            PrintText.print(indexPrinted + typeMark + statusMark + task.description);","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"fxe025"},"content":"            index++;","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"fxe025"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"fxe025"},"content":"        PrintText.print(PrintText.LINEBREAK + \"\\n\");","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"fxe025":50}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fxe025"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"fxe025"},"content":" * Represents a task.","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"fxe025"},"content":" * String \u003ccode\u003edescription\u003c/code\u003e represents the textual description given to the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"fxe025"},"content":" * boolean \u003ccode\u003eisDone\u003c/code\u003e represents the complete status of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"fxe025"},"content":" * Either done (true) or not done (false).","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"fxe025"},"content":" * char \u003ccode\u003etype\u003c/code\u003e represents the task type toDo, event, deadline or none of them.","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"fxe025"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"fxe025"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"fxe025"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"fxe025"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"fxe025"},"content":"    protected char type;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"fxe025"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"fxe025"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"fxe025"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"fxe025"},"content":"        this.type \u003d \u0027 \u0027;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"fxe025"},"content":"    public Task(String description, char type) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"fxe025"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"fxe025"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"fxe025"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"fxe025"},"content":"     * Construct a new task with the specified description, type and isDone status.","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"fxe025"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"fxe025"},"content":"     * @param type Task type toDo, event, deadline or none of them.","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"fxe025"},"content":"     * @param isDone Indicate if the task is marked as done.","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"fxe025"},"content":"     * @throws IllegalArgumentException If zone is \u003c\u003d 0.","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"fxe025"},"content":"    public Task(String description, char type, boolean isDone) {","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"fxe025"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"fxe025"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"fxe025"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"fxe025"},"content":"     * Returns the status icon assigned to the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"fxe025"},"content":"     * Icon should be \"X\" if the task is done and \" \" if not done.","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"fxe025"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"fxe025"},"content":"        return (isDone? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"fxe025"},"content":"     * Returns the type icon assigned to the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"fxe025"},"content":"     * Icon equals to the attribute type.","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"fxe025"},"content":"    public char getTypeIcon() {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"fxe025"},"content":"        return type;","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"fxe025"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"fxe025"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"fxe025"},"content":"     * Update the task description to a new one.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"fxe025"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"fxe025"},"content":"     * @param newDescription New description given to the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"fxe025"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"fxe025"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"fxe025"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"fxe025"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"fxe025"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"fxe025":62}}]
