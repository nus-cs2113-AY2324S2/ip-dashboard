[{"path":"data/kvothe.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"E|1|evento|g|hoy|","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"T|0|cosas que hacer|","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"D|0|examen|ma√±ana|","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"T|0|hacer mas|","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"T|0|hhh hacer|","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"T|0|fff|","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"azamanis":6}},{"path":"src/main/java/Kvothe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"import kvothe.exception.KvotheException;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"import kvothe.exception.WrongArgumentsException;","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"import kvothe.Storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"public class Kvothe {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    private static final String FILEPATH \u003d \"data/kvothe.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    private static final int MAXTASKS \u003d 100;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(MAXTASKS);","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"            storage \u003d new  Storage(FILEPATH);","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        } catch (KvotheException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"            System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"        String greeting \u003d \"Hello! I\u0027m Kvothe.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"                + \"\\t\\tWhat can I do for you?\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"        String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"        tasks \u003d storage.loadFromFile();","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"        echo(greeting, true, false);","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"        echo(\"Here are the tasks in your list from your previous time:\", false, false);","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"        list();","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"        interact();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"        echo(bye);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"     * Prints a line with indentation and optional top and bottom border","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"     * @param line the line to print","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"     * @param isTop true to print the top border","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"     * @param isBottom true to print the bottom border","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"    private static void echo(String line, boolean isTop, boolean isBottom) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"        if (isTop) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"            System.out.println(\"\\t\\t____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"\\t\\t\" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"        if (isBottom) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"            System.out.println(\"\\t\\t____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"     * Prints a line with indentation","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"     * @param line the line to print","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"    private static void echo(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"\\t\\t____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"\\t\\t\" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"\\t\\t____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"     * Find all the tasks containing a keyword","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"     * @param word keyword for the search","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"    private static void find(String word){","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"        echo(\"Here are the matching tasks in your list:\", true, false);","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"            if(tasks.get(i).getDescription().contains(word)){","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"                echo(i + 1 + \". \" + tasks.get(i), false, false);","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"        echo(\"\", false, true);","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"     * Adds one task to the list","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"     * @param line with the information of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"     *             The first word is the command, and the rest is the description","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"     *             of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"     * @throws WrongArgumentsException if the line does not have the correct format","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"     *            ie arguments missing, extra arguments ....","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"    private static void add(String line) throws WrongArgumentsException {","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"azamanis"},"content":"        String lineWords[] \u003d line.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"        String command \u003d lineWords[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"        String args[];","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"        switch (command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"            args \u003d Task.parseLine(line);","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"            newTask \u003d new Todo(args[0]);","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"azamanis"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"azamanis"},"content":"            args \u003d Task.parseLine(line, Deadline.args);","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"azamanis"},"content":"            newTask \u003d new Deadline(args[0], args[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"            args \u003d Task.parseLine(line, Event.args);","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"            newTask \u003d new Event(args[0], args[1], args[2]);","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"            echo(\"Sorry. I do not support that method.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"        echo(\"added: \" + line + \"\\n\\t\\tnow you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"        Task.dumpToFile(tasks, FILEPATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"     * Deletes a task from the list","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2024-03-04"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"    private static void delete(int index) {","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"        echo(\"Noted. I\u0027ve removed this task:\\n\\t\\t\" + tasks.get(index - 1), true,false );","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"        echo(\"Now you have \" + tasks.size() + \" tasks in the list.\", false, true);","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"azamanis"},"content":"        Task.dumpToFile(tasks, FILEPATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"azamanis"},"content":"     * Lists all the tasks in the list","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"azamanis"},"content":"    private static void list() {","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":155,"author":{"gitId":"azamanis"},"content":"            echo(i + 1 + \". \" + tasks.get(i), i \u003d\u003d 0, i \u003d\u003d tasks.size() - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"azamanis"},"content":"     * Marks a task as done","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"azamanis"},"content":"    private static void done(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"azamanis"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":165,"author":{"gitId":"azamanis"},"content":"        echo(\"Nice! I\u0027ve marked this task as done:\\n\\t\\t\" + tasks.get(index - 1));","lastModifiedDate":"2024-02-17"},{"lineNumber":166,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":167,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"azamanis"},"content":"    private static void mark(int index){","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"azamanis"},"content":"        tasks.get(index - 1).setIsDone(true);","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"azamanis"},"content":"        echo(\"Nice! I\u0027ve marked this task as done:\\n\\t\\t\" + tasks.get(index - 1));","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"azamanis"},"content":"        Task.dumpToFile(tasks, FILEPATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"azamanis"},"content":"     * Marks a task as not done","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the task to mark as not done","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":180,"author":{"gitId":"azamanis"},"content":"    private static void unmark(int index){","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"azamanis"},"content":"        tasks.get(index - 1).setIsDone(false);","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"azamanis"},"content":"        echo(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + tasks.get(index - 1));","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"azamanis"},"content":"        Task.dumpToFile(tasks, FILEPATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"azamanis"},"content":"     * Gets the task number of the task from a line of input with the format \"command taskNumber\"","lastModifiedDate":"2024-03-04"},{"lineNumber":188,"author":{"gitId":"azamanis"},"content":"     * @param args line of input","lastModifiedDate":"2024-03-04"},{"lineNumber":189,"author":{"gitId":"azamanis"},"content":"     * @return the task number","lastModifiedDate":"2024-03-04"},{"lineNumber":190,"author":{"gitId":"azamanis"},"content":"     * @throws WrongArgumentsException if taskNumber is not a number of is not a valid index.","lastModifiedDate":"2024-03-04"},{"lineNumber":191,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"    private static int getTaskNumber(String[] args) throws WrongArgumentsException{","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"azamanis"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"azamanis"},"content":"        if (args.length !\u003d 2 ) {","lastModifiedDate":"2024-02-16"},{"lineNumber":196,"author":{"gitId":"azamanis"},"content":"          throw new WrongArgumentsException(\"Sorry. Input a task number.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"azamanis"},"content":"            // First argument is the command","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"azamanis"},"content":"            index \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"azamanis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"azamanis"},"content":"            throw new WrongArgumentsException(\"Sorry. The task number must be a number.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"azamanis"},"content":"        if(index \u003e tasks.size()){","lastModifiedDate":"2024-02-17"},{"lineNumber":207,"author":{"gitId":"azamanis"},"content":"            throw new WrongArgumentsException(\"Sorry. There are only \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2024-02-17"},{"lineNumber":208,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"azamanis"},"content":"        return index;","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":215,"author":{"gitId":"azamanis"},"content":"     * Interacts with the user. Reads one line and execute the input.","lastModifiedDate":"2024-03-04"},{"lineNumber":216,"author":{"gitId":"azamanis"},"content":"     * The interaction stops when the user inputs \"bye\"","lastModifiedDate":"2024-03-04"},{"lineNumber":217,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":218,"author":{"gitId":"azamanis"},"content":"    public static void interact() {","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"azamanis"},"content":"        String stopWord \u003d \"bye\";","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"azamanis"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"azamanis"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"azamanis"},"content":"        while (!line.equals(stopWord)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"azamanis"},"content":"            String lineWords[] \u003d line.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"azamanis"},"content":"            String command \u003d lineWords[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":227,"author":{"gitId":"azamanis"},"content":"            int taskNumber;","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"azamanis"},"content":"            try{","lastModifiedDate":"2024-02-11"},{"lineNumber":230,"author":{"gitId":"azamanis"},"content":"                switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"azamanis"},"content":"                case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":232,"author":{"gitId":"azamanis"},"content":"                    list();","lastModifiedDate":"2024-01-31"},{"lineNumber":233,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"azamanis"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"azamanis"},"content":"                    taskNumber \u003d getTaskNumber(lineWords);","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"azamanis"},"content":"                    mark(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"azamanis"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"azamanis"},"content":"                    taskNumber \u003d getTaskNumber(lineWords);","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"azamanis"},"content":"                    unmark(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"azamanis"},"content":"                case \"todo\":","lastModifiedDate":"2024-02-11"},{"lineNumber":243,"author":{"gitId":"azamanis"},"content":"                case \"deadline\":","lastModifiedDate":"2024-02-11"},{"lineNumber":244,"author":{"gitId":"azamanis"},"content":"                case \"event\":","lastModifiedDate":"2024-02-11"},{"lineNumber":245,"author":{"gitId":"azamanis"},"content":"                    add(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":247,"author":{"gitId":"azamanis"},"content":"                case \"delete\":","lastModifiedDate":"2024-02-17"},{"lineNumber":248,"author":{"gitId":"azamanis"},"content":"                    taskNumber \u003d getTaskNumber(lineWords);","lastModifiedDate":"2024-02-17"},{"lineNumber":249,"author":{"gitId":"azamanis"},"content":"                    delete(taskNumber);","lastModifiedDate":"2024-02-17"},{"lineNumber":250,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"azamanis"},"content":"                case \"find\":","lastModifiedDate":"2024-03-04"},{"lineNumber":252,"author":{"gitId":"azamanis"},"content":"                    find(lineWords[1]);","lastModifiedDate":"2024-03-04"},{"lineNumber":253,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-03-04"},{"lineNumber":254,"author":{"gitId":"azamanis"},"content":"                default:","lastModifiedDate":"2024-02-11"},{"lineNumber":255,"author":{"gitId":"azamanis"},"content":"                    throw new WrongArgumentsException(\"Sorry. I do not support the method \" + command);","lastModifiedDate":"2024-02-17"},{"lineNumber":256,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"azamanis"},"content":"            }catch (WrongArgumentsException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":258,"author":{"gitId":"azamanis"},"content":"                echo(e.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":259,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":260,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":261,"author":{"gitId":"azamanis"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":262,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":263,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":264,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"azamanis":267}},{"path":"src/main/java/kvothe/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"import kvothe.exception.KvotheException;","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Deadline;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Event;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Todo;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"import java.io.File;","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"public class Storage {","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    private String filePath;","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    public Storage(String filePath) throws KvotheException {","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        // Create file if it does not exist","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"            try {","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"                file.createNewFile();","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"                System.out.println(\"File created successfully.\");","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"                throw new KvotheException(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"    public void dumpToFile(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath, false));","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"                // [Type][Done] descr (arg1: value1, arg2: value2 ...)","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"                writer.newLine();","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"            writer.close();","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"            System.err.println(\"Error writing to the file: \" + e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"            java.io.BufferedReader reader \u003d new java.io.BufferedReader(new java.io.FileReader(this.filePath));","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"            String line;","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"                char type \u003d line.charAt(0);","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"                boolean isDone \u003d line.charAt(2) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"                String args[] \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"                switch (type) {","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"                        tasks.add(new Todo(args[2]));","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"                        break;","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"                        tasks.add(new Deadline(args[2], args[3]));","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"                        break;","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"                        tasks.add(new Event(args[2], args[3], args[4]));","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"                        break;","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"                    default:","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"                        System.err.println(\"Invalid task type: \" + type);","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"                        break;","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"                tasks.get(tasks.size() - 1).setIsDone(isDone);","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"            reader.close();","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"            System.err.println(\"Error reading from the file: \" + e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"        return tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"azamanis":88}},{"path":"src/main/java/kvothe/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import kvothe.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"public class TaskList {","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    public TaskList(int size){","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(size);","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    public void add(Task task){","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    public void remove(int index){","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"azamanis":22}},{"path":"src/main/java/kvothe/exception/KvotheException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe.exception;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":" * Represents an exception of the application. Is the most generic exception of the application.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"public class KvotheException extends Exception{","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"    public KvotheException(String message){","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"        super(message);","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    public String toString(){","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"azamanis":15}},{"path":"src/main/java/kvothe/exception/WrongArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe.exception;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":" * Exception for when the arguments passed in an input line are incorrect.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"public class WrongArgumentsException extends KvotheException {","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"    public WrongArgumentsException(String message){","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"        super(message);","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"azamanis":11}},{"path":"src/main/java/kvothe/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":" * Contains a description and a deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":" * Inherits from Task.","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    protected String by;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    public static final String[] args \u003d {\"/by\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"     * @return the string representation of the task to be saved in the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        return \"D\" + super.toFileString() + this.by + \"|\";","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"    public String getBy(){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        return this.by;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"    public String toString(){","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"azamanis":33}},{"path":"src/main/java/kvothe/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":" * Represents a task to be done in an specific moment.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":" * Contains a description, beginning (from) and end (to) .","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":" * Inherits from Task.","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    protected String from;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    protected String to;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    public static final String[] args \u003d {\"/from\", \"/to\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    public String getFrom(){","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        return this.from;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    public String getTo(){","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"        return this.to;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"        return \"E\" + super.toFileString() + this.from + \"|\" + this.to + \"|\";","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    public String toString(){","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to +\")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"azamanis":35}},{"path":"src/main/java/kvothe/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"import kvothe.exception.WrongArgumentsException;","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":" * Represents a task; something to be done.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"    //TODO: keep track of the received args","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"     * Parses the line and returns the arguments to create a new task.","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"     * @param line the line to parse","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"     * @param validArgs expected arguments for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"     * @return the values for the arguments.","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"     * @throws WrongArgumentsException if the arguments in the input are invalid","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"    public static String[] parseLine(String line, String[] validArgs) throws WrongArgumentsException {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"        String args[] \u003d line.split(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"        String newArgs[] \u003d new String[validArgs.length + 1];","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"        String aux \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"        int i;","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"        int indexOfNewArgs \u003d 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        int indexOfValidArgs \u003d 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"        int lenOfArgGiven \u003d 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"        for (i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"            String word \u003d args[i];","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"            if (word.equals(validArgs[Math.min(indexOfValidArgs, validArgs.length - 1)])) {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"                if (lenOfArgGiven \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"                    String name \u003d indexOfValidArgs \u003e 0 ? validArgs[indexOfValidArgs - 1] : \"description\";","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"                    throw new WrongArgumentsException(\"No value for \" + name);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"                newArgs[indexOfNewArgs++] \u003d aux.trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"                aux \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"                indexOfValidArgs++;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"                lenOfArgGiven \u003d 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"            } else if (word.startsWith(\"/\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"                //We are forcing to receive the arguments in one order.","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"                //TODO: consider to allow the user to input the arguments in any order","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"                throw new WrongArgumentsException(\"Invalid argument \" + word +","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"                        \". Expected \" + validArgs[indexOfValidArgs]);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"                aux +\u003d word + \" \";","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"                lenOfArgGiven++;","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"        newArgs[indexOfNewArgs] \u003d aux.trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"        if (lenOfArgGiven \u003d\u003d 0) {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"            String name \u003d indexOfValidArgs \u003e 0 ? validArgs[indexOfValidArgs - 1] : \"description\";","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"            throw new WrongArgumentsException(\"No value for \" + name);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"        if (indexOfValidArgs !\u003d validArgs.length) {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"            String message \u003d \"Missing arguments. Expected \";","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"            for (String arg : validArgs) {","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"                message +\u003d arg + \" \";","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"            throw new WrongArgumentsException(message);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"        return newArgs;","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"     * Parses the line and returns the arguments to create a new task of type TODO.","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"     * @param line the line to parse","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"     * @return the values for the arguments.","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"     * @throws WrongArgumentsException if the arguments in the input are invalid","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"    public static String[] parseLine(String line) throws WrongArgumentsException {","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"        String args[] \u003d line.split(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"        String newArgs[] \u003d new String[1];","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"        String aux \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"            String word \u003d args[i];","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"            if (word.startsWith(\"/\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"                throw new WrongArgumentsException(\"kvothe.task.Todo does not accept arguments.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"                aux +\u003d word + \" \";","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"        if (aux.isEmpty()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"            throw new WrongArgumentsException(\"No value for description.\" );","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"        newArgs[0] \u003d aux.trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"azamanis"},"content":"        return newArgs;","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"azamanis"},"content":"    public void setIsDone(boolean isDone){","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"azamanis"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"        return (this.isDone ? \"X\" : \" \"); //return tick or X symbols","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"        return  \"|\" + status + \"|\" + this.description + \"|\";","lastModifiedDate":"2024-02-17"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"     * Writes a task to a file.","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"     * @param tasks the tasks to write to the file","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"     * @param filename the name of the file where to write the tasks","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"azamanis"},"content":"    public static void dumpToFile(ArrayList\u003cTask\u003e tasks, String filename){","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"azamanis"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"azamanis"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filename, false));","lastModifiedDate":"2024-02-17"},{"lineNumber":151,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":152,"author":{"gitId":"azamanis"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":153,"author":{"gitId":"azamanis"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2024-02-17"},{"lineNumber":154,"author":{"gitId":"azamanis"},"content":"                // [Type][Done] descr (arg1: value1, arg2: value2 ...)","lastModifiedDate":"2024-02-17"},{"lineNumber":155,"author":{"gitId":"azamanis"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":158,"author":{"gitId":"azamanis"},"content":"            writer.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"azamanis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":161,"author":{"gitId":"azamanis"},"content":"            System.err.println(\"Error writing to the file: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":163,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":164,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":165,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":166,"author":{"gitId":"azamanis"},"content":"     * Reads tasks from a file and returns an array of tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"azamanis"},"content":"     * @param filename the name of the file where to read the tasks","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"azamanis"},"content":"     * @return the tasks read from the file","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"azamanis"},"content":"    public static ArrayList\u003cTask\u003e loadFromFile(String filename){","lastModifiedDate":"2024-02-17"},{"lineNumber":171,"author":{"gitId":"azamanis"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"azamanis"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"azamanis"},"content":"            java.io.BufferedReader reader \u003d new java.io.BufferedReader(new java.io.FileReader(filename));","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"azamanis"},"content":"            String line;","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"azamanis"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"azamanis"},"content":"                char type \u003d line.charAt(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"azamanis"},"content":"                boolean isDone \u003d line.charAt(2) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"azamanis"},"content":"                String args[] \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"azamanis"},"content":"                switch (type) {","lastModifiedDate":"2024-02-17"},{"lineNumber":181,"author":{"gitId":"azamanis"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"azamanis"},"content":"                    tasks.add(new Todo(args[2]));","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"azamanis"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2024-02-17"},{"lineNumber":185,"author":{"gitId":"azamanis"},"content":"                    tasks.add(new Deadline(args[2], args[3]));","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":187,"author":{"gitId":"azamanis"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2024-02-17"},{"lineNumber":188,"author":{"gitId":"azamanis"},"content":"                    tasks.add(new Event(args[2], args[3], args[4]));","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"azamanis"},"content":"                default:","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"azamanis"},"content":"                    System.err.println(\"Invalid task type: \" + type);","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"                    break;","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":195,"author":{"gitId":"azamanis"},"content":"                tasks.get(tasks.size() - 1).setIsDone(isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":196,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"azamanis"},"content":"            reader.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"azamanis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"azamanis"},"content":"            System.err.println(\"Error reading from the file: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":203,"author":{"gitId":"azamanis"},"content":"        return tasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"azamanis":209}},{"path":"src/main/java/kvothe/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package kvothe.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":" * Represents a task to be done. Simplest task.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":" * Contains a description.","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":" * Inherits from Task.","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"        public Todo (String description){","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"            super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"        @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"        public String toString(){","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"        public String toFileString(){","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"            return \"T\" + super.toFileString();","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"azamanis":22}}]
