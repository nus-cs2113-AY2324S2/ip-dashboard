[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project`","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"      to close the existing project first)","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in ","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"   [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` ","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"   option.","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"4. After that, locate the `src/main/java/RecrBad.java` file, right-click it, and ","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"   choose `Run RecrBad.main()` (if the code editor is showing compile errors, try ","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"   restarting the IDE). If the setup is correct, you should see something like the ","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"   below as the output:","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"   Hello! I\u0027m","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":" ____   ___    ___   ____    ___","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"| __/  / _ \\  | _ \\  | __|  / _ \\","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"| |    ||_||  | / /  | |_   | | |","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"| |_   | _ |  | _/   |_  /  | | |","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"|___\\  // \\\\  |_|    /__/ . \\___/","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"****************************************","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"What can I do for you?","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"```","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"5. Ctrl D to FC (compare files)","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"## Possible user commands","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"1. `todo \u003ctask\u003e`                            : Add todo task ","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"2. `deadline \u003ctask\u003e /\u003cdeadline\u003e`            : Add deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"3. `event \u003ctask\u003e /\u003cstartTime\u003e /\u003cendTime\u003e`   : Add event ","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"4. `list`                                   : List all tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"5. `mark/unmark \u003ctaskIndex\u003e`                : Mark task \u003cindex\u003e as done/ undone","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"6. `find \u003ckeyword\u003e`                         : Finds keyword in list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"7. `bye`                                    : Exit Program","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"NGXZS":37,"-":9}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"# RecrBad project template","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"This is a project template for a greenfield RecrBad project. It\u0027s named after the RecrBad mascot _RecrBad_. ","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"Given below are instructions on how to use it.","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"## Setting up in Intellij","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project`","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"   to close the existing project first)","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"    1. Click `Open`.","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"    3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"   [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default`","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"   option.","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"4. After that, locate the `src/main/java/RecrBad.java` file, right-click it, and","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"   choose `Run RecrBad.main()` (if the code editor is showing compile errors, try","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"   restarting the IDE). If the setup is correct, you should see something like the","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"   below as the output:","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"   Hello! I\u0027m","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":" ____   ___    ___   ____    ___","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"| __/  / _ \\  | _ \\  | __|  / _ \\","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"| |    ||_||  | / /  | |_   | | |","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"| |_   | _ |  | _/   |_  /  | | |","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"|___\\  // \\\\  |_|    /__/ . \\___/","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"****************************************","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"What can I do for you?","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"5. Ctrl D to FC (compare files)","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"## Possible user commands","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"1. `todo \u003ctask\u003e`                            : Add todo task","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"2. `deadline \u003ctask\u003e /\u003cdeadline\u003e`            : Add deadline","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"3. `event \u003ctask\u003e /\u003cstartTime\u003e /\u003cendTime\u003e`   : Add event","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"4. `list`                                   : List all tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"5. `mark/unmark \u003ctaskIndex\u003e`                : Mark task \u003cindex\u003e as done/ undone","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"6. `find \u003ckeyword\u003e`                         : Finds keyword in list of tasks","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"7. `bye`                                    : Exit Program","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"NGXZS":39,"-":7}},{"path":"saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"1. [T][0] item2","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"2. [T][0] item5","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"3. [T][0] item2","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"4. [T][1] item6","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"5. [D][0] item7 (by: efs)","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"6. [D][0] kjdfl (by: sdf)","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"7. [D][0] sdf(by:  sdf sd /fds)","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"8. [D][0] something (by: by 2/12/2019)","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"9. [T][0] fdsjfk","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"10. [E][0] sjk (from: sd fsto  )","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"NGXZS":10}},{"path":"src/main/java/RecrBad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"import helperFunctions.InvalidParamsException;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"import helperFunctions.Storage;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"import helperFunctions.TaskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"import helperFunctions.Ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"public class RecrBad {","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"     * Constructor to start main program: sayHi() on UI, open and process FILE_NAME,","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"     * create FILE_NAME if does not exist, and asks User for input","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"     * ","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"    public RecrBad(String FILE_NAME) {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"        Ui.sayHi();","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"            Storage.readFile(FILE_NAME, tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"        } catch (InvalidParamsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"            Ui.showLoadingError(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"        Ui.readInput(tasks, FILE_NAME);","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"     * Main programme","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"     * @param args default arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"        String FILE_NAME \u003d \"saveFile.txt\";","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"        new RecrBad(FILE_NAME);","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"NGXZS":38}},{"path":"src/main/java/helperFunctions/InvalidParamsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class InvalidParamsException extends Exception{","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    public InvalidParamsException(String errorMessage) { // constructor","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"NGXZS":8}},{"path":"src/main/java/helperFunctions/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"     * Process User Input and calls appropriate TaskList function","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"     * @param tasks      TaskList object to hold many tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"     * @param userInput  from CLI or from FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME  to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"     * @param isReadMode specifies if reading from FILE_NAME or writing to it","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"     * @return true to continue asking for user input; false to stop","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid command","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"    public static boolean processUserInput(TaskList tasks, String userInput, String FILE_NAME, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"        String[] userInputInParts \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"        boolean isMark;","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"        switch (userInputInParts[0].toUpperCase()) {","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"        case \"BYE\":","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"            return false; // EXITS loop","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"        case \"LIST\":","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"            System.out.print(tasks.displayList());","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"        case \"MARK\":","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"            isMark \u003d true;","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"            tasks.markOperation(userInputInParts, isMark, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"        case \"UNMARK\":","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"            isMark \u003d false;","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"            tasks.markOperation(userInputInParts, isMark, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"        case \"DELETE\":","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"            tasks.deleteOperation(userInputInParts, FILE_NAME);","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"        case \"FIND\":","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"            tasks.findOperation(userInputInParts);","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"        case \"TODO\":","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"            tasks.addTodoTask(userInputInParts, userInput, FILE_NAME, isReadMode); // change tasks to ArrayList\u003cTAsk\u003e, f void now","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"            tasks.addDeadlineTask(userInputInParts, userInput, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"NGXZS"},"content":"        case \"EVENT\":","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"NGXZS"},"content":"            tasks.addEventTask(userInputInParts, userInput, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"NGXZS"},"content":"            break;","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"NGXZS"},"content":"        default:","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No such command.\" + System.lineSeparator() + Ui.printCommandsList());","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"NGXZS"},"content":"        return true;","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"NGXZS"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"NGXZS"},"content":" * Takes in deadline of \"yyyy/mm/dd\" and formats to \"MMM d yyyy\"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"NGXZS"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"NGXZS"},"content":" * @param deadline is unformatted","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"NGXZS"},"content":" * @return deadline of format \"MMM d yyyy\"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"NGXZS"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"NGXZS"},"content":"public static String formatDeadline(String deadline) {","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"NGXZS"},"content":"    String formattedDeadline \u003d deadline.replaceAll(\"/\", \"-\").trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"NGXZS"},"content":"    LocalDate dateObject \u003d LocalDate.parse(formattedDeadline);","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"NGXZS"},"content":"    return dateObject.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"NGXZS"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"NGXZS"},"content":" * Checks for valid deadline format \"yyyy/mm/dd\"","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"NGXZS"},"content":" *","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"NGXZS"},"content":" * @param deadline of unknown format","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"NGXZS"},"content":" * @return true if valid, else false","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"NGXZS"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"NGXZS"},"content":"public static boolean isValidDeadline(String deadline) {","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"NGXZS"},"content":"    int LENGTH_OF_DEADLINE_COMPONENTS \u003d 3;","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"NGXZS"},"content":"    int LENGTH_OF_YEAR \u003d 4;","lastModifiedDate":"2024-03-07"},{"lineNumber":77,"author":{"gitId":"NGXZS"},"content":"    int LENGTH_OF_MONTHS \u003d 2;","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"NGXZS"},"content":"    int LENGTH_OF_DAYS \u003d 2;","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"NGXZS"},"content":"    String formattedDeadline \u003d deadline.replaceAll(\"/\", \"-\").trim();","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"NGXZS"},"content":"    String[] deadlineParts \u003d formattedDeadline.split(\"-\");","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"NGXZS"},"content":"    return ((deadlineParts.length \u003d\u003d LENGTH_OF_DEADLINE_COMPONENTS)","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"NGXZS"},"content":"            \u0026\u0026 (deadlineParts[0].length() \u003d\u003d LENGTH_OF_YEAR)","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"NGXZS"},"content":"            \u0026\u0026 (deadlineParts[1].length() \u003d\u003d LENGTH_OF_MONTHS)","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"NGXZS"},"content":"            \u0026\u0026 (deadlineParts[2].length() \u003d\u003d LENGTH_OF_DAYS));","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"NGXZS":87}},{"path":"src/main/java/helperFunctions/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"import java.io.File;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":" * Functions relating to FILE_NAME storing all the tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"     * Appends a task to Tasks in FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"     * @param textToAppend the new Task to add","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if error appending to file","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"    public static void appendToFile(String FILE_NAME, String textToAppend) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"            FileWriter fw \u003d new FileWriter(FILE_NAME, true); // in append mode","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"            fw.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Cannot append to file\");","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"     * Overwrites all tasks in FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"     * @param textToWrite the new tasks to write","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if error writting to file","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"    public static void writeToFile(String FILE_NAME, String textToWrite) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"            FileWriter fw \u003d new FileWriter(FILE_NAME); // overwrites file","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"            fw.write(textToWrite);","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"            fw.close();","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Cannot write to file\");","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"NGXZS"},"content":"     * Gets absolute file path to FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"NGXZS"},"content":"     * @return absolute file path","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"NGXZS"},"content":"    public static String getAbsoluteFilePath(String FILE_NAME) {","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"NGXZS"},"content":"        String currentDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"NGXZS"},"content":"        java.nio.file.Path directoryPath \u003d java.nio.file.Paths.get(currentDirectory);","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"NGXZS"},"content":"        return directoryPath + \"/\" + FILE_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"NGXZS"},"content":"     * Checks if FILE_NAME exists. If not, create it.","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"NGXZS"},"content":"     * @param f File object pointing to absoluteFilePath","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"NGXZS"},"content":"     * @param absoluteFilePath of saveFile.txt","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if error creating file","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"NGXZS"},"content":"    public static void isFileExist(File f, String absoluteFilePath) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"NGXZS"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"NGXZS"},"content":"                System.out.println(\"File created: \" + f.getName() + \"at\" + absoluteFilePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"NGXZS"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"NGXZS"},"content":"                System.out.println(\"File \" + f.getName() + \" already exists at \" + absoluteFilePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"NGXZS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Error Occurred\");","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":80,"author":{"gitId":"NGXZS"},"content":"     * Checks if FILE_NAME exists and process it","lastModifiedDate":"2024-03-07"},{"lineNumber":81,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"NGXZS"},"content":"     * @param tasks TaskList object to store all tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if error creating or processing file","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"NGXZS"},"content":"     **/","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"NGXZS"},"content":"    public static void readFile(String FILE_NAME, TaskList tasks) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"NGXZS"},"content":"        String absoluteFilePath \u003d getAbsoluteFilePath(FILE_NAME);","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"NGXZS"},"content":"        File f \u003d new File(absoluteFilePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"NGXZS"},"content":"            isFileExist(f, absoluteFilePath);","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"NGXZS"},"content":"            processFile(f, FILE_NAME, tasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"NGXZS"},"content":"        } catch (InvalidParamsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"NGXZS"},"content":"     * Process FILE_NAME ie adds tasks to Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":102,"author":{"gitId":"NGXZS"},"content":"     * @param f File Object pointing to absolute file path of FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":103,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"NGXZS"},"content":"     * @param tasks TaskList object to hold all tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if file not found or invalid mark command","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":107,"author":{"gitId":"NGXZS"},"content":"    private static void processFile(File f, String FILE_NAME, TaskList tasks) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"NGXZS"},"content":"        Scanner s;","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"NGXZS"},"content":"            s \u003d new Scanner(f);  // create a Scanner using file as source","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"NGXZS"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"File not found\");","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"NGXZS"},"content":"        int lineNum \u003d 1; // keeps track of current lineNum","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"NGXZS"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"NGXZS"},"content":"            String currentLineInFile \u003d s.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"NGXZS"},"content":"            // process lines in saveFile.txt","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_TYPE \u003d currentLineInFile.indexOf(\u0027[\u0027) + 1; // format of text: \"1. [T][1] startOfTaskDescription\"","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_MARK \u003d START_INDEX_OF_TYPE + 3; // mark index is 3 positions to the right","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_DESCRIPTION \u003d START_INDEX_OF_MARK + 3; // description index is 3 more positions to the right","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"NGXZS"},"content":"            // checks validity of index","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"NGXZS"},"content":"            if (!isIndexesValid(currentLineInFile, START_INDEX_OF_TYPE, START_INDEX_OF_MARK, START_INDEX_OF_DESCRIPTION)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(currentLineInFile + \" is not valid\");","lastModifiedDate":"2024-03-07"},{"lineNumber":126,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"NGXZS"},"content":"            String command \u003d \"\";","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"NGXZS"},"content":"            char mark;","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"NGXZS"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"NGXZS"},"content":"                command +\u003d generateCommandFromFileLine(START_INDEX_OF_TYPE, START_INDEX_OF_DESCRIPTION, currentLineInFile);","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"NGXZS"},"content":"                mark \u003d getMarkStatus(START_INDEX_OF_MARK, currentLineInFile);","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"NGXZS"},"content":"            } catch (InvalidParamsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"NGXZS"},"content":"            // process command in file","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"NGXZS"},"content":"            boolean isReadMode \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"NGXZS"},"content":"            Parser.processUserInput(tasks, command, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"NGXZS"},"content":"            // create mark command (for mark tasks only)","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"NGXZS"},"content":"            if (mark \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"NGXZS"},"content":"                // create mark command","lastModifiedDate":"2024-03-07"},{"lineNumber":144,"author":{"gitId":"NGXZS"},"content":"                String markCommand;","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"NGXZS"},"content":"                markCommand \u003d \"mark \" + lineNum;","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"NGXZS"},"content":"                Parser.processUserInput(tasks, markCommand, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"NGXZS"},"content":"            lineNum +\u003d 1;","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"NGXZS"},"content":"     * Checks if indexes are valid to add tasks when processing FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"NGXZS"},"content":"     * @param currentLineInFile which is being processed","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_TYPE in currentLineInFile for task.getType()","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_MARK in currentLineInFile for task.getStatus()","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_DESCRIPTION in currentLineInFile for task.getDescription()","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"NGXZS"},"content":"     * @return true if valid, else false","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"NGXZS"},"content":"    private static boolean isIndexesValid(String currentLineInFile, int START_INDEX_OF_TYPE,","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_MARK, int START_INDEX_OF_DESCRIPTION) {","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"NGXZS"},"content":"        return !(currentLineInFile.indexOf(\u0027[\u0027) \u003d\u003d -1) ||","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"NGXZS"},"content":"                (START_INDEX_OF_TYPE + 1 \u003e currentLineInFile.length()) ||","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"NGXZS"},"content":"                (START_INDEX_OF_MARK + 1 \u003e currentLineInFile.length()) ||","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"NGXZS"},"content":"                (START_INDEX_OF_DESCRIPTION + 1 \u003e currentLineInFile.length());","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"NGXZS"},"content":"     * Generate command to add tasks when processing FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_TYPE in currentLineInFile for task.getType()","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_DESCRIPTION in currentLineInFile for task.getDescription()","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"NGXZS"},"content":"     * @param currentLineInFile which is being processed","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"NGXZS"},"content":"     * @return command to add tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid or missing task.type","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"NGXZS"},"content":"    private static String generateCommandFromFileLine(int START_INDEX_OF_TYPE,","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_DESCRIPTION, String currentLineInFile) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"NGXZS"},"content":"            String command \u003d \"\";","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"NGXZS"},"content":"            char type \u003d currentLineInFile.charAt(START_INDEX_OF_TYPE);","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"NGXZS"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"NGXZS"},"content":"                command +\u003d \"todo \";","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"NGXZS"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"NGXZS"},"content":"                command +\u003d \"deadline \";","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"NGXZS"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"NGXZS"},"content":"                command +\u003d \"event \";","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"NGXZS"},"content":"            } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(currentLineInFile + \" type is not valid\");","lastModifiedDate":"2024-03-07"},{"lineNumber":193,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"NGXZS"},"content":"            command +\u003d getDescriptionCommand(type, START_INDEX_OF_DESCRIPTION, currentLineInFile);","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"NGXZS"},"content":"            return command;","lastModifiedDate":"2024-03-07"},{"lineNumber":197,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"NGXZS"},"content":"        } catch (InvalidParamsException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":199,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(e.getMessage());","lastModifiedDate":"2024-03-07"},{"lineNumber":200,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":201,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":204,"author":{"gitId":"NGXZS"},"content":"     * Get description from currentLineInFile when processing FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":205,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":206,"author":{"gitId":"NGXZS"},"content":"     * @param type of task","lastModifiedDate":"2024-03-07"},{"lineNumber":207,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_DESCRIPTION in currentLineInFile for task.getDescription()","lastModifiedDate":"2024-03-07"},{"lineNumber":208,"author":{"gitId":"NGXZS"},"content":"     * @param currentLineInFile which is being processed","lastModifiedDate":"2024-03-07"},{"lineNumber":209,"author":{"gitId":"NGXZS"},"content":"     * @return taskDescription","lastModifiedDate":"2024-03-07"},{"lineNumber":210,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":211,"author":{"gitId":"NGXZS"},"content":"    private static String getDescriptionCommand(char type, int START_INDEX_OF_DESCRIPTION, String currentLineInFile) {","lastModifiedDate":"2024-03-07"},{"lineNumber":212,"author":{"gitId":"NGXZS"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":214,"author":{"gitId":"NGXZS"},"content":"        if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-03-06"},{"lineNumber":215,"author":{"gitId":"NGXZS"},"content":"            int startIndexToChange \u003d currentLineInFile.lastIndexOf(\"(by: \"); // change \"(by: \" to \"/\"","lastModifiedDate":"2024-03-07"},{"lineNumber":216,"author":{"gitId":"NGXZS"},"content":"            int endIndexToChange \u003d currentLineInFile.lastIndexOf(\")\"); // change \")\" to \"\"","lastModifiedDate":"2024-03-07"},{"lineNumber":217,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d currentLineInFile.substring(START_INDEX_OF_DESCRIPTION, startIndexToChange);","lastModifiedDate":"2024-03-07"},{"lineNumber":218,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d \"/\";","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d currentLineInFile.substring(startIndexToChange + 5, endIndexToChange);","lastModifiedDate":"2024-03-07"},{"lineNumber":220,"author":{"gitId":"NGXZS"},"content":"        } else if (type \u003d\u003d \u0027E\u0027) { // process input for event params","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"NGXZS"},"content":"            int midIndexToChange \u003d currentLineInFile.lastIndexOf(\"to \"); // change \"to \" to \"/\"","lastModifiedDate":"2024-03-07"},{"lineNumber":222,"author":{"gitId":"NGXZS"},"content":"            int startIndexToChange \u003d currentLineInFile.lastIndexOf(\"(from: \", midIndexToChange); // change \"(from: \" to \"/\"","lastModifiedDate":"2024-03-07"},{"lineNumber":223,"author":{"gitId":"NGXZS"},"content":"            int endIndexToChange \u003d currentLineInFile.lastIndexOf(\u0027)\u0027); // change \")\" to \"\" ie last elem","lastModifiedDate":"2024-03-07"},{"lineNumber":224,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d currentLineInFile.substring(START_INDEX_OF_DESCRIPTION, startIndexToChange);","lastModifiedDate":"2024-03-07"},{"lineNumber":225,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d \"/\";","lastModifiedDate":"2024-03-06"},{"lineNumber":226,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d currentLineInFile.substring(startIndexToChange + 7, midIndexToChange);","lastModifiedDate":"2024-03-07"},{"lineNumber":227,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d \"/\";","lastModifiedDate":"2024-03-06"},{"lineNumber":228,"author":{"gitId":"NGXZS"},"content":"            taskDescription +\u003d currentLineInFile.substring(midIndexToChange + 3, endIndexToChange);","lastModifiedDate":"2024-03-07"},{"lineNumber":229,"author":{"gitId":"NGXZS"},"content":"        } else { // type \u003d\u003d \u0027T\u0027","lastModifiedDate":"2024-03-06"},{"lineNumber":230,"author":{"gitId":"NGXZS"},"content":"            taskDescription \u003d currentLineInFile.substring(START_INDEX_OF_DESCRIPTION);","lastModifiedDate":"2024-03-07"},{"lineNumber":231,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"NGXZS"},"content":"        return taskDescription;","lastModifiedDate":"2024-03-07"},{"lineNumber":233,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":234,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":235,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":236,"author":{"gitId":"NGXZS"},"content":"     * Gets mark status of file when processing FILE_NAME","lastModifiedDate":"2024-03-07"},{"lineNumber":237,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":238,"author":{"gitId":"NGXZS"},"content":"     * @param START_INDEX_OF_MARK in currentLineInFile for task.getStatus()","lastModifiedDate":"2024-03-07"},{"lineNumber":239,"author":{"gitId":"NGXZS"},"content":"     * @param currentLineInFile which is being processed","lastModifiedDate":"2024-03-07"},{"lineNumber":240,"author":{"gitId":"NGXZS"},"content":"     * @return mark: \u00270\u0027 \u003d unmarked, \u00271\u0027 \u003d marked","lastModifiedDate":"2024-03-07"},{"lineNumber":241,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid mark","lastModifiedDate":"2024-03-07"},{"lineNumber":242,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":243,"author":{"gitId":"NGXZS"},"content":"    private static char getMarkStatus(int START_INDEX_OF_MARK, String currentLineInFile)","lastModifiedDate":"2024-03-07"},{"lineNumber":244,"author":{"gitId":"NGXZS"},"content":"            throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":245,"author":{"gitId":"NGXZS"},"content":"        char mark \u003d currentLineInFile.charAt(START_INDEX_OF_MARK);","lastModifiedDate":"2024-03-07"},{"lineNumber":246,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":247,"author":{"gitId":"NGXZS"},"content":"        if (mark !\u003d \u00270\u0027 \u0026\u0026 mark !\u003d \u00271\u0027) {","lastModifiedDate":"2024-03-07"},{"lineNumber":248,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"invalid mark\");","lastModifiedDate":"2024-03-07"},{"lineNumber":249,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":250,"author":{"gitId":"NGXZS"},"content":"        return mark;","lastModifiedDate":"2024-03-07"},{"lineNumber":251,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":252,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"NGXZS":252}},{"path":"src/main/java/helperFunctions/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"import tasks.Todo;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"     * Initializes ArrayList of Task objects","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"     * Prints all task in Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"     * @return string of all tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"    protected String displayList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"            return \"List is empty!\" + System.lineSeparator()","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"                    + Ui.printCommandsList() + System.lineSeparator();","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"        StringBuilder fullList \u003d new StringBuilder();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"        while (count !\u003d tasks.size()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"            fullList.append(displayListItem(count));","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"            count +\u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"        return fullList.toString();","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"     * Returns a task in String format","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"     * @param index index of specific task (zero-indexed)","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"    private String displayListItem(int index) {","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"        return ((index + 1) + \". [\" + tasks.get(index).getType() + \"][\"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"                + tasks.get(index).getStatus() + \"] \"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"NGXZS"},"content":"                + tasks.get(index).getDescription()","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"NGXZS"},"content":"                + System.lineSeparator());","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"NGXZS"},"content":"     * Adds Event task to Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"NGXZS"},"content":"     * @param userInputInParts separates each word in userInput","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"NGXZS"},"content":"     * @param userInput is the original CLI user input","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"NGXZS"},"content":"     * @param isReadMode specifies if reading from FILE_NAME or writing to it","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid/ missing event arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"NGXZS"},"content":"    protected void addEventTask(String[] userInputInParts, String userInput, String FILE_NAME, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"NGXZS"},"content":"        final int startIndexOfDescription \u003d userInputInParts[0].length() + 1; // userInputInParts[0].equals(event)","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"NGXZS"},"content":"        int indexTo \u003d userInput.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"NGXZS"},"content":"        int indexFrom \u003d userInput.lastIndexOf(\u0027/\u0027, indexTo - 1); // counts from back","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"NGXZS"},"content":"        // checks for invalid input","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"NGXZS"},"content":"        if (indexFrom \u003d\u003d -1 || indexTo \u003d\u003d -1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No event arguments: Add a \u0027/\u0027, then the startTime, followed by a \u0027/\u0027 and the endTime\");","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"NGXZS"},"content":"        if (startIndexOfDescription \u003e indexFrom - 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException((\"no event description\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"NGXZS"},"content":"        // process input as Event object","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"NGXZS"},"content":"        String description \u003d userInput.substring(startIndexOfDescription, indexFrom - 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"NGXZS"},"content":"        String timeRange \u003d \" (from: \" + userInput.substring(indexFrom + 1, indexTo) +","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"NGXZS"},"content":"                \"to \" + userInput.substring(indexTo + 1) + \")\";","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"NGXZS"},"content":"        // add to tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"NGXZS"},"content":"        Task newTask \u003d new Event(description, timeRange);","lastModifiedDate":"2024-03-08"},{"lineNumber":78,"author":{"gitId":"NGXZS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"NGXZS"},"content":"            return; // no need execute code below (for writing only)","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"NGXZS"},"content":"        Storage.appendToFile(FILE_NAME, displayListItem(tasks.indexOf(newTask)));","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Event added!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks.size() - 1));","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":89,"author":{"gitId":"NGXZS"},"content":"     * Adds Deadline to Tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"NGXZS"},"content":"     * @param userInputInParts separates each word in userInput","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"NGXZS"},"content":"     * @param userInput is the original CLI user input","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"NGXZS"},"content":"     * @param isReadMode specifies if reading from FILE_NAME or writing to it","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid/ missing deadline arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"NGXZS"},"content":"    protected void addDeadlineTask(String[] userInputInParts, String userInput, String FILE_NAME, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"NGXZS"},"content":"        final int startIndexOfDescription \u003d userInputInParts[0].length() + 1; // userInputInParts[0].equals(deadline);","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"NGXZS"},"content":"        int indexDeadline \u003d userInput.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"NGXZS"},"content":"        // checks for invalid input","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"NGXZS"},"content":"        if (indexDeadline \u003d\u003d -1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No deadline argument: Add a parameter \u0027/\u0027 followed by the deadline\");","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"NGXZS"},"content":"        if (startIndexOfDescription \u003e indexDeadline - 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No deadline description\");","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"NGXZS"},"content":"        // process input as Deadline object","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"NGXZS"},"content":"        String deadline \u003d \"(by: \";","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"NGXZS"},"content":"        if (Parser.isValidDeadline(userInput.substring(indexDeadline + 1))) {","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"NGXZS"},"content":"            deadline +\u003d Parser.formatDeadline(userInput.substring(indexDeadline + 1));","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"NGXZS"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"NGXZS"},"content":"            deadline +\u003d userInput.substring(indexDeadline + 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"NGXZS"},"content":"        deadline +\u003d \")\";","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"NGXZS"},"content":"        String description \u003d userInput.substring(startIndexOfDescription, indexDeadline);","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"NGXZS"},"content":"        // add to tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"NGXZS"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-03-08"},{"lineNumber":119,"author":{"gitId":"NGXZS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"NGXZS"},"content":"            return; // no need execute code below (for writing only)","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"NGXZS"},"content":"        Storage.appendToFile(FILE_NAME, displayListItem(tasks.indexOf(newTask)));","lastModifiedDate":"2024-03-07"},{"lineNumber":125,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Deadline added!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks.size() - 1));","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"NGXZS"},"content":"     * @param userInputInParts separates each word in userInput","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"NGXZS"},"content":"     * @param userInput is the original CLI user input","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"NGXZS"},"content":"     * @param isReadMode specifies if reading from FILE_NAME or writing to it","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid/ missing t0do arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"NGXZS"},"content":"    protected void addTodoTask(String[] userInputInParts, String userInput, String FILE_NAME, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"NGXZS"},"content":"        final int startIndexOfDescription \u003d userInputInParts[0].length() + 1; // userInputInParts[0].equals(TODO);","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"NGXZS"},"content":"        // checks for invalid input","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"NGXZS"},"content":"        if (startIndexOfDescription \u003e userInput.length() - 1) {","lastModifiedDate":"2024-03-07"},{"lineNumber":143,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No task description\");","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"NGXZS"},"content":"        // process input","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"NGXZS"},"content":"        String description \u003d userInput.substring(startIndexOfDescription);","lastModifiedDate":"2024-03-07"},{"lineNumber":147,"author":{"gitId":"NGXZS"},"content":"        // add to tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"NGXZS"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2024-03-08"},{"lineNumber":149,"author":{"gitId":"NGXZS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"NGXZS"},"content":"            // no need execute code below (for writing only)","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"NGXZS"},"content":"        Storage.appendToFile(FILE_NAME, displayListItem(tasks.indexOf(newTask)));","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Todo added!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks.size() - 1));","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"NGXZS"},"content":"     * Deletes a specific task by index","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"NGXZS"},"content":"     * @param userInputInParts separates each word in userInput","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid/ missing delete arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"NGXZS"},"content":"    protected void deleteOperation(String[] userInputInParts, String FILE_NAME) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"NGXZS"},"content":"        // check for input validity","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"NGXZS"},"content":"        if (userInputInParts.length \u003c 2) {","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Invalid delete operation\");","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"NGXZS"},"content":"        // process input","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"NGXZS"},"content":"        int taskIndex;","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"NGXZS"},"content":"            taskIndex \u003d Integer.parseInt(userInputInParts[1]);","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"NGXZS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Invalid non-integer delete index\");","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"NGXZS"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Out of bounds delete index\");","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"NGXZS"},"content":"        // delete Task","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Good riddance, task deleted!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(taskIndex - 1));","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"NGXZS"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"NGXZS"},"content":"        Storage.writeToFile(FILE_NAME, displayList());","lastModifiedDate":"2024-03-07"},{"lineNumber":188,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"NGXZS"},"content":"     * Marks a Task or unmarks a task","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"NGXZS"},"content":"     * @param userInputInParts separates each word in userInput","lastModifiedDate":"2024-03-07"},{"lineNumber":196,"author":{"gitId":"NGXZS"},"content":"     * @param isMark if true, marks task, else unmarks it","lastModifiedDate":"2024-03-07"},{"lineNumber":197,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"NGXZS"},"content":"     * @param isReadMode specifies if reading from FILE_NAME or writing to it","lastModifiedDate":"2024-03-07"},{"lineNumber":199,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid/ missing mark arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":200,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"NGXZS"},"content":"    protected void markOperation(String[] userInputInParts, boolean isMark, String FILE_NAME, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":202,"author":{"gitId":"NGXZS"},"content":"        // check for input validity","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"NGXZS"},"content":"        if (userInputInParts.length \u003c 2) {","lastModifiedDate":"2024-03-07"},{"lineNumber":204,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"invalid mark/ unmark operation\");","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"NGXZS"},"content":"        int taskNum;","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"NGXZS"},"content":"            taskNum \u003d Integer.parseInt(userInputInParts[1]);","lastModifiedDate":"2024-03-07"},{"lineNumber":209,"author":{"gitId":"NGXZS"},"content":"            if (tasks.size() \u003c taskNum || taskNum \u003c 1) {","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(\"No such taskNum\");","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"NGXZS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Invalid taskNum\");","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":215,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":216,"author":{"gitId":"NGXZS"},"content":"        // process input","lastModifiedDate":"2024-03-06"},{"lineNumber":217,"author":{"gitId":"NGXZS"},"content":"        if (isMark) { // (isMark \u003d true) \u003d\u003d mark as done","lastModifiedDate":"2024-03-06"},{"lineNumber":218,"author":{"gitId":"NGXZS"},"content":"            tasks.get(taskNum - 1).markAsDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":219,"author":{"gitId":"NGXZS"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":220,"author":{"gitId":"NGXZS"},"content":"            tasks.get(taskNum - 1).markAsNotDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":222,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-03-06"},{"lineNumber":223,"author":{"gitId":"NGXZS"},"content":"            // no need to execute code below (for writing only)","lastModifiedDate":"2024-03-06"},{"lineNumber":224,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":225,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":226,"author":{"gitId":"NGXZS"},"content":"        // mark tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":227,"author":{"gitId":"NGXZS"},"content":"        Storage.writeToFile(FILE_NAME, displayList());","lastModifiedDate":"2024-03-07"},{"lineNumber":228,"author":{"gitId":"NGXZS"},"content":"        String mark \u003d isMark ? \"marked\" : \"unmarked\";","lastModifiedDate":"2024-03-06"},{"lineNumber":229,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Has \" + mark + \" task\" + taskNum + \":\");","lastModifiedDate":"2024-03-06"},{"lineNumber":230,"author":{"gitId":"NGXZS"},"content":"        System.out.print(displayListItem(taskNum - 1));","lastModifiedDate":"2024-03-06"},{"lineNumber":231,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":232,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":233,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":234,"author":{"gitId":"NGXZS"},"content":"     * Prints tasks containing a keyword","lastModifiedDate":"2024-03-07"},{"lineNumber":235,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":236,"author":{"gitId":"NGXZS"},"content":"     * @param userInputInParts separates each word in userInput","lastModifiedDate":"2024-03-07"},{"lineNumber":237,"author":{"gitId":"NGXZS"},"content":"     * @throws InvalidParamsException if invalid/ missing find arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":238,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":239,"author":{"gitId":"NGXZS"},"content":"    public void findOperation(String[] userInputInParts) throws InvalidParamsException {","lastModifiedDate":"2024-03-07"},{"lineNumber":240,"author":{"gitId":"NGXZS"},"content":"        // check for input validity","lastModifiedDate":"2024-03-07"},{"lineNumber":241,"author":{"gitId":"NGXZS"},"content":"        if (userInputInParts.length !\u003d 2) {","lastModifiedDate":"2024-03-08"},{"lineNumber":242,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"invalid find operation\");","lastModifiedDate":"2024-03-07"},{"lineNumber":243,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":244,"author":{"gitId":"NGXZS"},"content":"        String findKeyword \u003d userInputInParts[1];","lastModifiedDate":"2024-03-07"},{"lineNumber":245,"author":{"gitId":"NGXZS"},"content":"        String tasksToPrint \u003d \"\";","lastModifiedDate":"2024-03-07"},{"lineNumber":246,"author":{"gitId":"NGXZS"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2024-03-08"},{"lineNumber":247,"author":{"gitId":"NGXZS"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":248,"author":{"gitId":"NGXZS"},"content":"            if (task.getDescription().contains(findKeyword)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":249,"author":{"gitId":"NGXZS"},"content":"                tasksToPrint +\u003d displayListItem(taskIndex);","lastModifiedDate":"2024-03-08"},{"lineNumber":250,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":251,"author":{"gitId":"NGXZS"},"content":"            taskIndex +\u003d 1;","lastModifiedDate":"2024-03-08"},{"lineNumber":252,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":253,"author":{"gitId":"NGXZS"},"content":"        if (tasksToPrint.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":254,"author":{"gitId":"NGXZS"},"content":"            System.out.println(\"No tasks found\");","lastModifiedDate":"2024-03-07"},{"lineNumber":255,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-03-07"},{"lineNumber":256,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":257,"author":{"gitId":"NGXZS"},"content":"        System.out.print(tasksToPrint);","lastModifiedDate":"2024-03-07"},{"lineNumber":258,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":259,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"NGXZS":259}},{"path":"src/main/java/helperFunctions/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"import java.util.Random;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"public class Ui {","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"     * Reads user input and process accordingly, infinitely till sayBye()","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"     * @param tasks TaskList object of tasks","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"     * @param FILE_NAME to store tasks in","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    public static void readInput(TaskList tasks, String FILE_NAME) {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"        while (isRunning) {","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"            printLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"            String userInput \u003d in.nextLine(); // reads input","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"            // process input","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"            try {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"                boolean isReadMode \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"                isRunning \u003d Parser.processUserInput(tasks, userInput, FILE_NAME, isReadMode);","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"            } catch (InvalidParamsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"                showLoadingError(e.getMessage()); // prints out error message","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"        sayBye();","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"     * Prints errorMessage","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"     * @param errorMessage if got error","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"    public static void showLoadingError(String errorMessage) {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"     * Returns list of possible commands","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"     * @return list of possible commands","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"    public static String printCommandsList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"NGXZS"},"content":"        return \"## Possible user commands: \\n\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"NGXZS"},"content":"                \"1. todo \u003ctask\u003e                            : Add todo task \\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"NGXZS"},"content":"                \"2. deadline \u003ctask\u003e /\u003cdeadline\u003e            : Add deadline\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"NGXZS"},"content":"                \"3. event \u003ctask\u003e /\u003cstartTime\u003e /\u003cendTime\u003e   : Add event \\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"NGXZS"},"content":"                \"4. list                                   : List all tasks\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"NGXZS"},"content":"                \"5. mark/unmark \u003ctaskIndex\u003e                : Mark task \u003cindex\u003e as done/ undone\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"NGXZS"},"content":"                \"6. find \u003ckeyword\u003e                         : Finds keyword in list of tasks\\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"NGXZS"},"content":"                \"7. bye                                    : Exit Program\";","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"NGXZS"},"content":"     * Prints \"*\" as line-separator","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"NGXZS"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"NGXZS"},"content":"        final int CHARS_IN_LINE \u003d 40;","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"NGXZS"},"content":"        for (int i \u003d 0; i \u003c CHARS_IN_LINE; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"NGXZS"},"content":"            System.out.print(\"*\");","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"NGXZS"},"content":"        System.out.println();","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"NGXZS"},"content":"     * Prints introductory message","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"NGXZS"},"content":"    public static void sayHi() {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"NGXZS"},"content":"        String logo \u003d \" ____   ___    ___   ____    ___\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"NGXZS"},"content":"                + \"| __/  / _ \\\\  | _ \\\\  | __|  / _ \\\\\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"NGXZS"},"content":"                + \"| |    ||_||  | / /  | |_   | | |\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"NGXZS"},"content":"                + \"| |_   | _ |  | _/   |_  /  | | |\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"NGXZS"},"content":"                + \"|___\\\\  // \\\\\\\\  |_|    /__/ . \\\\___/\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Hello! I\u0027m\\n\" + logo);","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"NGXZS"},"content":"        printLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"NGXZS"},"content":"     * Prints ending message and a random quote","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"NGXZS"},"content":"    public static void sayBye() {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"NGXZS"},"content":"        // generating random quote","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"NGXZS"},"content":"        Random rand \u003d new Random(); // create instance of class Random","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"NGXZS"},"content":"        // quotes inspired by https://wisdomquotes.com/short-quotes/, https://wisdomquotes.com/positive-quotes/","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"NGXZS"},"content":"        String[] quotes \u003d {","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"NGXZS"},"content":"                \"2230 | Time Block\",","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"NGXZS"},"content":"                \"The best investment is in yourself\",","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"NGXZS"},"content":"                \"Never regret anything that made you smile ~Mark Twain\",","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"NGXZS"},"content":"                \"You are the main character in your life\",","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"NGXZS"},"content":"                \"Life is like riding a bicycle. To keep your balance, you must keep moving ~Albert Einstein\",","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"NGXZS"},"content":"                \"Stay hungry, Stay Foolish ~Steve Jobs\",","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"NGXZS"},"content":"                \"You only live once, but if you do it right, once is enough ~Mae West\",","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"NGXZS"},"content":"                \"Choose one thing and be the best in it\",","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"NGXZS"},"content":"                \"Don\u0027t tell people your plans. Show them your results\",","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"NGXZS"},"content":"                \"Good things happen to those who hustle ~Anais Nin\",","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"NGXZS"},"content":"                \"If you want it, work for it\",","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"NGXZS"},"content":"                \"If it matters to you, you\u0027ll find a way ~Charlie Gilkey\",","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"NGXZS"},"content":"                \"If you\u0027re going through hell, keep going ~Winston Churchill\",","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"NGXZS"},"content":"                \"Small steps motivate. Big steps overwhelm ~Maxime Lagace\",","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"NGXZS"},"content":"                \"The difference btwn a good and bad day is your ATTITUDE! ~a magnet\",","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"NGXZS"},"content":"                \"The less you respond to negative people, the more positive your life will become ~Paulo Coelho\",","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"NGXZS"},"content":"                \"Always know your goals in life\",","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"NGXZS"},"content":"                \"Often, the problem is not the lack of time but lack of direction\"","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"NGXZS"},"content":"        };","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"NGXZS"},"content":"        int upperbound \u003d quotes.length;","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"NGXZS"},"content":"        int randNum \u003d rand.nextInt(upperbound);","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Adios My Friend. Sleep early, study smarter\\n\" + quotes[randNum]);","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"NGXZS"},"content":"        printLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":116}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    protected String by;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"        super(description + by);","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    public char getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"        return this.type;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":15}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    protected String timeRange;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    public Event(String description, String timeRange) {","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"        super(description + timeRange);","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    public char getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"        return this.type;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":15}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    protected String description;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    protected char type;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"    public Task(String description) {","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027 \u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"        return description;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"    public String getStatus() {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task w X","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"    public char getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"        return type;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"NGXZS":29}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"        super(description);","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"    public char getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"        return type;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"item1","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"item2","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"item3","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"mark 3","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"unmark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"todo task1","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"deadline task2 /Wednesday","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"deadline noDeadline","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"event task3 /9am /6pm","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"event invalidEvent /sss","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"bye","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\helperFunctions\\*.java ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"java -classpath ..\\bin RecrBad \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"FC /N /W ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"NGXZS":3,"-":18}}]
