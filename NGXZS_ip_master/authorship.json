[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"5. Ctrl D to FC (compare files)","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"## Possible user commands","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"1. todo \u003ctask\u003e                            : Add todo task ","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"2. deadline \u003ctask\u003e /\u003cdeadline\u003e            : Add deadline","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"3. event \u003ctask\u003e /\u003cstartTime\u003e /\u003cendTime\u003e   : Add event ","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"4. list                                   : List all tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"5. mark/unmark \u003ctaskIndex\u003e                : Mark task \u003cindex\u003e as done/ undone","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"6. bye                                    : Exit Program","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NGXZS":16,"-":19}},{"path":"saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"1. [T][1] sdklfjds","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"2. [D][1] kslfj s(by: sdf)","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"3. [E][1] sdlkfjs (from: dsf sdto f ds)","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"4. [T][1] dlskfjs","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"5. [T][1] flkdsj","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"6. [T][0] klsdafj","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"7. [T][0] skldafj","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"8. [D][0] skdfj (by: ds)","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"9. [E][0] klsdj (from: ds to sd )","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"10. [D][1] dskflj (by: d s)","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"11. [E][1] kdslfj (from: dsf sdto f ds)","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"12. [E][0] klsdfj (from: sd sdto  dsds)","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"13. [T][1] dksfj","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"NGXZS":13}},{"path":"src/main/java/RecrBad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"import helperFunctions.InvalidParamsException;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"import helperFunctions.PrintHelper;","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"import java.io.File;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"public class RecrBad {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"     * Prints each Task in Task array","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"     * @param tasks Existing Task array","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"    private static String displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"            return \"List is empty!\" + System.lineSeparator()","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"                    + PrintHelper.printCommandsList() + System.lineSeparator();","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"        StringBuilder fullList \u003d new StringBuilder();","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"        while (count !\u003d tasks.size()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"            fullList.append(displayListItem(tasks, count));","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"            count +\u003d 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"        return fullList.toString();","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"     * Returns a task in String format","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"     * @param tasks existing Task array","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"     * @param index index of specific task","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"    private static String displayListItem(ArrayList\u003cTask\u003e tasks, int index) { // change from void to string","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"        return ((index + 1) + \". [\" + tasks.get(index).getType() + \"][\"","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"                + tasks.get(index).getStatus() + \"] \"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"                + tasks.get(index).getDescription()","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"                + System.lineSeparator());","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"NGXZS"},"content":"    private static void addEventTask(String[] req, String line, ArrayList\u003cTask\u003e tasks, String FILE_PATH, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"NGXZS"},"content":"        final int startIndexOfDescription \u003d req[0].length() + 1; // req[0].equals(event)","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"NGXZS"},"content":"        int indexTo \u003d line.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"NGXZS"},"content":"        int indexFrom \u003d line.lastIndexOf(\u0027/\u0027, indexTo - 1); // counts from back","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"NGXZS"},"content":"        // checks for invalid input","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"NGXZS"},"content":"        if (indexFrom \u003d\u003d -1 || indexTo \u003d\u003d -1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No event arguments: Add a \u0027/\u0027, then the startTime, followed by a \u0027/\u0027 and the endTime\");","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"NGXZS"},"content":"        if (startIndexOfDescription \u003e indexFrom - 1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException((\"no event description\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"NGXZS"},"content":"        // process input as Event object","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"NGXZS"},"content":"        String description \u003d line.substring(startIndexOfDescription, indexFrom - 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"NGXZS"},"content":"        String timeRange \u003d \" (from: \" + line.substring(indexFrom + 1, indexTo) +","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"NGXZS"},"content":"                \"to \" + line.substring(indexTo + 1) + \")\";","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"NGXZS"},"content":"        // add to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"NGXZS"},"content":"        Task newTask \u003d new Event(description, timeRange);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"NGXZS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"NGXZS"},"content":"            return; // no need execute code below (for writing only)","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"NGXZS"},"content":"        appendToFile(FILE_PATH, displayListItem(tasks, tasks.indexOf(newTask)));","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Event added!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks, tasks.size() - 1));","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"NGXZS"},"content":"    private static void addDeadlineTask(String[] req, String line, ArrayList\u003cTask\u003e tasks, String FILE_PATH, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"NGXZS"},"content":"        final int startIndexOfDescription \u003d req[0].length() + 1; // req[0].equals(deadline);","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"NGXZS"},"content":"        int indexDeadline \u003d line.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"NGXZS"},"content":"        // checks for invalid input","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"NGXZS"},"content":"        if (indexDeadline \u003d\u003d -1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No deadline argument: Add a parameter \u0027/\u0027 followed by the deadline\");","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"NGXZS"},"content":"        if (startIndexOfDescription \u003e indexDeadline - 1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No deadline description\");","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"NGXZS"},"content":"        // process input as Deadline object","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"NGXZS"},"content":"        String deadline \u003d \"(by: \" + line.substring(indexDeadline + 1) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"NGXZS"},"content":"        String description \u003d line.substring(startIndexOfDescription, indexDeadline);","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"NGXZS"},"content":"        // add to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"NGXZS"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"NGXZS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"NGXZS"},"content":"            return; // no need execute code below (for writing only)","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"NGXZS"},"content":"        appendToFile(FILE_PATH, displayListItem(tasks, tasks.indexOf(newTask)));","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Deadline added!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks, tasks.size() - 1));","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"NGXZS"},"content":"    private static void addTodoTask(String[] req, String line, ArrayList\u003cTask\u003e tasks, String FILE_PATH, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"NGXZS"},"content":"        final int startIndexOfDescription \u003d req[0].length() + 1; // req[0].equals(TODO);","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"NGXZS"},"content":"        // checks for invalid input","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"NGXZS"},"content":"        if (startIndexOfDescription \u003e line.length() - 1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No task description\");","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"NGXZS"},"content":"        // process input","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"NGXZS"},"content":"        String description \u003d line.substring(startIndexOfDescription);","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"NGXZS"},"content":"        // add to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"NGXZS"},"content":"        Task newTask \u003d new Todo(description);","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"NGXZS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"NGXZS"},"content":"            // no need execute code below (for writing only)","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"NGXZS"},"content":"        appendToFile(FILE_PATH, displayListItem(tasks, tasks.indexOf(newTask)));","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Todo added!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks, tasks.size() - 1));","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"NGXZS"},"content":"    private static void deleteOperation(ArrayList\u003cTask\u003e tasks, String[] req, String FILE_PATH) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"NGXZS"},"content":"        // check for input validity","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"NGXZS"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Invalid delete operation\");","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"NGXZS"},"content":"        // process input","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"NGXZS"},"content":"        int taskIndex;","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"NGXZS"},"content":"            taskIndex \u003d Integer.parseInt(req[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"NGXZS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Invalid non-integer delete index\");","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"NGXZS"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Out of bounds delete index\");","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"NGXZS"},"content":"        // delete Task","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Good riddance, task deleted!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"NGXZS"},"content":"        System.out.println(displayListItem(tasks, taskIndex - 1));","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"NGXZS"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"NGXZS"},"content":"        writeToFile(FILE_PATH, displayList(tasks));","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Congrats, now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"NGXZS"},"content":"     * Marks Task as done or not done","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"NGXZS"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"NGXZS"},"content":"     * @param tasks  existing Tasks array","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"NGXZS"},"content":"     * @param req    String[] input from user","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"NGXZS"},"content":"     * @param isMark type of operation: mark or unmark","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"NGXZS"},"content":"    private static void markOperation(ArrayList\u003cTask\u003e tasks, String[] req, boolean isMark, String FILE_PATH, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"NGXZS"},"content":"        // check for input validity","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"NGXZS"},"content":"        if (req.length \u003c 2) {","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"invalid mark/ unmark operation\");","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"NGXZS"},"content":"        int taskNum;","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"NGXZS"},"content":"            taskNum \u003d Integer.parseInt(req[1]);","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"NGXZS"},"content":"            if (tasks.size() \u003c taskNum || taskNum \u003c 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(\"No such taskNum\");","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"NGXZS"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":170,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Invalid taskNum\");","lastModifiedDate":"2024-02-25"},{"lineNumber":171,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":172,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"NGXZS"},"content":"        // process input","lastModifiedDate":"2024-02-22"},{"lineNumber":174,"author":{"gitId":"NGXZS"},"content":"        if (isMark) { // (isMark \u003d true) \u003d\u003d mark as done","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"NGXZS"},"content":"            tasks.get(taskNum - 1).markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":176,"author":{"gitId":"NGXZS"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"NGXZS"},"content":"            tasks.get(taskNum - 1).markAsNotDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":178,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"NGXZS"},"content":"        if (isReadMode) {","lastModifiedDate":"2024-02-24"},{"lineNumber":180,"author":{"gitId":"NGXZS"},"content":"            // no need to execute code below (for writing only)","lastModifiedDate":"2024-02-24"},{"lineNumber":181,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-02-09"},{"lineNumber":182,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"NGXZS"},"content":"        // mark tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":184,"author":{"gitId":"NGXZS"},"content":"        writeToFile(FILE_PATH, displayList(tasks));","lastModifiedDate":"2024-02-24"},{"lineNumber":185,"author":{"gitId":"NGXZS"},"content":"        String mark \u003d isMark ? \"marked\" : \"unmarked\";","lastModifiedDate":"2024-02-24"},{"lineNumber":186,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Has \" + mark + \" task\" + taskNum + \":\");","lastModifiedDate":"2024-02-24"},{"lineNumber":187,"author":{"gitId":"NGXZS"},"content":"        System.out.print(displayListItem(tasks, taskNum - 1));","lastModifiedDate":"2024-02-24"},{"lineNumber":188,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":189,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":190,"author":{"gitId":"NGXZS"},"content":"    private static boolean processUserInput(ArrayList\u003cTask\u003e tasks, String line, String FILE_PATH, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":191,"author":{"gitId":"NGXZS"},"content":"        String[] req \u003d line.split(\" \");","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"NGXZS"},"content":"        if (req[0].equalsIgnoreCase(\"BYE\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"NGXZS"},"content":"            PrintHelper.sayBye();","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"NGXZS"},"content":"            return false; // EXITS loop","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"NGXZS"},"content":"        if (req[0].equalsIgnoreCase(\"LIST\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"NGXZS"},"content":"            System.out.print(displayList(tasks));","lastModifiedDate":"2024-02-24"},{"lineNumber":199,"author":{"gitId":"NGXZS"},"content":"        } else if (req[0].toUpperCase().contains(\"MARK\")) { // both unmark \u0026 mark contains \u0027mark\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"NGXZS"},"content":"            boolean isMark \u003d !line.toUpperCase().contains(\"UNMARK\");","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"NGXZS"},"content":"            markOperation(tasks, req, isMark, FILE_PATH, isReadMode);","lastModifiedDate":"2024-02-24"},{"lineNumber":202,"author":{"gitId":"NGXZS"},"content":"        } else if (req[0].equalsIgnoreCase(\"DELETE\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"NGXZS"},"content":"            deleteOperation(tasks, req, FILE_PATH);","lastModifiedDate":"2024-02-24"},{"lineNumber":204,"author":{"gitId":"NGXZS"},"content":"        } else if (req[0].equalsIgnoreCase(\"TODO\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"NGXZS"},"content":"            addTodoTask(req, line, tasks, FILE_PATH, isReadMode); // change tasks to ArrayList\u003cTAsk\u003e, f void now","lastModifiedDate":"2024-02-24"},{"lineNumber":206,"author":{"gitId":"NGXZS"},"content":"        } else if (req[0].equalsIgnoreCase(\"DEADLINE\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":207,"author":{"gitId":"NGXZS"},"content":"            addDeadlineTask(req, line, tasks, FILE_PATH, isReadMode);","lastModifiedDate":"2024-02-24"},{"lineNumber":208,"author":{"gitId":"NGXZS"},"content":"        } else if (req[0].equalsIgnoreCase(\"EVENT\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":209,"author":{"gitId":"NGXZS"},"content":"            addEventTask(req, line, tasks, FILE_PATH, isReadMode);","lastModifiedDate":"2024-02-24"},{"lineNumber":210,"author":{"gitId":"NGXZS"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"No such command.\" + System.lineSeparator() + PrintHelper.printCommandsList());","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":213,"author":{"gitId":"NGXZS"},"content":"        return true;","lastModifiedDate":"2024-02-22"},{"lineNumber":214,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":215,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":216,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":217,"author":{"gitId":"NGXZS"},"content":"     * Input","lastModifiedDate":"2024-02-09"},{"lineNumber":218,"author":{"gitId":"NGXZS"},"content":"     * [any text]           to addToList,","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"NGXZS"},"content":"     * list                 to displayList,","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"NGXZS"},"content":"     * mark/unmark [index]  to mark item","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"NGXZS"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-24"},{"lineNumber":223,"author":{"gitId":"NGXZS"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-05"},{"lineNumber":224,"author":{"gitId":"NGXZS"},"content":"        PrintHelper.sayHi();","lastModifiedDate":"2024-02-09"},{"lineNumber":225,"author":{"gitId":"NGXZS"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":226,"author":{"gitId":"NGXZS"},"content":"        boolean isReadMode \u003d true; // in reading mode","lastModifiedDate":"2024-02-24"},{"lineNumber":227,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":228,"author":{"gitId":"NGXZS"},"content":"        String FILE_PATH \u003d \"saveFile.txt\";","lastModifiedDate":"2024-02-24"},{"lineNumber":229,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":231,"author":{"gitId":"NGXZS"},"content":"            readFile(FILE_PATH, tasks, isReadMode);","lastModifiedDate":"2024-02-24"},{"lineNumber":232,"author":{"gitId":"NGXZS"},"content":"        } catch (InvalidParamsException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":233,"author":{"gitId":"NGXZS"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":234,"author":{"gitId":"NGXZS"},"content":"            return;","lastModifiedDate":"2024-02-24"},{"lineNumber":235,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":236,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":237,"author":{"gitId":"NGXZS"},"content":"        isReadMode \u003d false; // switch to writing mode","lastModifiedDate":"2024-02-24"},{"lineNumber":238,"author":{"gitId":"NGXZS"},"content":"        boolean isRun \u003d true;","lastModifiedDate":"2024-02-25"},{"lineNumber":239,"author":{"gitId":"NGXZS"},"content":"        while (isRun) {","lastModifiedDate":"2024-02-25"},{"lineNumber":240,"author":{"gitId":"NGXZS"},"content":"            PrintHelper.printLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":241,"author":{"gitId":"NGXZS"},"content":"            String line \u003d in.nextLine(); // reads input","lastModifiedDate":"2024-02-03"},{"lineNumber":242,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":243,"author":{"gitId":"NGXZS"},"content":"            try {","lastModifiedDate":"2024-02-18"},{"lineNumber":244,"author":{"gitId":"NGXZS"},"content":"                isRun \u003d processUserInput(tasks, line, FILE_PATH, isReadMode);","lastModifiedDate":"2024-02-25"},{"lineNumber":245,"author":{"gitId":"NGXZS"},"content":"            } catch (InvalidParamsException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":246,"author":{"gitId":"NGXZS"},"content":"                System.out.println(e.getMessage()); // prints out error message","lastModifiedDate":"2024-02-18"},{"lineNumber":247,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":248,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":251,"author":{"gitId":"NGXZS"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":252,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":253,"author":{"gitId":"NGXZS"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true); // in append mode","lastModifiedDate":"2024-02-24"},{"lineNumber":254,"author":{"gitId":"NGXZS"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2024-02-24"},{"lineNumber":255,"author":{"gitId":"NGXZS"},"content":"            fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":256,"author":{"gitId":"NGXZS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":257,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Cannot append to file\");","lastModifiedDate":"2024-02-24"},{"lineNumber":258,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":259,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":260,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":261,"author":{"gitId":"NGXZS"},"content":"    private static void writeToFile(String filePath, String textToWrite) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":262,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":263,"author":{"gitId":"NGXZS"},"content":"            FileWriter fw \u003d new FileWriter(filePath); // overwrites file","lastModifiedDate":"2024-02-24"},{"lineNumber":264,"author":{"gitId":"NGXZS"},"content":"            fw.write(textToWrite);","lastModifiedDate":"2024-02-24"},{"lineNumber":265,"author":{"gitId":"NGXZS"},"content":"            fw.close();","lastModifiedDate":"2024-02-24"},{"lineNumber":266,"author":{"gitId":"NGXZS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":267,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Cannot write to file\");","lastModifiedDate":"2024-02-24"},{"lineNumber":268,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":269,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":270,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":271,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":272,"author":{"gitId":"NGXZS"},"content":"     * convert each line in textFile to a Task","lastModifiedDate":"2024-02-24"},{"lineNumber":273,"author":{"gitId":"NGXZS"},"content":"     **/","lastModifiedDate":"2024-02-24"},{"lineNumber":274,"author":{"gitId":"NGXZS"},"content":"    private static void readFile(String FILE_PATH, ArrayList\u003cTask\u003e tasks, boolean isReadMode) throws InvalidParamsException {","lastModifiedDate":"2024-02-24"},{"lineNumber":275,"author":{"gitId":"NGXZS"},"content":"        // get absoluteFilePath","lastModifiedDate":"2024-02-24"},{"lineNumber":276,"author":{"gitId":"NGXZS"},"content":"        String currentDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-24"},{"lineNumber":277,"author":{"gitId":"NGXZS"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(currentDirectory);","lastModifiedDate":"2024-02-24"},{"lineNumber":278,"author":{"gitId":"NGXZS"},"content":"        String absoluteFilePath \u003d path + \"/\" + FILE_PATH;","lastModifiedDate":"2024-02-24"},{"lineNumber":279,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":280,"author":{"gitId":"NGXZS"},"content":"        // checks if saveFile.txt exists","lastModifiedDate":"2024-02-24"},{"lineNumber":281,"author":{"gitId":"NGXZS"},"content":"        File f \u003d new File(absoluteFilePath);","lastModifiedDate":"2024-02-24"},{"lineNumber":282,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":283,"author":{"gitId":"NGXZS"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":284,"author":{"gitId":"NGXZS"},"content":"                System.out.println(\"File created: \" + f.getName() + \"@\" + path);","lastModifiedDate":"2024-02-25"},{"lineNumber":285,"author":{"gitId":"NGXZS"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":286,"author":{"gitId":"NGXZS"},"content":"                System.out.println(\"File \" + f.getName() + \" already exists\");","lastModifiedDate":"2024-02-24"},{"lineNumber":287,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":288,"author":{"gitId":"NGXZS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":289,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"Error Occurred\");","lastModifiedDate":"2024-02-24"},{"lineNumber":290,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":291,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":292,"author":{"gitId":"NGXZS"},"content":"        Scanner s;","lastModifiedDate":"2024-02-24"},{"lineNumber":293,"author":{"gitId":"NGXZS"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":294,"author":{"gitId":"NGXZS"},"content":"            s \u003d new Scanner(f);  // create a Scanner using file as source","lastModifiedDate":"2024-02-24"},{"lineNumber":295,"author":{"gitId":"NGXZS"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":296,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":297,"author":{"gitId":"NGXZS"},"content":"            throw new InvalidParamsException(\"File not found\");","lastModifiedDate":"2024-02-24"},{"lineNumber":298,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":299,"author":{"gitId":"NGXZS"},"content":"        int lineNum \u003d 1; // keeps track of current lineNum","lastModifiedDate":"2024-02-25"},{"lineNumber":300,"author":{"gitId":"NGXZS"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":301,"author":{"gitId":"NGXZS"},"content":"            String lineInFile \u003d s.nextLine(); // read line in file","lastModifiedDate":"2024-02-24"},{"lineNumber":302,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":303,"author":{"gitId":"NGXZS"},"content":"            // process lines in saveFile.txt","lastModifiedDate":"2024-02-24"},{"lineNumber":304,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_TYPE \u003d lineInFile.indexOf(\u0027[\u0027) + 1; // format of text: \"1. [T][1] startOfTaskDescription\"","lastModifiedDate":"2024-02-24"},{"lineNumber":305,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_MARK \u003d START_INDEX_OF_TYPE + 3; // mark index is 3 positions to the right","lastModifiedDate":"2024-02-24"},{"lineNumber":306,"author":{"gitId":"NGXZS"},"content":"            int START_INDEX_OF_DESCRIPTION \u003d START_INDEX_OF_MARK + 3; // description index is 3 more positions to the right","lastModifiedDate":"2024-02-24"},{"lineNumber":307,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":308,"author":{"gitId":"NGXZS"},"content":"            // checks validity of index TODO","lastModifiedDate":"2024-02-25"},{"lineNumber":309,"author":{"gitId":"NGXZS"},"content":"            if ((lineInFile.indexOf(\u0027[\u0027) \u003d\u003d -1) ||","lastModifiedDate":"2024-02-25"},{"lineNumber":310,"author":{"gitId":"NGXZS"},"content":"                    (START_INDEX_OF_TYPE + 1 \u003e lineInFile.length()) ||","lastModifiedDate":"2024-02-25"},{"lineNumber":311,"author":{"gitId":"NGXZS"},"content":"                    (START_INDEX_OF_MARK + 1 \u003e lineInFile.length()) ||","lastModifiedDate":"2024-02-25"},{"lineNumber":312,"author":{"gitId":"NGXZS"},"content":"                    (START_INDEX_OF_DESCRIPTION + 1 \u003e lineInFile.length())) {","lastModifiedDate":"2024-02-25"},{"lineNumber":313,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(lineInFile + \" is not valid\");","lastModifiedDate":"2024-02-25"},{"lineNumber":314,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":315,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":316,"author":{"gitId":"NGXZS"},"content":"            // create the command input line","lastModifiedDate":"2024-02-25"},{"lineNumber":317,"author":{"gitId":"NGXZS"},"content":"            String command \u003d \"\";","lastModifiedDate":"2024-02-25"},{"lineNumber":318,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":319,"author":{"gitId":"NGXZS"},"content":"            // getType","lastModifiedDate":"2024-02-24"},{"lineNumber":320,"author":{"gitId":"NGXZS"},"content":"            char type \u003d lineInFile.charAt(START_INDEX_OF_TYPE);","lastModifiedDate":"2024-02-24"},{"lineNumber":321,"author":{"gitId":"NGXZS"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-24"},{"lineNumber":322,"author":{"gitId":"NGXZS"},"content":"                command +\u003d \"todo \";","lastModifiedDate":"2024-02-24"},{"lineNumber":323,"author":{"gitId":"NGXZS"},"content":"            } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-24"},{"lineNumber":324,"author":{"gitId":"NGXZS"},"content":"                command +\u003d \"deadline \";","lastModifiedDate":"2024-02-24"},{"lineNumber":325,"author":{"gitId":"NGXZS"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-02-24"},{"lineNumber":326,"author":{"gitId":"NGXZS"},"content":"                command +\u003d \"event \";","lastModifiedDate":"2024-02-24"},{"lineNumber":327,"author":{"gitId":"NGXZS"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":328,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(lineInFile + \" type is not valid\");","lastModifiedDate":"2024-02-25"},{"lineNumber":329,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":330,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":331,"author":{"gitId":"NGXZS"},"content":"            // getMark","lastModifiedDate":"2024-02-25"},{"lineNumber":332,"author":{"gitId":"NGXZS"},"content":"            char mark \u003d lineInFile.charAt(START_INDEX_OF_MARK);","lastModifiedDate":"2024-02-25"},{"lineNumber":333,"author":{"gitId":"NGXZS"},"content":"            if (mark !\u003d \u00270\u0027 \u0026\u0026 mark !\u003d \u00271\u0027) {","lastModifiedDate":"2024-02-25"},{"lineNumber":334,"author":{"gitId":"NGXZS"},"content":"                throw new InvalidParamsException(\"invalid mark\");","lastModifiedDate":"2024-02-25"},{"lineNumber":335,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":336,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":337,"author":{"gitId":"NGXZS"},"content":"            // getDescription","lastModifiedDate":"2024-02-25"},{"lineNumber":338,"author":{"gitId":"NGXZS"},"content":"            String taskDescription \u003d \"\";","lastModifiedDate":"2024-02-24"},{"lineNumber":339,"author":{"gitId":"NGXZS"},"content":"            // process input for deadline params","lastModifiedDate":"2024-02-24"},{"lineNumber":340,"author":{"gitId":"NGXZS"},"content":"            if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-24"},{"lineNumber":341,"author":{"gitId":"NGXZS"},"content":"                // change \"(by: \" to \"/\"","lastModifiedDate":"2024-02-24"},{"lineNumber":342,"author":{"gitId":"NGXZS"},"content":"                // change \")\" to \"\" ie last elem","lastModifiedDate":"2024-02-24"},{"lineNumber":343,"author":{"gitId":"NGXZS"},"content":"                int startIndexToChange \u003d lineInFile.lastIndexOf(\"(by: \");","lastModifiedDate":"2024-02-24"},{"lineNumber":344,"author":{"gitId":"NGXZS"},"content":"                int endIndexToChange \u003d lineInFile.lastIndexOf(\")\");","lastModifiedDate":"2024-02-24"},{"lineNumber":345,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d lineInFile.substring(START_INDEX_OF_DESCRIPTION, startIndexToChange);","lastModifiedDate":"2024-02-24"},{"lineNumber":346,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d \"/\";","lastModifiedDate":"2024-02-24"},{"lineNumber":347,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d lineInFile.substring(startIndexToChange + 5, endIndexToChange);","lastModifiedDate":"2024-02-24"},{"lineNumber":348,"author":{"gitId":"NGXZS"},"content":"            } else if (type \u003d\u003d \u0027E\u0027) { // process input for event params","lastModifiedDate":"2024-02-25"},{"lineNumber":349,"author":{"gitId":"NGXZS"},"content":"                // change \"(from: \" to \"/\"","lastModifiedDate":"2024-02-24"},{"lineNumber":350,"author":{"gitId":"NGXZS"},"content":"                // change \"to \" to \"/\"","lastModifiedDate":"2024-02-24"},{"lineNumber":351,"author":{"gitId":"NGXZS"},"content":"                // change \")\" to \"\" ie last elem","lastModifiedDate":"2024-02-24"},{"lineNumber":352,"author":{"gitId":"NGXZS"},"content":"                // NOTE: startIndexToChange \u0026 midIndextoChange may be ambiguous depending on file text","lastModifiedDate":"2024-02-24"},{"lineNumber":353,"author":{"gitId":"NGXZS"},"content":"                int midIndexToChange \u003d lineInFile.lastIndexOf(\"to \");","lastModifiedDate":"2024-02-24"},{"lineNumber":354,"author":{"gitId":"NGXZS"},"content":"                int startIndexToChange \u003d lineInFile.lastIndexOf(\"(from: \", midIndexToChange);","lastModifiedDate":"2024-02-24"},{"lineNumber":355,"author":{"gitId":"NGXZS"},"content":"                int endIndexToChange \u003d lineInFile.lastIndexOf(\u0027)\u0027);","lastModifiedDate":"2024-02-24"},{"lineNumber":356,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d lineInFile.substring(START_INDEX_OF_DESCRIPTION, startIndexToChange);","lastModifiedDate":"2024-02-24"},{"lineNumber":357,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d \"/\";","lastModifiedDate":"2024-02-24"},{"lineNumber":358,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d lineInFile.substring(startIndexToChange + 7, midIndexToChange);","lastModifiedDate":"2024-02-24"},{"lineNumber":359,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d \"/\";","lastModifiedDate":"2024-02-24"},{"lineNumber":360,"author":{"gitId":"NGXZS"},"content":"                taskDescription +\u003d lineInFile.substring(midIndexToChange + 3, endIndexToChange);","lastModifiedDate":"2024-02-24"},{"lineNumber":361,"author":{"gitId":"NGXZS"},"content":"            } else { // type \u003d\u003d \u0027T\u0027","lastModifiedDate":"2024-02-25"},{"lineNumber":362,"author":{"gitId":"NGXZS"},"content":"                taskDescription \u003d lineInFile.substring(START_INDEX_OF_DESCRIPTION);","lastModifiedDate":"2024-02-24"},{"lineNumber":363,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":364,"author":{"gitId":"NGXZS"},"content":"            command +\u003d taskDescription;","lastModifiedDate":"2024-02-24"},{"lineNumber":365,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":366,"author":{"gitId":"NGXZS"},"content":"            // process command in file","lastModifiedDate":"2024-02-25"},{"lineNumber":367,"author":{"gitId":"NGXZS"},"content":"            processUserInput(tasks, command, FILE_PATH, isReadMode);","lastModifiedDate":"2024-02-24"},{"lineNumber":368,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":369,"author":{"gitId":"NGXZS"},"content":"            // create mark command (for mark tasks only)","lastModifiedDate":"2024-02-25"},{"lineNumber":370,"author":{"gitId":"NGXZS"},"content":"            if (mark \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2024-02-25"},{"lineNumber":371,"author":{"gitId":"NGXZS"},"content":"                // create mark command","lastModifiedDate":"2024-02-24"},{"lineNumber":372,"author":{"gitId":"NGXZS"},"content":"                String markCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":373,"author":{"gitId":"NGXZS"},"content":"                markCommand \u003d \"mark \" + lineNum;","lastModifiedDate":"2024-02-25"},{"lineNumber":374,"author":{"gitId":"NGXZS"},"content":"                processUserInput(tasks, markCommand, FILE_PATH, isReadMode);","lastModifiedDate":"2024-02-24"},{"lineNumber":375,"author":{"gitId":"NGXZS"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":376,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":377,"author":{"gitId":"NGXZS"},"content":"            lineNum +\u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":378,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":379,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":380,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":381,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"NGXZS":381}},{"path":"src/main/java/helperFunctions/InvalidParamsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class InvalidParamsException extends Exception{","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    public InvalidParamsException(String errorMessage) { // constructor","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"NGXZS":8}},{"path":"src/main/java/helperFunctions/PrintHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package helperFunctions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"import java.util.Random;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"public class PrintHelper {","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"    private static String commandsList \u003d","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"            \"## Possible user commands: \\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"            \"1. todo \u003ctask\u003e                            : Add todo task \\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"            \"2. deadline \u003ctask\u003e /\u003cdeadline\u003e            : Add deadline\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"            \"3. event \u003ctask\u003e /\u003cstartTime\u003e /\u003cendTime\u003e   : Add event \\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"            \"4. list                                   : List all tasks\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"            \"5. mark/unmark \u003ctaskIndex\u003e                : Mark task \u003cindex\u003e as done/ undone\\n\" +","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"            \"6. bye                                    : Exit Program\";","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"    public static String printCommandsList() {","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"        return commandsList;","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"     * Prints \"*\" as line-separator","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"    public static void printLine() {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"        final int CHARS_IN_LINE \u003d 40;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"        for (int i \u003d 0; i \u003c CHARS_IN_LINE; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"            System.out.print(\"*\");","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"        System.out.println();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"NGXZS"},"content":"     * Prints introductory message","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"NGXZS"},"content":"    public static void sayHi() {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"NGXZS"},"content":"        String logo \u003d \" ____   ___    ___   ____    ___\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"NGXZS"},"content":"                + \"| __/  / _ \\\\  | _ \\\\  | __|  / _ \\\\\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"NGXZS"},"content":"                + \"| |    ||_||  | / /  | |_   | | |\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"NGXZS"},"content":"                + \"| |_   | _ |  | _/   |_  /  | | |\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"NGXZS"},"content":"                + \"|___\\\\  // \\\\\\\\  |_|    /__/ . \\\\___/\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Hello! I\u0027m\\n\" + logo);","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"NGXZS"},"content":"        printLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"NGXZS"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"NGXZS"},"content":"     * Prints ending message","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"NGXZS"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"NGXZS"},"content":"    public static void sayBye() {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"NGXZS"},"content":"        // generating random quote","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"NGXZS"},"content":"        Random rand \u003d new Random(); // create instance of class Random","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"NGXZS"},"content":"        // quotes inspired by https://wisdomquotes.com/short-quotes/, https://wisdomquotes.com/positive-quotes/","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"NGXZS"},"content":"        String[] quotes \u003d {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"NGXZS"},"content":"                \"2230 | Time Block\",","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"NGXZS"},"content":"                \"The best investment is in yourself\",","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"NGXZS"},"content":"                \"Never regret anything that made you smile ~Mark Twain\",","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"NGXZS"},"content":"                \"You are the main character in your life\",","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"NGXZS"},"content":"                \"Life is like riding a bicycle. To keep your balance, you must keep moving ~Albert Einstein\",","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"NGXZS"},"content":"                \"Stay hungry, Stay Foolish ~Steve Jobs\",","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"NGXZS"},"content":"                \"You only live once, but if you do it right, once is enough ~Mae West\",","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"NGXZS"},"content":"                \"Choose one thing and be the best in it\",","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"NGXZS"},"content":"                \"Don\u0027t tell people your plans. Show them your results\",","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"NGXZS"},"content":"                \"Good things happen to those who hustle ~Anais Nin\",","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"NGXZS"},"content":"                \"If you want it, work for it\",","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"NGXZS"},"content":"                \"If it matters to you, you\u0027ll find a way ~Charlie Gilkey\",","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"NGXZS"},"content":"                \"If you\u0027re going through hell, keep going ~Winston Churchill\",","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"NGXZS"},"content":"                \"Small steps motivate. Big steps overwhelm ~Maxime Lagace\",","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"NGXZS"},"content":"                \"The difference btwn a good and bad day is your ATTITUDE! ~a magnet\",","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"NGXZS"},"content":"                \"The less you respond to negative people, the more positive your life will become ~Paulo Coelho\",","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"NGXZS"},"content":"                \"Always know your goals in life\",","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"NGXZS"},"content":"                \"Often, the problem is not the lack of time but lack of direction\"","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"NGXZS"},"content":"        };","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"NGXZS"},"content":"        int upperbound \u003d quotes.length;","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"NGXZS"},"content":"        int randNum \u003d rand.nextInt(upperbound);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"NGXZS"},"content":"        System.out.println(\"Adios My Friend. Sleep early, study smarter\\n\" + quotes[randNum]);","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"NGXZS"},"content":"        printLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":78}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    protected String by;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"        super(description + by);","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    public char getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"        return this.type;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":15}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    protected String timeRange;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    public Event(String description, String timeRange){","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"        super(description + timeRange);","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    public char getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"        return this.type;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":15}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"    protected String description;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"    protected char type;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"    public Task(String description){","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027 \u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"    public String getDescription(){","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"        return description;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"NGXZS"},"content":"    public String getStatus(){","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task w X","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"NGXZS"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"NGXZS"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"NGXZS"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"NGXZS"},"content":"    public char getType(){","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"NGXZS"},"content":"        return type;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"NGXZS":30}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"package tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"    public Todo(String description){","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"        super(description);","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"    public char getType(){","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"        return this.type;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"NGXZS"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NGXZS"},"content":"item1","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"NGXZS"},"content":"item2","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"NGXZS"},"content":"item3","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"NGXZS"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"NGXZS"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"NGXZS"},"content":"mark 3","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"NGXZS"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"NGXZS"},"content":"unmark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"NGXZS"},"content":"todo task1","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"deadline task2 /Wednesday","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"NGXZS"},"content":"deadline noDeadline","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"NGXZS"},"content":"event task3 /9am /6pm","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"NGXZS"},"content":"event invalidEvent /sss","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"NGXZS"},"content":"bye","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"NGXZS":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"NGXZS"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\helperFunctions\\*.java ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NGXZS"},"content":"java -classpath ..\\bin RecrBad \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"NGXZS"},"content":"FC /N /W ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"NGXZS":3,"-":18}}]
