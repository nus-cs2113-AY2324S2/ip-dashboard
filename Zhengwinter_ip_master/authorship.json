[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"# Winter User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"### Feature-Add task","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"Allows user to add tasks of types Todo, Deadline or Event. These tasks have specific","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"formats that contains information about the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"### Feature-Remove task","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"Allows user to delete a task from the task list by specifying the number ","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"corresponding to the task as seen from the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"### Feature-Exit","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"Allows user to exit the program.","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"### Feature-List","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"Allows user to see the task list and their order, after addition/removal of tasks (if any).","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"### Feature-Mark","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"Allows user to mark a certain task as complete.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"### Feature-Unmark","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"Allows user to mark a certain task as incomplete.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"### Feature-Find","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"Allows user to search for a certain keyword within the names of all the tasks currently present in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"### `todo` - Adds a todo task","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"`todo homework`","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"Shows a confirmation message of the todo task that was added.","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"Awesome! I\u0027ve added this task!","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"    [T][ ] homework","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"    Now, you have 1 tasks in your list.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"### `Deadline` - Adds a deadline task","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"Adds a deadline task to the task list where it has a deadline time. The deadline must be specified in the form of yyyy-mm-dd HH:mm.","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"`deadline CS2113 team project /by 2024-03-29 23:59`","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"Shows a confirmation message of the deadline task that was added.","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"Awesome! I\u0027ve added this task!","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"    [D][ ] CS2113 team project (by: MAR 3 2024 23:59)","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"    Now, you have 2 tasks in your list.","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Zhengwinter"},"content":"### `Event` - Adds an event task","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Zhengwinter"},"content":"Adds a event task to the task list after specifying the starting and ending time, together with the event name.","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Zhengwinter"},"content":"`event Basketball practice /from Mon 2pm /to 4pm`","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Zhengwinter"},"content":"Shows a confirmation message of the event task that was added.","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Zhengwinter"},"content":"Awesome! I\u0027ve added this task!","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Zhengwinter"},"content":"    [E][ ] Basketball practice (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Zhengwinter"},"content":"    Now, you have 3 tasks in your list.","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Zhengwinter"},"content":"### `List` - Displays the task list","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Zhengwinter"},"content":"Shows to the user the task list after tasks have been added / removed. The tasks are arranged in the order of addition and labeled accordingly.","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Zhengwinter"},"content":"`list`","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"Zhengwinter"},"content":"Displays the task list","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Zhengwinter"},"content":"    1. [T][ ] homework","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Zhengwinter"},"content":"    2. [D][ ] CS2113 team project (by: MAR 3 2024 23:59)","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Zhengwinter"},"content":"    3. [E][ ] Basketball practice (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Zhengwinter"},"content":"### `Mark` - Marks a task as complete","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Zhengwinter"},"content":"Marks a task in the task list as complete after specifying the number corresponding to the task in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Zhengwinter"},"content":"`mark 1`","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Zhengwinter"},"content":"Shows a confirmation message that the specified task in the task list is marked as complete, as indicated by the cross in the box next to the task name.","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Zhengwinter"},"content":"    Woohoo! I\u0027ve marked this task as done:","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Zhengwinter"},"content":"        [T][X] homework","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Zhengwinter"},"content":"### `Unmark` - Marks a task as incomplete","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Zhengwinter"},"content":"Marks a task in the task list as incomplete after specifying the number corresponding to the task in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"Zhengwinter"},"content":"`unmark 1`","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"Zhengwinter"},"content":"Shows a confirmation message that the specified task in the task list is marked as incomplete, as indicated by the cross in the box next to the task name.","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"Zhengwinter"},"content":"    Alright! I\u0027ve marked this task as incomplete:","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Zhengwinter"},"content":"        [T][ ] homework","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"Zhengwinter"},"content":"### `delete` - Removes a task from the task list","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"Zhengwinter"},"content":"Deletes a task from the task list by specifying the number corresponding to the task.","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"Zhengwinter"},"content":"`delete 2`","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"Zhengwinter"},"content":"Shows a confirmation message that the specified task in the task list is deleted, by showing the details of the deleted task.","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":155,"author":{"gitId":"Zhengwinter"},"content":"    No problemo, I\u0027ve removed this task: ","lastModifiedDate":"2024-03-06"},{"lineNumber":156,"author":{"gitId":"Zhengwinter"},"content":"        [D][ ] CS2113 team project (by: MAR 3 2024 23:59)","lastModifiedDate":"2024-03-06"},{"lineNumber":157,"author":{"gitId":"Zhengwinter"},"content":"    Now, you have 2 tasks in your list.","lastModifiedDate":"2024-03-06"},{"lineNumber":158,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":159,"author":{"gitId":"Zhengwinter"},"content":"### `find` - Search for a keyword","lastModifiedDate":"2024-03-06"},{"lineNumber":160,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"Zhengwinter"},"content":"Looks for a specified keyword in the task names of the tasks in the task list.","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"Zhengwinter"},"content":"`find Basketball`","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"Zhengwinter"},"content":"Shows a list containing all the matches with the keyword, if present.","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"Zhengwinter"},"content":"Hola! These are the matching tasks in your list:","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"Zhengwinter"},"content":"    1. [E][ ] Basketball practice (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"Zhengwinter"},"content":"`find elephant`","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"Zhengwinter"},"content":"Shows a message saying the task is not found.","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"Zhengwinter"},"content":"Sorry! There were no task that matches your keyword, try another keyword?","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"Zhengwinter"},"content":"### `bye` - Exit the program","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"Zhengwinter"},"content":"Exits the program. Other strings like BYE or Bye are also accepted.","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"Zhengwinter"},"content":"Example of usage:","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":193,"author":{"gitId":"Zhengwinter"},"content":"`bye`","lastModifiedDate":"2024-03-06"},{"lineNumber":194,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":195,"author":{"gitId":"Zhengwinter"},"content":"Expected outcome:","lastModifiedDate":"2024-03-06"},{"lineNumber":196,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":197,"author":{"gitId":"Zhengwinter"},"content":"Shows a farewell message and terminates the program.","lastModifiedDate":"2024-03-06"},{"lineNumber":198,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":199,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":201,"author":{"gitId":"Zhengwinter"},"content":"Farewell. Hope to see you again soon!","lastModifiedDate":"2024-03-06"},{"lineNumber":202,"author":{"gitId":"Zhengwinter"},"content":"```","lastModifiedDate":"2024-03-06"},{"lineNumber":203,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Zhengwinter":175,"-":28}},{"path":"src/main/java/winter/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.checkedexceptions.*;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.commands.*;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"import static winter.checkedexceptions.Exceptions.*;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" * Process the input from the user and checks for the validity of different","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":" * commands from the user before relaying the information to other parts of","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":" * the program through Command objects","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"public class Parser {","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"     * Returns the command object after parsing the string input from the command line","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"     * Initializes various command objects based on the type of command","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"     * @param fullCommand The input String command from the user","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"     * @return Subclass of command class depending on the input","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"        switch (fullCommand) {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"        // Cases include farewell and list commands","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"        case \"bye\":","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"        case \"Bye\":","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"        case \"BYE\":","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"        case \"list\":","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"        case \"List\":","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        case \"LIST\":","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"            return new ListCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"            String[] commandWordArray \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"            String commandWord \u003d commandWordArray[0];","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"            int indexFirstSpace \u003d fullCommand.indexOf(\" \");","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"            String commandArgs \u003d fullCommand.substring(indexFirstSpace+1);","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"            switch (commandWord) {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"            case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"                return prepareTodo(commandWordArray, commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"                return prepareDeadline(commandWordArray,commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"                return prepareEvent(commandWordArray,commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"                return prepareDelete(commandWordArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"            // Cases for marking tasks","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"            case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"                return prepareMark(commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"            case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"                return prepareUnmark(commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"                return prepareFind(commandWordArray,commandArgs);","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"            case \"\":","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"                handleEmptyString();","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"            default:","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"                handleInvalidCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"        } catch (InvalidTodoException e){","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(INVALIDTODO);","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(INVALIDDEADLINE);","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"        } catch (InvalidEventException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(INVALIDEVENT);","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"Zhengwinter"},"content":"        } catch (EmptyCommandException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(EMPTYCOMMAND);","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"Zhengwinter"},"content":"        } catch (InvalidDeleteException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(INVALIDDELETE);","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"Zhengwinter"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(INVALIDCOMMAND);","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"Zhengwinter"},"content":"        } catch (InvalidFindException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Zhengwinter"},"content":"            UI.handleCheckedExceptions(INVALIDFIND);","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Zhengwinter"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareFind(String[] commandWordArray, String commandArgs) throws InvalidFindException {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidFind \u003d verifyFind(commandWordArray);","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Zhengwinter"},"content":"        if (isValidFind) {","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Zhengwinter"},"content":"            return new FindCommand(commandArgs);","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"Zhengwinter"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean verifyFind(String[] commandWordArray) throws InvalidFindException {","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidFind \u003d true;","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Zhengwinter"},"content":"        if (commandWordArray.length \u003c 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Zhengwinter"},"content":"            throw new InvalidFindException();","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Zhengwinter"},"content":"        return isValidFind;","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareUnmark(String commandArgs) {","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"Zhengwinter"},"content":"        int taskUnmarkNum \u003d Integer.parseInt(commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"Zhengwinter"},"content":"        return new UnmarkCommand(taskUnmarkNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareMark(String commandArgs) {","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"Zhengwinter"},"content":"        int taskMarkNum \u003d Integer.parseInt(commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"Zhengwinter"},"content":"        return new MarkCommand(taskMarkNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareDelete(String[] commandWordArray) throws InvalidDeleteException{","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidDelete \u003d verifyDelete(commandWordArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"Zhengwinter"},"content":"        int taskDeleteNum \u003d Integer.parseInt(commandWordArray[1]);","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"Zhengwinter"},"content":"        if (isValidDelete) {","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"Zhengwinter"},"content":"            return new DeleteCommand(taskDeleteNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"Zhengwinter"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareTodo(String[] commandWordArray, String commandArgs) throws InvalidTodoException {","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidTodo \u003d verifyTodo(commandWordArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"Zhengwinter"},"content":"        if (isValidTodo) {","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"Zhengwinter"},"content":"            return new TodoCommand(commandArgs);","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"Zhengwinter"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareDeadline(String[] commandWordArray, String commandArgs) throws InvalidDeadlineException {","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidDeadline \u003d verifyDeadline(commandWordArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"Zhengwinter"},"content":"        if (isValidDeadline) {","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"Zhengwinter"},"content":"            int byKeywordIndex \u003d commandArgs.indexOf(\"/by \");","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"Zhengwinter"},"content":"            int deadlineIndex \u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"Zhengwinter"},"content":"            String deadline \u003d (commandArgs.split(\"/by \"))[deadlineIndex];","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(deadline);","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"Zhengwinter"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-03-06"},{"lineNumber":135,"author":{"gitId":"Zhengwinter"},"content":"            LocalDateTime deadlineTimeObj \u003d null;","lastModifiedDate":"2024-03-06"},{"lineNumber":136,"author":{"gitId":"Zhengwinter"},"content":"            try {","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"Zhengwinter"},"content":"                deadlineTimeObj \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Zhengwinter"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println(\"Oh no! There is a problem with your deadline. It should be in the format of (yyyy-mm-dd HH:mm)\");","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"Zhengwinter"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"Zhengwinter"},"content":"            String deadlineName \u003d commandArgs.substring(0,byKeywordIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Zhengwinter"},"content":"            return new DeadlineCommand(deadlineName,deadlineTimeObj);","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"Zhengwinter"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"Zhengwinter"},"content":"    private static Command prepareEvent(String[] commandWordArray, String commandArgs) throws InvalidEventException {","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidEvent \u003d verifyEvent(commandWordArray);","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"Zhengwinter"},"content":"        if (isValidEvent) {","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"Zhengwinter"},"content":"            int firstSlashIndex \u003d commandArgs.indexOf(\"/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"Zhengwinter"},"content":"            int numCharsFromKeyword \u003d 5;","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"Zhengwinter"},"content":"            String startAndEndTime \u003d commandArgs.substring(firstSlashIndex + numCharsFromKeyword);","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"Zhengwinter"},"content":"            int secondSlashIndex \u003d startAndEndTime.indexOf(\"/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"Zhengwinter"},"content":"            String startTime \u003d startAndEndTime.substring(0,secondSlashIndex);","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"Zhengwinter"},"content":"            int numCharsToKeyword \u003d 3;","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"Zhengwinter"},"content":"            String endTime \u003d startAndEndTime.substring(secondSlashIndex + numCharsToKeyword);","lastModifiedDate":"2024-03-05"},{"lineNumber":158,"author":{"gitId":"Zhengwinter"},"content":"            String eventName \u003d commandWordArray[1];","lastModifiedDate":"2024-03-05"},{"lineNumber":159,"author":{"gitId":"Zhengwinter"},"content":"            return new EventCommand(eventName,startTime,endTime);","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":161,"author":{"gitId":"Zhengwinter"},"content":"        return new HelpCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":162,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean verifyTodo(String[] commandWords) throws InvalidTodoException {","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"Zhengwinter"},"content":"        int numValidTodoArgs \u003d 2;","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"Zhengwinter"},"content":"        if (commandWords.length \u003c numValidTodoArgs) {","lastModifiedDate":"2024-03-05"},{"lineNumber":167,"author":{"gitId":"Zhengwinter"},"content":"            throw new InvalidTodoException();","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":169,"author":{"gitId":"Zhengwinter"},"content":"        return true;","lastModifiedDate":"2024-03-05"},{"lineNumber":170,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":171,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean verifyDeadline(String[] commandWords) throws InvalidDeadlineException {","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidDeadline \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"Zhengwinter"},"content":"        for (String commandWord : commandWords) {","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"Zhengwinter"},"content":"            if (commandWord.equals(\"/by\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":177,"author":{"gitId":"Zhengwinter"},"content":"                isValidDeadline \u003d true;","lastModifiedDate":"2024-03-05"},{"lineNumber":178,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":179,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":180,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":181,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"Zhengwinter"},"content":"        int numValidDeadlineArgs \u003d 5;","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"Zhengwinter"},"content":"        if (commandWords.length \u003c numValidDeadlineArgs || !isValidDeadline) {","lastModifiedDate":"2024-03-05"},{"lineNumber":184,"author":{"gitId":"Zhengwinter"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2024-03-05"},{"lineNumber":185,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":186,"author":{"gitId":"Zhengwinter"},"content":"        return isValidDeadline;","lastModifiedDate":"2024-03-05"},{"lineNumber":187,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":188,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":189,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":190,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean verifyEvent(String[] commandWords) throws InvalidEventException {","lastModifiedDate":"2024-03-06"},{"lineNumber":191,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"Zhengwinter"},"content":"        boolean isValidEvent \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":193,"author":{"gitId":"Zhengwinter"},"content":"        boolean hasValidStart \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":194,"author":{"gitId":"Zhengwinter"},"content":"        boolean hasValidEnd \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":195,"author":{"gitId":"Zhengwinter"},"content":"        for (String commandWord : commandWords) {","lastModifiedDate":"2024-03-05"},{"lineNumber":196,"author":{"gitId":"Zhengwinter"},"content":"            if (commandWord.equals(\"/from\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":197,"author":{"gitId":"Zhengwinter"},"content":"                hasValidStart \u003d true;","lastModifiedDate":"2024-03-05"},{"lineNumber":198,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":199,"author":{"gitId":"Zhengwinter"},"content":"            if (commandWord.equals(\"/to\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":200,"author":{"gitId":"Zhengwinter"},"content":"                hasValidEnd \u003d true;","lastModifiedDate":"2024-03-05"},{"lineNumber":201,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":202,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":203,"author":{"gitId":"Zhengwinter"},"content":"        if (hasValidStart \u0026\u0026 hasValidEnd) {","lastModifiedDate":"2024-03-05"},{"lineNumber":204,"author":{"gitId":"Zhengwinter"},"content":"            isValidEvent \u003d true;","lastModifiedDate":"2024-03-05"},{"lineNumber":205,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":206,"author":{"gitId":"Zhengwinter"},"content":"        int numValidEventArgs \u003d 6;","lastModifiedDate":"2024-03-05"},{"lineNumber":207,"author":{"gitId":"Zhengwinter"},"content":"        if (commandWords.length \u003c numValidEventArgs || !isValidEvent) {","lastModifiedDate":"2024-03-05"},{"lineNumber":208,"author":{"gitId":"Zhengwinter"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2024-03-05"},{"lineNumber":209,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":210,"author":{"gitId":"Zhengwinter"},"content":"        return isValidEvent;","lastModifiedDate":"2024-03-05"},{"lineNumber":211,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":212,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":213,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean verifyDelete(String[] commandWords) throws InvalidDeleteException {","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"Zhengwinter"},"content":"        if (commandWords.length \u003c 2 || !isInteger(commandWords[1])) {","lastModifiedDate":"2024-03-05"},{"lineNumber":215,"author":{"gitId":"Zhengwinter"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2024-03-05"},{"lineNumber":216,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":217,"author":{"gitId":"Zhengwinter"},"content":"        return true;","lastModifiedDate":"2024-03-05"},{"lineNumber":218,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":219,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":220,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean isInteger (String strNum) {","lastModifiedDate":"2024-03-06"},{"lineNumber":221,"author":{"gitId":"Zhengwinter"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2024-03-05"},{"lineNumber":222,"author":{"gitId":"Zhengwinter"},"content":"            return false;","lastModifiedDate":"2024-03-05"},{"lineNumber":223,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":224,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":225,"author":{"gitId":"Zhengwinter"},"content":"            int i  \u003d Integer.parseInt(strNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":226,"author":{"gitId":"Zhengwinter"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-03-05"},{"lineNumber":227,"author":{"gitId":"Zhengwinter"},"content":"            return false;","lastModifiedDate":"2024-03-05"},{"lineNumber":228,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":229,"author":{"gitId":"Zhengwinter"},"content":"        return true;","lastModifiedDate":"2024-03-05"},{"lineNumber":230,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":231,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":232,"author":{"gitId":"Zhengwinter"},"content":"    private static void handleEmptyString () throws EmptyCommandException {","lastModifiedDate":"2024-03-06"},{"lineNumber":233,"author":{"gitId":"Zhengwinter"},"content":"        throw new EmptyCommandException();","lastModifiedDate":"2024-03-05"},{"lineNumber":234,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":235,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":236,"author":{"gitId":"Zhengwinter"},"content":"    private static void handleInvalidCommand () throws InvalidCommandException {","lastModifiedDate":"2024-03-06"},{"lineNumber":237,"author":{"gitId":"Zhengwinter"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2024-03-05"},{"lineNumber":238,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":239,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":240,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":241,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":241}},{"path":"src/main/java/winter/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Deadline;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Event;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Todo;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"import java.io.File;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":" * Responsible for reading and writing to a file to be stored in memory","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"public class Storage {","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    private static String filePath;","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"    public Storage(String acceptedFilePath) {","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"            filePath \u003d acceptedFilePath;","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"            readFile();","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"There\u0027s no file in storage!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"     * Returns an ArrayList representing a list of all the tasks that are stored","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"     * within the stored file","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"     * @return List of the tasks stored in memory","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"     * @throws IOException If the file cannot be read using the Scanner","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"    protected ArrayList\u003cTask\u003e readFile () throws IOException {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"        ArrayList \u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"            String inputLine \u003d s.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"            String[] inputArray \u003d inputLine.split(\" \\\\| \");","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"            int taskType \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"            int isMarkedIndex  \u003d 1;","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"            int taskNameIndex \u003d 2;","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"            int firstTimeIndex \u003d 3;","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"            int endTimeIndex \u003d 4;","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"            switch(inputArray[taskType]) {","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"            case \"E\":","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"                taskArrayList.add(new Event(taskIndex,Boolean.parseBoolean(inputArray[isMarkedIndex]),","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"                            inputArray[taskNameIndex],inputArray[firstTimeIndex],inputArray[endTimeIndex]));","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"                taskIndex++;","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"            case \"D\":","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"                taskArrayList.add(new Deadline(taskIndex,Boolean.parseBoolean(inputArray[isMarkedIndex]),","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"                inputArray[taskNameIndex], LocalDateTime.parse(inputArray[firstTimeIndex])));","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"                taskIndex++;","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"            case \"T\":","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"                taskArrayList.add(new Todo(taskIndex,Boolean.parseBoolean(inputArray[isMarkedIndex]),inputArray[taskNameIndex]));","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"                taskIndex++;","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"            default:","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"Zhengwinter"},"content":"        return taskArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Zhengwinter"},"content":"     * Write to the file to be stored in memory if any changes to the list was made","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Zhengwinter"},"content":"     * @param textToAdd The text to be written to the file","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Zhengwinter"},"content":"     * @param appendFlag true if appending to the file in storage, false if overwriting the file","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Zhengwinter"},"content":"     * @throws IOException If there was an error writing to the file using the Filewriter","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Zhengwinter"},"content":"    public void writeToFile(String textToAdd, boolean appendFlag) throws IOException {","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"Zhengwinter"},"content":"        FileWriter fw \u003d new FileWriter(filePath, appendFlag);","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"Zhengwinter"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"Zhengwinter"},"content":"        fw.close();","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":88}},{"path":"src/main/java/winter/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":" * Represents the list containing all the tasks that were added by the user.","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":" * Has operations to modify the list, such as \u003ccode\u003eaddNewTask\u003c/code\u003e or \u003ccode\u003edeleteTask\u003c/code\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"public class TaskList {","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"    private static int currentTaskIndex;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"        currentTaskIndex \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        currentTaskIndex \u003d taskArrayList.size()-1;","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"        taskList \u003d taskArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"     * Adds a new task to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"     * @param task Takes a task object, which can be \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e or \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"     *             due to substitutability","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"    public void addNewTask(Task task) {","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"        taskList.add(task);","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"        currentTaskIndex++;","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"     * Deletes a task from the task list","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"     * Updates the new order of the tasks left in the list after deletion","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"     * @param taskNumber Task number of task to be deleted","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"     * @return The updated list after deletion","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"    public ArrayList\u003cTask\u003e deleteTask(int taskNumber) {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"            taskList.remove(taskNumber-1);","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"The task you are trying to delete doesn\u0027t exist!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"            taskList.get(i).setOrder(i);","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"        currentTaskIndex--;","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"        return taskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"        return taskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"    public void markTask(int taskNumber) {","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"        taskList.get(taskNumber-1).mark();","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"    public void unmarkTask(int taskNumber) {","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"        taskList.get(taskNumber-1).unmark();","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"    public Task getTask(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"        return taskList.get(taskNumber - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"Zhengwinter"},"content":"    public void increaseLastTaskIndex() {","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"Zhengwinter"},"content":"        currentTaskIndex++;","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"Zhengwinter"},"content":"    public void decreaseLastTaskIndex() {","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"Zhengwinter"},"content":"        currentTaskIndex--;","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"Zhengwinter"},"content":"    public int getCurrentTaskIndex() {","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"Zhengwinter"},"content":"        return currentTaskIndex;","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":83}},{"path":"src/main/java/winter/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"import winter.checkedexceptions.Exceptions;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import winter.commands.ListCommand;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" * The user interface which the user interacts with.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":" * Contains methods that allow the user to enter inputs and allow the chatbot to respond to the user","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"public class UI {","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    public UI()","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    {","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"        showWelcome();","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        sayHi();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"    protected void showWelcome() {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"        String logo \u003d \"  __      __.__        __                \\n\" +","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"                \"/  \\\\    /  \\\\__| _____/  |_  ___________ \\n\" +","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"                \"\\\\   \\\\/\\\\/   /  |/    \\\\   __\\\\/ __ \\\\_  __ \\\\\\n\" +","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"                \" \\\\        /|  |   |  \\\\  | \\\\  ___/|  | \\\\/\\n\" +","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"                \"  \\\\__/\\\\  / |__|___|  /__|  \\\\___  \u003e__|   \\n\" +","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"                \"       \\\\/          \\\\/          \\\\/    \";","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"    // Method for greeting message","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"    protected void sayHi() {","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"        String greet \u003d \"Hello! I\u0027m Winter!\\nWhat can I do for you?\";","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(greet);","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"    // Method for farewell message","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"    public void sayBye() {","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"        String farewell \u003d \"Farewell. Hope to see you again soon!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(farewell);","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"    protected void showLoadingError() {","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"        String errorMessage \u003d \"Oh dear! I\u0027ve been rummaging but I can\u0027t find any saved files!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"    public static void showLine() {","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"        String line \u003d \"-----------------------------------\\n\";","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"        System.out.print(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"    public void showIndent() {","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"        String indent \u003d \"   \";","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"        System.out.print(indent);","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"     * Allows the user to enter input","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"     * @return The string that was entered by the user","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"     * @throws IOException If there was an error when the Scanner was reading input","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Zhengwinter"},"content":"    protected String acceptInput () throws IOException {","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"Zhengwinter"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"Zhengwinter"},"content":"        String inputString;","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"Zhengwinter"},"content":"        inputString \u003d input.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"Zhengwinter"},"content":"        return inputString;","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Zhengwinter"},"content":"     * Show confirmation that a new task has been added","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The task list containing all the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Zhengwinter"},"content":"     * @param newTask The new task that was added","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Zhengwinter"},"content":"    public void showTaskAddedConfirm(TaskList tasks, Task newTask) {","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"Zhengwinter"},"content":"        showIndent();","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Awesome! I\u0027ve added this task!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(newTask);","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"Zhengwinter"},"content":"        showIndent();","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Now, you have \" + (tasks.getCurrentTaskIndex() + 1) + \" tasks in your list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Zhengwinter"},"content":"     * Show confirmation of the task that was removed","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The task list containing all the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Zhengwinter"},"content":"     * @param removedTaskNumber The number corresponding to the task that was deleted","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Zhengwinter"},"content":"    public void showTaskRemovedConfirm(TaskList tasks, int removedTaskNumber) {","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"Zhengwinter"},"content":"        showIndent();","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"No problemo, I\u0027ve removed this task: \");","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(tasks.getTask(removedTaskNumber));","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"Zhengwinter"},"content":"        showIndent();","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Now, you have \" + tasks.getCurrentTaskIndex() + \" tasks in your list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"Zhengwinter"},"content":"        showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Zhengwinter"},"content":"     * Provides error messages for all the exceptions that could arise from entering the commands incorrectly","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Zhengwinter"},"content":"     * @param exception The exception that was thrown when some form of invalid command was entered","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Zhengwinter"},"content":"    public static void handleCheckedExceptions(Exceptions exception) {","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"Zhengwinter"},"content":"        switch (exception) {","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"Zhengwinter"},"content":"        case INVALIDTODO:","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Oh no! You did not enter a ToDo task after the todo command!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"The correct format should be \u0027todo (task)\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"Zhengwinter"},"content":"        case INVALIDDEADLINE:","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Oh no! You did not enter a Deadline task / specify the deadline correctly \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"Zhengwinter"},"content":"                    \"after the deadline command!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"The correct format should be \u0027deadline (task) by/ (deadline)\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"Zhengwinter"},"content":"        case INVALIDEVENT:","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Oh no! You did not enter a Event task / specify the event correctly \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"Zhengwinter"},"content":"                    \"after the event command!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"The correct format should be \u0027event (task) /from (start time) /to (end time)\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"Zhengwinter"},"content":"        case EMPTYCOMMAND:","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Oh no! You did not enter anything! What can one do with nothing? I wonder...\");","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Valid commands are todo, deadline, event\\nThanks!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":138,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"Zhengwinter"},"content":"        case INVALIDCOMMAND:","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Thank you for your input but you did not enter any command! :(\");","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Valid commands are todo, deadline, event\\nThanks!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"Zhengwinter"},"content":"        case INVALIDDELETE:","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Haishhh, I don\u0027t know what to remove! Please specify accordingly! :(\");","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"The correct format should be \u0027delete (task number)\u0027\\nThanks!\");","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"Zhengwinter"},"content":"        case INVALIDFIND:","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"I can search with the find command you gave!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"The correct format should be \u0027find (keyword)\u0027\\nThanks!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":152,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":153,"author":{"gitId":"Zhengwinter"},"content":"            break;","lastModifiedDate":"2024-03-06"},{"lineNumber":154,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"Zhengwinter"},"content":"    protected void showError(String errormessage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":158,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Oh no! We have an error!\\n\" + errormessage);","lastModifiedDate":"2024-03-05"},{"lineNumber":159,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":161,"author":{"gitId":"Zhengwinter"},"content":"    public void showTaskFound(ArrayList\u003cTask\u003e foundList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"Zhengwinter"},"content":"        if (foundList.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"Zhengwinter"},"content":"            showIndent();","lastModifiedDate":"2024-03-06"},{"lineNumber":164,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Sorry! There were no task that matches your keyword, try another keyword?\");","lastModifiedDate":"2024-03-06"},{"lineNumber":165,"author":{"gitId":"Zhengwinter"},"content":"            showLine();","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"Zhengwinter"},"content":"            return;","lastModifiedDate":"2024-03-06"},{"lineNumber":167,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":168,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Hola! These are the matching tasks in your list:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"Zhengwinter"},"content":"        int foundListTaskNum \u003d 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":170,"author":{"gitId":"Zhengwinter"},"content":"        for (Task task : foundList) {","lastModifiedDate":"2024-03-06"},{"lineNumber":171,"author":{"gitId":"Zhengwinter"},"content":"            showIndent();","lastModifiedDate":"2024-03-06"},{"lineNumber":172,"author":{"gitId":"Zhengwinter"},"content":"            switch (task.getType()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"Zhengwinter"},"content":"            case \"D\":","lastModifiedDate":"2024-03-06"},{"lineNumber":174,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println((foundListTaskNum)  + \". [D] \" + task.getDoneCheckbox() + \" \"","lastModifiedDate":"2024-03-06"},{"lineNumber":175,"author":{"gitId":"Zhengwinter"},"content":"                        + task.getTaskName() + \" (by: \" + task.getEndTime() + \")\");","lastModifiedDate":"2024-03-06"},{"lineNumber":176,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":177,"author":{"gitId":"Zhengwinter"},"content":"            case \"E\":","lastModifiedDate":"2024-03-06"},{"lineNumber":178,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println((foundListTaskNum) + \". [E] \" + task.getDoneCheckbox() + \" \"","lastModifiedDate":"2024-03-06"},{"lineNumber":179,"author":{"gitId":"Zhengwinter"},"content":"                        + task.getTaskName() + \" (from: \" + task.getStartTime()","lastModifiedDate":"2024-03-06"},{"lineNumber":180,"author":{"gitId":"Zhengwinter"},"content":"                        + \" to: \" + task.getEndTime() + \")\");","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":182,"author":{"gitId":"Zhengwinter"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println((foundListTaskNum) + \". [T]\" + task.getDoneCheckbox() + \" \"","lastModifiedDate":"2024-03-06"},{"lineNumber":184,"author":{"gitId":"Zhengwinter"},"content":"                        + task.getTaskName());","lastModifiedDate":"2024-03-06"},{"lineNumber":185,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":186,"author":{"gitId":"Zhengwinter"},"content":"            foundListTaskNum++;","lastModifiedDate":"2024-03-06"},{"lineNumber":187,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":188,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":189,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":189}},{"path":"src/main/java/winter/Winter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.commands.Command;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import java.io.UnsupportedEncodingException;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"import static winter.Parser.parse;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":" * The main class of the program and it coordinates how the different parts of the program","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":" * come together","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"public class Winter {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    private UI ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    public Winter (String filePath) {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"            tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"    public void run () {","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"                String fullCommand \u003d ui.acceptInput();","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"                Command c \u003d parse(fullCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"            } catch (IOException | UnsupportedOperationException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"            } finally {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"                ui.showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"        new Winter(\"data/winter.txt\").run();","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Zhengwinter":54}},{"path":"src/main/java/winter/checkedexceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"public class EmptyCommandException extends Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Zhengwinter":3}},{"path":"src/main/java/winter/checkedexceptions/Exceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"public enum Exceptions {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"    INVALIDTODO,INVALIDDEADLINE,INVALIDEVENT,INVALIDCOMMAND,INVALIDDELETE,INVALIDFIND,","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"    EMPTYCOMMAND;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":6}},{"path":"src/main/java/winter/checkedexceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Zhengwinter":4}},{"path":"src/main/java/winter/checkedexceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Zhengwinter":3}},{"path":"src/main/java/winter/checkedexceptions/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"public class InvalidDeleteException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"Zhengwinter":4}},{"path":"src/main/java/winter/checkedexceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"Zhengwinter":3}},{"path":"src/main/java/winter/checkedexceptions/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"public class InvalidFindException extends Exception {","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Zhengwinter":4}},{"path":"src/main/java/winter/checkedexceptions/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"public class InvalidTodoException extends Exception {","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":3}},{"path":"src/main/java/winter/checkedexceptions/WinterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.checkedexceptions;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"public class WinterException extends Exception {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":4}},{"path":"src/main/java/winter/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":" * The parent class of all the Command type objects that can be instantiated depending on the user input","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"public class Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"    //BYE,LIST,MARK,UNMARK,TODO,DEADLINE,EVENT, DELETe;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"    protected Command() {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"     * Executes the command, depends on implementation by child classes","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The TaskList object representing a list of the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"     * @param ui The user interface that provides feedback to the user","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"     * @param storage The storage object which helps store changes made to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    };","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"    };","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        return isExit;","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"    public static void setExit(boolean isExit) {","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"        Command.isExit \u003d isExit;","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":42}},{"path":"src/main/java/winter/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"public class CommandResult {","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"    public final String messageForUser;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"    private final ArrayList \u003cTask\u003e taskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"    public CommandResult(String messageForUser) {","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"        this.messageForUser \u003d messageForUser;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"        taskList \u003d null;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":17}},{"path":"src/main/java/winter/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Deadline;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to add a Deadline task","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Great! New Deadline added: \";","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    private String deadlineName;","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    private LocalDateTime deadlineTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    public DeadlineCommand(String deadlineName, LocalDateTime deadlineTime) {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"        this.deadlineName \u003d deadlineName;","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"     * Upon receiving the command from the user, create a new Deadline object, add it to task list,","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"     * show the confirmation message and update it in storage","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The TaskList object representing a list of the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"     * @param ui The user interface that provides feedback to the user","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"     * @param storage The storage object which helps store changes made to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"        Task newDeadline \u003d new Deadline(tasks.getCurrentTaskIndex() + 1, false, deadlineName,deadlineTime);","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"        tasks.addNewTask(newDeadline);","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"        //tasks.increaseLastTaskIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"        ui.showTaskAddedConfirm(tasks,newDeadline);","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"            storage.writeToFile(formatDeadlineForStorage(newDeadline), true);","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Could not write to file: \" + e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"     * Format the Deadline object into a string that can be written to the storage file","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"     * @param newDeadline The new deadline object that was created","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"     * @return String in the format that can be written to storage and read later","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"    private String formatDeadlineForStorage(Task newDeadline) {","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"        return \"D\" + \" | \" + newDeadline.getIsMarked() + \" | \" +","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"                    newDeadline.getTaskName() + \" | \" + newDeadline.getDeadline() + System.lineSeparator();","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":60}},{"path":"src/main/java/winter/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to delete a task","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    private int taskDeleteNum;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    //public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"No problemo, I\u0027ve removed this task: \";","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    public DeleteCommand(int taskDeleteNum) {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        this.taskDeleteNum \u003d taskDeleteNum;","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"     * Upon receiving the command from the user, show the confirmation message, find the task of interest, remove it from the task list,","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"     * and update it in storage","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The TaskList object representing a list of the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"     * @param ui The user interface that provides feedback to the user","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"     * @param storage The storage object which helps store changes made to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"        ui.showTaskRemovedConfirm(tasks, taskDeleteNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d tasks.deleteTask(taskDeleteNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"        String writeFileString \u003d updateTaskListForStorage(taskArrayList);","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"            storage.writeToFile(writeFileString,false);","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Error writing to file after removing item:\" + e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"     * Prepare the String that can be written to the storage file","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"     * The String contains the remaining tasks in the task list after deletion","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"     * @param taskArrayList The task list","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"     * @return String that consists of all the tasks in the list in a specified format","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"    private String updateTaskListForStorage(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"        String writeFileString \u003d \"\";","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"            switch (task.getType()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"            case \"E\":","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"                writeFileString +\u003d \"E\" + \" | \" + task.getIsMarked() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"                        task.getTaskName() + \" | \" + task.getStartTime() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"                        task.getEndTime() + System.lineSeparator();","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"            case \"D\":","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"                writeFileString +\u003d \"D\" + \" | \" + task.getIsMarked() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"                        task.getTaskName() + \" | \" + task.getEndTime() + System.lineSeparator();","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"            default:","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"                writeFileString +\u003d \"T\" + \" | \" + task.getIsMarked() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"                        task.getTaskName() + System.lineSeparator();","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"        return writeFileString;","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":71}},{"path":"src/main/java/winter/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Event;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to add an Event task","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    private String eventName;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    private String startTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    private String endTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Great! New Event added: \";","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    public EventCommand(String eventName, String startTime, String endTime) {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"     * Upon receiving the command from the user, create a new Event object, add it to task list,","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"     * show the confirmation message and update it in storage","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The TaskList object representing a list of the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"     * @param ui The user interface that provides feedback to the user","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"     * @param storage The storage object which helps store changes made to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"        Task newEvent \u003d new Event(tasks.getCurrentTaskIndex()+1, false, eventName, startTime,endTime);","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"        tasks.addNewTask(newEvent);","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"        //tasks.increaseLastTaskIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"        ui.showTaskAddedConfirm(tasks,newEvent);","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"            storage.writeToFile(formatEventForStorage(newEvent), true);","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Could not write to file: \" + e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"     * Format the Event object into a string that can be written to the storage file","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"     * @param newEvent The new deadline object that was created","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"     * @return String in the format that can be written to storage and read later","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"    private String formatEventForStorage(Task newEvent) {","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"        return \"E\" + \" | \" + newEvent.getIsMarked() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"                newEvent.getTaskName() + \" | \" + newEvent.getStartTime() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"                newEvent.getEndTime() + System.lineSeparator();","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":59}},{"path":"src/main/java/winter/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to exit the program","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"    //private static boolean isExit;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    //public static final String MESSAGE_EXIT_CONFIRMATION \u003d \"Exiting Winter...See you again!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"        Command.setExit(true);","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        ui.sayBye();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":24}},{"path":"src/main/java/winter/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    private String keyword;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    public FindCommand (String keyword) {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"        for (Task task : tasks.getTaskArrayList()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"            if (task.getTaskName().contains(keyword)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"                foundList.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"        //tasks.increaseLastTaskIndex();","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"        ui.showTaskFound(foundList);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Zhengwinter":32}},{"path":"src/main/java/winter/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":" * Displays a help message showing all the possible commands","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Valid commands are \u003ctodo\u003e, \u003cdeadline\u003e, \u003cevent\u003e, \u003clist\u003e,\u003cdelete\u003e\");","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"For \u003ctodo\u003e, the correct format should be \u0027todo (task)\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"For \u003cdeadline\u003e, the correct format should be \u0027deadline (task) by/ (deadline)\u0027\" +","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"                    \"The deadline must be in the format yyyy-mm-dd HH:mm\");","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"For \u003cevent\u003e, the correct format should be \u0027event (task) /from (start time) /to (end time)\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"For \u003cdelete\u003e, the correct format should be \u0027delete (task number)\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"For \u003cfind\u003e, the correct format should be \u0027find (keyword)\u0027\");","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":17}},{"path":"src/main/java/winter/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to display the task list","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    public ListCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"        displayList(tasks.getTaskArrayList(),ui);","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"     * Displays the tasks in the task list in the correct format and with the correct numbering in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The ArrayList containing the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"     * @param ui The user interface","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"    private void displayList(ArrayList\u003cTask\u003e tasks, UI ui) {","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"            ui.showIndent();","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println((task.getOrder() + 1) + \".\" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"            /*switch (task.getType()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"            case \"D\":","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println((task.getOrder() + 1)  + \". [D] \" + task.getDoneCheckbox() + \" \"","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"                        + task.getTaskName() + \" (by: \" + task.getEndTime() + \")\");","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"            case \"E\":","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println((task.getOrder() + 1) + \". [E] \" + task.getDoneCheckbox() + \" \"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"                        + task.getTaskName() + \" (from: \" + task.getStartTime()","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"                        + \" to: \" + task.getEndTime() + \")\");","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"                break;","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"            default:","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"                System.out.println((task.getOrder() + 1) + \". [T]\" + task.getDoneCheckbox() + \" \"","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"                        + task.getTaskName());","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"            }*/","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"        //ui.showLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":53}},{"path":"src/main/java/winter/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to mark a task as completed","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"    private int markTaskNum;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"    public MarkCommand(int markTaskNum) {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"        this.markTaskNum \u003d markTaskNum;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"        tasks.markTask(markTaskNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":20}},{"path":"src/main/java/winter/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Task;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"import winter.task.Todo;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to add a Todo task","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    private String todo;","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Great! New ToDo added: \";","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    public TodoCommand(String todo) {","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"     * Upon receiving the command from the user, create a new Todo object, add it to task list,","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"     * show the confirmation message and update it in storage","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"     * @param tasks The TaskList object representing a list of the tasks","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"     * @param ui The user interface that provides feedback to the user","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"     * @param storage The storage object which helps store changes made to the list","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"        Task newTodo \u003d new Todo(tasks.getCurrentTaskIndex() + 1,false, todo);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"        tasks.addNewTask(newTodo);","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"        //tasks.increaseLastTaskIndex();","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"        ui.showTaskAddedConfirm(tasks,newTodo);","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"            storage.writeToFile(formatTodoForStorage(newTodo), true);","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"            System.out.println(\"Could not write to file: \" + e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"     * Format the Todo object into a string that can be written to the storage file","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"     * @param newTodo The new deadline object that was created","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"     * @return String in the format that can be written to storage and read later","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"    private String formatTodoForStorage(Task newTodo) {","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"        return \"T\" + \" | \" + newTodo.getIsMarked() + \" | \" +","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"                newTodo.getTaskName() + System.lineSeparator();","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":55}},{"path":"src/main/java/winter/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.commands;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"import winter.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"import winter.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"import winter.UI;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":" * Represents the command given by the user to mark a task as incomplete","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"    private int unmarkTaskNum;","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"    public UnmarkCommand(int unmarkTaskNum) {","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"        this.unmarkTaskNum \u003d unmarkTaskNum;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"        tasks.unmarkTask(unmarkTaskNum);","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"Zhengwinter":20}},{"path":"src/main/java/winter/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":" * Represents the \u003ccode\u003eDeadline\u003c/code\u003e object which contains information about a Deadline task","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":" * that can be modified","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    private static final String indent \u003d \"   \";","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    public Deadline (int order,boolean isMarked, String deadlineName, LocalDateTime deadline) {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"        super(order,isMarked,deadlineName);","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"    public LocalDateTime getDeadline(){","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        return deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    public String getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"        return \"D\";","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"        String typeCheckbox \u003d \"[D]\";","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"        return indent + typeCheckbox + \" \" + this.getDoneCheckbox() + this.getTaskName() +","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"                    \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zhengwinter":36}},{"path":"src/main/java/winter/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":" * Represents the \u003ccode\u003eEvent\u003c/code\u003e object which contains information about an Event task","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":" * that can be modified","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"    private static final String indent \u003d \"   \";","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"    protected String startTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"    protected String endTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"    public Event (int order,boolean isMarked, String eventName, String startTime, String endTime) {","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"        super(order,isMarked,eventName);","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"        return endTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"        return startTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"    public String getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"        return \"E\";","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        String typeCheckbox \u003d \"[E]\";","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"        return indent + typeCheckbox + \" \" + this.getDoneCheckbox() + this.getTaskName() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zhengwinter":36}},{"path":"src/main/java/winter/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object can be inherited by its child classes,","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":" * \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e and \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"public class Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    private int order;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"    private String taskName;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"    private String doneCheckbox \u003d\"[ ]\";","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    Task(int order, boolean marked, String taskName) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"        this.order \u003d order;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":"     * Marks a task as complete and shows a brief confirmation message","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"    public void mark() {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":"        String line \u003d \"-----------------------------------\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"        String indent \u003d \"   \";","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"Zhengwinter"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"Zhengwinter"},"content":"        this.doneCheckbox \u003d \"[X]\";","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Woohoo! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"Zhengwinter"},"content":"        System.out.print(indent);","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(this.doneCheckbox + this.taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"Zhengwinter"},"content":"        System.out.print(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Zhengwinter"},"content":"     * Marks a task as incomplete and shows a brief confirmation message","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Zhengwinter"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"Zhengwinter"},"content":"        String line \u003d \"-----------------------------------\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"Zhengwinter"},"content":"        String indent \u003d \"   \";","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"Zhengwinter"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"Zhengwinter"},"content":"        this.doneCheckbox \u003d \"[ ]\";","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(\"Alright! I\u0027ve marked this task as incomplete:\");","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"Zhengwinter"},"content":"        System.out.print(indent);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"Zhengwinter"},"content":"        System.out.println(this.doneCheckbox+ \" \" + this.taskName);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"Zhengwinter"},"content":"        System.out.print(line);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zhengwinter"},"content":"     * Set the index of the task within the list","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Zhengwinter"},"content":"     * @param newOrder The new order to be set","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Zhengwinter"},"content":"    public void setOrder(int newOrder) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Zhengwinter"},"content":"        this.order \u003d newOrder;","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Zhengwinter"},"content":"     * Get the order of a task","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Zhengwinter"},"content":"     * @return The order of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Zhengwinter"},"content":"    public int getOrder() {","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"Zhengwinter"},"content":"        return order;","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"Zhengwinter"},"content":"    // Getter method for taskName","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Zhengwinter"},"content":"     * Get task name of a task","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Zhengwinter"},"content":"     * @return Task name","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Zhengwinter"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"Zhengwinter"},"content":"        return taskName;","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Zhengwinter"},"content":"     * Get the String representation of whether a task is complete or not","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Zhengwinter"},"content":"     * @return The checkbox showing whether the task is complete","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Zhengwinter"},"content":"    public String getDoneCheckbox() {","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"Zhengwinter"},"content":"        return doneCheckbox;","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Zhengwinter"},"content":"     * Get the completion status of the task","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Zhengwinter"},"content":"     * @return true if task is marked as complete, false otherwise","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Zhengwinter"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"Zhengwinter"},"content":"        return isMarked;","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"Zhengwinter"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Zhengwinter"},"content":"     * Parent class to be inherited by child classes depending on task type","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Zhengwinter"},"content":"     * @return type of task","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Zhengwinter"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Zhengwinter"},"content":"    public String getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"Zhengwinter"},"content":"        return \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"Zhengwinter"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"Zhengwinter"},"content":"        return \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"Zhengwinter"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"Zhengwinter"},"content":"        return \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"Zhengwinter"},"content":"    public String toString() {","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"Zhengwinter"},"content":"        //To be implemented by child classes","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"Zhengwinter"},"content":"        return \"\";","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"Zhengwinter"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Zhengwinter"},"content":"        //To be implemented by Deadline subclass","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Zhengwinter"},"content":"        return null;","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Zhengwinter":120}},{"path":"src/main/java/winter/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"package winter.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":" * Represents a \u003ccode\u003eTodo\u003c/code\u003e object which contains information about a Todo task","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":" * that can be modified","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"    private static final String indent \u003d \"   \";","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"    public Todo(int order, boolean marked, String toDoName) {","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"        super(order,marked,toDoName);","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Zhengwinter"},"content":"    public String getType() {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"        return \"T\";","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Zhengwinter"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Zhengwinter"},"content":"        String typeCheckbox \u003d \"[T]\";","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Zhengwinter"},"content":"        return indent + typeCheckbox + \" \" + this.getDoneCheckbox() + \" \" + this.getTaskName();","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zhengwinter":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zhengwinter"},"content":"todo read book","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Zhengwinter"},"content":"mark 1","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Zhengwinter"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Zhengwinter"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Zhengwinter"},"content":"todo join sports club","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Zhengwinter"},"content":"todo borrow book","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Zhengwinter"},"content":"mark 4","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Zhengwinter"},"content":"list","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Zhengwinter"},"content":"bye","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zhengwinter":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Zhengwinter"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\winter\\*.java","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zhengwinter"},"content":"java -classpath ..\\bin winter \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Zhengwinter"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003e nul","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Zhengwinter"},"content":"IF errorlevel 0 (","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"    echo Test result: PASSED","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Zhengwinter"},"content":"    exit /b 0","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Zhengwinter"},"content":") else (","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Zhengwinter"},"content":"    echo Test result: FAILED","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Zhengwinter"},"content":"    exit /b 1","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Zhengwinter"},"content":")","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zhengwinter":11,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Zhengwinter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Zhengwinter"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/winter/*.java","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"Zhengwinter"},"content":"java -classpath ../bin Winter \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zhengwinter":3,"-":36}}]
