[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"# Nocturne v0.2","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"Welcome to the User Guide for Nocturne.","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"![The eternal nightmare... Now a servant?](https://pbs.twimg.com/media/E4FchwcVIAIfb4h?format\u003djpg\u0026name\u003d4096x4096)","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"## Setting up the ChatBot","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"Ensure that you have the ip.jar file downloaded. Take note of which directory this file is located. A convenient location would be in Downloads, or the Desktop.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"Now, open up the command prompt. You can do this by pressing the Windows key and searching \u0027Command Prompt\u0027. For Mac users, you can press \u0027Command + Space\u0027 to open up the search bar. From there you can open the Terminal by searching for it on the search bar.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"Once in the terminal, type in *cd Downloads* or *cd Desktop*. This will place you in the directory where you placed Nocturne. Now, simply type ","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"\u003e java -jar ip.jar","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"And this will initialize Nocturne.","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"## Nocturne\u0027s Features","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"Primarily, Nocturne is there to help you record tasks you need to do, as well as their completion status. To utilize them, you will need to enter the commands below. In particular, keep the commands in lowercase, and as much as possible, do not deviate from the command structure. Error messages will be thrown at you if you mess up, but not to worry, Nocturne will usually tell you what you did wrong.","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"For the features below, Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"e.g. in *todo TASK*, *TASK* is a parameter which can be used as *todo pay the bills*.","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"### Adding a Todo task: **todo STRING**","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"Adds a Todo task to the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*todo do the laundry*","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"### Adding a deadline task: **deadline STRING /by TIME**","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"Adds a deadline to the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*deadline return books /by Friday 5pm*","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"### Adding an event task: **event STRING /from START /to END**","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"Adds an event to the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*event Brian\u0027s birthday /from Saturday 2pm /to Saturday 10pm","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"### Marking a task as complete: **mark NUMBER**","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"Marks a task as complete.","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*mark 2*","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"### Marking a task as incomplete: **unmark NUMBER**","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"Marks a task as incomplete.","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*unmark 2*","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"### Deleting a task: **delete NUMBER**","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"Deletes a task already on the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*delete 1*","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"### Finding a task: **find KEYWORD**","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"Finds any tasks that have your keyword and shows them to you. Does not include the TIME, START or END inputs from deadline or event.","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*find swim*","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"nicknamenic"},"content":"### Listing all tasks: **list**","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"nicknamenic"},"content":"Lists all the tasks you have accummulated thus far, showing them in a numbered list, displaying their type (T for Todo, D for deadline and E for event) as well as their completion status.","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"nicknamenic"},"content":"### Closing the bot: **bye**","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"nicknamenic"},"content":"Causes the bot to exit.","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"nicknamenic"},"content":"Be aware that running the bot in the first place creates a text file, nocturne.txt, within the directory that your ip.jar file is placed in. This holds all of the tasks that you have inputted, which Nocturne will remember on startup once again. There is no need for manual saving, as Nocturne updates it every time you add, delete or mark tasks.","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"nicknamenic"},"content":"Thank you for using Nocturne.","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":61}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"# Nocturne v0.2","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"Welcome to the User Guide for Nocturne.","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"![The eternal nightmare... Now a servant?](https://pbs.twimg.com/media/E4FchwcVIAIfb4h?format\u003djpg\u0026name\u003d4096x4096)","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"## Setting up the ChatBot","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"Ensure that you have the ip.jar file downloaded. Take note of which directory this file is located. A convenient location would be in Downloads, or the Desktop.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"Now, open up the command prompt. You can do this by pressing the Windows key and searching \u0027Command Prompt\u0027. For Mac users, you can press \u0027Command + Space\u0027 to open up the search bar. From there you can open the Terminal by searching for it on the search bar.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"Once in the terminal, type in *cd Downloads* or *cd Desktop*. This will place you in the directory where you placed Nocturne. Now, simply type","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"\u003e java -jar ip.jar","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"And this will initialize Nocturne.","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"## Nocturne\u0027s Features","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"Primarily, Nocturne is there to help you record tasks you need to do, as well as their completion status. To utilize them, you will need to enter the commands below. In particular, keep the commands in lowercase, and as much as possible, do not deviate from the command structure. Error messages will be thrown at you if you mess up, but not to worry, Nocturne will usually tell you what you did wrong.","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"For the features below, Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"e.g. in *todo TASK*, *TASK* is a parameter which can be used as *todo pay the bills*.","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"### Adding a Todo task: **todo STRING**","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"Adds a Todo task to the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*todo do the laundry*","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"### Adding a deadline task: **deadline STRING /by TIME**","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"Adds a deadline to the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*deadline return books /by Friday 5pm*","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"### Adding an event task: **event STRING /from START /to END**","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"Adds an event to the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*event Brian\u0027s birthday /from Saturday 2pm /to Saturday 10pm","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"### Marking a task as complete: **mark NUMBER**","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"Marks a task as complete.","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*mark 2*","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"### Marking a task as incomplete: **unmark NUMBER**","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"Marks a task as incomplete.","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*unmark 2*","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"### Deleting a task: **delete NUMBER**","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"Deletes a task already on the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*delete 1*","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"### Finding a task: **find KEYWORD**","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"Finds any tasks that have your keyword and shows them to you. Does not include the TIME, START or END inputs from deadline or event.","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"For example: \u003e*find swim*","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"nicknamenic"},"content":"### Listing all tasks: **list**","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"nicknamenic"},"content":"Lists all the tasks you have accummulated thus far, showing them in a numbered list, displaying their type (T for Todo, D for deadline and E for event) as well as their completion status.","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"nicknamenic"},"content":"### Closing the bot: **bye**","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"nicknamenic"},"content":"Causes the bot to exit.","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"nicknamenic"},"content":"Be aware that running the bot in the first place creates a text file, nocturne.txt, within the directory that your ip.jar file is placed in. This holds all of the tasks that you have inputted, which Nocturne will remember on startup once again. There is no need for manual saving, as Nocturne updates it every time you add, delete or mark tasks.","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"nicknamenic"},"content":"Thank you for using Nocturne.","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":48,"-":13}},{"path":"src/main/java/Nocturne.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"import exceptions.NocturneException;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"import util.Parser;","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"import util.TaskList;","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"import util.Ui;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"public class Nocturne {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"     * The main function of the Chatbot, Nocturne.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"        Ui.greetingMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"        Parser.getInput(list);","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"        Ui.farewellMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicknamenic":15,"-":2}},{"path":"src/main/java/exceptions/NocturneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package exceptions;","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"public class NocturneException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"    public NocturneException(String s) {","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"        super(s);","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nicknamenic":7}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package tasks;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":" * Deadline subclass of Task. Requiring a by input.","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"    protected String by;","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the deadline object.","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"     * @param by The due date of the deadline.","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"        super(description);","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the deadline object when reconstructing the list","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"     * from nocturne.txt, which includes the completion status of the deadline.","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"     * @param by The due date of the deadline.","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"     * @param isDone The boolean variable of whether the deadline is done or not.","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"        super(description);","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"     * Override of the deadline class when it is printed,","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"     * resulting in the format shown in the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"     * @return The string that will be printed.","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"    public String toString() {","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + this.description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":45}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package tasks;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":" * Event subclass of Task. Requires a from and to input.","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"public class Event extends Task {","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"    protected String from;","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"    protected String to;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the event object.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"        super(description);","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for event when restructuring the list from","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"     * nocturne.txt, which includes the completion status of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"     * @param isDone The boolean variable of whether the event is done or not.","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"        super(description);","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"     * Override of the event class when printed,","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"     * resulting in the format shown in the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"     * @return The string that will be printed.","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"    public String toString() {","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"        return \"[E][\" + super.getStatusIcon() +","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"                \"] \" + this.description +","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"                \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":51}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package tasks;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":" * The base class of deadline, event and todo.","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"public class Task {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"    protected String description;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the task object.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"     * The string showing the completion status of the task.","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"     * @return X when the task is completed, one blank space otherwise.","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"     * Gets the description of a task.","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"     * @return The description of a task.","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"        return this.description;","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nicknamenic":51}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package tasks;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":" * The Todo subclass of Task. Requires no additional inputs.","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the todo object.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"        super(description);","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the todo object when restructuring the list","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"     * from nocturne.txt, which includes the completion status of the todo.","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"     * @param isDone The boolean variable of whether the todo is done or not.","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"        super(description);","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"     * Override of the todo class when it is printed,","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"     * resulting in the format shown in the list.","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"     * @return The string that will be printed.","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"    public String toString() {","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":41}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package util;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"import tasks.Todo;","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":" * The class that handles user input and processes for the commands.","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"public class Parser {","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"     * Takes the first word of any input as the command.","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"     * @param input The user\u0027s line input.","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"     * @return Command string.","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"    public static String getCommand(String input) {","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"        return input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"     * Obtains the non-command part of the input, which contains both","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"     * the description and the timings for deadline and event.","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"     * @param input The user\u0027s line input.","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"     * @return Non-command string.","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"    public static String getTask(String input) {","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"        return splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"     * Generates a response based on the user\u0027s input.","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"     * @param input The user\u0027s line input.","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"     * @param tasks The array list of tasks that will be modified","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"     *              based on the command.","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"    private static void getResponse(String input, TaskList tasks) {","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"        String command \u003d getCommand(input);","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"        String task \u003d getTask(input);","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"            switch (command) {","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"                case \"list\":","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"                    tasks.listTasks();","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"                case \"mark\":","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"                    tasks.markTask(Integer.parseInt(task));","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"nicknamenic"},"content":"                case \"unmark\":","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"nicknamenic"},"content":"                    tasks.unmarkTask(Integer.parseInt(task));","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"nicknamenic"},"content":"                case \"todo\":","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"nicknamenic"},"content":"                    tasks.addTask(new Todo(task.trim()));","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"nicknamenic"},"content":"                case \"deadline\":","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"nicknamenic"},"content":"                    String[] deadlineSplit \u003d task.split(\"/\");","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"nicknamenic"},"content":"                    tasks.addTask(new Deadline(deadlineSplit[0].trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"nicknamenic"},"content":"                            deadlineSplit[1].substring(3).trim()));","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"nicknamenic"},"content":"                case \"event\":","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"nicknamenic"},"content":"                    String[] eventSplit \u003d task.split(\"/\");","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"nicknamenic"},"content":"                    tasks.addTask(new Event(eventSplit[0].trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":67,"author":{"gitId":"nicknamenic"},"content":"                            eventSplit[1].substring(5).trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"nicknamenic"},"content":"                            eventSplit[2].substring(3).trim()));","lastModifiedDate":"2024-03-09"},{"lineNumber":69,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"nicknamenic"},"content":"                case \"find\":","lastModifiedDate":"2024-03-09"},{"lineNumber":71,"author":{"gitId":"nicknamenic"},"content":"                    tasks.findTask(task);","lastModifiedDate":"2024-03-09"},{"lineNumber":72,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":73,"author":{"gitId":"nicknamenic"},"content":"                case \"delete\":","lastModifiedDate":"2024-03-09"},{"lineNumber":74,"author":{"gitId":"nicknamenic"},"content":"                    tasks.deleteTask(Integer.parseInt(task));","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"nicknamenic"},"content":"                    break;","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"nicknamenic"},"content":"                default:","lastModifiedDate":"2024-03-09"},{"lineNumber":77,"author":{"gitId":"nicknamenic"},"content":"                    System.out.println(\"Your command is invalid, invalid. Try again.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":78,"author":{"gitId":"nicknamenic"},"content":"            }","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"nicknamenic"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":80,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":81,"author":{"gitId":"nicknamenic"},"content":"            Ui.missingSlashMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"nicknamenic"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(\"Ensure that you include a number after your delete/find/mark command.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":84,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":87,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"nicknamenic"},"content":"     * Takes in the user\u0027s input from the command line interface,","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"nicknamenic"},"content":"     * running it through the response method.","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":91,"author":{"gitId":"nicknamenic"},"content":"     * @param tasks The array list of tasks that will be modified.","lastModifiedDate":"2024-03-09"},{"lineNumber":92,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"nicknamenic"},"content":"    public static void getInput(TaskList tasks) {","lastModifiedDate":"2024-03-09"},{"lineNumber":94,"author":{"gitId":"nicknamenic"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"nicknamenic"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-03-08"},{"lineNumber":96,"author":{"gitId":"nicknamenic"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2024-03-08"},{"lineNumber":97,"author":{"gitId":"nicknamenic"},"content":"            getResponse(line, tasks);","lastModifiedDate":"2024-03-09"},{"lineNumber":98,"author":{"gitId":"nicknamenic"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2024-03-08"},{"lineNumber":99,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":100,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":101,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":101}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package util;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"import java.io.File;","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"import tasks.Event;","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"import tasks.Todo;","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"public class Storage {","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"     * Directory constant.","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"    private final String PATH \u003d \"./data/nocturne.txt\";","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"    private File f;","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"     * Constructor for the Storage, creating the directory and file that","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"     * Nocturne will read and write to.","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"    public Storage() {","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"        File dir \u003d new File(\"./data\");","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"            dir.mkdir();","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"        this.f \u003d new File(PATH);","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"            f.createNewFile();","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"     * Writes to the file specified above.","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"     * @param taskList The list of tasks that will be updated on call.","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"     * @throws IOException if the file cannot be access or written to.","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"    public void saveToFile(TaskList taskList) {","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.f);","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"            for (Task task : taskList.tasks) {","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"                fileWriter.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"            }","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"            fileWriter.close();","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"nicknamenic"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"nicknamenic"},"content":"     * Reads from the file in the directory specified above.","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"nicknamenic"},"content":"     * @param tasks The new instance of the list of tasks that will be shown when","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"nicknamenic"},"content":"     *              list is called.","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"nicknamenic"},"content":"    public void readFromFile(TaskList tasks) {","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"nicknamenic"},"content":"            Scanner sc \u003d new Scanner(this.f);","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"nicknamenic"},"content":"            while(sc.hasNextLine()) {","lastModifiedDate":"2024-03-09"},{"lineNumber":67,"author":{"gitId":"nicknamenic"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":69,"author":{"gitId":"nicknamenic"},"content":"                //Deserialization of the strings in the file occur here.","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":71,"author":{"gitId":"nicknamenic"},"content":"                String task \u003d data.substring(6);","lastModifiedDate":"2024-03-09"},{"lineNumber":72,"author":{"gitId":"nicknamenic"},"content":"                task \u003d task.replace(\u0027(\u0027, \u0027 \u0027);","lastModifiedDate":"2024-03-09"},{"lineNumber":73,"author":{"gitId":"nicknamenic"},"content":"                task \u003d task.replace(\u0027)\u0027, \u0027 \u0027);","lastModifiedDate":"2024-03-09"},{"lineNumber":74,"author":{"gitId":"nicknamenic"},"content":"                boolean isDone \u003d data.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"nicknamenic"},"content":"                switch (data.charAt(1)) {","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"nicknamenic"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2024-03-09"},{"lineNumber":77,"author":{"gitId":"nicknamenic"},"content":"                        String[] deadlineSplit \u003d task.split(\"by:\");","lastModifiedDate":"2024-03-09"},{"lineNumber":78,"author":{"gitId":"nicknamenic"},"content":"                        tasks.addTaskStealth(new Deadline(deadlineSplit[0].trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"nicknamenic"},"content":"                                deadlineSplit[1].trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":80,"author":{"gitId":"nicknamenic"},"content":"                                isDone));","lastModifiedDate":"2024-03-09"},{"lineNumber":81,"author":{"gitId":"nicknamenic"},"content":"                        break;","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"nicknamenic"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"nicknamenic"},"content":"                        String[] eventSplit \u003d task.split(\":\");","lastModifiedDate":"2024-03-09"},{"lineNumber":84,"author":{"gitId":"nicknamenic"},"content":"                        tasks.addTaskStealth(new Event(eventSplit[0].substring(0,","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"nicknamenic"},"content":"                                eventSplit[0].length() - 4).trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"nicknamenic"},"content":"                                eventSplit[1].substring(0, eventSplit[1].length() - 2).trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":87,"author":{"gitId":"nicknamenic"},"content":"                                eventSplit[2].trim(),","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"nicknamenic"},"content":"                                isDone));","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"nicknamenic"},"content":"                        break;","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"nicknamenic"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2024-03-09"},{"lineNumber":91,"author":{"gitId":"nicknamenic"},"content":"                        tasks.addTaskStealth(new Todo(task.trim(), isDone));","lastModifiedDate":"2024-03-09"},{"lineNumber":92,"author":{"gitId":"nicknamenic"},"content":"                }","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"nicknamenic"},"content":"            }","lastModifiedDate":"2024-03-09"},{"lineNumber":94,"author":{"gitId":"nicknamenic"},"content":"            sc.close();","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"nicknamenic"},"content":"        } catch (IndexOutOfBoundsException | FileNotFoundException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":96,"author":{"gitId":"nicknamenic"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-09"},{"lineNumber":97,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":98,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":99}},{"path":"src/main/java/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package util;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":" * This class handles the array list of tasks.","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":" *","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"public class TaskList {","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"     * ArrayList is initialised here. Storage is also initialised at the same time.","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"    protected Storage storage \u003d new Storage();","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"     * Storage reading is done along with the constructor.","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"        this.storage.readFromFile(this);","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"     * Adds a task to the array list, while updating nocturne.txt.","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"     * @param task A task that will be added. Can be of type deadline, event or todo.","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"A task I see. I have added it.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"        Ui.printTask(task);","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"        this.storage.saveToFile(this);","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"     * Adds a task without printing a message, which is done","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"     * on initialisation when reading from nocturne.txt file,","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"     * while updating nocturne.txt.","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"     * @param task The task that will be added to the array list.","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"    public void addTaskStealth(Task task) {","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"        this.storage.saveToFile(this);","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"     * Deletes a task in the array list, while updating nocturne.txt.","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"     * @param index The index of the entry that will get deleted.","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"nicknamenic"},"content":"     *              Starts from 1 to be more intuitive, requiring -1","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"nicknamenic"},"content":"     *              in the accessing.","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"nicknamenic"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":57,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(\"Should all acquaintance be forgot...\");","lastModifiedDate":"2024-03-09"},{"lineNumber":58,"author":{"gitId":"nicknamenic"},"content":"            Ui.printTask(this.tasks.get(index - 1));","lastModifiedDate":"2024-03-09"},{"lineNumber":59,"author":{"gitId":"nicknamenic"},"content":"            this.tasks.remove(index - 1);","lastModifiedDate":"2024-03-09"},{"lineNumber":60,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(this.tasks.size() + \" task(s) remain.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":61,"author":{"gitId":"nicknamenic"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":62,"author":{"gitId":"nicknamenic"},"content":"            Ui.indexOutOfBoundsMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":63,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":64,"author":{"gitId":"nicknamenic"},"content":"        this.storage.saveToFile(this);","lastModifiedDate":"2024-03-09"},{"lineNumber":65,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":66,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":67,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":68,"author":{"gitId":"nicknamenic"},"content":"     *  Lists out all the tasks recorded in the array list thus far.","lastModifiedDate":"2024-03-09"},{"lineNumber":69,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":70,"author":{"gitId":"nicknamenic"},"content":"    public void listTasks() {","lastModifiedDate":"2024-03-09"},{"lineNumber":71,"author":{"gitId":"nicknamenic"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-03-09"},{"lineNumber":72,"author":{"gitId":"nicknamenic"},"content":"            Ui.emptyListMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":73,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":74,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":75,"author":{"gitId":"nicknamenic"},"content":"        for(int i \u003d 0; i \u003c this.tasks.size(); ++i) {","lastModifiedDate":"2024-03-09"},{"lineNumber":76,"author":{"gitId":"nicknamenic"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2024-03-09"},{"lineNumber":77,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(this.tasks.get(i));","lastModifiedDate":"2024-03-09"},{"lineNumber":78,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":79,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":80,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":81,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":82,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":83,"author":{"gitId":"nicknamenic"},"content":"     * Marks a task as done, while updating nocturne.txt.","lastModifiedDate":"2024-03-09"},{"lineNumber":84,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":85,"author":{"gitId":"nicknamenic"},"content":"     * @param index The index of the task that will be updated as done.","lastModifiedDate":"2024-03-09"},{"lineNumber":86,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":87,"author":{"gitId":"nicknamenic"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-03-09"},{"lineNumber":88,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":89,"author":{"gitId":"nicknamenic"},"content":"            (this.tasks.get(index - 1)).markAsDone();","lastModifiedDate":"2024-03-09"},{"lineNumber":90,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(\"Congratulations. I have marked this task as finished:\");","lastModifiedDate":"2024-03-09"},{"lineNumber":91,"author":{"gitId":"nicknamenic"},"content":"            Ui.printTask(this.tasks.get(index - 1));","lastModifiedDate":"2024-03-09"},{"lineNumber":92,"author":{"gitId":"nicknamenic"},"content":"        } catch (IndexOutOfBoundsException var3) {","lastModifiedDate":"2024-03-09"},{"lineNumber":93,"author":{"gitId":"nicknamenic"},"content":"            Ui.indexOutOfBoundsMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":94,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":95,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":96,"author":{"gitId":"nicknamenic"},"content":"        this.storage.saveToFile(this);","lastModifiedDate":"2024-03-09"},{"lineNumber":97,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":98,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":99,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":100,"author":{"gitId":"nicknamenic"},"content":"     * Marks a task as undone, while updating nocturne.txt.","lastModifiedDate":"2024-03-09"},{"lineNumber":101,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":102,"author":{"gitId":"nicknamenic"},"content":"     * @param index The index of the task that will be updated as undone.","lastModifiedDate":"2024-03-09"},{"lineNumber":103,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":104,"author":{"gitId":"nicknamenic"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-03-09"},{"lineNumber":105,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":106,"author":{"gitId":"nicknamenic"},"content":"            (this.tasks.get(index - 1)).markAsUndone();","lastModifiedDate":"2024-03-09"},{"lineNumber":107,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(\"Do not neglect your duties. I have marked this task as unfinished:\");","lastModifiedDate":"2024-03-09"},{"lineNumber":108,"author":{"gitId":"nicknamenic"},"content":"            Ui.printTask(this.tasks.get(index - 1));","lastModifiedDate":"2024-03-09"},{"lineNumber":109,"author":{"gitId":"nicknamenic"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":110,"author":{"gitId":"nicknamenic"},"content":"            Ui.indexOutOfBoundsMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":111,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":112,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":113,"author":{"gitId":"nicknamenic"},"content":"        this.storage.saveToFile(this);","lastModifiedDate":"2024-03-09"},{"lineNumber":114,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":115,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":116,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":117,"author":{"gitId":"nicknamenic"},"content":"     * Finds tasks that contain the keyword and prints out any matches.","lastModifiedDate":"2024-03-09"},{"lineNumber":118,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":119,"author":{"gitId":"nicknamenic"},"content":"     * @param keyFind The string that will be used to find matches.","lastModifiedDate":"2024-03-09"},{"lineNumber":120,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":121,"author":{"gitId":"nicknamenic"},"content":"    public void findTask(String keyFind) {","lastModifiedDate":"2024-03-09"},{"lineNumber":122,"author":{"gitId":"nicknamenic"},"content":"        try {","lastModifiedDate":"2024-03-09"},{"lineNumber":123,"author":{"gitId":"nicknamenic"},"content":"            System.out.println(\"Here is what you are looking for: \");","lastModifiedDate":"2024-03-09"},{"lineNumber":124,"author":{"gitId":"nicknamenic"},"content":"            int count \u003d 1;","lastModifiedDate":"2024-03-09"},{"lineNumber":125,"author":{"gitId":"nicknamenic"},"content":"            for (Task task : this.tasks) {","lastModifiedDate":"2024-03-09"},{"lineNumber":126,"author":{"gitId":"nicknamenic"},"content":"                if (task.getDescription().contains(keyFind)) {","lastModifiedDate":"2024-03-09"},{"lineNumber":127,"author":{"gitId":"nicknamenic"},"content":"                    System.out.println(count + \". \" + task);","lastModifiedDate":"2024-03-09"},{"lineNumber":128,"author":{"gitId":"nicknamenic"},"content":"                    ++count;","lastModifiedDate":"2024-03-09"},{"lineNumber":129,"author":{"gitId":"nicknamenic"},"content":"                }","lastModifiedDate":"2024-03-09"},{"lineNumber":130,"author":{"gitId":"nicknamenic"},"content":"            }","lastModifiedDate":"2024-03-09"},{"lineNumber":131,"author":{"gitId":"nicknamenic"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-09"},{"lineNumber":132,"author":{"gitId":"nicknamenic"},"content":"            Ui.indexOutOfBoundsMessage();","lastModifiedDate":"2024-03-09"},{"lineNumber":133,"author":{"gitId":"nicknamenic"},"content":"        }","lastModifiedDate":"2024-03-09"},{"lineNumber":134,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":135,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":135}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicknamenic"},"content":"package util;","lastModifiedDate":"2024-03-09"},{"lineNumber":2,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":3,"author":{"gitId":"nicknamenic"},"content":"import tasks.Task;","lastModifiedDate":"2024-03-09"},{"lineNumber":4,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":5,"author":{"gitId":"nicknamenic"},"content":"/**","lastModifiedDate":"2024-03-09"},{"lineNumber":6,"author":{"gitId":"nicknamenic"},"content":" * The class that interacts with the user. General messages are placed here.","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"nicknamenic"},"content":" */","lastModifiedDate":"2024-03-09"},{"lineNumber":8,"author":{"gitId":"nicknamenic"},"content":"public class Ui {","lastModifiedDate":"2024-03-09"},{"lineNumber":9,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"nicknamenic"},"content":"     * Prints on initialisation.","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"nicknamenic"},"content":"    public static void greetingMessage() {","lastModifiedDate":"2024-03-09"},{"lineNumber":14,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"Good evening. I\u0027m Nocturne.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":15,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"What ails you on this fine day?\");","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":17,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":18,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":19,"author":{"gitId":"nicknamenic"},"content":"     * Prints on exit.","lastModifiedDate":"2024-03-09"},{"lineNumber":20,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":21,"author":{"gitId":"nicknamenic"},"content":"    public static void farewellMessage() {","lastModifiedDate":"2024-03-09"},{"lineNumber":22,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"Farewell. And may the fortunes be ever in your favour.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":23,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":24,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":25,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":26,"author":{"gitId":"nicknamenic"},"content":"     * Prints to let the user know that they are accessing and index that is out of","lastModifiedDate":"2024-03-09"},{"lineNumber":27,"author":{"gitId":"nicknamenic"},"content":"     * bounds, through the mark, unmark or delete methods.","lastModifiedDate":"2024-03-09"},{"lineNumber":28,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":29,"author":{"gitId":"nicknamenic"},"content":"    public static void indexOutOfBoundsMessage() {","lastModifiedDate":"2024-03-09"},{"lineNumber":30,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"You are trying to access forbidden territory. Tread carefully.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":31,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":32,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":33,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"nicknamenic"},"content":"     * Prints a message to let the user know that their list is empty.","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"nicknamenic"},"content":"    public static void emptyListMessage() {","lastModifiedDate":"2024-03-09"},{"lineNumber":37,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"Your list is empty. Try again, when you have become more productive.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":38,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":39,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":40,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":41,"author":{"gitId":"nicknamenic"},"content":"     * Prints to let the user know that they are missing / in the deadline and","lastModifiedDate":"2024-03-09"},{"lineNumber":42,"author":{"gitId":"nicknamenic"},"content":"     * event inputs.","lastModifiedDate":"2024-03-09"},{"lineNumber":43,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":44,"author":{"gitId":"nicknamenic"},"content":"    public static void missingSlashMessage() {","lastModifiedDate":"2024-03-09"},{"lineNumber":45,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"You are missing a /. Do not let this happen again.\");","lastModifiedDate":"2024-03-09"},{"lineNumber":46,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":47,"author":{"gitId":"nicknamenic"},"content":"","lastModifiedDate":"2024-03-09"},{"lineNumber":48,"author":{"gitId":"nicknamenic"},"content":"    /**","lastModifiedDate":"2024-03-09"},{"lineNumber":49,"author":{"gitId":"nicknamenic"},"content":"     * Prints out a task with indentation.","lastModifiedDate":"2024-03-09"},{"lineNumber":50,"author":{"gitId":"nicknamenic"},"content":"     *","lastModifiedDate":"2024-03-09"},{"lineNumber":51,"author":{"gitId":"nicknamenic"},"content":"     * @param task: a singular task that can be printed, T, D or E.","lastModifiedDate":"2024-03-09"},{"lineNumber":52,"author":{"gitId":"nicknamenic"},"content":"     */","lastModifiedDate":"2024-03-09"},{"lineNumber":53,"author":{"gitId":"nicknamenic"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2024-03-09"},{"lineNumber":54,"author":{"gitId":"nicknamenic"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-03-09"},{"lineNumber":55,"author":{"gitId":"nicknamenic"},"content":"    }","lastModifiedDate":"2024-03-09"},{"lineNumber":56,"author":{"gitId":"nicknamenic"},"content":"}","lastModifiedDate":"2024-03-09"}],"authorContributionMap":{"nicknamenic":56}}]
