[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"# Jeff","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"Jeff is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI).","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"Jeff currently provides functionality for managing todos, deadlines, and events.","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"Data will be stored in a task list and saved locally on your computer.","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"    - [List all tasks: `list`](#list-all-tasks-list)","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"    - [Add a todo: `todo`](#add-a-todo-todo)","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"    - [Add a deadline: `deadline`](#add-a-deadline-deadline)","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    - [Add an event: `event`](#add-an-event-event)","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"    - [Mark a task: `mark`](#mark-a-task-mark)","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    - [Unmark a task: `unmark`](#unmark-a-task-unmark)","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    - [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    - [Find tasks by description: `find`](#find-tasks-by-description-find)","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"    - [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"## Quick Start","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"2. Download the latest `jeff.jar` from [here](https://github.com/awesomesjh/ip/releases/tag/A-Release)","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"3. Copy the file to the folder you want to use as the *home folder* for Jeff.","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, ","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"and use the `java -jar jeff.jar` command to run the application.","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e Some example commands you can try:","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"   - `list`: List all tasks","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"   - `todo run`: Adds a todo task with the description `run` to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"   - `delete 3`: Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"   - `bye`: Exit the app.","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"**Notes about command format:**","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"- Items in square brackets are parameters supplied to the user.","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e e.g. in `todo [description]`, `[description]` is a parameter which can be used as `todo run`.","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"### List all tasks: `list`","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"List out all the tasks in the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"Format: `list`","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"1.[T][ ] go for a walk","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"2.[D][ ] project (by: Mar 8 2024)","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"3.[E][ ] exam (from: 9am to: 11am)","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"### Add a todo: `todo`","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"Adds a new todo task to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"Format: `todo [description]`","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"- `[description]` should not contain `|`","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"- `todo go for a walk`: ","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"Adds a todo task with the description `go for a walk` to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"awesomesjh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"awesomesjh"},"content":"  [T][ ] go for a walk","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"awesomesjh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"awesomesjh"},"content":"### Add a deadline: `deadline`","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"awesomesjh"},"content":"Adds a new deadline task to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"awesomesjh"},"content":"Format: `deadline [description] /by [yyyy-mm-dd]`","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"awesomesjh"},"content":"- `[description]` should not contain `|`","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"awesomesjh"},"content":"- `[yyyy-mm-dd]` should be a valid date.","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"awesomesjh"},"content":"  \u003cbr\u003ee.g. `2024-02-30` is **not** a valid date.","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"awesomesjh"},"content":"- `deadline project /by 2024-03-08`: ","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"awesomesjh"},"content":"Adds a deadline task with the description `project` and deadline `2024-03-08` to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"awesomesjh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"awesomesjh"},"content":"  [D][ ] project (by: Mar 8 2024)","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"awesomesjh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"awesomesjh"},"content":"### Add an event: `event`","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"awesomesjh"},"content":"Adds a new event task to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"awesomesjh"},"content":"Format: `event [description] /from [from] /to [to]`","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"awesomesjh"},"content":"- `[description]` should not contain `|`.","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"awesomesjh"},"content":"- `[from]` should not contain `|` or `-`.","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"awesomesjh"},"content":"- `[to]` should not contain `|` or `-`.","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"awesomesjh"},"content":"- `event exam /from 9am /to 11am`:","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"awesomesjh"},"content":"Adds an event task with the description `exam`, start time `9am` and end time `11am` to the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"awesomesjh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"awesomesjh"},"content":"  [E][ ] exam (from: 9am to: 11am)","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"awesomesjh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"awesomesjh"},"content":"### Mark a task: `mark`","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"awesomesjh"},"content":"Marks a specified task in the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"awesomesjh"},"content":"Format: `mark [index]`","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"awesomesjh"},"content":"- `[index]` should be an integer between 1 and the current size of the task list inclusive.","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"awesomesjh"},"content":"- `mark 1`:","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"awesomesjh"},"content":"Marks the 1st task in the current task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"awesomesjh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"awesomesjh"},"content":"  [T][X] go for a walk","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"awesomesjh"},"content":"### Unmark a task: `unmark`","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"awesomesjh"},"content":"Unmarks a specified task in the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":142,"author":{"gitId":"awesomesjh"},"content":"Format: `unmark [index]`","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"awesomesjh"},"content":"- `[index]` should be an integer between 1 and the current size of the task list inclusive.","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"awesomesjh"},"content":"- `unmark 1`:","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"awesomesjh"},"content":"Unmarks the 1st task in the current task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"awesomesjh"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"awesomesjh"},"content":"  [T][ ] go for a walk","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":154,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"awesomesjh"},"content":"### Delete a task: `delete`","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"awesomesjh"},"content":"Deletes a specified task from the task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"awesomesjh"},"content":"Format: `delete [index]`","lastModifiedDate":"2024-02-27"},{"lineNumber":161,"author":{"gitId":"awesomesjh"},"content":"- `[index]` should be an integer between 1 and the current size of the task list inclusive.","lastModifiedDate":"2024-02-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"awesomesjh"},"content":"- `delete 1`:","lastModifiedDate":"2024-02-27"},{"lineNumber":165,"author":{"gitId":"awesomesjh"},"content":"Deletes the 1st task from the current task list.","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"awesomesjh"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"awesomesjh"},"content":"  [T][ ] go for a walk","lastModifiedDate":"2024-02-27"},{"lineNumber":170,"author":{"gitId":"awesomesjh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"awesomesjh"},"content":"### Find tasks by description: `find`","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"awesomesjh"},"content":"List out all tasks with the description containing the specified text.","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"awesomesjh"},"content":"Format: `find [text]`","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":182,"author":{"gitId":"awesomesjh"},"content":"- `find exam`:","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"awesomesjh"},"content":"List out all tasks with the description containing the text `exam`.","lastModifiedDate":"2024-02-27"},{"lineNumber":184,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":185,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":186,"author":{"gitId":"awesomesjh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-27"},{"lineNumber":187,"author":{"gitId":"awesomesjh"},"content":"1.[E][ ] exam (from: 9am to: 11am)","lastModifiedDate":"2024-02-27"},{"lineNumber":188,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":189,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":190,"author":{"gitId":"awesomesjh"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":191,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":192,"author":{"gitId":"awesomesjh"},"content":"### Exit the program: `bye`","lastModifiedDate":"2024-02-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"awesomesjh"},"content":"Exits the program.","lastModifiedDate":"2024-02-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":196,"author":{"gitId":"awesomesjh"},"content":"Format: `bye`","lastModifiedDate":"2024-02-27"},{"lineNumber":197,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":198,"author":{"gitId":"awesomesjh"},"content":"Example:","lastModifiedDate":"2024-02-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-27"},{"lineNumber":200,"author":{"gitId":"awesomesjh"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-27"},{"lineNumber":201,"author":{"gitId":"awesomesjh"},"content":"```","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"-":28,"awesomesjh":173}},{"path":"src/main/java/jeff/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to be executed by the program.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"     * Defines the behavior to be executed by subclasses.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"     * Subclasses must implement this method to provide specific functionality.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"    public abstract void execute();","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"     * Checks if the program should exit.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     * @return {@code false} by default. Will only return {@code true} if overwritten in subclass.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"        return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":22}},{"path":"src/main/java/jeff/ExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":" * Provides static methods for handling various types of exceptions that may occur during program execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"public class ExceptionHandler {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid command exception by printing an error message and listing valid commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidCommandException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid command.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"List of valid commands:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"list, todo, deadline, event, mark, unmark, bye\");","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid todo syntax exception by printing an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     * Provides guidance on the correct syntax for creating a todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidTodoSyntaxException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid todo syntax.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"todo [description]\");","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid deadline syntax exception by printing an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     * Provides guidance on the correct syntax for creating a deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidDeadlineSyntaxException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid deadline syntax.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"deadline [description] /by [yyyy-mm-dd]\");","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid event syntax exception by printing an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"     * Provides guidance on the correct syntax for creating an event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidEventSyntaxException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid event syntax.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"event [description] /from [from] /to [to]\");","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid mark syntax exception by printing an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"     * Provides guidance on the correct syntax for marking a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidMarkSyntaxException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid mark syntax.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"mark [any number from 1 to \" + TaskList.size() + \"]\");","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid unmark syntax exception by printing an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"     * Provides guidance on the correct syntax for unmarking a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidUnmarkSyntaxException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid unmark syntax.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"unmark [any number from 1 to \" + TaskList.size() + \"]\");","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"     * Handles the invalid delete syntax exception by printing an error message.","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"awesomesjh"},"content":"     * Provides guidance on the correct syntax for deleting a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidDeleteSyntaxException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid delete syntax.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"delete [any number from 1 to \" + TaskList.size() + \"]\");","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"awesomesjh"},"content":"     * Handles the file not found exception by creating a new file and printing a message.","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidFindSyntaxException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Invalid find syntax.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Correct syntax should be:\");","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"find [text to find]\");","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"awesomesjh"},"content":"    public static void handleFileNotFoundException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"awesomesjh"},"content":"        Storage.createNewFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"File not found. data/jeff.txt created.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"awesomesjh"},"content":"        Printer.printDivider();","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"awesomesjh"},"content":"     * Handles the corrupt file exception by printing an error message and exits the program.","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"awesomesjh"},"content":"    public static void handleCorruptFileException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"File is corrupt. Content not in expected format.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"awesomesjh"},"content":"        Printer.printDivider();","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"awesomesjh"},"content":"        System.exit(1);","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"awesomesjh"},"content":"     * Handles the IOException by printing the specific error message from the exception and exits the program.","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":106,"author":{"gitId":"awesomesjh"},"content":"     * @param e The IOException that occurred.","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"awesomesjh"},"content":"    public static void handleIOException(IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"awesomesjh"},"content":"        Printer.printDivider();","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"awesomesjh"},"content":"        System.exit(1);","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"awesomesjh"},"content":"     * Handles the exception when unable to mark a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating the inability to mark the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"awesomesjh"},"content":"    public static void handleUnableToMarkException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"awesomesjh"},"content":"        Printer.printUnableToMark();","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"awesomesjh"},"content":"     * Handles the exception when unable to unmark a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating the inability to unmark the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"awesomesjh"},"content":"    public static void handleUnableToUnmarkException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"awesomesjh"},"content":"        Printer.printUnableToUnmark();","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"awesomesjh"},"content":"     * Handles the exception when unable to delete a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating the inability to delete the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"awesomesjh"},"content":"    public static void handleUnableToDeleteException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"awesomesjh"},"content":"        Printer.printUnableToDelete();","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"awesomesjh"},"content":"     * Handles the exception when an invalid character \u0027|\u0027 is found in the task description.","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating that \u0027|\u0027 should not be used in the task description.","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidCharacterInDescriptionException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Please do not use \u0027|\u0027 in the task description.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"awesomesjh"},"content":"     * Handles the exception when an invalid character \u0027|\u0027 or \u0027-\u0027 is found after \"/from\" in an event command.","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating that \u0027|\u0027 or \u0027-\u0027 should not be used after \"/from\" in an event command.","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidCharacterInFromException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Please do not use \u0027|\u0027 or \u0027-\u0027 after /from.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"awesomesjh"},"content":"     * Handles the exception when an invalid character \u0027|\u0027 or \u0027-\u0027 is found after \"/to\" in an event command.","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating that \u0027|\u0027 or \u0027-\u0027 should not be used after \"/to\" in an event command.","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"awesomesjh"},"content":"    public static void handleInvalidCharacterInToException() {","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"awesomesjh"},"content":"        Printer.printIndent(\"Please do not use \u0027|\u0027 or \u0027-\u0027 after /to.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":161}},{"path":"src/main/java/jeff/Jeff.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"public class Jeff {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"        Printer.printWelcome();","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"        Storage.loadTasks();","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"        Ui.handleUserInput();","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"awesomesjh":9}},{"path":"src/main/java/jeff/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.ByeCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.DeadlineCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.DeleteCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.EventCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.FindCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.ListCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.MarkCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.TodoCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"import jeff.commands.UnmarkCommand;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCharacterInDescriptionException;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCharacterInFromException;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCharacterInToException;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidDeadlineSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidDeleteSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidEventSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidFindSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidMarkSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidTodoSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidUnmarkSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.UnableToDeleteException;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.UnableToMarkException;","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.UnableToUnmarkException;","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":" * Parses user input and converts it into executable commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"public class Parser {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"    private static final int TODO_DESCRIPTION_INDEX \u003d 5;","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"    private static final int DEADLINE_DESCRIPTION_INDEX \u003d 9;","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"    private static final int DEADLINE_BY_INDEX_LENGTH \u003d 4;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    private static final int EVENT_DESCRIPTION_INDEX \u003d 6;","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"    private static final int EVENT_FROM_INDEX_LENGTH \u003d 6;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"    private static final int EVENT_TO_INDEX_LENGTH \u003d 4;","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"    private static final int MARK_INDEX \u003d 5;","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"    private static final int UNMARK_INDEX \u003d 7;","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"    private static final int FIND_INDEX \u003d 5;","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"    private static final String TODO_STRING \u003d \"todo\";","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"    private static final String BY_STRING \u003d \" /by \";","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"    private static final String FROM_STRING \u003d \" /from \";","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"    private static final String TO_STRING \u003d \" /to \";","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"    private static final String MARK_STRING \u003d \"mark\";","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"    private static final String UNMARK_STRING \u003d \"unmark\";","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"    private static final String DELETE_STRING \u003d \"delete\";","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"    private static final String FIND_STRING \u003d \"find\";","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"     * Parses the user input to determine the corresponding command to execute.","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"     * @param userInput String representing the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"     * @return Command object representing the parsed command.","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidCommandException If the user input does not match any valid command.","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidTodoSyntaxException If the todo command syntax is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidDeadlineSyntaxException If the deadline command syntax is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidEventSyntaxException If the event command syntax is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidMarkSyntaxException If the mark command syntax is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidUnmarkSyntaxException If the unmark command syntax is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"     * @throws InvalidDeleteSyntaxException If the delete command syntax is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"     * @throws UnableToMarkException If TaskList is empty and unable to mark a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"     * @throws UnableToUnmarkException If TaskList is empty and unable to unmark a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"     * @throws UnableToDeleteException If TaskList is empty and unable to delete a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"    public static Command parseCommand(String userInput) throws","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"            InvalidCommandException,","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"            InvalidTodoSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"            InvalidDeadlineSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"awesomesjh"},"content":"            InvalidEventSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"awesomesjh"},"content":"            InvalidMarkSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"awesomesjh"},"content":"            InvalidUnmarkSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"awesomesjh"},"content":"            InvalidDeleteSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"awesomesjh"},"content":"            InvalidFindSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInDescriptionException,","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInFromException,","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInToException,","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"awesomesjh"},"content":"            UnableToMarkException,","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"awesomesjh"},"content":"            UnableToUnmarkException,","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"awesomesjh"},"content":"            UnableToDeleteException {","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"awesomesjh"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"awesomesjh"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"awesomesjh"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"todo\") || userInput.startsWith(\"todo \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"awesomesjh"},"content":"            return parseTodo(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"deadline\") || userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"awesomesjh"},"content":"            return parseDeadline(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"event\") || userInput.startsWith(\"event \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"awesomesjh"},"content":"            return parseEvent(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"mark\") || userInput.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"awesomesjh"},"content":"            return parseMark(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"unmark\") || userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"awesomesjh"},"content":"            return parseUnmark(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"delete\") || userInput.startsWith(\"delete \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"awesomesjh"},"content":"            return parseDelete(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"find\") || userInput.startsWith(\"find \")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"awesomesjh"},"content":"            return parseFind(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"awesomesjh"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"awesomesjh"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"awesomesjh"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseTodo(String userInput) throws","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"awesomesjh"},"content":"            InvalidTodoSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInDescriptionException {","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"awesomesjh"},"content":"        if (userInput.equals(TODO_STRING)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidTodoSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"awesomesjh"},"content":"        String description \u003d userInput.substring(TODO_DESCRIPTION_INDEX);","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"awesomesjh"},"content":"        if (description.contains(\"|\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidCharacterInDescriptionException();","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"awesomesjh"},"content":"        return new TodoCommand(description);","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseDeadline(String userInput) throws","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"awesomesjh"},"content":"            InvalidDeadlineSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInDescriptionException,","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"awesomesjh"},"content":"            DateTimeParseException {","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"awesomesjh"},"content":"        int byIndex \u003d userInput.indexOf(BY_STRING) + 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"awesomesjh"},"content":"        if (byIndex \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidDeadlineSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"awesomesjh"},"content":"        String description \u003d userInput.substring(DEADLINE_DESCRIPTION_INDEX, byIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"awesomesjh"},"content":"        if (description.contains(\"|\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidCharacterInDescriptionException();","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"awesomesjh"},"content":"        String byString \u003d userInput.substring(byIndex + DEADLINE_BY_INDEX_LENGTH);","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"awesomesjh"},"content":"        LocalDate by \u003d LocalDate.parse(byString);","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"awesomesjh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidDeadlineSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"awesomesjh"},"content":"        return new DeadlineCommand(description, by);","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseEvent(String userInput) throws","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"awesomesjh"},"content":"            InvalidEventSyntaxException,","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInDescriptionException,","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInFromException,","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"awesomesjh"},"content":"            InvalidCharacterInToException {","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"awesomesjh"},"content":"        int fromIndex \u003d userInput.indexOf(FROM_STRING) + 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"awesomesjh"},"content":"        int toIndex \u003d userInput.indexOf(TO_STRING) + 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"awesomesjh"},"content":"        if (fromIndex \u003d\u003d 0 || toIndex \u003d\u003d 0 || fromIndex \u003e\u003d toIndex) {","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidEventSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"awesomesjh"},"content":"        String description \u003d userInput.substring(EVENT_DESCRIPTION_INDEX, fromIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"awesomesjh"},"content":"        if (description.contains(\"|\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidCharacterInDescriptionException();","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"awesomesjh"},"content":"        String from \u003d userInput.substring(fromIndex + EVENT_FROM_INDEX_LENGTH, toIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"awesomesjh"},"content":"        if (from.contains(\"|\") || from.contains(\"-\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidCharacterInFromException();","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"awesomesjh"},"content":"        String to \u003d userInput.substring(toIndex + EVENT_TO_INDEX_LENGTH);","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"awesomesjh"},"content":"        if (to.contains(\"|\") || to.contains(\"-\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidCharacterInToException();","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"awesomesjh"},"content":"        if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidEventSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"awesomesjh"},"content":"        return new EventCommand(description, from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseMark(String userInput) throws UnableToMarkException, InvalidMarkSyntaxException {","lastModifiedDate":"2024-02-26"},{"lineNumber":168,"author":{"gitId":"awesomesjh"},"content":"        if (TaskList.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"awesomesjh"},"content":"            throw new UnableToMarkException();","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"awesomesjh"},"content":"        if (userInput.equals(MARK_STRING)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidMarkSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"awesomesjh"},"content":"            int currentIndex \u003d Integer.parseInt(userInput.substring(MARK_INDEX)) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"awesomesjh"},"content":"            Task currentTask \u003d TaskList.get(currentIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"awesomesjh"},"content":"            return new MarkCommand(currentIndex, currentTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":178,"author":{"gitId":"awesomesjh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidMarkSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseUnmark(String userInput) throws UnableToUnmarkException, InvalidUnmarkSyntaxException {","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"awesomesjh"},"content":"        if (TaskList.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"awesomesjh"},"content":"            throw new UnableToUnmarkException();","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"awesomesjh"},"content":"        if (userInput.equals(UNMARK_STRING)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidUnmarkSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":189,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":191,"author":{"gitId":"awesomesjh"},"content":"            int currentIndex \u003d Integer.parseInt(userInput.substring(UNMARK_INDEX)) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"awesomesjh"},"content":"            Task currentTask \u003d TaskList.get(currentIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":193,"author":{"gitId":"awesomesjh"},"content":"            return new UnmarkCommand(currentIndex, currentTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"awesomesjh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":195,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidUnmarkSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":197,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":198,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseDelete(String userInput) throws UnableToDeleteException, InvalidDeleteSyntaxException {","lastModifiedDate":"2024-02-26"},{"lineNumber":200,"author":{"gitId":"awesomesjh"},"content":"        if (TaskList.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":201,"author":{"gitId":"awesomesjh"},"content":"            throw new UnableToDeleteException();","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":203,"author":{"gitId":"awesomesjh"},"content":"        if (userInput.equals(DELETE_STRING)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidDeleteSyntaxException();","lastModifiedDate":"2024-02-18"},{"lineNumber":205,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":206,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":207,"author":{"gitId":"awesomesjh"},"content":"            int currentIndex \u003d Integer.parseInt(userInput.substring(UNMARK_INDEX)) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":208,"author":{"gitId":"awesomesjh"},"content":"            Task currentTask \u003d TaskList.get(currentIndex);","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"awesomesjh"},"content":"            return new DeleteCommand(currentIndex, currentTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"awesomesjh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":211,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidDeleteSyntaxException();","lastModifiedDate":"2024-02-18"},{"lineNumber":212,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":213,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":214,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"awesomesjh"},"content":"    private static Command parseFind(String userInput) throws InvalidFindSyntaxException {","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"awesomesjh"},"content":"        if (userInput.equals(FIND_STRING)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":217,"author":{"gitId":"awesomesjh"},"content":"            throw new InvalidFindSyntaxException();","lastModifiedDate":"2024-02-26"},{"lineNumber":218,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":219,"author":{"gitId":"awesomesjh"},"content":"        String textToFind \u003d userInput.substring(FIND_INDEX);","lastModifiedDate":"2024-02-26"},{"lineNumber":220,"author":{"gitId":"awesomesjh"},"content":"        return new FindCommand(textToFind);","lastModifiedDate":"2024-02-26"},{"lineNumber":221,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":222,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":222}},{"path":"src/main/java/jeff/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":" * Provides static methods for printing messages to the standard output.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"public class Printer {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"    private static final String INDENT \u003d \"     \";","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"    private static final String DIVIDER \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"     * Prints a string with an indentation to the standard output.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"     * @param s The string to be printed with indentation.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    public static void printIndent(String s) {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"        System.out.println(INDENT + s);","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     * Prints a divider to the standard output.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"    public static void printDivider() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     * Prints a welcome message to greet the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"    public static void printWelcome() {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"        printDivider();","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Hello! I\u0027m Jeff\");","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"What can I do for you?\");","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"        printDivider();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"     * Prints a farewell message indicating the end of the program.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"    public static void printBye() {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"     * Prints the tasks in TaskList.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"    public static void printTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"        for (int i \u003d 0; i \u003c TaskList.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"            printIndent((i + 1) + \".\" + TaskList.get(i));","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"     * Prints a confirmation message after adding a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"     * Informs the user about the updated total number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"    public static void printMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"            printIndent((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"    public static void printNoMatchingTasks() {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"No matching tasks found.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"    public static void printAddTask() {","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"  \" + TaskList.back());","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Now you have \" + TaskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"awesomesjh"},"content":"     * Prints a confirmation message after deleting a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"awesomesjh"},"content":"     * Informs the user about the updated total number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"awesomesjh"},"content":"    public static void printDeleteTask(Task deletedTask) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"  \" + deletedTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Now you have \" + TaskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"awesomesjh"},"content":"     * Prints a confirmation message after marking a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"awesomesjh"},"content":"     * @param currentTask The task that has been marked.","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"awesomesjh"},"content":"    public static void printMarkTask(Task currentTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"  \" + currentTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"awesomesjh"},"content":"     * Prints a confirmation message after unmarking a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"awesomesjh"},"content":"     * @param currentTask The task that has been unmarked.","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"awesomesjh"},"content":"    public static void printUnmarkTask(Task currentTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"  \" + currentTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating the inability to mark tasks due to an empty task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"awesomesjh"},"content":"    public static void printUnableToMark() {","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Unable to mark any tasks as task list is empty.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating the inability to unmark tasks due to an empty task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"awesomesjh"},"content":"    public static void printUnableToUnmark() {","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Unable to unmark any tasks as task list is empty.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"awesomesjh"},"content":"     * Prints a message indicating the inability to delete tasks due to an empty task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"awesomesjh"},"content":"    public static void printUnableToDelete() {","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"awesomesjh"},"content":"        printIndent(\"Unable to delete any tasks as task list is empty.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":126}},{"path":"src/main/java/jeff/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.CorruptFileException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.tasks.Deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.tasks.Event;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.tasks.Todo;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":" * Provides methods for loading tasks from and saving tasks to an external file.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"public class Storage {","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"    private static final String EXPECTED_FILE_PATH \u003d \"data/jeff.txt\";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"    private static final int MARK_INDEX \u003d 4;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     * Reads the contents of the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"     * Creates corresponding Task objects and adds them to the TaskList.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"     * If the file is not found or its contents are corrupt, appropriate exception handling is performed.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"    public static void loadTasks() {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"            File f \u003d new File(EXPECTED_FILE_PATH);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"                if (!isExpectedFormat(line)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"                    throw new CorruptFileException();","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"                Task task \u003d getTask(line);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"                TaskList.add(task);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleFileNotFoundException();","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"        } catch (CorruptFileException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleCorruptFileException();","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"     * Appends a task to the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"     * @param task The task to append to the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"    public static void appendTask(Task task) {","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"            FileWriter fw \u003d new FileWriter(EXPECTED_FILE_PATH, true); // create a FileWriter in append mode","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"            String textToAppend \u003d task.toFileString() + System.lineSeparator();","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"            fw.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleIOException(e);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"     * Deletes a task from the storage file at the specified index.","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"     * @param index The index of the task to be deleted from the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"            File f \u003d new File(EXPECTED_FILE_PATH);","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"awesomesjh"},"content":"            int currentLine \u003d 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"awesomesjh"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"awesomesjh"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"awesomesjh"},"content":"                if (currentLine \u003d\u003d index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"awesomesjh"},"content":"                    continue;","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"awesomesjh"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"awesomesjh"},"content":"                content.append(line).append(System.lineSeparator());","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"awesomesjh"},"content":"                currentLine++;","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"awesomesjh"},"content":"            FileWriter fw \u003d new FileWriter(EXPECTED_FILE_PATH);","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"awesomesjh"},"content":"            fw.write(content.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"awesomesjh"},"content":"            fw.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"awesomesjh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleFileNotFoundException();","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"awesomesjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleIOException(e);","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"awesomesjh"},"content":"     * Updates the mark status of a task in the storage file at the specified index.","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"awesomesjh"},"content":"     * @param index The index of the task whose mark status is to be updated.","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"awesomesjh"},"content":"     * @param mark The new mark status to be set for the task. {@code true} to mark the task. {@code false} to unmark the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"awesomesjh"},"content":"    public static void updateMarkStatus(int index, boolean mark) {","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"awesomesjh"},"content":"        char newMarkStatus \u003d mark ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"awesomesjh"},"content":"            File f \u003d new File(EXPECTED_FILE_PATH);","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"awesomesjh"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"awesomesjh"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"awesomesjh"},"content":"            int currentLine \u003d 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"awesomesjh"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"awesomesjh"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"awesomesjh"},"content":"                if (currentLine \u003d\u003d index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"awesomesjh"},"content":"                    StringBuilder modifiedLine \u003d new StringBuilder(line);","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"awesomesjh"},"content":"                    modifiedLine.setCharAt(MARK_INDEX, newMarkStatus);","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"awesomesjh"},"content":"                    line \u003d modifiedLine.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"awesomesjh"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"awesomesjh"},"content":"                content.append(line).append(System.lineSeparator());","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"awesomesjh"},"content":"                currentLine++;","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"awesomesjh"},"content":"            FileWriter fw \u003d new FileWriter(EXPECTED_FILE_PATH);","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"awesomesjh"},"content":"            fw.write(content.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"awesomesjh"},"content":"            fw.close();","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"awesomesjh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleFileNotFoundException();","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"awesomesjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleIOException(e);","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"awesomesjh"},"content":"     * Creates a new file named \"jeff.txt\" in the \"data\" directory.","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"awesomesjh"},"content":"     * If the \"data\" directory does not exist, it creates the directory first.","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"awesomesjh"},"content":"     * If the file already exists, no action is taken.","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"awesomesjh"},"content":"     * If an IOException occurs during the file creation process, it is handled appropriately.","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"awesomesjh"},"content":"    public static void createNewFile() {","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"awesomesjh"},"content":"        String directoryPath \u003d \"data\";","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"awesomesjh"},"content":"        String fileName \u003d \"jeff.txt\";","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"awesomesjh"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"awesomesjh"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"awesomesjh"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"awesomesjh"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"awesomesjh"},"content":"            File file \u003d new File(directory, fileName);","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"awesomesjh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"awesomesjh"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"awesomesjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"awesomesjh"},"content":"            ExceptionHandler.handleIOException(e);","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"awesomesjh"},"content":"    private static boolean isExpectedFormat(String line) {","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"awesomesjh"},"content":"        String[] params \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"awesomesjh"},"content":"        if (params.length \u003c 3 || params.length \u003e 4) {","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"awesomesjh"},"content":"            return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":155,"author":{"gitId":"awesomesjh"},"content":"        String type \u003d params[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"awesomesjh"},"content":"        String mark \u003d params[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"awesomesjh"},"content":"        String description \u003d params[2];","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"awesomesjh"},"content":"        if (!mark.equals(\"0\") \u0026\u0026 !mark.equals(\"1\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":159,"author":{"gitId":"awesomesjh"},"content":"            return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"awesomesjh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"awesomesjh"},"content":"            return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"awesomesjh"},"content":"        if (params.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"awesomesjh"},"content":"            return type.equals(\"T\");","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"awesomesjh"},"content":"        String[] lastParam \u003d params[3].split(\"-\");","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"awesomesjh"},"content":"        if (lastParam.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"awesomesjh"},"content":"            if (!type.equals(\"D\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"awesomesjh"},"content":"                return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"awesomesjh"},"content":"            String by \u003d lastParam[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"awesomesjh"},"content":"            return !by.isEmpty();","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"awesomesjh"},"content":"        if (!type.equals(\"E\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"awesomesjh"},"content":"            return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"awesomesjh"},"content":"        String from \u003d lastParam[0];","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"awesomesjh"},"content":"        String to \u003d lastParam[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"awesomesjh"},"content":"        return !from.isEmpty() \u0026\u0026 !to.isEmpty();","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"awesomesjh"},"content":"    private static Task getTask(String line) throws CorruptFileException {","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"awesomesjh"},"content":"        Task task;","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"awesomesjh"},"content":"        String[] params \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"awesomesjh"},"content":"        String description \u003d params[2] + \" \";","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"awesomesjh"},"content":"        if (line.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"awesomesjh"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"awesomesjh"},"content":"        } else if (line.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"awesomesjh"},"content":"            String byString \u003d params[3];","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"awesomesjh"},"content":"            LocalDate by \u003d LocalDate.parse(byString);","lastModifiedDate":"2024-02-26"},{"lineNumber":192,"author":{"gitId":"awesomesjh"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"awesomesjh"},"content":"        } else if (line.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-02-18"},{"lineNumber":194,"author":{"gitId":"awesomesjh"},"content":"            String[] lastParam \u003d params[3].split(\"-\");","lastModifiedDate":"2024-02-18"},{"lineNumber":195,"author":{"gitId":"awesomesjh"},"content":"            String from \u003d lastParam[0] + \" \";","lastModifiedDate":"2024-02-18"},{"lineNumber":196,"author":{"gitId":"awesomesjh"},"content":"            String to \u003d lastParam[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":197,"author":{"gitId":"awesomesjh"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-18"},{"lineNumber":198,"author":{"gitId":"awesomesjh"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":199,"author":{"gitId":"awesomesjh"},"content":"            throw new CorruptFileException();","lastModifiedDate":"2024-02-18"},{"lineNumber":200,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":201,"author":{"gitId":"awesomesjh"},"content":"        if (params[1].equals(\"1\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":202,"author":{"gitId":"awesomesjh"},"content":"            task.mark();","lastModifiedDate":"2024-02-18"},{"lineNumber":203,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":204,"author":{"gitId":"awesomesjh"},"content":"        return task;","lastModifiedDate":"2024-02-18"},{"lineNumber":205,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":206,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"awesomesjh":206}},{"path":"src/main/java/jeff/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a new Task object with the given description.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     * @return Description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        return description;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     * @return Status icon of the task. Returns \"X\" if the task is done, otherwise returns a space.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"     * Marks the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"     * Sets the status of the task to done.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"    public void mark() {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"     * Unmarks the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"     * Sets the status of the task to not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"     * @return String containing the task\u0027s status icon and description.","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the task suitable for storing in a file.","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"     * @return String containing the task\u0027s status and description formatted for file storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"awesomesjh":70}},{"path":"src/main/java/jeff/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":" * Represents a list of tasks in the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" * Provides methods for adding, removing, and manipulating tasks within the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":" * Serves as a container for managing tasks in the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"public class TaskList {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"    public static void add(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    public static int size() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"     * Checks if the list is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"     * @return {@code true} if the list is empty, {@code false} otherwise.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    public static boolean isEmpty() {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"     * Retrieves the task at the specified index from the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"     * @param index Index of the task to retrieve.","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"    public static Task get(int index) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"     * Retrieves the last task in task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"     * @return Last task in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"    public static Task back() {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"     * Removes the task at the specified index from the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"     * @param index Index of the task to remove.","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"    public static Task remove(int index) {","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":68}},{"path":"src/main/java/jeff/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCharacterInDescriptionException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCharacterInFromException;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCharacterInToException;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidDeadlineSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidDeleteSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidEventSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidFindSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidMarkSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidTodoSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.InvalidUnmarkSyntaxException;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.UnableToDeleteException;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.UnableToMarkException;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"import jeff.exceptions.UnableToUnmarkException;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":" * Serves as the interface between the user and the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"public class Ui {","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"     * Handles user input by continuously reading input from the standard input (keyboard),","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"     * parsing it into commands, and executing the corresponding commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * It continues processing user input until an exit command is received.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"    public static void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"                String userInput \u003d in.nextLine();","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"                Printer.printDivider();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"                command.execute();","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidCommandException();","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidTodoSyntaxException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidTodoSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidDeadlineSyntaxException | DateTimeParseException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidDeadlineSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidEventSyntaxException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidEventSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidMarkSyntaxException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidMarkSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidUnmarkSyntaxException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidUnmarkSyntaxException();","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidDeleteSyntaxException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidDeleteSyntaxException();","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidFindSyntaxException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidFindSyntaxException();","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidCharacterInDescriptionException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidCharacterInDescriptionException();","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidCharacterInFromException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidCharacterInFromException();","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"awesomesjh"},"content":"            } catch (InvalidCharacterInToException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleInvalidCharacterInToException();","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"awesomesjh"},"content":"            } catch (UnableToMarkException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleUnableToMarkException();","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"awesomesjh"},"content":"            } catch (UnableToUnmarkException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleUnableToUnmarkException();","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"awesomesjh"},"content":"            } catch (UnableToDeleteException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"awesomesjh"},"content":"                ExceptionHandler.handleUnableToDeleteException();","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"awesomesjh"},"content":"            } finally {","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"awesomesjh"},"content":"                Printer.printDivider();","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":73}},{"path":"src/main/java/jeff/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to exit the application","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"     * Executes the bye command by printing a farewell message.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"        Printer.printBye();","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     * Checks if the program should exit.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     * @return {@code true} since we want the program to exit after execution of bye command.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"        return true;","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":28}},{"path":"src/main/java/jeff/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import jeff.tasks.Deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    private final String description;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    private final LocalDate by;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a DeadlineCommand object with the given description and deadline date.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     * @param by Deadline date of the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     * Executes the deadline command by creating a new deadline task, adding it to the task list,","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     * appending it to storage, and printing a message indicating the task has been added.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"        TaskList.add(deadline);","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"        Storage.appendTask(deadline);","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"        Printer.printAddTask();","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":39}},{"path":"src/main/java/jeff/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import jeff.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    private final int index;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    private final Task task;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a DeleteCommand object with the given index and task.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     * @param task Task to be deleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"    public DeleteCommand(int index, Task task) {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * Executes the delete command by removing the task from the task list,","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     * deleting it from storage, and printing a message indicating the task has been deleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        TaskList.remove(index);","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        Storage.deleteTask(index);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"        Printer.printDeleteTask(task);","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":37}},{"path":"src/main/java/jeff/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import jeff.tasks.Event;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    private final String description;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    private final String from;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    private final String to;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     * Constructs an EventCommand object with the given description, start time, and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     * @param to End time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     * Executes the event command by creating a new event task, adding it to the task list,","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"     * appending it to storage, and printing a message indicating the task has been added.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"        TaskList.add(event);","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"        Storage.appendTask(event);","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"        Printer.printAddTask();","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":41}},{"path":"src/main/java/jeff/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    private final String textToFind;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    public FindCommand(String textToFind) {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"        this.textToFind \u003d textToFind;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"        for (int i \u003d 0; i \u003c TaskList.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"            if (TaskList.get(i).getDescription().contains(textToFind)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"                matchingTasks.add(TaskList.get(i));","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"            Printer.printNoMatchingTasks();","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"            return;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"        Printer.printMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":31}},{"path":"src/main/java/jeff/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"     * Executes the list command by printing all tasks in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"        Printer.printTasks();","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":18}},{"path":"src/main/java/jeff/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to mark a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"    private final int index;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    private final Task task;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a MarkCommand object with the given index and task.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     * @param index Index of the task to be marked.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"    public MarkCommand(int index, Task task) {","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"     * Executes the mark command by marking the task, updating its status in storage,","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * and printing a message indicating the task has been marked.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"        task.mark();","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        Storage.updateMarkStatus(index, true);","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        Printer.printMarkTask(task);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":36}},{"path":"src/main/java/jeff/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.TaskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"import jeff.tasks.Todo;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    private final String description;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a TodoCommand object with the given description.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"     * Executes the todo command by creating a new todo task, adding it to the task list,","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"     * appending it to storage, and printing a message indicating the task has been added.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"        TaskList.add(todo);","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"        Storage.appendTask(todo);","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        Printer.printAddTask();","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":35}},{"path":"src/main/java/jeff/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.commands;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Command;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import jeff.Printer;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import jeff.Storage;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":" * Represents a command to unmark a task.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"    private final int index;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    private final Task task;","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a UnmarkCommand object with the given index and task.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     * @param index Index of the task to be unmarked.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"    public UnmarkCommand(int index, Task task) {","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"     * Executes the unmark command by unmarking the task, updating its status in storage,","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * and printing a message indicating the task has been unmarked.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"    public void execute() {","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"        task.unmark();","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"        Storage.updateMarkStatus(index, false);","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        Printer.printUnmarkTask(task);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":36}},{"path":"src/main/java/jeff/exceptions/CorruptFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when a file is found to be corrupt.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class CorruptFileException extends Exception {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidCharacterInDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when an invalid character \u0027|\u0027 is found in the task description.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidCharacterInDescriptionException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidCharacterInFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when an invalid character \u0027|\u0027 or \u0027-\u0027 is found after \"/from\" in an event command.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidCharacterInFromException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidCharacterInToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when an invalid character \u0027|\u0027 or \u0027-\u0027 is found after \"/to\" in an event command.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidCharacterInToException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when an invalid command is encountered.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidDeadlineSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when the syntax of a deadline command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidDeadlineSyntaxException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidDeleteSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when the syntax of a delete command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidDeleteSyntaxException extends Exception {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidEventSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when the syntax of an event command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidEventSyntaxException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidFindSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"public class InvalidFindSyntaxException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":4}},{"path":"src/main/java/jeff/exceptions/InvalidMarkSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when the syntax of a mark command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidMarkSyntaxException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidTodoSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when the syntax of a todo command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidTodoSyntaxException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/InvalidUnmarkSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when the syntax of an unmark command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class InvalidUnmarkSyntaxException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/UnableToDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when TaskList is empty and no tasks can be deleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class UnableToDeleteException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/UnableToMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when TaskList is empty and no tasks can be marked.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class UnableToMarkException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/exceptions/UnableToUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.exceptions;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":" * Represents an exception that is thrown when TaskList is empty and no tasks can be unmarked.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"public class UnableToUnmarkException extends Exception {","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"awesomesjh":7}},{"path":"src/main/java/jeff/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":" * Represents a deadline task","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":" * Extends the Task class and adds functionality specific to deadline tasks,","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":" * such as storing the deadline date and formatting the task description.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"    private static final String PATTERN \u003d \"MMM d yyyy\";","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a Deadline object with the given description and deadline date.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     * @param by Deadline date of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     * @return String representing the deadline task.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        String byFormatted \u003d by.format(DateTimeFormatter.ofPattern(PATTERN));","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + byFormatted + \")\";","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the deadline task suitable for storing in a file.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"     * @return String representing the deadline task formatted for file storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"        return \"D\" + super.toFileString() + \" | \" + by;","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"awesomesjh":47}},{"path":"src/main/java/jeff/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" * Extends the Task class and adds functionality specific to event tasks,","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":" * such as storing the event start and end times.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    protected String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"    protected String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"     * @param from Start time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"     * @param to End time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"     * @return String representing the event task.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the event task suitable for storing in a file.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"awesomesjh"},"content":"     * @return String representing the event task formatted for file storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"awesomesjh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"awesomesjh"},"content":"        return \"E\" + super.toFileString() + \" | \" + from.trim() + \"-\" + to.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"awesomesjh":46}},{"path":"src/main/java/jeff/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"package jeff.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"import jeff.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"awesomesjh"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"awesomesjh"},"content":" * Extends the Task class and provides functionality specific to todo tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"awesomesjh"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"awesomesjh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"awesomesjh"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"awesomesjh"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"awesomesjh"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"awesomesjh"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"awesomesjh"},"content":"     * @return String representing the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"awesomesjh"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"awesomesjh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"awesomesjh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"awesomesjh"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"awesomesjh"},"content":"     * Returns a string representation of the todo task suitable for storing in a file.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"awesomesjh"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"awesomesjh"},"content":"     * @return String representing the todo task formatted for file storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"awesomesjh"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"awesomesjh"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"awesomesjh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"awesomesjh"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"awesomesjh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"awesomesjh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"awesomesjh":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awesomesjh"},"content":"todo borrow book","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"awesomesjh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"awesomesjh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"awesomesjh"},"content":"list","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"awesomesjh"},"content":"bye","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"awesomesjh":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"awesomesjh"},"content":"java -classpath ..\\bin Jeff \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"awesomesjh":1}}]
