[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"# ThawBot User Guide","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"Welcome to ThawBot! This tool helps you keep track of your tasks, deadlines, and events, making your daily task management more efficient and straightforward.","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"## Features","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"**Save Data** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"All your tasks are saved automatically and loaded when you start the program again. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"**Add Task** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"You can add three types of tasks: Todos, Deadlines, and Events. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"**List Tasks** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"Displays all the tasks which you have added and whether they are completed or not. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"**Mark the Task as Done** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"Mark any task as done based on its associated number in the task list. This feature helps you keep track of your task completion.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"**Unmark Task as Undone** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"Unmark any task as undone based on its associated number in the task list. This feature helps you keep track of your task completion. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"**Delete Task** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"Remove tasks that are no longer relevant or were added by mistake. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"**Find Task** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"Search for tasks using keywords to quickly find specific tasks in your list. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"## Installation (Prerequisite Java 11 or later)","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"1. Download the latest release of ThawBot from the [releases page] ","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"2. Extract the downloaded zip file to a folder on your computer. ","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"3. Open a terminal or command prompt and navigate to the folder where you extracted the zip file. ","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"4. Run the following command to start ThawBot:","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"java -jar ThawBot.jar","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"```","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"## Usage","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"#### Adding task:","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"1. Todo: todo \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"     Format: todo NAME \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"     todo eat","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"     [T][ ] eat","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"     Now you have 1 task in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"    ","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"2. Deadline: deadline \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"     Format: deadline NAME /by DUE_DATE DUE_TIME \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"     DUE_DATE is in mm-dd-yy (e.g. 01-04-2024 is displayed as Jan 4 2024. Note cannot replace the \"-\" with \"/\"). \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"     DUE_TIME is in HHMM (e.g. 2359 is displayed as 11:59pm). \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"     deadline submit assignment /by 01-04-2024 2359","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ThawTunZan"},"content":"      ```","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"ThawTunZan"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"ThawTunZan"},"content":"     [D][ ] submit assignment (by: Jan 4, 2024, 11:59PM)","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"ThawTunZan"},"content":"     Now you have 2 task in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"ThawTunZan"},"content":"   ","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"ThawTunZan"},"content":"3. Event: event \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"ThawTunZan"},"content":"     Format: event NAME /from START_DATE START_TIME /to END_DATE END_TIME \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"ThawTunZan"},"content":"     START_DATE and END_DATE is in mm-dd-yy (e.g. 01-04-2024 is displayed as Jan 4 2024. Note cannot replace the \"-\" with \"/\"). \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"ThawTunZan"},"content":"     START_TIME and END_TIME is in HHMM (e.g. 2359 is displayed as 11:59pm). \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"ThawTunZan"},"content":"     event CG2023 exam /from 01-01-2100 1500 /to 01-01-2100 1700","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"ThawTunZan"},"content":"     [E][ ] CG2023 exam (from: Jan 1 2100 3:00PM to: Jan 1 2100 5:00PM)","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"ThawTunZan"},"content":"     Now you have 3 task in the list.","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"ThawTunZan"},"content":"#### Deleting task:","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"ThawTunZan"},"content":"1. **delete: Deletes a task** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"ThawTunZan"},"content":"     Format: delete NUMBER \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"ThawTunZan"},"content":"     NUMBER is the task index or the number that the task is labelled with which can be seen when using the list function. \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"ThawTunZan"},"content":"     Example: delete 2 (it will delete the second tasks in the list and shift all the tasks at the bottom up). \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"ThawTunZan"},"content":"     delete 2","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"ThawTunZan"},"content":"     [D][ ] submit assignment (by: Jan 4 2024 11:59PM)","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"ThawTunZan"},"content":"     Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"ThawTunZan"},"content":"#### Looking at the tasks ","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"ThawTunZan"},"content":"1. **list: List out all the added tasks** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"ThawTunZan"},"content":"     Format: list \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"ThawTunZan"},"content":"     Will list out all the added tasks. \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"ThawTunZan"},"content":"     list","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"ThawTunZan"},"content":"     1. [T][ ] eat","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"ThawTunZan"},"content":"     2. [E][ ] CG2023 exam (from: Jan 1 2100 3:00PM to: Jan 1 2100 5:00PM)","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"ThawTunZan"},"content":"     ","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"ThawTunZan"},"content":"#### Finding specific task: ","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"ThawTunZan"},"content":"1. **find: Find a task using a keyword** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"ThawTunZan"},"content":"     Format: find KEYWORD \u003cbr\u003e ","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"ThawTunZan"},"content":"     Will find the task in the task list that contains the particular KEYWORD. \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"ThawTunZan"},"content":"     find eat","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"ThawTunZan"},"content":"     Here are the matching tasks in your list:","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"ThawTunZan"},"content":"     1. [T][ ] eat","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"ThawTunZan"},"content":"#### Marking certain task as complete ","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"ThawTunZan"},"content":"1. **mark: Mark a task as done using the associated number in the tasklist** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"ThawTunZan"},"content":"     Format: mark NUMBER \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"ThawTunZan"},"content":"     Will mark the task with the associated number as done. \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"ThawTunZan"},"content":"     Example:  \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"ThawTunZan"},"content":"     mark 1","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"ThawTunZan"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"ThawTunZan"},"content":"     [T][X] eat","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"ThawTunZan"},"content":"2. **unmark: unmark a task as not done using the associated number in the tasklist** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"ThawTunZan"},"content":"     Format: unmark NUMBER \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"ThawTunZan"},"content":"     Will unmark the task with the associated number as done. \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"ThawTunZan"},"content":"     unmark 1","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"ThawTunZan"},"content":"     Nice! I\u0027ve unmarked this task as not done:","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"ThawTunZan"},"content":"     [T][ ] eat","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"ThawTunZan"},"content":"#### Leaving the program","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"ThawTunZan"},"content":"1. **bye: terminate the program** \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":153,"author":{"gitId":"ThawTunZan"},"content":"     Format: bye \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"ThawTunZan"},"content":"     Will terminate the program but saves the file before it does that. \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":155,"author":{"gitId":"ThawTunZan"},"content":"     Example: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":156,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":157,"author":{"gitId":"ThawTunZan"},"content":"     bye","lastModifiedDate":"2024-02-28"},{"lineNumber":158,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":159,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":160,"author":{"gitId":"ThawTunZan"},"content":"     Output: \u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":161,"author":{"gitId":"ThawTunZan"},"content":"     ```bash","lastModifiedDate":"2024-02-28"},{"lineNumber":162,"author":{"gitId":"ThawTunZan"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-28"},{"lineNumber":163,"author":{"gitId":"ThawTunZan"},"content":"     ```","lastModifiedDate":"2024-02-28"},{"lineNumber":164,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ThawTunZan":160,"-":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.*;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import PrintMessages.UI;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.*;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import UserInputs.Parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":" * The Duke class represents the main entry point for the ThawBot application.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":" * It initializes the necessary components and starts the program.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"    private UI ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"        ui.printsGreeting();","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"        startProgramme(ui);","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"     * Starts the ThawBot program by initializing necessary components and handling user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"     * @param ui The UI object for printing messages to the user.","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"    private static void startProgramme(UI ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"            Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"            File f \u003d Storage.getFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"            TaskList taskList \u003d new TaskList(s);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"            Parser.startListening(input, taskList.taskList, ui);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"        } catch (ThawException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"            ui.handleError(e);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println(\"     An error occurred while reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ThawTunZan":40,"-":4}},{"path":"src/main/java/Exceptions/ThawException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package Exceptions;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":" * The ThawException class represents a custom exception used in the application.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Exception class and allows for the creation of exceptions with a specific message.","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"public class ThawException extends Exception {","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a ThawException with the specified error message.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"    public ThawException(String message) {","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"        super(message);","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ThawTunZan":16}},{"path":"src/main/java/FileManagerPackage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package FileManagerPackage;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Todo;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import UserInputs.Parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":" * The Storage class handles file input/output operations for managing tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"public class Storage {","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"    protected static final int DATE_LENGTH \u003d 5;","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"    private static final int TIME_LENGTH \u003d 4;","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"     * Reads the data from the file and populates the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"     * @param s       The Scanner object for reading from the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"     * @param list    The list to store tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"    public static void readFile(Scanner s, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"        int currentIteration \u003d 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"            String[] currentLine \u003d s.nextLine().split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"            switch (currentLine[0]) {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"                case \"D\":","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"                    String inputDateString \u003d currentLine[3].strip();","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"                    LocalDate date \u003d Parser.processDate(inputDateString.substring(0, inputDateString.length() - DATE_LENGTH));","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"                    LocalTime time \u003d Parser.processTime(inputDateString.substring(inputDateString.length() - TIME_LENGTH));","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"                    list.add(new Deadline(currentLine[2], date, time));","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"                case \"T\":","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"                    list.add(new Todo(currentLine[2]));","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"                case \"E\":","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"                    String[] duration \u003d currentLine[3].split(\"\\\\s*\\\\ - \\\\s*\");","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"                    LocalDate dateFrom \u003d Parser.processDate(duration[0].strip().substring(0, duration[0].length()- DATE_LENGTH));","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"                    LocalTime timeFrom \u003d Parser.processTime(duration[0].strip().substring(duration[0].length()- TIME_LENGTH));","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"                    LocalDate dateTo \u003d Parser.processDate(duration[1].strip().substring(0, duration[1].length()- DATE_LENGTH));","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"                    LocalTime timeTo \u003d Parser.processTime(duration[1].strip().substring(duration[0].length()- TIME_LENGTH));","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"                    list.add(new Event(currentLine[2],dateFrom, timeFrom, dateTo, timeTo));","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"                    break;","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"            if (currentLine[1].equals(\"1\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"                list.get(currentIteration).setDone(true);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"ThawTunZan"},"content":"            currentIteration++;","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"ThawTunZan"},"content":"     * Checks if the directory and file exist; creates them if not.","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"ThawTunZan"},"content":"     * @param f     The file object to check/create.","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"ThawTunZan"},"content":"     * @param filePath The path of the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"ThawTunZan"},"content":"    private static void checkIfDirExist(File f, String filePath) {","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"ThawTunZan"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"ThawTunZan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"ThawTunZan"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"ThawTunZan"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"ThawTunZan"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"ThawTunZan"},"content":"            try {","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"ThawTunZan"},"content":"                FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"ThawTunZan"},"content":"                fileWriter.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"ThawTunZan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"ThawTunZan"},"content":"                System.out.println(\"     An error occurred while creating file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"ThawTunZan"},"content":"     * Retrieves the file object representing the task data file.","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"ThawTunZan"},"content":"     * @return The File object representing the task data file.","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"ThawTunZan"},"content":"    public static File getFile() {","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"ThawTunZan"},"content":"        String filePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"ThawBot.txt\").toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"ThawTunZan"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"ThawTunZan"},"content":"        checkIfDirExist(f, filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"ThawTunZan"},"content":"        return f;","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"ThawTunZan"},"content":"     * Saves the task list data to the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"ThawTunZan"},"content":"     * @param list    The list of task to be saved","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"ThawTunZan"},"content":"    public static void saveData(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"ThawTunZan"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"ThawTunZan"},"content":"            final String filePath \u003d \"data/ThawBot.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"ThawTunZan"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"ThawTunZan"},"content":"            String textToAdd \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"ThawTunZan"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"ThawTunZan"},"content":"                textToAdd +\u003d list.get(i).printFileFormat() + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"ThawTunZan"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"ThawTunZan"},"content":"            fw.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"ThawTunZan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println(\"     An error occurred while reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ThawTunZan":117}},{"path":"src/main/java/PrintMessages/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package PrintMessages;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":" * The UI class handles printing various messages and information to the console.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"public class UI {","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"    public void printsGreeting() {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m ThawBot!\\nWhat can I do for you?\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(greetingMessage);","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"    public void printList(ArrayList\u003cTask\u003e task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println((i + 1) + \". \" + task.get(i).getStatusIcon());","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"    public void printAcknowledgementMessage(ArrayList\u003cTask\u003e task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(task.get(task.size() - 1).getStatusIcon());","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Now you have \" + task.size() + \" task in the list.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"    public void printFoundCommandAcknowledgementMessage() {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"    public void printMarkTaskAcknowledgementMessage(ArrayList\u003cTask\u003e taskList, int taskIndex) {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(taskList.get(taskIndex).getStatusIcon());","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"    public void printUnmarkTaskAcknowledgementMessage(ArrayList\u003cTask\u003e taskList, int taskIndex) {","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(taskList.get(taskIndex).getStatusIcon());","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"    public void printDeleteTaskAcknowledgementMessage(ArrayList\u003cTask\u003e taskList, int taskIndex) {","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(taskList.get(taskIndex).getStatusIcon());","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"        System.out.println(\"Now you have \" + (taskList.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"     * Handles and prints error messages based on the given exception.","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"     * @param e The ThawException representing the error.","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"    public void handleError(ThawException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"ThawTunZan"},"content":"        if (e.getMessage().startsWith(\"Empty command\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println(\"OOPS!!! The description of a \" + e.getMessage().substring(14) +\" cannot be empty.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ThawTunZan"},"content":"        } else if (e.getMessage().equals(\"Invalid command\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ThawTunZan"},"content":"        } else if (e.getMessage().equals(\"Invalid date time format\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println(\"OOOOOPSZZZZ! I\u0027m sorry, there may be an error with the date format in your input. \\n\" +","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"ThawTunZan"},"content":"                    \"Please ensure that the date and time format is in dd-MM-yy format + space + HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ThawTunZan":69}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package Tasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import UserInputs.Parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import commands.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":" * The Deadline class represents a task with a specific deadline, extending the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":" * It includes information about the due date and time of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    protected LocalTime byTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    protected String deadLineString;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a {@code Deadline} task with the specified description and due date/time.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     * @param by          The due date of the deadline task, represented as a LocalDate.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"     * @param byTime      The due time of the deadline task, represented as a LocalTime.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"    public Deadline(String description, LocalDate by, LocalTime byTime) {","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"        this.deadLineString \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"                byTime.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"     * Retrieves the status icon and description of the deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"     * @return A string representing the status icon, description, and deadline of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"        return (isDone ? \"[D][X] \" + super.description + \" (by: \" + deadLineString + \")\": \"[D][ ] \" +","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"                super.description + \" (by: \" + deadLineString + \")\"); // mark done task with X","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"     * Generates a string in the required file format for saving the Deadline task.","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"     * @return A string representing the Deadline task in the required file format.","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"    public String printFileFormat() {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"        DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"        return super.printFileFormat() + \" | \" + this.by.format(inputFormatter) + \" \" +","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"                this.byTime.format(inputTimeFormatter);","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ThawTunZan":59}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package Tasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import UserInputs.Parser;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":" * The Event class represents a task that is an event with a specific start and end time, extending the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":" * It includes information about the event\u0027s start and end date and time.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"    protected LocalTime fromTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    protected LocalTime toTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"    protected String DateTimeString;","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs an {@code Event} task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     * @param description The name of the event task","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"     * @param fromDate The start date of the deadline task, represented as a LocalDate.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"     * @param fromTime The start time of the deadline task, represented as a LocalTime.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"     * @param toDate The end date of the deadline task, represented as a LocalDate.","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"     * @param toTime The end time of the deadline task, represented as a LocalTime.","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"    public Event(String description, LocalDate fromDate, LocalTime fromTime, LocalDate toDate, LocalTime toTime) {","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"        this.DateTimeString \u003d \"from: \" + fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"                fromTime.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \" to: \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"                toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"                + \" \" + toTime.format(DateTimeFormatter.ofPattern(\"h:mma\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"     * Retrieves the status icon and description of the event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"     * @return A string representing the status icon, description, and start/end date and time of the event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"        return (isDone ? \"[E][X] \" + super.description + \" (\" + DateTimeString + \")\": \"[E][ ] \" + super.description +","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"                \" (\" + DateTimeString + \")\"); // mark done task with X","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"     * Generates a string in the required file format for saving the Event task.","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"     * @return A string representing the Event task in the required file format.","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"ThawTunZan"},"content":"    public String printFileFormat() {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"ThawTunZan"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ThawTunZan"},"content":"        DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"ThawTunZan"},"content":"        return super.printFileFormat() + \" | \" + fromDate.format(inputFormatter) + \" \" +","lastModifiedDate":"2024-03-02"},{"lineNumber":64,"author":{"gitId":"ThawTunZan"},"content":"                fromTime.format(inputTimeFormatter) + \" - \" + toDate.format(inputFormatter) + \" \" +","lastModifiedDate":"2024-03-02"},{"lineNumber":65,"author":{"gitId":"ThawTunZan"},"content":"                toTime.format(inputTimeFormatter);","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ThawTunZan":67}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package Tasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":" * The Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"        return isDone;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"        isDone \u003d done;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"        return description;","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"     * Returns a formatted string for saving the task to a file.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"     * @return A string in file format representing the task.","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"    public String printFileFormat() {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"        return this.getClass().getSimpleName().charAt(0) + \" | \" + ((isDone)? 1 : 0) + \" | \" + description;","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThawTunZan":44}},{"path":"src/main/java/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package Tasks;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":" * The TaskList class represents a collection of tasks and provides operations to manipulate the tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a TaskList by reading data from the provided Scanner.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     * @param s The Scanner object for reading from the file.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    public TaskList(Scanner s) {","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"        Storage.readFile(s, taskList);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"        taskList.remove(i);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"    public void markDone(int i) {","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"        taskList.get(i).setDone(true);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"    public void markNotDone(int i) {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"        taskList.get(i).setDone(false);","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"    public void printTask() {","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i).getStatusIcon());","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ThawTunZan":52}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package Tasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":" * The Todo class represents a simple todo task that extends the Task class.","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":" * It includes additional information about the task\u0027s duration.","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs an {@code Todo} task with specified description.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"     * @param description The description of the todoTask.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"     * Returns the status icon representing the completion status of the todo task.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     * @return A string representing the status icon, including \"[T]\" for todo and \"[X]\" if the task is done.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"        return (isDone ? \"[T][X] \" + super.description: \"[T][ ] \" + super.description); // mark done task with X","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ThawTunZan":26}},{"path":"src/main/java/UserInputs/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package UserInputs;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import PrintMessages.UI;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import commands.*;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":" * The Parser class is responsible for processing user input, creating and executing commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"public class Parser {","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     * This function is called after the program boot-up to continuously process user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * @param input the user\u0027s input from the terminal","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * @param list ArrayList that is initialised previously and passed onto this function to be populated","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     * @param ui used to print messages based on the user\u0027s input","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException customised error handling exception","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"    public static void startListening(Scanner input, ArrayList\u003cTask\u003e list, UI ui) throws ThawException {","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"        boolean canExit \u003d false;","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"        while (!canExit) {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"            String usersInput \u003d input.nextLine();","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"            if (usersInput.strip().equals(\"bye\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"                canExit \u003d true;","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"                ui.printGoodByeMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"            } else if (usersInput.strip().equals(\"list\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"                ui.printList(list);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"            } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"               editTask(usersInput.strip(), list, ui);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"     * Edits tasks based on user input by creating and executing the corresponding command.","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input from the terminal.","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"     * @param task       The ArrayList of tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"     * @param ui         The UI object for printing messages.","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"    private static void editTask(String usersInput, ArrayList\u003cTask\u003e task, UI ui) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"            String firstWord \u003d usersInput.split(\"\\\\s+\")[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"            Command commandTask \u003d createCommandTask(firstWord, task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"        } catch (ThawException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"            ui.handleError(e);","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ThawTunZan"},"content":"     * Creates a command task based on the user\u0027s input command.","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"ThawTunZan"},"content":"     * @param command    The command keyword extracted from the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"ThawTunZan"},"content":"     * @param task       The ArrayList of tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input from the terminal.","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"ThawTunZan"},"content":"     * @return Command   The instantiated command task.","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Customized error handling exception.","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"ThawTunZan"},"content":"    private static Command createCommandTask(String command, ArrayList\u003cTask\u003e task, String usersInput) throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"ThawTunZan"},"content":"        switch (command) {","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"ThawTunZan"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"ThawTunZan"},"content":"                return new MarkTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"ThawTunZan"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"ThawTunZan"},"content":"                return new UnmarkTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"ThawTunZan"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"ThawTunZan"},"content":"                return new DeleteTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"ThawTunZan"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"ThawTunZan"},"content":"                return new AddTodoTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"ThawTunZan"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"ThawTunZan"},"content":"                return new AddDeadlineTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"ThawTunZan"},"content":"            case \"event\":","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"ThawTunZan"},"content":"                return new AddEventTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"ThawTunZan"},"content":"            case \"find\":","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"ThawTunZan"},"content":"                return new FindTask(task, usersInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"ThawTunZan"},"content":"            default:","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"ThawTunZan"},"content":"                throw new ThawException(\"Invalid command\");","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"ThawTunZan"},"content":"     * Process user\u0027s input string to get a date formatted variable.","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"ThawTunZan"},"content":"     * Used for reading the data in a saved file in the Storage Class.","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"ThawTunZan"},"content":"     * @param inputDateTimeString string that is read from the saved file","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"ThawTunZan"},"content":"     * @return LocalDate a class from java.time package","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"ThawTunZan"},"content":"    public static LocalDate processDate(String inputDateTimeString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"ThawTunZan"},"content":"        String inputDateString \u003d inputDateTimeString.strip();","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"ThawTunZan"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"ThawTunZan"},"content":"        return LocalDate.parse(inputDateString, inputFormatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"ThawTunZan"},"content":"     * Process user\u0027s input string to get a time formatted variable.","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"ThawTunZan"},"content":"     * Used for reading the data in a saved file in the Storage Class.","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"ThawTunZan"},"content":"     * @param inputDateTimeString string that is read from the saved file","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"ThawTunZan"},"content":"     * @return LocalTime a class from java.time package","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"ThawTunZan"},"content":"    public static LocalTime processTime(String inputDateTimeString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"ThawTunZan"},"content":"        String inputTimeString \u003d inputDateTimeString.strip();","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"ThawTunZan"},"content":"        DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"ThawTunZan"},"content":"        return LocalTime.parse(inputTimeString, inputTimeFormatter);","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"ThawTunZan":112}},{"path":"src/main/java/commands/AddDeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.*;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import UserInputs.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.*;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":" * The AddDeadlineTask class represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the list of tasks and the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"public class AddDeadlineTask extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_SLASH_BY \u003d 4;","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_TIME \u003d 4;","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_DEADLINE \u003d 9;","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     * The name of the command class (used for error messages).","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"    public final String CLASS_NAME \u003d \"deadline\";","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a new {@code AddDeadlineTask} command with the specified list of tasks and user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"     * @param taskList   The list of tasks to operate on.","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty or lacks the required \"/by\" keyword.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"    public AddDeadlineTask(ArrayList\u003cTask\u003e taskList, String usersInput) throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"            int startingIndex \u003d usersInput.indexOf(\"/by\");","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"            LocalDate date \u003d Parser.processDate(usersInput.substring(startingIndex + LEN_OF_SLASH_BY,","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"                    usersInput.length() - LEN_OF_TIME));","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"            LocalTime time \u003d Parser.processTime(usersInput.substring(usersInput.length() - LEN_OF_TIME));","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"            taskList.add(new Deadline(usersInput.substring(LEN_OF_DEADLINE, startingIndex - 1), date, time));","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"            ui.printAcknowledgementMessage(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"            Storage.saveData(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ThawTunZan":50}},{"path":"src/main/java/commands/AddEventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.*;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import PrintMessages.UI;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import UserInputs.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":" * The AddEventTask class represents a command to add an event task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the list of tasks and the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"public class AddEventTask extends Command  {","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_SLASH_FROM \u003d 6;","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_DATE \u003d 5;","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_SLASH_TO \u003d 4;","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_DEADLINE \u003d 6;","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"     * The name of the command class (used for error messages).","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"    public final String CLASS_NAME \u003d \"event\";","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a new {@code AddEventTask} command with the specified list of tasks and user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"     * @param taskList   The list of tasks to operate on.","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty or lacks the required \"/from\" and \"/to\" keywords.","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"    public AddEventTask (ArrayList\u003cTask\u003e taskList, String usersInput) throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)  \u0026\u0026 correctDateTimeFormat(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"            int startIndex \u003d usersInput.indexOf(\"/from\");","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"            int endIndex \u003d usersInput.indexOf(\"/to\");","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"            LocalDate fromDate \u003d Parser.processDate(usersInput.substring(startIndex + LEN_OF_SLASH_FROM,","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"                    endIndex - LEN_OF_DATE).strip());","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"            LocalTime fromTime \u003d Parser.processTime(usersInput.substring(endIndex - LEN_OF_DATE, endIndex));","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"            LocalDate toDate \u003d Parser.processDate(usersInput.substring(endIndex + LEN_OF_SLASH_TO,","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"                    usersInput.length() - LEN_OF_DATE).strip());","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"            LocalTime toTime \u003d Parser.processTime(usersInput.substring(usersInput.length() - LEN_OF_SLASH_TO));","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"            taskList.add(new Event(usersInput.substring(LEN_OF_DEADLINE, startIndex - 1),","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"                    fromDate, fromTime, toDate, toTime));","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"            ui.printAcknowledgementMessage(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"            Storage.saveData(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ThawTunZan":60}},{"path":"src/main/java/commands/AddTodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.*;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":" * The AddTodoTask class represents a command to add a todo task to the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the list of tasks and the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"public class AddTodoTask extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"    private final int LEN_OF_TODO \u003d 5;","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"     * The name of the command class (used for error messages).","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"    public final String CLASS_NAME \u003d \"todo\";","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a new {@code AddTodoTask} command with the specified list of tasks and user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     * @param taskList   The list of tasks to operate on.","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"    public AddTodoTask(ArrayList\u003cTask\u003e taskList, String usersInput) throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"            String taskDesc \u003d usersInput.substring(LEN_OF_TODO);","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"            taskList.add(new Todo(taskDesc));","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"            ui.printAcknowledgementMessage(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"            Storage.saveData(taskList);","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ThawTunZan":39}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import PrintMessages.UI;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":" * The Command class provides utility methods for command-related operations.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"public class Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"    protected static final int LEN_OF_SLASH_BY \u003d 3;","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"    protected static final int LEN_OF_SLASH_TO \u003d 3;","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"    protected static final int LEN_OF_SLASH_FROM \u003d 5;","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    protected static final int DATE_TIME_STRING_LEN \u003d 15;","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     * Checks if the given parameter (userInput) is an empty command, meaning just the command word alone.","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     * @return True if the command is without a description, false otherwise.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    public static boolean commandWithoutDescription(String usersInput) {","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"        return  usersInput.equals(\"unmark\")   ||","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"                usersInput.equals(\"mark\")     ||","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"                usersInput.equals(\"delete\")   ||","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"                usersInput.equals(\"todo\")     ||","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"                usersInput.equals(\"deadline\") ||","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"                usersInput.equals(\"event\")    ||","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"                usersInput.equals(\"find\");","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"     * Checks if the date and time format in the user\u0027s input is correct for deadline and event commands.","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"     * @param userInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"     * @return True if the date and time format is correct, false otherwise.","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ThawTunZan"},"content":"    public static boolean correctDateTimeFormat(String userInput) {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"ThawTunZan"},"content":"        if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"ThawTunZan"},"content":"            String lengthOfDateTimeString \u003d userInput.substring(userInput.indexOf(\"/by\") +","lastModifiedDate":"2024-03-02"},{"lineNumber":45,"author":{"gitId":"ThawTunZan"},"content":"                    LEN_OF_SLASH_BY).strip();","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"ThawTunZan"},"content":"            return lengthOfDateTimeString.length() \u003d\u003d 15;","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ThawTunZan"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"ThawTunZan"},"content":"            String lengthOfFirstDateTime \u003d userInput.substring(userInput.indexOf(\"/from\") +","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"ThawTunZan"},"content":"                    LEN_OF_SLASH_FROM, userInput.indexOf(\"/to\")).strip();","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"ThawTunZan"},"content":"            String lengthOfSecondDateTime \u003d userInput.substring(userInput.indexOf(\"/to\") + LEN_OF_SLASH_TO).strip();","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"ThawTunZan"},"content":"            return lengthOfFirstDateTime.length() \u003d\u003d DATE_TIME_STRING_LEN \u0026\u0026","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"ThawTunZan"},"content":"                    lengthOfSecondDateTime.length() \u003d\u003d DATE_TIME_STRING_LEN;","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"ThawTunZan"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"ThawTunZan"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ThawTunZan":59}},{"path":"src/main/java/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"import FileManagerPackage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.*;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":" * The DeleteTask class represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the list of tasks and the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"    private final String CLASS_NAME \u003d \"delete\";","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    private final int INDEX_OF_TASK \u003d 7;","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a new {@code DeleteTask} command with the specified list of tasks and user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * @param task     The list of tasks to operate on.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    public DeleteTask(ArrayList\u003cTask\u003e task, String usersInput) throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)){","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"            int taskIndex \u003d Integer.parseInt(usersInput.substring(INDEX_OF_TASK)) - 1;","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"            ui.printDeleteTaskAcknowledgementMessage(task, taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"            task.remove(taskIndex);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"            Storage.saveData(task);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ThawTunZan":36}},{"path":"src/main/java/commands/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":" * The FindTask class represents a command to find tasks containing a specific keyword in their descriptions.","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the user\u0027s input and the list of tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"public class FindTask extends Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"    private final String CLASS_NAME \u003d \"find\";","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    private final int STARTING_INDEX_OF_TASK \u003d 5;","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a FindTask command with the specified user\u0027s input and list of tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * @param tasks      The list of tasks to search within.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"    public FindTask(ArrayList\u003cTask\u003e tasks, String usersInput)  throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"            ui.printFoundCommandAcknowledgementMessage();","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"                if (task.getDescription().contains(usersInput.substring(STARTING_INDEX_OF_TASK))) {","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"                    foundTasks.addTask(task);","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"ThawTunZan"},"content":"                }","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"ThawTunZan"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ThawTunZan"},"content":"            foundTasks.printTask();","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ThawTunZan":40}},{"path":"src/main/java/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import PrintMessages.UI;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":" * The MarkTask class represents a command to mark a task as completed.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the list of tasks and the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"public class MarkTask extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"    private final String CLASS_NAME \u003d \"mark\";","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"    private final int INDEX_OF_TASK \u003d 5;","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs a MarkTask command with the specified list of tasks and user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     * @param task      The list of tasks to operate on.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"    public MarkTask(ArrayList\u003cTask\u003e task, String usersInput) throws ThawException  {","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"            int taskIndex \u003d Integer.parseInt(usersInput.substring(INDEX_OF_TASK)) - 1;","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"            task.get(taskIndex).setDone(true);","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"            ui.printMarkTaskAcknowledgementMessage(task, taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ThawTunZan":33}},{"path":"src/main/java/commands/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThawTunZan"},"content":"package commands;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"ThawTunZan"},"content":"import Exceptions.ThawException;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"ThawTunZan"},"content":"import Tasks.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"ThawTunZan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"ThawTunZan"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"ThawTunZan"},"content":" * The UnmarkTask class represents a command to unmark a completed task.","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ThawTunZan"},"content":" * It extends the Command class and requires the list of tasks and the user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ThawTunZan"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ThawTunZan"},"content":"public class UnmarkTask extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ThawTunZan"},"content":"     * The name of the command class (used for error messages).","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ThawTunZan"},"content":"    private final String CLASS_NAME \u003d \"unmark\";","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"ThawTunZan"},"content":"    private final int INDEX_OF_TASK \u003d 7;","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"ThawTunZan"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ThawTunZan"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"ThawTunZan"},"content":"     * Constructs an UnmarkTask command with the specified list of tasks and user\u0027s input.","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"ThawTunZan"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ThawTunZan"},"content":"     * @param task      The list of tasks to operate on.","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ThawTunZan"},"content":"     * @param usersInput The user\u0027s input for the command.","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ThawTunZan"},"content":"     * @throws ThawException Thrown if the user\u0027s input is empty.","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ThawTunZan"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ThawTunZan"},"content":"    public UnmarkTask(ArrayList\u003cTask\u003e task, String usersInput) throws ThawException {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"ThawTunZan"},"content":"        if (commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"ThawTunZan"},"content":"            throw new ThawException(\"Empty command \" + CLASS_NAME);","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"ThawTunZan"},"content":"        } else if (!commandWithoutDescription(usersInput)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"ThawTunZan"},"content":"            int taskIndex \u003d Integer.parseInt(usersInput.substring(INDEX_OF_TASK)) - 1;","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"ThawTunZan"},"content":"            task.get(taskIndex).setDone(false);","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"ThawTunZan"},"content":"            ui.printUnmarkTaskAcknowledgementMessage(task, taskIndex);","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"ThawTunZan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"ThawTunZan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"ThawTunZan"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"ThawTunZan":34}}]
