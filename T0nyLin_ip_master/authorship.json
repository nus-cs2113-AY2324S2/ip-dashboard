[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"# Tony project template","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"3. After that, locate the `src/main/java/Tony.java` file, right-click it, and choose `Run Tony.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"T0nyLin":2,"-":22}},{"path":"src/main/java/Tony/FileManager/FileLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.FileManager;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import java.io.File;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"public class FileLoader {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    protected static final String DATA_PATH \u003d \"./data/tonytask.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code FileLoader} object that loads the tonytask.txt file if available.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"     * Or create a new file if not found.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of tasks to save from the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public FileLoader(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"     * Checks if a directory and file exists. Else, program will create.","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException if there is error in locating the file in specified path.","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    public void checkFileExists() throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"        File directory \u003d new File(\"./data/\");","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        File file \u003d new File(DATA_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"File not found. File will be created!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        loadDataFromFile(file);","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"     * Loads data from file line by line.","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"     * @param file File found in path","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"     * @throws FileNotFoundException If there is error locating \u003ccode\u003efile\u003c/code\u003e.","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    private void loadDataFromFile(File file) throws FileNotFoundException {","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        int lineCount \u003d 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"            Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"            parser.extractLineFromFile(scanner, lineCount);","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"            lineCount++;","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"T0nyLin":59}},{"path":"src/main/java/Tony/FileManager/FileSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.FileManager;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Todo;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.io.File;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"public class FileSaver {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    protected static final String DATA_PATH \u003d \"./data/tonytask.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    protected static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code FileSaver} object that saves tasks added by user.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of tasks to save into the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    public FileSaver(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"     * Returns formatted text with \u003ccode\u003eSEPARATOR\u003c/code\u003e to save in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * @param todo Task type of Todo","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003etoDoText\u003c/code\u003e formatted String to save in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    public String saveTodo(Todo todo) {","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        char type \u003d \u0027T\u0027;","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        String description \u003d todo.description;","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        int doneStatus \u003d todo.toString().contains(\"[X]\") ? 1 : 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"        String toDoText \u003d type + SEPARATOR + doneStatus","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"                + SEPARATOR + description + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        return toDoText;","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"     * Returns formatted text with \u003ccode\u003eSEPARATOR\u003c/code\u003e to save in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"     * @param deadline Task type of Deadline","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003edeadlineText\u003c/code\u003e formatted String to save in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"    public String saveDeadline(Deadline deadline) {","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"        char type \u003d \u0027D\u0027;","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"        int doneStatus \u003d deadline.toString().contains(\"[X]\") ? 1 : 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        String description \u003d deadline.description;","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        String by \u003d deadline.by;","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"        String deadlineText \u003d type + SEPARATOR + doneStatus","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"                + SEPARATOR + description + SEPARATOR + by  + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"        return deadlineText;","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     * Returns formatted text with \u003ccode\u003eSEPARATOR\u003c/code\u003e to save in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"     * @param event Task type of Event","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003eeventText\u003c/code\u003e formatted String to save in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    public String saveEvent(Event event) {","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        char type \u003d \u0027E\u0027;","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        int doneStatus \u003d event.toString().contains(\"[X]\") ? 1 : 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        String description \u003d event.description;","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        String from \u003d event.from;","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        String to \u003d event.to;","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        String eventText \u003d type + SEPARATOR + doneStatus + SEPARATOR + description","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"                + SEPARATOR + from + \" to \" + to + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        return eventText;","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"     * Updates the file with the latest changes made in the \u003ccode\u003etasks\u003c/code\u003e list.","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error locating file to save the data into.","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"    public void updateFile() throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        checkForEmptyList();","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"            String listItem \u003d tasks.get(i).toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"            char type \u003d listItem.charAt(1);","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"            boolean isAppend \u003d i !\u003d 0;","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"            switch (type) {","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"                Todo todo \u003d (Todo) tasks.get(i);","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"                String todoLine \u003d saveTodo(todo);","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"                saveData(todoLine, isAppend);","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"                Deadline deadline \u003d (Deadline) tasks.get(i);","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"                String deadlineLine \u003d saveDeadline(deadline);","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"                saveData(deadlineLine, isAppend);","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"                Event event \u003d (Event) tasks.get(i);","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"                String eventLine \u003d saveEvent(event);","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"                saveData(eventLine, isAppend);","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"            default:","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"                saveData(\"\", false);","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"     * Checks if the \u003ccode\u003etasks\u003c/code\u003e list is empty, then when updating the file,","lastModifiedDate":"2024-02-29"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"     * the file should also be empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error locating file to save the data into.","lastModifiedDate":"2024-02-29"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"    private void checkForEmptyList() throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"            saveData(\"\", false);","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"     * Saves the formatted task line into the file","lastModifiedDate":"2024-02-29"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"     * @param taskCommand Formatted String to save into file","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"     * @param isAppend Determine whether file is to be appended to existing data.","lastModifiedDate":"2024-02-29"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error locating file to save the data into.","lastModifiedDate":"2024-02-29"},{"lineNumber":122,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":123,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"    public void saveData(String taskCommand, boolean isAppend) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"        File file \u003d new File(DATA_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"T0nyLin"},"content":"        FileWriter fw \u003d new FileWriter(file, isAppend);","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"T0nyLin"},"content":"        fw.write(taskCommand);","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"T0nyLin"},"content":"        fw.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"T0nyLin":130}},{"path":"src/main/java/Tony/Tony.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileLoader;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.command.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"public class Tony {","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private final FileLoader fileLoader;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private final FileSaver fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    public static final String LINE_BREAKER \u003d \"__________________________________________________\";","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * Represents a new {@code Tony} object.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    public Tony() {","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        this.fileLoader \u003d new FileLoader(this.tasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"        this.fileSaver \u003d new FileSaver(this.tasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * This method runs the Tony chatbot","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException if there is an error creating a File object","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        Ui ui \u003d new Ui(tasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"        fileLoader.checkFileExists();","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"            String line \u003d userInput.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(LINE_BREAKER);","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"            Command command \u003d parser.parse(line);","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"            command.execute(tasks, ui, fileSaver);","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(LINE_BREAKER);","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"        userInput.close();","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"     * This is the start of Tony the chatbot.","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException if there is an error creating a File object in the run().","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"        new Tony().run();","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"T0nyLin":58}},{"path":"src/main/java/Tony/TonyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":" * Enables customised exception handling","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"public class TonyException extends Exception{","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"T0nyLin":8}},{"path":"src/main/java/Tony/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003eprintByeMessage\u003c/code\u003e method.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) {","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003etrue\u003c/code\u003e if command entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e and exit program.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"        return true;","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":30}},{"path":"src/main/java/Tony/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":" * Represent {@code Command} interface that runs execute method and isExit method.","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"public interface Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) throws IOException;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":17}},{"path":"src/main/java/Tony/command/CommandChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"public class CommandChecker implements Command{","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"     * Represents {@code CommandChecker} object to check if user input the correct command.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"     * @param parser is used to parse the user input for processing.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    public CommandChecker(Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003echeckFirstCommandWord\u003c/code\u003e method.","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) {","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"        parser.checkFirstCommandWord();","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":41}},{"path":"src/main/java/Tony/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private final String USER_INPUT;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private FileSaver fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * Represents {@code DeadlineCommand} object to handle deadline task type.","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * @param line is the String input by user","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * @param parser to help with processing the String input.","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    public DeadlineCommand(String line, Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        this.USER_INPUT \u003d line;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003eaddDeadlineCommand\u003c/code\u003e method to add Deadline task into list.","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * checks if there are no words after deadline keyword","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        this.fileSaver \u003d fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        String[] deadlineTask \u003d USER_INPUT.split(\"deadline\");","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"            parser.checkArrayLength(deadlineTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"            addDeadlineCommand(deadlineTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"        } catch (TonyException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"OOPS!! The description of \u0027\" + USER_INPUT","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"                    + \"\u0027 cannot be empty.\" + System.lineSeparator());","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"     * Processes the \u003ccode\u003edeadlineTask\u003c/code\u003e String by splitting the String at \u0027/by\u0027","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"     * and saves into current \u003ccode\u003etasks\u003c/code\u003e list.","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"     * @param deadlineTask array String after deadline keyword.","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"    private void addDeadlineCommand(String[] deadlineTask) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"        String[] description \u003d deadlineTask[1].split(\"/by\");","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        Deadline deadline \u003d new Deadline(description[0], description[1]);","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        ui.printAddOrDeleteTask(description[0], tasks.indexOf(deadline));","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        String deadlineLine \u003d fileSaver.saveDeadline(deadline);","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        fileSaver.saveData(deadlineLine, true);","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-02"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":77}},{"path":"src/main/java/Tony/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    private final String USER_INPUT;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private FileSaver fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * Represents {@code DeleteCommand} object to handle delete command.","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * @param line is the String input by user","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * @param parser to help with processing the String input.","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    public DeleteCommand(String line, Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        this.USER_INPUT \u003d line;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003edeleteTaskCommand\u003c/code\u003e method to remove task from list.","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        this.fileSaver \u003d fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        deleteTaskCommand();","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"     * Splits the String \u003ccode\u003eline\u003c/code\u003e by white space and checks its length","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"     * then ensures only number input after delete command","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"     * and checks if number supplied is found within list range","lastModifiedDate":"2024-03-02"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"    private void deleteTaskCommand() throws IOException {","lastModifiedDate":"2024-03-02"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"            String[] subCommand \u003d USER_INPUT.split(\" \");","lastModifiedDate":"2024-03-02"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"            parser.checkArrayLength(subCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"            int num \u003d Integer.parseInt(subCommand[1]);","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"            parser.checkNumberWithinRange(num);","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"            deleteATask(subCommand[0], num);","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Suggest only number after \u0027delete\u0027!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"        } catch (TonyException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"To delete a task, suggest a number available in the list!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"     * Removes the specified task from the \u003ccode\u003etasks\u003c/code\u003e list","lastModifiedDate":"2024-03-02"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"     * @param subCommand contains the String \u0027delete\u0027 from the delete command","lastModifiedDate":"2024-03-02"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"     * @param num the index of the task given by user","lastModifiedDate":"2024-03-02"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"    private void deleteATask(String subCommand, int num) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"        ui.printAddOrDeleteTask(subCommand, num - 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"        tasks.remove(num - 1);","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"        fileSaver.updateFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-02"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":86}},{"path":"src/main/java/Tony/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private final String USER_INPUT;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private FileSaver fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * Represents {@code EventCommand} object to handle event command.","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * @param line is the String input by user","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * @param parser to help with processing the String input.","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    public EventCommand(String line, Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        this.USER_INPUT \u003d line;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003eaddEventCommand\u003c/code\u003e method to add Event task into list,","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * checks if there are no words after event keyword","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-02"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) throws IOException {","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        this.fileSaver \u003d fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        String[] eventTask \u003d USER_INPUT.split(\"event\");","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"            parser.checkArrayLength(eventTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"            addEventCommand(eventTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"        } catch (TonyException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"OOPS!! The description of \u0027\" + USER_INPUT","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"                    + \"\u0027 cannot be empty.\" + System.lineSeparator());","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"     * Processes the \u003ccode\u003edeadlineTask\u003c/code\u003e String by splitting the String at \u0027/from\u0027 and \u0027/to\u0027","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"     * and saves into current \u003ccode\u003etasks\u003c/code\u003e list.","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     * @param eventTask array String after event keyword.","lastModifiedDate":"2024-03-02"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-02"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    private void addEventCommand(String[] eventTask) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        String[] description \u003d eventTask[1].split(\"/from | /to\");","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        Event event \u003d new Event(description[0], description[1], description[2]);","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        ui.printAddOrDeleteTask(description[0], tasks.indexOf(event));","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        String eventLine \u003d fileSaver.saveEvent(event);","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        fileSaver.saveData(eventLine, true);","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-02"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":78}},{"path":"src/main/java/Tony/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    private final String USER_INPUT;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"     * Represents {@code FindCommand} object to handle find task command.","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"     * @param line is the String input by user","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * @param parser to help with processing the String input.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public FindCommand(String line, Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        this.USER_INPUT \u003d line;","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003efindCommand\u003c/code\u003e method to find task from list.","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) {","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        String[] findTask \u003d USER_INPUT.split(\"find\");","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"            parser.checkArrayLength(findTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"            ui.findCommand(findTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        } catch (TonyException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"OOPS!! The description of \u0027\" + USER_INPUT","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"                    + \"\u0027 cannot be empty.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":52}},{"path":"src/main/java/Tony/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003eprintTaskList\u003c/code\u003e method to print tasks onto the screen.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) {","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"        ui.printTaskList();","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":31}},{"path":"src/main/java/Tony/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"public class MarkCommand implements Command{","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    private final String USER_INPUT;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private FileSaver fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * Represent {@code MarkCommand} object to mark tasks specified by user.","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * @param line is String input by user.","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * @param parser to help with processing the String input","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    public MarkCommand(String line, Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        this.USER_INPUT \u003d line;","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003emarkTaskCommand\u003c/code\u003e method to mark task when it is done,","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     * also checks if user has empty input after mark command","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) {","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        this.fileSaver \u003d fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"            String[] subCommand \u003d USER_INPUT.split(\" \");","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"            parser.checkArrayLength(subCommand);","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"            int num \u003d Integer.parseInt(subCommand[1]);","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"            parser.checkNumberWithinRange(num);","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"            markTaskCommand(subCommand, num);","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Suggest a number after \u0027mark\u0027!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"        } catch (TonyException | IOException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"To mark a task, suggest a number available in the list!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"     * Marks a task if it is done","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"     * @param subCommand is String array that contains mark/unmark command","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"     * @param num is the task index specified by user","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"    public void markTaskCommand(String[] subCommand, int num) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"        if (subCommand[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"            tasks.get(num - 1).markDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"                    + System.lineSeparator() + \"\\t \" + tasks.get(num - 1));","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"            tasks.get(num - 1).markNotDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"                    + System.lineSeparator() + \"\\t \" + tasks.get(num - 1));","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        fileSaver.updateFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":80}},{"path":"src/main/java/Tony/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.command;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.FileManager.FileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Todo;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import Tony.utility.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"public class ToDoCommand implements Command{","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private final String USER_INPUT;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private FileSaver fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * Represents {@code ToDoCommand} object to handle todo task type.","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * @param line is the String input by user","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * @param parser to help with processing the String input.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    public ToDoCommand(String line, Parser parser) {","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        this.USER_INPUT \u003d line;","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     * Executes the \u003ccode\u003eaddTodoCommand\u003c/code\u003e method to add Todo task into list,","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * checks if there are no words after todo keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks is the current list of \u003ccode\u003etasks\u003c/code\u003e to save to the file.","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     * @param ui is the user interface of that prints texts on program.","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     * @param fileSaver is object used to save data into the file.","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, FileSaver fileSaver) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        this.fileSaver \u003d fileSaver;","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        String[] toDoTask \u003d USER_INPUT.split(\"todo\");","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"            parser.checkArrayLength(toDoTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"            addTodoCommand(toDoTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        } catch (TonyException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"OOPS!! The description of \u0027\" + USER_INPUT","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"                    + \"\u0027 cannot be empty.\" + System.lineSeparator());","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     * Processes the \u003ccode\u003etoDoTask\u003c/code\u003e String after the todo keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"     * @param toDoTask array String after todo keyword.","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"     * @throws IOException If there is error in saving data into file.","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    public void addTodoCommand(String[] toDoTask) throws IOException {","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        Todo todo \u003d new Todo(toDoTask[1]);","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        ui.printAddOrDeleteTask(toDoTask[0], tasks.indexOf(todo));","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        String todoLine \u003d fileSaver.saveTodo(todo);","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        fileSaver.saveData(todoLine, true);","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"     * Returns \u003ccode\u003efalse\u003c/code\u003e if command not entered \u003ccode\u003ebye\u003c/code\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e and does not exit program.","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"        return false;","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":77}},{"path":"src/main/java/Tony/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"    public String by;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code Deadline} object that saves task type \u003ccode\u003edeadline\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"     * @param description is the String \u003ccode\u003edescription\u003c/code\u003e for deadline tasks","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"     * @param by is the String to specify deadline due \u003ccode\u003eby\u003c/code\u003e time/date","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * Returns the type of tasks to identify deadline.","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * @return String \u003ccode\u003e[D]\u003c/code\u003e as task type.","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    public String type() {","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        return \"[D]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * Returns the String to save in the current task list","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * @return String formatted to be saved in task list.","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        return type() + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"T0nyLin":36}},{"path":"src/main/java/Tony/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"    public String from;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"    public String to;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code Event} object that saves task type \u003ccode\u003eevent\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"     * @param description is the String \u003ccode\u003edescription\u003c/code\u003e for event tasks","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"     * @param from is the String to specify event starts \u003ccode\u003efrom\u003c/code\u003e time/date","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"     * @param to is the String to specify time/date that the event is \u003ccode\u003eto\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"        this.from \u003d from.trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"        this.to \u003d to.trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * Returns the type of tasks to identify event.","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * @return String \u003ccode\u003e[E]\u003c/code\u003e as task type.","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    public String type() {","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        return \"[E]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * Returns the String to save in the current task list","lastModifiedDate":"2024-03-02"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * @return String formatted to be saved in task list.","lastModifiedDate":"2024-03-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        return type() + super.toString()","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"                + \" (from: \" + from","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"                + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"T0nyLin":37}},{"path":"src/main/java/Tony/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"    public String description;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code Task} object that saves all tasks","lastModifiedDate":"2024-03-02"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"     * @param description is the String input from user","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"     * Returns a String \u0027X\u0027 when task is marked done","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"     * @return a String based on boolean \u003ccode\u003eisDone\u003c/code\u003e to mark when a task is done","lastModifiedDate":"2024-03-02"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"     * Assigns boolean \u003ccode\u003eisDone\u003c/code\u003e to true when task is done.","lastModifiedDate":"2024-03-02"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * Assigns boolean \u003ccode\u003eisDone\u003c/code\u003e to false when task is not done.","lastModifiedDate":"2024-03-02"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"    public void markNotDone(){","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"     * Returns formatted String to display task description in list","lastModifiedDate":"2024-03-02"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"     * @return String of task description and with icon that identifies whether task is done.","lastModifiedDate":"2024-03-02"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        return \"[\" + getStatusIcon() + \"] \"+ description;","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"T0nyLin":46}},{"path":"src/main/java/Tony/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code Todo} object that saves task type \u003ccode\u003etodo\u003c/code\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"     * @param description is the String \u003ccode\u003edescription\u003c/code\u003e for todo tasks","lastModifiedDate":"2024-03-02"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"     * Returns the type of tasks to identify todo.","lastModifiedDate":"2024-03-02"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"     * @return String \u003ccode\u003e[T]\u003c/code\u003e as task type","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    public String type() {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"        return \"[T]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-02"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * Returns the String to save the current task list","lastModifiedDate":"2024-03-02"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * @return String formatted to be saved in task list.","lastModifiedDate":"2024-03-02"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-02"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"        return type() + super.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"T0nyLin":30}},{"path":"src/main/java/Tony/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.utility;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.TonyException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import Tony.command.*;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Todo;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"public class Parser {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    protected static final String SEPARATOR \u003d \" \\\\| \";","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code Parser} object that takes in user input","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * and processes the command accordingly.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks the current list of \u003ccode\u003etasks\u003c/code\u003e to add each tasks into.","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    public Parser(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * Parses user input and process the command based on the first word entered","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * @param line is the String that user entered","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     * @return A new {@code Command} object created according to user command.","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public Command parse(String line) {","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        if (line.equals(\"bye\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        } else if (line.equals(\"list\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        } else if (line.contains(\"mark\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"            return new MarkCommand(line, parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"            return new ToDoCommand(line, parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"            return new DeadlineCommand(line, parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"            return new EventCommand(line, parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"        }else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"            return new DeleteCommand(line, parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"            return new FindCommand(line, parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"        }else {","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"            return new CommandChecker(parser);","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     * Processes each line in the file, split them with the \u003ccode\u003eSEPARATOR\u003c/code\u003e regex and","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"     * format them to add them back into a \u003ccode\u003etasks\u003c/code\u003e list to be used during program run.","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"     * @param scanner Scanner object that reads the data from each line in the file.","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"     * @param lineCount Int counter helps to track index to mark task in the \u003ccode\u003etasks\u003c/code\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"     * list if task \u003ccode\u003eisDone\u003c/code\u003e.","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"    public void extractLineFromFile(Scanner scanner, int lineCount) {","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        String lineFromFile \u003d scanner.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        String[] taskSplit \u003d lineFromFile.split(SEPARATOR);","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        String taskSymbol \u003d taskSplit[0].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        boolean isDone \u003d taskSplit[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"        switch (taskSymbol) {","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        case \"T\":","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"            tasks.add(new Todo(taskSplit[2].trim()));","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"        case \"D\":","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"            tasks.add(new Deadline(taskSplit[2].trim(), taskSplit[3].trim()));","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"        case \"E\":","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"            String[] fromAndTo \u003d taskSplit[3].split(\"to\");","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"            tasks.add(new Event(taskSplit[2].trim(), fromAndTo[0].trim(), fromAndTo[1].trim()));","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"            tasks.get(lineCount).markDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"            tasks.get(lineCount).markNotDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"     * Checks if user input meet minimum length of words","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"     * @param taskArrayString array of user input split by specific command keyword to check its array length","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"     * @throws TonyException If array length does not meet the minimum requirement.","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"    public void checkArrayLength(String[] taskArrayString) throws TonyException {","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"        if (taskArrayString.length !\u003d 2) {","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"            throw new TonyException();","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"     * Checks if the number supplied by user to mark/delete is within range of task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"     * @param num The number supplied by user","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"     * @throws TonyException If number is not found within the \u003ccode\u003etasks\u003c/code\u003e list","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"    public void checkNumberWithinRange(int num) throws TonyException {","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"        if (num \u003e tasks.size()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"            throw new TonyException();","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"     * Checks if the command entered by user is Not one of the specified word the program can process.","lastModifiedDate":"2024-02-29"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"    public void checkFirstCommandWord() {","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"Please begin input with the following words: \"","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"                + \"\u0027list / todo / deadline / event / delete / mark / find\u0027 \");","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"T0nyLin":119}},{"path":"src/main/java/Tony/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package Tony.utility;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import Tony.task.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"public class Ui {","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"     * Represents a {@code Ui} object that prints texts on program.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"     * @param tasks the current \u003ccode\u003etasks\u003c/code\u003e list.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    public Ui(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * Prints the welcome message \u003ccode\u003echatBot\u003c/code\u003e.","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        String chatBot \u003d \"Hello! I\u0027m TONY\"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(chatBot);","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * Prints the bye message \u003ccode\u003ebyeBot\u003c/code\u003e.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    public void printByeMessage() {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"        String byeBot \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(byeBot);","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     * Prints the current \u003ccode\u003etasks\u003c/code\u003e list when user type \"list\".","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    public void printTaskList() {","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        for(Task t : tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d tasks.indexOf(t) + 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \"","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"                    + t);","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"     * Prints message when user \u003ccode\u003eadd/delete\u003c/code\u003e a task into/from \u003ccode\u003etasks\u003c/code\u003e list.","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"     * @param command is the \u003ccode\u003edelete\u003c/code\u003e command entered by user.","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"     * @param index is used to retrieve task from the \u003ccode\u003etasks\u003c/code\u003e list based on the given index.","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"    public void printAddOrDeleteTask(String command, int index) {","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"        String deleteOrAdd \u003d (command.equals(\"delete\") ? \"removed\" : \"added\");","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"        int taskSize \u003d (command.equals(\"delete\") ? tasks.size() - 1  : tasks.size());","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"\\t Got it. I\u0027ve \" + deleteOrAdd","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"                + \" this task:\"","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"                + \"\\t\\t \" + tasks.get(index)","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"                + \"\\t Now you have \" + taskSize + \" tasks in the list.\");","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"     * Finds the task that contains the keyword that user input","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"     * then list down all matching \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"     * @param findTask is the task description after the find keyword","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"    public void findCommand(String[] findTask) {","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        String keyword \u003d findTask[1].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"        int numbering \u003d 0;","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"            if(t.description.contains(keyword)) {","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"                System.out.println(\"\\t\" + (numbering + 1) + \". \" + t);","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"                numbering++;","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"T0nyLin":80}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"todo Lin Htet: Answer CS2113T tutorial questions","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"T0nyLin":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"java -classpath ..\\bin Tony \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"T0nyLin":1,"-":20}}]
