[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"# Tony project template","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"3. After that, locate the `src/main/java/Tony.java` file, right-click it, and choose `Run Tony.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"T0nyLin":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"    protected String by;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"T0nyLin":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"    protected String from;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"    protected String to;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"                + \"(from: \" + from","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"                + \" to:\" + to + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"T0nyLin":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"    protected String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    public void markNotDone(){","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        return \"[\" + getStatusIcon() + \"]\"+ description;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"T0nyLin":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"T0nyLin":10}},{"path":"src/main/java/Tony.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"public class Tony {","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"    public static final String LINE_BREAKER \u003d \"__________________________________________________\"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"            + System.lineSeparator();","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"    public static int taskCounter \u003d 0;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"        printWelcomeMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"        while(userInput.hasNextLine()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"            String line \u003d userInput.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"            if(line.equals(\"bye\")){","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"                printByeMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"                return;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"            } else if(line.equals(\"list\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"                listTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"            } else if(line.contains(\"mark\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"                try {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"                    String[] subCommand \u003d line.split(\" \");","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"                    int num \u003d Integer.parseInt(subCommand[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"                    checkNumberWithinRange(num);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"                    markTasks(subCommand, num, tasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"                    System.out.println(\"Suggest only number after \u0027mark\u0027!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"                } catch (TonyException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"                    System.out.println(\"To mark a task, suggest a number available in the list!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"            } else if(line.startsWith(\"todo\") || line.startsWith(\"deadline\")","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"                    || line.startsWith(\"event\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"                try {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"                    addATask(line, tasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"                } catch (TonyException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"                    System.out.println(LINE_BREAKER + \"OOPS!! The description of \" + line","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"                            + \" cannot be empty.\" + System.lineSeparator() + LINE_BREAKER);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"                System.out.println(\"Please begin input with the following words: \"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                        + \"\u0027todo / deadline / event / mark\u0027\");","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    private static void listTasks(Task[] tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"        for(int i \u003d 0; i \u003c taskCounter; i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"            Task task \u003d tasks[i];","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + (i+1) + \".\"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"                    + task);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"    private static void checkNumberWithinRange(int num) throws TonyException {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"        if(num \u003e taskCounter) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"            throw new TonyException();","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    private static void markTasks(String[] subCommand, int num, Task[] tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        if(subCommand[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"            tasks[num -1].markDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"                    LINE_BREAKER","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"                        + \"\\tNice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"                        + System.lineSeparator() + tasks[num -1] + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"                        + LINE_BREAKER);","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"            tasks[num -1].markNotDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"                    LINE_BREAKER","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"                        + \"\\tOK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"                        + System.lineSeparator() + tasks[num -1] + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"                        + LINE_BREAKER);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"    private static void printByeMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"                LINE_BREAKER","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"                        + \"Bye. Hope to see you again soon!\"","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"                        + LINE_BREAKER);","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"        String chatBot \u003d \"Hello! I\u0027m TONY\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"                + LINE_BREAKER;","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(chatBot);","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"    private static void addATask(String userInput, Task[] allTasks) throws TonyException {","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"        if(userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"            String[] toDoTask \u003d userInput.split(\"todo\");","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"            checkArrayLength(userInput, toDoTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"            addTodoTask(allTasks, toDoTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"        } else if(userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"            String[] deadlineTask \u003d userInput.split(\"deadline\");","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"            checkArrayLength(userInput, deadlineTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"            addDeadlineTask(allTasks, deadlineTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"        } else if(userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"            String[] eventTask \u003d userInput.split(\"event\");","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"            checkArrayLength(userInput, eventTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"            addEventTask(allTasks, eventTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"    private static void checkArrayLength(String userInput, String[] toDoTask) throws TonyException {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"        if(toDoTask.length !\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"            throw new TonyException();","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"    private static void addEventTask(Task[] allTasks, String[] eventTask) {","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"        String[] description \u003d eventTask[1].split(\"/from | /to\");","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"        Event event \u003d new Event(description[0], description[1], description[2]);","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"        allTasks[taskCounter] \u003d event;","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"        printAddNewTask(allTasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"    private static void addDeadlineTask(Task[] allTasks, String[] deadlineTask) {","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"        String[] description \u003d deadlineTask[1].split(\"/by\");","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"        Deadline deadline \u003d new Deadline(description[0], description[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"        allTasks[taskCounter] \u003d deadline;","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"T0nyLin"},"content":"        printAddNewTask(allTasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"    private static void addTodoTask(Task[] allTasks, String[] toDoTask) {","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"        Todo todo \u003d new Todo(toDoTask[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"T0nyLin"},"content":"        allTasks[taskCounter] \u003d todo;","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"T0nyLin"},"content":"        printAddNewTask(allTasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"    private static void printAddNewTask(Task[] allTasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"T0nyLin"},"content":"        taskCounter++;","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"T0nyLin"},"content":"                LINE_BREAKER","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"                    + \"\\t Got it. I\u0027ve added this task:\"","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"T0nyLin"},"content":"                    + \"\\t\\t \" + allTasks[taskCounter-1]","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"T0nyLin"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"T0nyLin"},"content":"                    + \"\\t Now you have \" + taskCounter + \" tasks in the list.\"","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"T0nyLin"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"T0nyLin"},"content":"                    + LINE_BREAKER);","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"T0nyLin":141}},{"path":"src/main/java/TonyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"public class TonyException extends Exception{","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"T0nyLin":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"todo Lin Htet: Answer CS2113T tutorial questions","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"T0nyLin":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"java -classpath ..\\bin Tony \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"T0nyLin":1,"-":20}}]
