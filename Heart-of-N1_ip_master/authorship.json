[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"import Event.Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"import Event.Deadline;","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"import Event.ToDo;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"import Event.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"import RuntimeSupport.DukeException;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Heart-of-N1"},"content":"    static String BREAK_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Heart-of-N1"},"content":"        System.out.println(BREAK_LINE + \"\\nHello! I\u0027m 550W.\\nWhat can I do for you?\\n\" + BREAK_LINE);","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Heart-of-N1"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Heart-of-N1"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Heart-of-N1"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Heart-of-N1"},"content":"        String line \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Heart-of-N1"},"content":"        while (true) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Heart-of-N1"},"content":"            try {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Heart-of-N1"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Heart-of-N1"},"content":"                System.out.println(BREAK_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Heart-of-N1"},"content":"                if (line.equals(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Heart-of-N1"},"content":"                    break; //Break out of the loop immediately when bye command is entered, quitting the programme.","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Heart-of-N1"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Heart-of-N1"},"content":"                if (line.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(\"Abracadabra! \\uD83C\\uDF1F Here are the tasks in your list:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Heart-of-N1"},"content":"                    for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Heart-of-N1"},"content":"                        System.out.println((i + 1) + \".\" + tasks[i].toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Heart-of-N1"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(BREAK_LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Heart-of-N1"},"content":"                } else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Heart-of-N1"},"content":"                    int taskMarkNumber \u003d Integer.parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[taskMarkNumber].markAsNotDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(\"All good! We\u0027ve hit the rewind button and unmarked this task \\uD83D\\uDD04:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(\"  \" + tasks[taskMarkNumber] + \"\\n\" + BREAK_LINE);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Heart-of-N1"},"content":"                } else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Heart-of-N1"},"content":"                    int taskMarkNumber \u003d Integer.parseInt(line.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[taskMarkNumber].markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(\"X marks the spot! \\uD83C\\uDF89 I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(\"  \" + tasks[taskMarkNumber] + \"\\n\" + BREAK_LINE);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Heart-of-N1"},"content":"                } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[count] \u003d new ToDo(line);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[count].print(count);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Heart-of-N1"},"content":"                    count++;","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Heart-of-N1"},"content":"                } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[count] \u003d new Deadline(line);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[count].print(count);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Heart-of-N1"},"content":"                    count++;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Heart-of-N1"},"content":"                } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[count] \u003d new Event(line);","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Heart-of-N1"},"content":"                    tasks[count].print(count);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Heart-of-N1"},"content":"                    count++;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"Heart-of-N1"},"content":"                } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(\"Oops! I\u0027ve no clue what that means. Could you enlighten me, please? \\uD83E\\uDD16\\uD83D\\uDCA1\");","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"Heart-of-N1"},"content":"                    System.out.println(BREAK_LINE);","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"Heart-of-N1"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Heart-of-N1"},"content":"            } catch (Exception error) {","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Heart-of-N1"},"content":"                DukeException.handleException(error, line);","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"Heart-of-N1"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"Heart-of-N1"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Heart-of-N1"},"content":"        System.out.println(\"Bye. Hope to see you again soon! \\uD83D\\uDE0A\\n\" + BREAK_LINE);","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Heart-of-N1":77,"-":4}},{"path":"src/main/java/Event/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"package Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"    protected String by;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"    public Deadline(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"        super(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Heart-of-N1"},"content":"        this.description \u003d parts[0].substring(9).trim(); //Remove deadline command and trim spaces.","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Heart-of-N1"},"content":"        this.by \u003d parts[1];","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Heart-of-N1"},"content":"        this.eventType \u003d \"[D]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Heart-of-N1"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Heart-of-N1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Heart-of-N1"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Heart-of-N1"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Heart-of-N1":16}},{"path":"src/main/java/Event/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"package Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"    protected String from;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"    protected String to;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"    public Event(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Heart-of-N1"},"content":"        super(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Heart-of-N1"},"content":"        String[] firstPart \u003d input.split(\" /from \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Heart-of-N1"},"content":"        this.description \u003d firstPart[0].substring(6).trim(); // Remove \"event\" command and trim spaces.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Heart-of-N1"},"content":"        String[] secondPart \u003d firstPart[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Heart-of-N1"},"content":"        this.from \u003d secondPart[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Heart-of-N1"},"content":"        this.to \u003d secondPart[1];","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Heart-of-N1"},"content":"        this.eventType \u003d \"[E]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Heart-of-N1"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Heart-of-N1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Heart-of-N1"},"content":"        return super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Heart-of-N1"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Heart-of-N1":21}},{"path":"src/main/java/Event/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"package Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"public class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"    static String BREAK_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"    protected String description; //Holds the textual description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"    protected String eventType;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Heart-of-N1"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Heart-of-N1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Heart-of-N1"},"content":"        this.isDone \u003d false; //Initialize the status of the new task to not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Heart-of-N1"},"content":"        this.eventType \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Heart-of-N1"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Heart-of-N1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Heart-of-N1"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Heart-of-N1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Heart-of-N1"},"content":"    public String getTasksIcon() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Heart-of-N1"},"content":"        return eventType;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Heart-of-N1"},"content":"    public String getTasksStatus() {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Heart-of-N1"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Heart-of-N1"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Heart-of-N1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Heart-of-N1"},"content":"        return this.getTasksIcon() + this.getTasksStatus() + \" \" + this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Heart-of-N1"},"content":"    public void print(int count) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Heart-of-N1"},"content":"        System.out.println(\"Voilà! \\uD83D\\uDCDC Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Heart-of-N1"},"content":"        System.out.println(\"  \" + toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Heart-of-N1"},"content":"        System.out.println(\"Now you have \" + (count + 1) + \" tasks in the list. \\uD83D\\uDCDC\" + \"\\n\" + BREAK_LINE);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Heart-of-N1"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Heart-of-N1":44,"-":1}},{"path":"src/main/java/Event/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"package Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"import Event.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Heart-of-N1"},"content":"        super(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Heart-of-N1"},"content":"        this.description \u003d description.substring(5).trim(); // Remove \"todo\" command and trim spaces.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        this.eventType \u003d \"[T]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Heart-of-N1"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Heart-of-N1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Heart-of-N1"},"content":"        return super.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Heart-of-N1"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Heart-of-N1":15,"-":1}},{"path":"src/main/java/RuntimeSupport/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"package RuntimeSupport;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"public class DukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"    static String BREAK_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"    public static void handleException(Exception error, String line) {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Heart-of-N1"},"content":"        if (error instanceof NullPointerException) {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"Alert! Galactic navigation systems report a phantom destination \\uD83C\\uDF0C. The operation: \" + line + \" cannot be done because the event does not exist!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Heart-of-N1"},"content":"        } else if (error instanceof StringIndexOutOfBoundsException) {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"Uh-oh! Our canvas is blank. \\uD83C\\uDFA8 The description of the \" + line + \" event cannot be empty!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Heart-of-N1"},"content":"        } else if (error instanceof ArrayIndexOutOfBoundsException \u0026\u0026 line.contains(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"Whoops! We\u0027ve hit a ghost event. It\u0027s simply not there. \\uD83D\\uDC7B The operation: \" + line + \" cannot be done because the event does not exist!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Heart-of-N1"},"content":"        } else if (error instanceof ArrayIndexOutOfBoundsException) {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"Echo... echo... Your event\u0027s lost in the echo chamber. \\uD83C\\uDF0C The event input: \" + line + \" cannot be recognized by the bot! :(\" + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"Please input the event details using the following format:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"todo [todo event name].\");","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"deadline [deadline event name] /by [time].\");","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"event [event name] /from [start time] /to [end time].\");","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Heart-of-N1"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Heart-of-N1"},"content":"            System.out.println(\"Oops! It seems my circuits are tangled. I\u0027ve no clue what that means. Could you enlighten me, please? \\uD83E\\uDD16\\uD83D\\uDCA1\");","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Heart-of-N1"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Heart-of-N1"},"content":"        System.out.println(BREAK_LINE);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"Heart-of-N1"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Heart-of-N1":35,"-":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Heart-of-N1"},"content":"todo borrow book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Heart-of-N1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Heart-of-N1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Heart-of-N1"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Heart-of-N1":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Heart-of-N1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Heart-of-N1"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Event\\*.java ..\\src\\main\\java\\RuntimeSupport\\*.java","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Heart-of-N1":2,"-":19}}]
