[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"# Cody User Guide","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"Cody is a CLI (Command Line Interface) chatbot application that helps you manage your tasks efficiently. Below are the features available in Cody:","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"## Quick Start","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"2. Download the latest `ip.jar` from the [releases page](https://github.com/hafizuddin-a/ip/releases).","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"3. Copy the file to the folder you want to use as the home folder for Cody.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"4. Open a command terminal, navigate to the folder containing `ip.jar`, and run the command `java -jar ip.jar` to start the application.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"## Features","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"### Help","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `help`","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Lists all commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"### Adding a Task","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"- Commands:","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    - `todo DESCRIPTION` - Adds a todo task.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    - `deadline DESCRIPTION /by DATE` - Adds a deadline task.","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"    - `event DESCRIPTION /from START_DATE /to END_DATE` - Adds an event task.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"### Listing All Tasks","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `list`","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Lists all tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"### Find a Task by Description","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `find KEYWORD`","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"### Deleting a Task","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `delete INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Deletes the task at the specified index.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"### Marking a Task as Done","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `mark INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Marks the task at the specified index as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"### Marking a Task as Not Done","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `unmark INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Marks the task at the specified index as not done.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"### Exiting the Program","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"- Command: `bye`","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"- Description: Exits the program.","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"### Saving the Data","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"- Cody automatically saves your task data to `tasks.txt` in the `data` folder after the program exits. There is no need to save manually.","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"- The `data` folder will be created in the home folder for Cody if it does not exist.","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"## FAQ","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"- **Q:** How do I transfer my data to another computer?","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"    - **A:** Install Cody on the other computer and copy the `data` folder from your previous Cody home folder to the new one.","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"hafizuddin-a":40,"-":15}},{"path":"src/main/java/cody/Cody.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import cody.parser.Parser;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import cody.storage.Storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import cody.ui.Ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":" * The Cody class is the main class of the application, responsible for initializing the application","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":" * and handling the main loop for user input and command execution.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"public class Cody {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    private final Storage storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    private final Ui ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a Cody instance with the specified file path for storing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"    public Cody(String filePath) {","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (CodyException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"            ui.printException(e);","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"     * Starts the application, displaying a greeting message and entering a loop to read and execute commands","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"     * until the \"bye\" command is entered.","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"    public void run() {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"        ui.greet();","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"        while (isRunning) {","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"            isRunning \u003d !fullCommand.equals(EXIT_COMMAND);","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"            if (isRunning) {","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"                executeCommand(fullCommand);","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"        saveTasks();","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"        ui.exit();","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"    private void executeCommand(String command) {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"            String response \u003d Parser.parseCommand(command, tasks);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"            ui.printMessage(response);","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (CodyException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"            ui.printException(e);","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"    private void saveTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (CodyException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"            ui.printException(e);","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"     * The main method of the application, which creates a new Cody instance and starts the application.","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"    public static void main(String[] args)  {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"        new Cody(\"./data/tasks.txt\").run();","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hafizuddin-a":74,"-":2}},{"path":"src/main/java/cody/CodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * The CodyException class is a custom exception class used to handle exceptions specific to the Cody application.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"public class CodyException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new CodyException with the specified detail message.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     * @param message The detail message for the exception.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    public CodyException(String message) {","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"        super(message);","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"hafizuddin-a":16}},{"path":"src/main/java/cody/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Deadline;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Event;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Todo;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":" * The TaskList class manages a list of tasks and provides methods to manipulate and query the list.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"public class TaskList {","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"    private static final int TODO_PREFIX_LENGTH \u003d 5;","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    private static final int DEADLINE_PREFIX_LENGTH \u003d 9;","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    private static final int EVENT_PREFIX_LENGTH \u003d 6;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"        return tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns a string representation of the list of tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A string representation of the list of tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"    public String printList() {","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"        String listString \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"            listString +\u003d \" \" + (i + 1) + \". [\" + task.getTaskType() + \"] \"","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"                    + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"                    + task.getDescription() + \"\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"        return listString;","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"     * Marks or unmarks a task as done based on the command.","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"     * @param command The command to mark or unmark the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"     * @param index   The index of the task to be marked or unmarked.","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A message indicating the result of the operation.","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"    public String handleMarking(String command, int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"        boolean isDone \u003d command.equals(\"mark\");","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"        task.markTask(isDone);","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"        return \"Noted. I\u0027ve marked this task as \" + (isDone ? \"done\" : \"not done\") + \":\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"                + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"     * Adds a new task to the list based on the input.","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"     * @param input The input containing the details of the task to be added.","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs during task creation.","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"hafizuddin-a"},"content":"    public String addTask(String input) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"hafizuddin-a"},"content":"        Task task \u003d createTaskFromInput(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"hafizuddin-a"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"hafizuddin-a"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"hafizuddin-a"},"content":"                + \"[\" + task.getTaskType() + \"] [\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"hafizuddin-a"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"hafizuddin-a"},"content":"     * Creates a new task from the input.","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"hafizuddin-a"},"content":"     * @param input The input containing the details of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The newly created task.","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs during task creation.","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"hafizuddin-a"},"content":"    public static Task createTaskFromInput(String input) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"hafizuddin-a"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"hafizuddin-a"},"content":"            return createTodoTask(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"hafizuddin-a"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":94,"author":{"gitId":"hafizuddin-a"},"content":"            return createDeadlineTask(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"hafizuddin-a"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"hafizuddin-a"},"content":"            return createEventTask(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"hafizuddin-a"},"content":"        } else {","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"I\u0027m not sure what you mean. \"","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"hafizuddin-a"},"content":"                    + \"Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027 to add tasks\");","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"hafizuddin-a"},"content":"    private static Todo createTodoTask(String input) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"hafizuddin-a"},"content":"        if (input.length() \u003c\u003d TODO_PREFIX_LENGTH) {","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"The description of a todo cannot be empty. Please use \u0027todo \u003cdescription\u003e\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"hafizuddin-a"},"content":"        String description \u003d input.substring(TODO_PREFIX_LENGTH).trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"hafizuddin-a"},"content":"        return new Todo(description);","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":111,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":112,"author":{"gitId":"hafizuddin-a"},"content":"    private static Deadline createDeadlineTask(String input) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"hafizuddin-a"},"content":"        if (input.length() \u003c\u003d DEADLINE_PREFIX_LENGTH) {","lastModifiedDate":"2024-03-05"},{"lineNumber":114,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"The description of a deadline cannot be empty. \"","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"hafizuddin-a"},"content":"                    + \"Please use \u0027deadline \u003cdescription\u003e /by \u003cdeadline\u003e\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":116,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"hafizuddin-a"},"content":"        String[] deadlineDetails \u003d input.split(\" /by \", 2);","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"hafizuddin-a"},"content":"        if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Invalid deadline format. Please use \u0027deadline \u003cdescription\u003e /by \u003cdeadline\u003e\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"hafizuddin-a"},"content":"        String description \u003d deadlineDetails[0].substring(DEADLINE_PREFIX_LENGTH).trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"hafizuddin-a"},"content":"        String by \u003d deadlineDetails[1];","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"hafizuddin-a"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"hafizuddin-a"},"content":"    private static Event createEventTask(String input) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"hafizuddin-a"},"content":"        if (input.length() \u003c\u003d EVENT_PREFIX_LENGTH) {","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"The description of an event cannot be empty. \"","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"hafizuddin-a"},"content":"                    + \"Please use \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":132,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"hafizuddin-a"},"content":"        String[] eventDetails \u003d input.split(\" /from | /to \", 3);","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"hafizuddin-a"},"content":"        if (eventDetails.length \u003c 3) {","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Invalid event format. \"","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"hafizuddin-a"},"content":"                    + \"Please use \u0027event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\u0027\");","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"hafizuddin-a"},"content":"        String description \u003d eventDetails[0].substring(EVENT_PREFIX_LENGTH).trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"hafizuddin-a"},"content":"        String from \u003d eventDetails[1];","lastModifiedDate":"2024-03-05"},{"lineNumber":142,"author":{"gitId":"hafizuddin-a"},"content":"        String to \u003d eventDetails[2];","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"hafizuddin-a"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":146,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"hafizuddin-a"},"content":"     * Deletes a task from the list based on the index.","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":149,"author":{"gitId":"hafizuddin-a"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-03-05"},{"lineNumber":150,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A message indicating that the task has been removed.","lastModifiedDate":"2024-03-05"},{"lineNumber":151,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2024-03-05"},{"lineNumber":152,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":153,"author":{"gitId":"hafizuddin-a"},"content":"    public String deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-05"},{"lineNumber":154,"author":{"gitId":"hafizuddin-a"},"content":"        Task task \u003d tasks.remove(index - 1);","lastModifiedDate":"2024-03-05"},{"lineNumber":155,"author":{"gitId":"hafizuddin-a"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":156,"author":{"gitId":"hafizuddin-a"},"content":"                + \"[\" + task.getTaskType() + \"] [\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":157,"author":{"gitId":"hafizuddin-a"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-03-05"},{"lineNumber":158,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":161,"author":{"gitId":"hafizuddin-a"},"content":"     * Finds and returns a list of tasks that contain the specified keyword.","lastModifiedDate":"2024-03-05"},{"lineNumber":162,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"hafizuddin-a"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-03-05"},{"lineNumber":164,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A string containing a list of tasks that match the keyword.","lastModifiedDate":"2024-03-05"},{"lineNumber":165,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":166,"author":{"gitId":"hafizuddin-a"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-03-05"},{"lineNumber":167,"author":{"gitId":"hafizuddin-a"},"content":"        String listString \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-03-05"},{"lineNumber":168,"author":{"gitId":"hafizuddin-a"},"content":"        String keywordLowerCase \u003d keyword.toLowerCase();","lastModifiedDate":"2024-03-06"},{"lineNumber":169,"author":{"gitId":"hafizuddin-a"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-03-05"},{"lineNumber":170,"author":{"gitId":"hafizuddin-a"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-05"},{"lineNumber":171,"author":{"gitId":"hafizuddin-a"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-03-05"},{"lineNumber":172,"author":{"gitId":"hafizuddin-a"},"content":"            if (task.getDescription().toLowerCase().contains(keywordLowerCase)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":173,"author":{"gitId":"hafizuddin-a"},"content":"                listString +\u003d \" \" + (i + 1) + \". [\" + task.getTaskType() + \"] \"","lastModifiedDate":"2024-03-05"},{"lineNumber":174,"author":{"gitId":"hafizuddin-a"},"content":"                        + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"hafizuddin-a"},"content":"                        + task.getDescription() + \"\\n\";","lastModifiedDate":"2024-03-05"},{"lineNumber":176,"author":{"gitId":"hafizuddin-a"},"content":"                count++;","lastModifiedDate":"2024-03-05"},{"lineNumber":177,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":178,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":179,"author":{"gitId":"hafizuddin-a"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-03-05"},{"lineNumber":180,"author":{"gitId":"hafizuddin-a"},"content":"            listString \u003d \"There are no matching tasks in your list.\";","lastModifiedDate":"2024-03-05"},{"lineNumber":181,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":182,"author":{"gitId":"hafizuddin-a"},"content":"        return listString;","lastModifiedDate":"2024-03-05"},{"lineNumber":183,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"hafizuddin-a":184}},{"path":"src/main/java/cody/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.parser;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import cody.TaskList;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import cody.CodyException;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import cody.ui.Ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":" * The Parser class is responsible for parsing user input and executing the corresponding commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"public class Parser {","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"     * Parses and executes a command based on the user input.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"     * @param input    The user input string containing the command and any arguments.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"     * @param taskList The TaskList object on which the command will be executed.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A string representing the result of the command execution.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs during command parsing or execution.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    public static String parseCommand(String input, TaskList taskList) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"        String argument \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"            switch (command) {","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"            case \"list\":","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"                return taskList.printList();","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"                return taskList.deleteTask(Integer.parseInt(argument));","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"            case \"mark\":","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"            case \"unmark\":","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"                return taskList.handleMarking(command, Integer.parseInt(argument));","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"            case \"find\":","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"                return taskList.findTask(argument);","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"            case \"help\":","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"                return Ui.HELP_MESSAGE;","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"            default:","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"                return taskList.addTask(input);","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Invalid task number. Please use a number.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Task number out of bounds. Please choose a number within the list.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"hafizuddin-a":47}},{"path":"src/main/java/cody/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.storage;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import cody.CodyException;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"import cody.tasks.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.File;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":" * The Storage class handles the loading and saving of tasks to a file.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"public class Storage {","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    private static final int MINIMUM_PARTS \u003d 3;","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    private String filePath;","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"     * Saves the list of tasks to the file specified by filePath.","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs while writing to the file.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"                String taskType \u003d task.getTaskType();","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"                String isDone \u003d task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"                writer.write(taskType + \" | \" + isDone + \" | \" + description + System.lineSeparator());","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"     * Loads the list of tasks from the file specified by filePath.","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs while reading from the file.","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"    public ArrayList\u003cTask\u003e load() throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"                Task task \u003d readFile(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"                }","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"You have no tasks saved\");","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"        return tasks;","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"hafizuddin-a"},"content":"     * Parses a line from the file and creates a Task object.","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"hafizuddin-a"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The Task object created from the line.","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs while parsing the line.","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"hafizuddin-a"},"content":"    private Task readFile(String line) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"hafizuddin-a"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"hafizuddin-a"},"content":"        if (parts.length \u003c MINIMUM_PARTS) {","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Invalid saved task format: \" + line);","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"hafizuddin-a"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"hafizuddin-a"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"hafizuddin-a"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"hafizuddin-a"},"content":"        Task task;","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"hafizuddin-a"},"content":"        switch (type) {","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"hafizuddin-a"},"content":"        case \"T\":","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"hafizuddin-a"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"hafizuddin-a"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"hafizuddin-a"},"content":"        case \"D\":","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"hafizuddin-a"},"content":"            task \u003d readDeadline(description);","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"hafizuddin-a"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"hafizuddin-a"},"content":"        case \"E\":","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"hafizuddin-a"},"content":"            task \u003d readEvent(description);","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"hafizuddin-a"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"hafizuddin-a"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Unknown saved task type: \" + type);","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"hafizuddin-a"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"hafizuddin-a"},"content":"            task.markTask(true);","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"hafizuddin-a"},"content":"        return task;","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"hafizuddin-a"},"content":"     * Parses the description of a Deadline task.","lastModifiedDate":"2024-03-05"},{"lineNumber":118,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"hafizuddin-a"},"content":"     * @param description The description to be parsed.","lastModifiedDate":"2024-03-05"},{"lineNumber":120,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The Deadline task created from the description.","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs while parsing the description.","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":123,"author":{"gitId":"hafizuddin-a"},"content":"    private Task readDeadline(String description) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":124,"author":{"gitId":"hafizuddin-a"},"content":"        String[] parts \u003d description.split(\" \\\\(by: \");","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"hafizuddin-a"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Invalid deadline format: \" + description);","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"hafizuddin-a"},"content":"        String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"hafizuddin-a"},"content":"        String by \u003d parts[1].replace(\")\", \"\").trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"hafizuddin-a"},"content":"        return new Deadline(taskDescription, by);","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":134,"author":{"gitId":"hafizuddin-a"},"content":"     * Parses the description of an Event task.","lastModifiedDate":"2024-03-05"},{"lineNumber":135,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":136,"author":{"gitId":"hafizuddin-a"},"content":"     * @param description The description to be parsed.","lastModifiedDate":"2024-03-05"},{"lineNumber":137,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The Event task created from the description.","lastModifiedDate":"2024-03-05"},{"lineNumber":138,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws CodyException If an error occurs while parsing the description.","lastModifiedDate":"2024-03-05"},{"lineNumber":139,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":140,"author":{"gitId":"hafizuddin-a"},"content":"    private Task readEvent(String description) throws CodyException {","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"hafizuddin-a"},"content":"        String[] parts \u003d description.split(\" \\\\(from: | to: \");","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"hafizuddin-a"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"hafizuddin-a"},"content":"            throw new CodyException(\"Invalid event format: \" + description);","lastModifiedDate":"2024-03-05"},{"lineNumber":144,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":145,"author":{"gitId":"hafizuddin-a"},"content":"        String taskDescription \u003d parts[0].trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"hafizuddin-a"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":147,"author":{"gitId":"hafizuddin-a"},"content":"        String to \u003d parts[2].replace(\")\", \"\").trim();","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"hafizuddin-a"},"content":"        return new Event(taskDescription, from, to);","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"hafizuddin-a":150}},{"path":"src/main/java/cody/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"    protected String by;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the description of the task along with its deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The description of the task with its deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        return description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the type of the task, which is \"D\" for Deadline.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"        return \"D\";","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"hafizuddin-a":39}},{"path":"src/main/java/cody/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * The Event class represents a task with a start and end time.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"    protected String from;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    protected String to;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the description of the task along with its start and end times.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The description of the task with its start and end times.","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"        return description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the type of the task, which is \"E\" for Event.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"        return \"E\";","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"hafizuddin-a":42}},{"path":"src/main/java/cody/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * The Task class represents a general task with a description and a completion status.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"    protected String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"    protected String taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        return description;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the status icon of the task, indicating whether it is completed.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The status icon (\"X\" for completed, \" \" for incomplete).","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"     * Marks the task as completed or incomplete.","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"     * @param isDone The completion status to set for the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"    public void markTask(boolean isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the type of the task (e.g., \"T\" for todo, \"D\" for deadline, \"E\" for event).","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"        return taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hafizuddin-a":56}},{"path":"src/main/java/cody/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * The Todo class represents a basic task without any additional time constraints.","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the type of the task, which is \"T\" for Todo.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        return \"T\";","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"hafizuddin-a":26}},{"path":"src/main/java/cody/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package cody.ui;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":" * The Ui class handles the user interface and interactions with the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"public class Ui {","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String BORDER \u003d \"______________________________________________________________\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String GREET_MESSAGE \u003d \"Hey there! I\u0027m Cody, your personal task manager\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"            + \"Tell me your tasks and I will create a task list for you\";","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    public static final String HELP_MESSAGE \u003d \"Here are the commands you can use:\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 1. todo \u003cdescription\u003e: Adds a todo task to the list\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 2. deadline \u003cdescription\u003e /by \u003cdate\u003e: Adds a deadline task to the list\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 3. event \u003cdescription\u003e /at \u003cdate\u003e: Adds an event task to the list\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 4. list: Displays the list of tasks\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 5. mark \u003cindex\u003e: Marks the task at the specified index as done\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 6. unmark \u003cindex\u003e: Unmarks the task at the specified index\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 7. delete \u003cindex\u003e: Deletes the task at the specified index\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 8. find \u003ckeyword\u003e: Finds tasks containing the specified keyword\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 9. help: Displays the list of commands\\n\"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"            + \" 10. bye: Exits the application\";","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"    public Ui() {","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     * Prints the greeting message to the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    public void greet() {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"        printMessage(GREET_MESSAGE + \"\\n\" + BORDER + HELP_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"    public String readCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"     * Prints a message to the user, enclosed in borders.","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"        System.out.print(BORDER + message + \"\\n\" + BORDER);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"     * Prints an exception message to the user.","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"     * @param e The exception whose message is to be printed.","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"     * Prints the exit message to the user and closes the scanner.","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"    public void exit() {","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"        printMessage(EXIT_MESSAGE);","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"        scanner.close();","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"hafizuddin-a":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"todo borrow book","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"list","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"mark 2","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"unmark 2","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"blah","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"todo","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"event","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"deadline","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"mark one","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"mark -1","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"mark 0","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"mark 5","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"delete 4","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"find book","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"help","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"bye","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"hafizuddin-a":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"if exist .\\data\\tasks.txt del .\\data\\tasks.txt","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\cody\\*.java","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"java -classpath ..\\bin cody.Cody \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hafizuddin-a":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"java -classpath ../bin Cody \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hafizuddin-a":1,"-":37}}]
