[{"path":"data/Kyrene.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"false deadline submit iP /by 2024-03-08 2359","lastModifiedDate":"2024-03-01"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"true event trip to jb /from 2024-03-01 0000 /to 2024-03-02 2359","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"false event midterm exams /from 2024-03-09 0000 /to 2024-03-16 2359","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"false deadline finish EE2211 as2 /by 2024-03-03 2359","lastModifiedDate":"2024-03-01"}],"authorContributionMap":{"ZhouJunmin":4}},{"path":"src/main/java/kyrene/Kyrene.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.command.Command;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.parser.Parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.taskList.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.ui.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.storage.Storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":" * The main body of the ChatBot Kyrene. It initialises from loading a file to get existing tasks,","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":" * and then interacts with user to manage the to-do list.","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"public class Kyrene {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String FILE_PATH \u003d \"./data/Kyrene.txt\";","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String FOLDER_PATH \u003d \"./data/\";","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"     * Initialise Kyrene with loading file from the specified file path.","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"     * If the file does not exist, then create one.","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"    public Kyrene() {","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"        storage \u003d new Storage(FILE_PATH, FOLDER_PATH);","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"            storage.createFile();","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"     * Run Kyrene to interact with user.","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"     * Exit when user commands to exit.","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"    public void run() {","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showHello();","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"            String fullCommand \u003d Ui.readCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"                c.execute(tasks, storage);","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException c) {","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorInvalidCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"     * Main function to initialise and run Kyrene.","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"        new Kyrene().run();","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ZhouJunmin":63}},{"path":"src/main/java/kyrene/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.command;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneInvalidCommandException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTaskException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTimeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneTaskNotFoundException;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.parser.Parser;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Task;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.taskList.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.ui.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.storage.Storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":" * Represents a command that consists a main command word,","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":" * possibly a description or task number to describe the target of the command,","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":" * and an exit flag to indicate whether to exit the programme or not.","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"public class Command {","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"    private Commands command;","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"    private String description;","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"    public Command() {","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"        this.command \u003d Commands.INVALID;","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"        this.taskNumber \u003d -1;","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"        this.description \u003d null;","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a command of BYE or LIST, otherwise INVALID command.","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"    public Command(Commands command) {","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"        this.taskNumber \u003d -1;","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"        this.description \u003d null;","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"        this.isExit \u003d (command \u003d\u003d Commands.BYE) || (command \u003d\u003d Commands.INVALID);","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a command of MARK, UNMARK, or DELETE, otherwise INVALID command.","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"    public Command(Commands command, int taskNumber) {","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"        this.description \u003d null;","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"        this.isExit \u003d (command \u003d\u003d Commands.BYE) || (command \u003d\u003d Commands.INVALID);","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a command of ADD, AT, DUE ,or FIND, otherwise INVALID command.","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"    public Command(Commands command, String description) {","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"        this.taskNumber \u003d -1;","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"        this.isExit \u003d (command \u003d\u003d Commands.BYE) || (command \u003d\u003d Commands.INVALID);","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns the exit flag indicating whether to exit the programme.","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"     * @return Whether to exit the programme.","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"        return isExit;","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"     * Identify and execute the command.","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"     * @param storage A storage object to read and write to specific file.","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"        switch (command) {","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"        case BYE:","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"            handleBye();","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"        case LIST:","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"            handleList(tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"        case ADD:","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"                handleAdd(tasks, storage);","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneMissingTaskException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorMissingTask();","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneInvalidCommandException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorInvalidCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"ZhouJunmin"},"content":"        case DELETE:","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"ZhouJunmin"},"content":"                handleDelete(tasks, storage);","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (NumberFormatException | KyreneTaskNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"ZhouJunmin"},"content":"                int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorTaskNotExist(taskCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"ZhouJunmin"},"content":"            }  catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorInvalidCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"ZhouJunmin"},"content":"        case MARK:","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"ZhouJunmin"},"content":"                handleMark(tasks, storage, true);","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (NumberFormatException | KyreneTaskNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"ZhouJunmin"},"content":"                int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorTaskNotExist(taskCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorInvalidCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"ZhouJunmin"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"ZhouJunmin"},"content":"                handleMark(tasks, storage, false);","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (NumberFormatException | KyreneTaskNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"ZhouJunmin"},"content":"                int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorTaskNotExist(taskCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorInvalidCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"ZhouJunmin"},"content":"        case AT:","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"ZhouJunmin"},"content":"            handleAT(tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"ZhouJunmin"},"content":"        case DUE:","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"ZhouJunmin"},"content":"            handleDue(tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"ZhouJunmin"},"content":"        case FIND:","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"ZhouJunmin"},"content":"            handleFind(tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"ZhouJunmin"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"ZhouJunmin"},"content":"            handleError();","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle the invalid command error by displaying the error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleError() {","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showErrorInvalidCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":154,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle the BYE command by displaying exit message.","lastModifiedDate":"2024-03-04"},{"lineNumber":155,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleBye() {","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showBye();","lastModifiedDate":"2024-03-01"},{"lineNumber":158,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":160,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle LIST command by listing all tasks within the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleList(TaskList tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":166,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showTasks(tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":167,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle MARK command by marking the specified task in the task list","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"ZhouJunmin"},"content":"     * as done or not done depending on the input.","lastModifiedDate":"2024-03-04"},{"lineNumber":172,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":173,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":174,"author":{"gitId":"ZhouJunmin"},"content":"     * @param storage A storage object to read and write to specific file.","lastModifiedDate":"2024-03-04"},{"lineNumber":175,"author":{"gitId":"ZhouJunmin"},"content":"     * @param isDone True for marking as done, otherwise marking as not done.","lastModifiedDate":"2024-03-04"},{"lineNumber":176,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleMark(TaskList tasks, Storage storage, boolean isDone)","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"ZhouJunmin"},"content":"            throws KyreneTaskNotFoundException {","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"ZhouJunmin"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneTaskNotFoundException();","lastModifiedDate":"2024-02-27"},{"lineNumber":181,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":182,"author":{"gitId":"ZhouJunmin"},"content":"        tasks.get(taskNumber - 1).setDone(isDone);","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":184,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":185,"author":{"gitId":"ZhouJunmin"},"content":"            storage.write(tasks);","lastModifiedDate":"2024-02-27"},{"lineNumber":186,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":187,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorWriteToFileFailed();","lastModifiedDate":"2024-03-01"},{"lineNumber":188,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":189,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":190,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showSuccessMarkingTask(taskNumber, isDone);","lastModifiedDate":"2024-03-01"},{"lineNumber":191,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":192,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":193,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":194,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle ADD command by adding the input task into the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":195,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":196,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":197,"author":{"gitId":"ZhouJunmin"},"content":"     * @param storage A storage object to read and write to specific file.","lastModifiedDate":"2024-03-04"},{"lineNumber":198,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":199,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleAdd(TaskList tasks, Storage storage)","lastModifiedDate":"2024-03-04"},{"lineNumber":200,"author":{"gitId":"ZhouJunmin"},"content":"            throws KyreneInvalidCommandException, KyreneMissingTaskException {","lastModifiedDate":"2024-03-04"},{"lineNumber":201,"author":{"gitId":"ZhouJunmin"},"content":"        String taskType \u003d Parser.parseTaskType(description);","lastModifiedDate":"2024-03-04"},{"lineNumber":202,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":203,"author":{"gitId":"ZhouJunmin"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-04"},{"lineNumber":204,"author":{"gitId":"ZhouJunmin"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-27"},{"lineNumber":205,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":206,"author":{"gitId":"ZhouJunmin"},"content":"                tasks.add(new Todo(description.substring(\"todo \".length())));","lastModifiedDate":"2024-03-01"},{"lineNumber":207,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":208,"author":{"gitId":"ZhouJunmin"},"content":"                throw new KyreneMissingTaskException();","lastModifiedDate":"2024-02-27"},{"lineNumber":209,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":210,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":211,"author":{"gitId":"ZhouJunmin"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-27"},{"lineNumber":212,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":213,"author":{"gitId":"ZhouJunmin"},"content":"                tasks.add(new Deadline(description.substring(\"deadline \".length())));","lastModifiedDate":"2024-03-01"},{"lineNumber":214,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":215,"author":{"gitId":"ZhouJunmin"},"content":"                throw new KyreneMissingTaskException();","lastModifiedDate":"2024-02-27"},{"lineNumber":216,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneMissingTimeException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":217,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorMissingTime();","lastModifiedDate":"2024-03-01"},{"lineNumber":218,"author":{"gitId":"ZhouJunmin"},"content":"                return;","lastModifiedDate":"2024-02-27"},{"lineNumber":219,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":220,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":221,"author":{"gitId":"ZhouJunmin"},"content":"        case \"event\":","lastModifiedDate":"2024-02-27"},{"lineNumber":222,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":223,"author":{"gitId":"ZhouJunmin"},"content":"                tasks.add(new Event(description.substring(\"event \".length())));","lastModifiedDate":"2024-03-01"},{"lineNumber":224,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":225,"author":{"gitId":"ZhouJunmin"},"content":"                throw new KyreneMissingTaskException();","lastModifiedDate":"2024-02-27"},{"lineNumber":226,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneMissingTimeException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":227,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorMissingTime();","lastModifiedDate":"2024-03-01"},{"lineNumber":228,"author":{"gitId":"ZhouJunmin"},"content":"                return;","lastModifiedDate":"2024-02-27"},{"lineNumber":229,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":230,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":231,"author":{"gitId":"ZhouJunmin"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":232,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneInvalidCommandException();","lastModifiedDate":"2024-02-27"},{"lineNumber":233,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":234,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":235,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":236,"author":{"gitId":"ZhouJunmin"},"content":"            storage.write(tasks);","lastModifiedDate":"2024-02-27"},{"lineNumber":237,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":238,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorWriteToFileFailed();","lastModifiedDate":"2024-03-01"},{"lineNumber":239,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":240,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":241,"author":{"gitId":"ZhouJunmin"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-27"},{"lineNumber":242,"author":{"gitId":"ZhouJunmin"},"content":"        String taskAdded \u003d tasks.get(taskCount - 1).toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":243,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showSuccessAddingTask(taskAdded, taskCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":244,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":245,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":246,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":247,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle DELETE command by deleting the specified task in the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":248,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":249,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":250,"author":{"gitId":"ZhouJunmin"},"content":"     * @param storage A storage object to read and write to specific file.","lastModifiedDate":"2024-03-04"},{"lineNumber":251,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":252,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleDelete(TaskList tasks, Storage storage)","lastModifiedDate":"2024-03-04"},{"lineNumber":253,"author":{"gitId":"ZhouJunmin"},"content":"            throws KyreneTaskNotFoundException {","lastModifiedDate":"2024-03-04"},{"lineNumber":254,"author":{"gitId":"ZhouJunmin"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":255,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneTaskNotFoundException();","lastModifiedDate":"2024-02-27"},{"lineNumber":256,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":257,"author":{"gitId":"ZhouJunmin"},"content":"        String taskDeleted \u003d tasks.get(taskNumber - 1).toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":258,"author":{"gitId":"ZhouJunmin"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2024-02-27"},{"lineNumber":259,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":260,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":261,"author":{"gitId":"ZhouJunmin"},"content":"            storage.write(tasks);","lastModifiedDate":"2024-02-27"},{"lineNumber":262,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":263,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorWriteToFileFailed();","lastModifiedDate":"2024-03-01"},{"lineNumber":264,"author":{"gitId":"ZhouJunmin"},"content":"        } finally {","lastModifiedDate":"2024-02-27"},{"lineNumber":265,"author":{"gitId":"ZhouJunmin"},"content":"            int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-27"},{"lineNumber":266,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showSuccessDeletingTask(taskDeleted, taskCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":267,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":268,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":269,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":270,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":271,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle AT command by searching and listing out all events in the task list","lastModifiedDate":"2024-03-04"},{"lineNumber":272,"author":{"gitId":"ZhouJunmin"},"content":"     * that happen at the specified time.","lastModifiedDate":"2024-03-04"},{"lineNumber":273,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":274,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":275,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":276,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleAT(TaskList tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":277,"author":{"gitId":"ZhouJunmin"},"content":"        LocalDate date \u003d Parser.parseDate(description);","lastModifiedDate":"2024-03-01"},{"lineNumber":278,"author":{"gitId":"ZhouJunmin"},"content":"        TaskList events \u003d new TaskList();","lastModifiedDate":"2024-03-01"},{"lineNumber":279,"author":{"gitId":"ZhouJunmin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":280,"author":{"gitId":"ZhouJunmin"},"content":"            if (task.getTaskType().equals(\"E\") \u0026\u0026 ((Event) task).isAt(date)){","lastModifiedDate":"2024-03-01"},{"lineNumber":281,"author":{"gitId":"ZhouJunmin"},"content":"                events.add(task);","lastModifiedDate":"2024-03-01"},{"lineNumber":282,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":283,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":284,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showEvents(events);","lastModifiedDate":"2024-03-01"},{"lineNumber":285,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":286,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":287,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":288,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle DUE command by searching and listing out all deadlines in the task list","lastModifiedDate":"2024-03-04"},{"lineNumber":289,"author":{"gitId":"ZhouJunmin"},"content":"     * that due before the specified time.","lastModifiedDate":"2024-03-04"},{"lineNumber":290,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":291,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":292,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":293,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleDue(TaskList tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":294,"author":{"gitId":"ZhouJunmin"},"content":"        LocalDateTime time \u003d Parser.parseTime(description);","lastModifiedDate":"2024-03-01"},{"lineNumber":295,"author":{"gitId":"ZhouJunmin"},"content":"        TaskList deadlines \u003d new TaskList();","lastModifiedDate":"2024-03-01"},{"lineNumber":296,"author":{"gitId":"ZhouJunmin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":297,"author":{"gitId":"ZhouJunmin"},"content":"            if (task.getTaskType().equals(\"D\") \u0026\u0026 ((Deadline) task).isBefore(time)){","lastModifiedDate":"2024-03-01"},{"lineNumber":298,"author":{"gitId":"ZhouJunmin"},"content":"                deadlines.add(task);","lastModifiedDate":"2024-03-01"},{"lineNumber":299,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":300,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":301,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showDeadlines(deadlines);","lastModifiedDate":"2024-03-01"},{"lineNumber":302,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":303,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":304,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":305,"author":{"gitId":"ZhouJunmin"},"content":"     * Handle FIND command by searching and listing out all tasks in the task list","lastModifiedDate":"2024-03-04"},{"lineNumber":306,"author":{"gitId":"ZhouJunmin"},"content":"     * that match with the key word.","lastModifiedDate":"2024-03-04"},{"lineNumber":307,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":308,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":309,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":310,"author":{"gitId":"ZhouJunmin"},"content":"    private void handleFind(TaskList tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":311,"author":{"gitId":"ZhouJunmin"},"content":"        TaskList matches \u003d new TaskList();","lastModifiedDate":"2024-03-01"},{"lineNumber":312,"author":{"gitId":"ZhouJunmin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":313,"author":{"gitId":"ZhouJunmin"},"content":"            if (task.getTaskName().contains(description)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":314,"author":{"gitId":"ZhouJunmin"},"content":"                matches.add(task);","lastModifiedDate":"2024-03-01"},{"lineNumber":315,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":316,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":317,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showMatches(matches);","lastModifiedDate":"2024-03-01"},{"lineNumber":318,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":319,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":320,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ZhouJunmin":320}},{"path":"src/main/java/kyrene/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.command;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":" * Represents a collection of all possible kinds of commands.","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"public enum Commands {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"    BYE, LIST, ADD, DELETE, MARK, UNMARK, AT, DUE, FIND, INVALID,","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ZhouJunmin":8}},{"path":"src/main/java/kyrene/exception/KyreneInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"public class KyreneInvalidCommandException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ZhouJunmin":4}},{"path":"src/main/java/kyrene/exception/KyreneMissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"public class KyreneMissingTaskException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ZhouJunmin":4}},{"path":"src/main/java/kyrene/exception/KyreneMissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"public class KyreneMissingTimeException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ZhouJunmin":4}},{"path":"src/main/java/kyrene/exception/KyreneTaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"public class KyreneTaskNotFoundException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ZhouJunmin":5}},{"path":"src/main/java/kyrene/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.command.Command;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.command.Commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.ui.Ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":" * For example, converting user input strings to command-type objects, or to dates and times.","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"public class Parser {","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns Command-type object converted from the input string.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"     * If the command is invalid, then throws exceptions to indicate that the input is invalid.","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence single line string to be parsed.","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"     * @return Command-type object.","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws NumberFormatException If letters from the string cannot be converted to integers.","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws ArrayIndexOutOfBoundsException If the string is an invalid command that only contains one or zero word.","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws StringIndexOutOfBoundsException If the string is an invalid command.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"     * that only contains the command word but no descriptions.","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"    public static Command parse(String sentence) throws NumberFormatException, ArrayIndexOutOfBoundsException, StringIndexOutOfBoundsException {","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"        String[] commands \u003d sentence.split(\" \");","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"        String command \u003d commands[0].toLowerCase();","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"        int taskNumber;","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"        switch (command) {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.BYE);","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"        case \"list\":","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.LIST);","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"            taskNumber \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.MARK, taskNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"            taskNumber \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.UNMARK, taskNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"            taskNumber \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.DELETE, taskNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"        case \"at\":","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.AT, sentence.substring(\"at \".length()));","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"        case \"due\":","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.DUE, sentence.substring(\"due \".length()));","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"        case \"find\":","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.FIND, commands[1]);","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"            return new Command(Commands.ADD, sentence);","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a word indicating the type of the task from the input string.","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence single line string to be parsed.","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"     * @return String indicating the type of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"    public static String parseTaskType(String sentence) {","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"        String[] words \u003d sentence.split(\" \");","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"        return words[0];","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a date from the input string.","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string is not formatted properly, it requires another input of correct format.","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence single line string to be parsed.","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A date.","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"    public static LocalDate parseDate(String sentence) {","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"            date \u003d LocalDate.parse(sentence, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorInvalidDateFormat();","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"            sentence \u003d Ui.readCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"            return parseDate(sentence);","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"        return date;","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a date with time from the input string.","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string is not formatted properly, it tries to parse with date only.","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence single line string to be parsed.","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A date with time.","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"    public static LocalDateTime parseTime(String sentence) {","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"ZhouJunmin"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"ZhouJunmin"},"content":"            time \u003d LocalDateTime.parse(sentence, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"ZhouJunmin"},"content":"            return parseTimeWithoutTime(sentence);","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"ZhouJunmin"},"content":"        return time;","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a date with appended time of 2359 from the input string that only contains date information.","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string is not formatted properly, it tries to parse with time only.","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence single line string to be parsed that only contains date information.","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A date with time.","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"ZhouJunmin"},"content":"    private static LocalDateTime parseTimeWithoutTime(String sentence) {","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"ZhouJunmin"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"ZhouJunmin"},"content":"            time \u003d LocalDateTime.parse(sentence + \" 2359\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":119,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"ZhouJunmin"},"content":"            return parseTimeWithoutDate(sentence);","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"ZhouJunmin"},"content":"        return time;","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns today\u0027s date with time from the input string that only contains time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string is not formatted properly, it requires another input of correct format.","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":129,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence single line string to be parsed that only contains time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A date with time.","lastModifiedDate":"2024-03-04"},{"lineNumber":131,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"ZhouJunmin"},"content":"    private static LocalDateTime parseTimeWithoutDate(String sentence) {","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"ZhouJunmin"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-03-01"},{"lineNumber":134,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"ZhouJunmin"},"content":"            String today \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"ZhouJunmin"},"content":"            time \u003d LocalDateTime.parse(today + \" \" + sentence, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorInvalidTimeFormat();","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"ZhouJunmin"},"content":"            sentence \u003d Ui.readCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"ZhouJunmin"},"content":"            return parseTime(sentence);","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"ZhouJunmin"},"content":"        return time;","lastModifiedDate":"2024-03-01"},{"lineNumber":143,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ZhouJunmin":145}},{"path":"src/main/java/kyrene/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneInvalidCommandException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTaskException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTimeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.taskList.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.ui.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":"import java.io.File;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":" * Represents a storage object that is used to read from and write to the file provided specific file path.","lastModifiedDate":"2024-03-04"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"public class Storage {","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"    private String filePath;","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"    private String folderPath;","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"    public Storage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"        this(null, null);","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a storage object with file path and folder path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"     * @param filePath String represents the path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"     * @param folderPath String represents the path of the folder that stores the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"    public Storage(String filePath, String folderPath) {","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"        setFilePath(filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"        setFolderPath(folderPath);","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"     * Set the file path of the target file with the input string.","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"     * @param filePath String represents the path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"    public void setFilePath(String filePath) {","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"     * Set the folder path of folder that store the target file with the input string.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"     * @param folderPath String represents the path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"    public void setFolderPath(String folderPath) {","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns the string representing the file path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"     * @return The path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"    public String getFilePath() {","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"        return filePath;","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns the string representing the path of the folder that stores the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"     * @return The path of the folder that stores the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"    public String getFolderPath() {","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"        return folderPath;","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"     * Write the entire task list to the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws IOException If an error relating to file access occurs.","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"    public void write(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"        FileWriter clearWriter \u003d new FileWriter(getFilePath());","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"        clearWriter.write(\"\");","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"        clearWriter.close();","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"        FileWriter fw \u003d new FileWriter(getFilePath(), true);","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"            fw.write(task.format());","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"        fw.close();","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ZhouJunmin"},"content":"     * Read the existing task list from the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A task list containing all existing tasks loaded from the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws FileNotFoundException If the target file is not found by the given file path.","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"ZhouJunmin"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showLoadingFile(getFilePath());","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"ZhouJunmin"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"ZhouJunmin"},"content":"        File f \u003d new File(getFilePath());","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"ZhouJunmin"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"ZhouJunmin"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"ZhouJunmin"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"ZhouJunmin"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"ZhouJunmin"},"content":"            boolean isDone \u003d line.startsWith(\"true\");","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"ZhouJunmin"},"content":"            String task;","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"ZhouJunmin"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"ZhouJunmin"},"content":"                task \u003d line.substring(\"true \".length());","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"ZhouJunmin"},"content":"            } else {","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"ZhouJunmin"},"content":"                task \u003d line.substring(\"false \".length());","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"ZhouJunmin"},"content":"                loadTask(task, isDone, tasks);","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneMissingTaskException | KyreneInvalidCommandException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorFileCorrupted(lineNumber);","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"ZhouJunmin"},"content":"            lineNumber ++;","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showSuccessLoadingFile(getFilePath());","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"ZhouJunmin"},"content":"        return tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"ZhouJunmin"},"content":"     * Create file under the given file path,","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"ZhouJunmin"},"content":"     * and create folder if folder under the given folder path does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"ZhouJunmin"},"content":"    public void createFile() {","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showErrorFileNotFound(getFilePath());","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"ZhouJunmin"},"content":"        Path folderPath \u003d Paths.get(getFolderPath());","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"ZhouJunmin"},"content":"        Path filePath \u003d Paths.get(getFilePath());","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"ZhouJunmin"},"content":"        if (Files.exists(folderPath)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"ZhouJunmin"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorCreatingFileFailed();","lastModifiedDate":"2024-03-01"},{"lineNumber":144,"author":{"gitId":"ZhouJunmin"},"content":"                return;","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"ZhouJunmin"},"content":"        } else {","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorFolderNotFound(getFolderPath());","lastModifiedDate":"2024-03-01"},{"lineNumber":148,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"ZhouJunmin"},"content":"                Files.createDirectory(folderPath);","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"ZhouJunmin"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorCreatingFolderFailed();","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"ZhouJunmin"},"content":"                return;","lastModifiedDate":"2024-02-27"},{"lineNumber":154,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showSuccessCreatingFolder(getFolderPath());","lastModifiedDate":"2024-03-01"},{"lineNumber":156,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"ZhouJunmin"},"content":"        Ui.showSuccessCreatingFile(getFilePath());","lastModifiedDate":"2024-03-01"},{"lineNumber":158,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":160,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"ZhouJunmin"},"content":"     * Load a single task into the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"ZhouJunmin"},"content":"     * @param sentence String containing all information of the task being loaded.","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"ZhouJunmin"},"content":"     * @param isDone Indicates the done status of the task. True for done, otherwise not done.","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":166,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws KyreneInvalidCommandException If the file has been corrupted.","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws KyreneMissingTaskException If the file has been corrupted.","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"ZhouJunmin"},"content":"    public void loadTask(String sentence, boolean isDone, TaskList tasks) throws KyreneInvalidCommandException, KyreneMissingTaskException {","lastModifiedDate":"2024-03-01"},{"lineNumber":170,"author":{"gitId":"ZhouJunmin"},"content":"        String[] words \u003d sentence.split(\" \");","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"ZhouJunmin"},"content":"        String classType \u003d words[0];","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"ZhouJunmin"},"content":"        switch (classType) {","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"ZhouJunmin"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"ZhouJunmin"},"content":"                tasks.add(new Todo(sentence.substring(5)));","lastModifiedDate":"2024-02-27"},{"lineNumber":177,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"ZhouJunmin"},"content":"                throw new KyreneMissingTaskException();","lastModifiedDate":"2024-02-27"},{"lineNumber":179,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":181,"author":{"gitId":"ZhouJunmin"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-27"},{"lineNumber":182,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":183,"author":{"gitId":"ZhouJunmin"},"content":"                tasks.add(new Deadline(sentence.substring(9)));","lastModifiedDate":"2024-02-27"},{"lineNumber":184,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":185,"author":{"gitId":"ZhouJunmin"},"content":"                throw new KyreneMissingTaskException();","lastModifiedDate":"2024-02-27"},{"lineNumber":186,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneMissingTimeException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":187,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorMissingTime();","lastModifiedDate":"2024-03-01"},{"lineNumber":188,"author":{"gitId":"ZhouJunmin"},"content":"                return;","lastModifiedDate":"2024-02-27"},{"lineNumber":189,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":190,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":191,"author":{"gitId":"ZhouJunmin"},"content":"        case \"event\":","lastModifiedDate":"2024-02-27"},{"lineNumber":192,"author":{"gitId":"ZhouJunmin"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":193,"author":{"gitId":"ZhouJunmin"},"content":"                tasks.add(new Event(sentence.substring(6)));","lastModifiedDate":"2024-02-27"},{"lineNumber":194,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":195,"author":{"gitId":"ZhouJunmin"},"content":"                throw new KyreneMissingTaskException();","lastModifiedDate":"2024-02-27"},{"lineNumber":196,"author":{"gitId":"ZhouJunmin"},"content":"            } catch (KyreneMissingTimeException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":197,"author":{"gitId":"ZhouJunmin"},"content":"                Ui.showErrorMissingTime();","lastModifiedDate":"2024-03-01"},{"lineNumber":198,"author":{"gitId":"ZhouJunmin"},"content":"                return;","lastModifiedDate":"2024-02-27"},{"lineNumber":199,"author":{"gitId":"ZhouJunmin"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":200,"author":{"gitId":"ZhouJunmin"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":201,"author":{"gitId":"ZhouJunmin"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":202,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneInvalidCommandException();","lastModifiedDate":"2024-02-27"},{"lineNumber":203,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":204,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":205,"author":{"gitId":"ZhouJunmin"},"content":"        tasks.get(tasks.size() - 1).setDone(isDone);","lastModifiedDate":"2024-02-27"},{"lineNumber":206,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":207,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":208,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ZhouJunmin":208}},{"path":"src/main/java/kyrene/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.ui.Ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":" * Represents a deadline task that contains task type as \"D\", task name,","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":" * done status, and a specific deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"    protected static DateTimeFormatter formatterInput \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"    protected static DateTimeFormatter formatterOutput \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"    public Deadline() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"        super(null);","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a deadline task with a string that contains task name and deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"     * If deadline information is missing, then throws KyreneMissingTimeException.","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"     * @param line String that contains task name and deadline.","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws KyreneMissingTimeException If deadline information is missing.","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"    public Deadline(String line) throws KyreneMissingTimeException {","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"        super(line);","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"        taskType \u003d \"D\";","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"        int dividerIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"        if(dividerIndex \u003d\u003d -1){","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneMissingTimeException();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"        String deadline \u003d line.substring(dividerIndex + \"/by \".length());","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"        setDeadline(deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"        taskName \u003d line.substring(0, dividerIndex - \" \".length());","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing deadline date and time of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"     * @return String representing deadline date and time.","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"        return deadline.format(formatterOutput);","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"     * Set deadline date and time for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it tries to set deadline with date only.","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"     * @param deadline String that contains date and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"            setDeadlineWithoutTime(deadline);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"     * Set deadline date and time of 2359 for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it tries to set deadline with time only.","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"     * @param deadline String that contains date information.","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"    private void setDeadlineWithoutTime(String deadline) {","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline + \" 2359\", formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"            setDeadlineWithoutDate(deadline);","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"     * Set deadline as today\u0027s date and time for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it requires another input of correct format.","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"     * @param deadline String that contains date and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"    private void setDeadlineWithoutDate(String deadline) {","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"            String today \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"            this.deadline \u003d LocalDateTime.parse(today + \" \" + deadline, formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorInvalidDdlTimeFormat();","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"            deadline \u003d Ui.readCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"            setDeadline(deadline);","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns true if input time is before deadline, otherwise returns false.","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"ZhouJunmin"},"content":"     * @param time String that contains date and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"ZhouJunmin"},"content":"     * @return True if input time is before deadline, otherwise false.","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"ZhouJunmin"},"content":"    public boolean isBefore(LocalDateTime time) {","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"ZhouJunmin"},"content":"        if (deadline.isAfter(time)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"ZhouJunmin"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"ZhouJunmin"},"content":"        return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the deadline task that is used for output purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":114,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"ZhouJunmin"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"ZhouJunmin"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"ZhouJunmin"},"content":"        return String.format(\"[%s][%s] %s (by %s)\", taskType, doneSymbol, taskName, getDeadline());","lastModifiedDate":"2024-03-01"},{"lineNumber":120,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":123,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the deadline task that is used for storage purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":125,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"ZhouJunmin"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"ZhouJunmin"},"content":"    public String format() { return String.format(\"%b deadline %s /by %s\\n\", isDone, taskName, deadline.format(formatterInput));}","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ZhouJunmin":130}},{"path":"src/main/java/kyrene/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.ui.Ui;","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":" * Represents an event task that contains task type as \"E\", task name,","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":" * done status, and a specific start time and end time.","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"public class Event extends Task{","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"    protected static DateTimeFormatter formatterInput \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"    protected static DateTimeFormatter formatterOutput \u003d DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\");","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"    public Event() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"        super(null);","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct an event task with a string that contains task name and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"     * If time information is missing, then throws KyreneMissingTimeException.","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"     * @param line String that contains task name and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"     * @throws KyreneMissingTimeException If start time or end time information is missing.","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"    public Event(String line) throws KyreneMissingTimeException {","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"        super(line);","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"        taskType \u003d \"E\";","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"        int startDividerIndex \u003d line.indexOf(\"/from\");","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"        if(startDividerIndex \u003d\u003d -1){","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneMissingTimeException();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"        int endDividerIndex \u003d line.indexOf(\"/to\");","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"        if(endDividerIndex \u003d\u003d startDividerIndex){","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"            throw new KyreneMissingTimeException();","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"        String startTime \u003d line.substring(startDividerIndex + \"/from \".length(), endDividerIndex - \" \".length());","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"        String endTime \u003d line.substring(endDividerIndex + \"/to \".length());","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"        String taskName \u003d line.substring(0, startDividerIndex - \" \".length());","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"        setStartTime(startTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"        setEndTime(endTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing start date and time of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"     * @return String representing start date and time.","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"        return startTime.format(formatterOutput);","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing end date and time of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"     * @return String representing end date and time.","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"        return endTime.format(formatterOutput);","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"     * Set start date and time for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it tries to set start time with date only.","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"     * @param startTime String that contains date and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"            this.startTime \u003d LocalDateTime.parse(startTime, formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"            setStartTimeWithoutTime(startTime);","lastModifiedDate":"2024-03-01"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"     * Set start date and time of 0000 for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it tries to set start time with time only.","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"     * @param startTime String that contains date information.","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"    private void setStartTimeWithoutTime(String startTime) {","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"            this.startTime \u003d LocalDateTime.parse(startTime + \" 0000\", formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"            setStartTimeWithoutDate(startTime);","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"     * Set start date as today\u0027s date and time for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it requires another input of correct format.","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhouJunmin"},"content":"     * @param startTime String that contains time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"ZhouJunmin"},"content":"    private void setStartTimeWithoutDate(String startTime) {","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"ZhouJunmin"},"content":"            String today \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":106,"author":{"gitId":"ZhouJunmin"},"content":"            this.startTime \u003d LocalDateTime.parse(today + \" \" + startTime, formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorInvalidEventStartTimeFormat();","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"ZhouJunmin"},"content":"            startTime \u003d Ui.readCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"ZhouJunmin"},"content":"            setStartTime(startTime);","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":115,"author":{"gitId":"ZhouJunmin"},"content":"     * Set end date and time for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":116,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it tries to set end time with date only.","lastModifiedDate":"2024-03-04"},{"lineNumber":117,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":118,"author":{"gitId":"ZhouJunmin"},"content":"     * @param endTime String that contains date and time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"ZhouJunmin"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":122,"author":{"gitId":"ZhouJunmin"},"content":"            this.endTime \u003d LocalDateTime.parse(endTime, formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":123,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":124,"author":{"gitId":"ZhouJunmin"},"content":"            setEndTimeWithoutTime(endTime);","lastModifiedDate":"2024-03-01"},{"lineNumber":125,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":129,"author":{"gitId":"ZhouJunmin"},"content":"     * Set end date and time of 0000 for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":130,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it tries to set end time with time only.","lastModifiedDate":"2024-03-04"},{"lineNumber":131,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"ZhouJunmin"},"content":"     * @param endTime String that contains date information.","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"ZhouJunmin"},"content":"    private void setEndTimeWithoutTime(String endTime) {","lastModifiedDate":"2024-03-01"},{"lineNumber":135,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":136,"author":{"gitId":"ZhouJunmin"},"content":"            this.endTime \u003d LocalDateTime.parse(endTime + \" 2359\", formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":137,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":138,"author":{"gitId":"ZhouJunmin"},"content":"            setEndTimeWithoutDate(endTime);","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":140,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":141,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":142,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":143,"author":{"gitId":"ZhouJunmin"},"content":"     * Set end date as today\u0027s date and time for the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"ZhouJunmin"},"content":"     * If the string format is invalid, it requires another input of correct format.","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"ZhouJunmin"},"content":"     * @param endTime String that contains time information.","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"ZhouJunmin"},"content":"    private void setEndTimeWithoutDate(String endTime) {","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"ZhouJunmin"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":150,"author":{"gitId":"ZhouJunmin"},"content":"            String eventDay \u003d startTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-01"},{"lineNumber":151,"author":{"gitId":"ZhouJunmin"},"content":"            this.endTime \u003d LocalDateTime.parse(eventDay + \" \" + endTime, formatterInput);","lastModifiedDate":"2024-03-01"},{"lineNumber":152,"author":{"gitId":"ZhouJunmin"},"content":"        } catch (DateTimeParseException exc) {","lastModifiedDate":"2024-03-01"},{"lineNumber":153,"author":{"gitId":"ZhouJunmin"},"content":"            Ui.showErrorInvalidEventEndTimeFormat();","lastModifiedDate":"2024-03-01"},{"lineNumber":154,"author":{"gitId":"ZhouJunmin"},"content":"            endTime \u003d Ui.readCommand();","lastModifiedDate":"2024-03-01"},{"lineNumber":155,"author":{"gitId":"ZhouJunmin"},"content":"            setEndTime(endTime);","lastModifiedDate":"2024-03-01"},{"lineNumber":156,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":157,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":158,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":159,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns true if input date is within the event duration, otherwise returns false.","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"ZhouJunmin"},"content":"     * @param date String that contains date information.","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"ZhouJunmin"},"content":"     * @return True if input date is within the event duration, otherwise false.","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"ZhouJunmin"},"content":"    public boolean isAt(LocalDate date) {","lastModifiedDate":"2024-03-01"},{"lineNumber":166,"author":{"gitId":"ZhouJunmin"},"content":"        if (startTime.toLocalDate().isAfter(date) || endTime.toLocalDate().isBefore(date)) {","lastModifiedDate":"2024-03-01"},{"lineNumber":167,"author":{"gitId":"ZhouJunmin"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":168,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":169,"author":{"gitId":"ZhouJunmin"},"content":"        return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":170,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":173,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the event task that is used for output purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":174,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":175,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2024-03-04"},{"lineNumber":176,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"ZhouJunmin"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"ZhouJunmin"},"content":"    public String toString(){","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"ZhouJunmin"},"content":"        return String.format(\"[%s][%s] %s (from: %s to: %s)\", taskType, doneSymbol, taskName, getStartTime(), getEndTime());","lastModifiedDate":"2024-03-01"},{"lineNumber":180,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":183,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the event task that is used for storage purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":184,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":185,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"ZhouJunmin"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"ZhouJunmin"},"content":"    public String format() {","lastModifiedDate":"2024-03-04"},{"lineNumber":189,"author":{"gitId":"ZhouJunmin"},"content":"        String start \u003d startTime.format(formatterInput);","lastModifiedDate":"2024-03-04"},{"lineNumber":190,"author":{"gitId":"ZhouJunmin"},"content":"        String end \u003d endTime.format(formatterInput);","lastModifiedDate":"2024-03-04"},{"lineNumber":191,"author":{"gitId":"ZhouJunmin"},"content":"        return String.format(\"%b event %s /from %s /to %s\\n\", isDone, taskName, start, end);","lastModifiedDate":"2024-03-04"},{"lineNumber":192,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":193,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":194,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ZhouJunmin":194}},{"path":"src/main/java/kyrene/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":" * Represents a task that contains task type as null, task name,","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":" * and done status.","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":"    protected String taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"    protected String doneSymbol;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"    protected String taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":"    public Task() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":"        this(null);","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a to-do task with a string that contains task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskName String that contains task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"        if(taskName \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"            return;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"        setTaskName(taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"        setDone(false);","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"        taskType \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"     * @return String representing task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"        return taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns the done status of the task, true for done, otherwise not done.","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"     * @return Done status of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"        return isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing start date and time of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskName String representing the task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"    protected void setTaskName(String taskName) {","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"     * Set the done status of the task, true for done, otherwise not done.","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"     * @param isDone Done status of the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"        if(isDone){","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"            doneSymbol \u003d \"√\";","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"        else{","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"            doneSymbol \u003d \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns an upper-case character representing the task type.","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"     * @return Task type.","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"    public String getTaskType(){","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"        return taskType;","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the task that is used for output purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"    public String toString(){","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"        return String.format(\"[%s][%s] %s\", taskType, doneSymbol, taskName);","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the task that is used for storage purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"    public String format() { return String.format(\"%b task %s\\n\", isDone, taskName);}","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ZhouJunmin":98}},{"path":"src/main/java/kyrene/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.exception.KyreneMissingTimeException;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":" * Represents an event task that contains task type as \"T\", task name,","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":" * and done status.","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"    public Todo() {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"        super(null);","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"     * Construct a to-do task with a string that contains task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskName String that contains task name.","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"        super(taskName);","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"        taskType \u003d \"T\";","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"     * Returns a string representing the to-do task that is used for storage purpose.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"     * @return A string representing the to-do task.","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"    public String format() { return String.format(\"%b todo %s\\n\", isDone, taskName);}","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"ZhouJunmin":33}},{"path":"src/main/java/kyrene/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.taskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.task.*;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":" * Represents a task type array list.","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ZhouJunmin":12}},{"path":"src/main/java/kyrene/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhouJunmin"},"content":"package kyrene.ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ZhouJunmin"},"content":"import kyrene.taskList.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ZhouJunmin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ZhouJunmin"},"content":"/**","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"ZhouJunmin"},"content":" * Contains all class level methods that deal with user input and system output.","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ZhouJunmin"},"content":" */","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"ZhouJunmin"},"content":"public class Ui {","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String LOGO \u003d \"    _   _  _    _  ____   ____  _   _  ____\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ZhouJunmin"},"content":"            + \"    | | / /\\\\ \\\\  / /|  _ \\\\ | ___|| \\\\ | || ___|\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ZhouJunmin"},"content":"            + \"    | |/ /  \\\\ \\\\/ / | |_| || \u003d\u003d\u003d||  \\\\| || \u003d\u003d\u003d|\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ZhouJunmin"},"content":"            + \"    | |\\\\ \\\\   |  |  | |\\\\ / | |__ | |\\\\  || |__\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ZhouJunmin"},"content":"            + \"    |_| \\\\_\\\\  |__|  |_| \\\\_\\\\|____||_| \\\\_||____|   by Zhou Junmin\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String DIVIDER \u003d \"    |\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d|\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String HELLO \u003d \"    Hi, I am Kyrene, your private reminder assistant.\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ZhouJunmin"},"content":"            + \"    What can I do for you?\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String BYE \u003d \"    Bye! Wish to see you again soon!\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_WRITE_TO_FILE_FAILED \u003d \"    Error! Write to file failed.\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_FOLDER_CREATION_FAILED \u003d \"    Error! Folder creation failed.\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_FILE_CREATION_FAILED \u003d \"    Error! File creation failed.\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_FILE_CORRUPTED \u003d \"    Error! File loaded is corrupted.\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_TASK_NOT_EXIST \u003d \"    Error! This task does not exist.\\n\";","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_MISSING_TASK \u003d \"    Error! Your task description is missing.\\n    For creating tasks, please type \\\"[task type (todo/deadline/event)] [task description]\\\"([] is to be omitted).\\n    For example:\\n        todo have a nice day\\n    or\\n        deadline get a cup of coffee /by 2024-02-29 0900\\n    or\\n        event celebrate birthday /from 2024-10-27 1700 /to 2359\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_MISSING_TIME \u003d \"    Error! Your deadline/event task created is incomplete in terms of time.\\n    For creating deadline task, please type \\\"deadline [task description] /by [time]\\\"([] is to be omitted).\\n    For example:\\n        deadline get a cup of coffee /by 2024-02-29 0900\\n    For creating event task, please type \\\"event [task description] /from [starting time] /to [ending time]\\\"([] is to be omitted).\\n    For example:\\n        event celebrate birthday /from 2023-10-27 1700 /to 2359\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_INVALID_COMMAND \u003d \"    Error! This command is invalid. Some available commands are ([] is to be omitted):\\n        list\\n        mark [task index]\\n        unmark [task index]\\n        delete [task index]\\n        [task type (todo/deadline/event)] [task description]\\n        due [due time] (to check which deadlines before the given time)\\n        at [date] (to check which events at the given date)\\n        find [keyword]\\n        bye\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_INVALID_DDL_TIME_FORMAT \u003d \"    Error! The format of input deadline date and time is invalid.\\n    Please re-enter the time of deadline as [Year-Month-Date HourMinute]([] is to be omitted).\\n    For example:\\n        2024-02-29 0900\\n        2024-02-29\\n        0900\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_INVALID_EVENT_START_TIME_FORMAT \u003d \"    Error! The format of input event start date and time is invalid.\\n    Please re-enter the start time of event as [Year-Month-Date HourMinute]([] is to be omitted).\\n    For example:\\n        2024-02-29 0900\\n        2024-02-29\\n        0900\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_INVALID_EVENT_END_TIME_FORMAT \u003d \"    Error! The format of input event end date and time is invalid.\\n    Please re-enter the end time of event as [Year-Month-Date HourMinute]([] is to be omitted).\\n    For example:\\n        2024-02-29 0900\\n        2024-02-29\\n        0900\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_INVALID_DATE_FORMAT \u003d \"    Error! The format of input date is invalid.\\n    Please re-enter the date as [Year-Month-Date]([] is to be omitted).\\n    For example:\\n        2024-02-29\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"ZhouJunmin"},"content":"    private final static String ERROR_INVALID_TIME_FORMAT \u003d \"    Error! The format of input time is invalid.\\n    Please re-enter the time as [Year-Month-Date HourMinute]([] is to be omitted).\\n    For example:\\n        2024-02-29 0900\\n        2024-02-29\\n        0900\\n\";","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"ZhouJunmin"},"content":"    public Ui() {}","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"ZhouJunmin"},"content":"     * Show a line of divider on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showDivider() {","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", DIVIDER);","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"ZhouJunmin"},"content":"     * Show welcome message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showHello() {","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", LOGO);","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", HELLO);","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"ZhouJunmin"},"content":"     * Show exit message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showBye() {","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", BYE);","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":62,"author":{"gitId":"ZhouJunmin"},"content":"     * Show task count message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":63,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":64,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskCount Integer represents the total number of tasks in the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":65,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":66,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showTaskCount(int taskCount) {","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"ZhouJunmin"},"content":"        if(taskCount \u003c 2){","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"    Now you have %d task(including finished ones) in your list.\\n\\n\", taskCount);","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"ZhouJunmin"},"content":"        else{","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"    Now you have %d tasks(including finished ones) in your list.\\n\\n\", taskCount);","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"ZhouJunmin"},"content":"     * Show number of matches under search commands on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"ZhouJunmin"},"content":"     * @param matchCount Integer represents the total number of matches in the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showMatchCount(int matchCount) {","lastModifiedDate":"2024-03-01"},{"lineNumber":81,"author":{"gitId":"ZhouJunmin"},"content":"        if(matchCount \u003c 2){","lastModifiedDate":"2024-03-01"},{"lineNumber":82,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"    You have %d matched task in your list.\\n\\n\", matchCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"ZhouJunmin"},"content":"        else{","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"    You have %d matched tasks in your list.\\n\\n\", matchCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":89,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to missing time information","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"ZhouJunmin"},"content":"     * when creating deadline or event.","lastModifiedDate":"2024-03-04"},{"lineNumber":92,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":93,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorMissingTime() {","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_MISSING_TIME);","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to failure writing to the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorWriteToFileFailed() {","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_WRITE_TO_FILE_FAILED);","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to accessing non-existing task index.","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskCount Integer represents the total number of tasks in the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorTaskNotExist(int taskCount) {","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\", ERROR_TASK_NOT_EXIST);","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"ZhouJunmin"},"content":"        showTaskCount(taskCount);","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":118,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to missing task description when creating task.","lastModifiedDate":"2024-03-04"},{"lineNumber":119,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorMissingTask() {","lastModifiedDate":"2024-03-01"},{"lineNumber":121,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_MISSING_TASK);","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":126,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to input command not being recognised.","lastModifiedDate":"2024-03-04"},{"lineNumber":127,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":128,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorInvalidCommand() {","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_INVALID_COMMAND);","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to the corrupted target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"ZhouJunmin"},"content":"     * @param lineNumber Integer indicating the line number of the corrupted line in the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorFileCorrupted(int lineNumber) {","lastModifiedDate":"2024-03-01"},{"lineNumber":139,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s    Error occurs at line %d.\\n\", ERROR_FILE_CORRUPTED, lineNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to non-existing file under the given file path.","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"ZhouJunmin"},"content":"     * @param filePath String representing the file path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorFileNotFound(String filePath) {","lastModifiedDate":"2024-03-01"},{"lineNumber":149,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    File %s is not found. Trying to create file...\\n\", filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to non-existing folder under the given folder path.","lastModifiedDate":"2024-03-04"},{"lineNumber":154,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":155,"author":{"gitId":"ZhouJunmin"},"content":"     * @param folderPath String representing the folder path of the folder that stores the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":157,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorFolderNotFound(String folderPath) {","lastModifiedDate":"2024-03-01"},{"lineNumber":158,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    Folder %s is not found. Trying to create folder...\\n\", folderPath);","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":160,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":161,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to failure creating the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":163,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorCreatingFileFailed() {","lastModifiedDate":"2024-03-01"},{"lineNumber":165,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_FILE_CREATION_FAILED);","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to failure creating the target folder.","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":172,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorCreatingFolderFailed() {","lastModifiedDate":"2024-03-01"},{"lineNumber":173,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_FOLDER_CREATION_FAILED);","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":177,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":178,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to the input date format being not recognised.","lastModifiedDate":"2024-03-04"},{"lineNumber":179,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":180,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorInvalidDateFormat() {","lastModifiedDate":"2024-03-01"},{"lineNumber":181,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":182,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":183,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":184,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":185,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to the input time format being not recognised.","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":188,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorInvalidTimeFormat() {","lastModifiedDate":"2024-03-01"},{"lineNumber":189,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_INVALID_TIME_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":190,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":191,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":192,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":193,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":194,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to the input deadline format being not recognised.","lastModifiedDate":"2024-03-04"},{"lineNumber":195,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":196,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorInvalidDdlTimeFormat() {","lastModifiedDate":"2024-03-01"},{"lineNumber":197,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_INVALID_DDL_TIME_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":198,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":199,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":200,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":201,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":202,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to the input event start time format being not recognised.","lastModifiedDate":"2024-03-04"},{"lineNumber":203,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":204,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorInvalidEventStartTimeFormat() {","lastModifiedDate":"2024-03-01"},{"lineNumber":205,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_INVALID_EVENT_START_TIME_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":206,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":207,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":208,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":209,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":210,"author":{"gitId":"ZhouJunmin"},"content":"     * Show error message on the screen, relating to the input event end time format being not recognised.","lastModifiedDate":"2024-03-04"},{"lineNumber":211,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":212,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showErrorInvalidEventEndTimeFormat() {","lastModifiedDate":"2024-03-01"},{"lineNumber":213,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"%s\\n\", ERROR_INVALID_EVENT_END_TIME_FORMAT);","lastModifiedDate":"2024-03-01"},{"lineNumber":214,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":215,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":216,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":217,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":218,"author":{"gitId":"ZhouJunmin"},"content":"     * Show success in task creation message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":219,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":220,"author":{"gitId":"ZhouJunmin"},"content":"     * @param task Task being added.","lastModifiedDate":"2024-03-04"},{"lineNumber":221,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskCount Integer representing the total number of tasks in the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":222,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":223,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showSuccessAddingTask(String task, int taskCount) {","lastModifiedDate":"2024-03-04"},{"lineNumber":224,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    Task has been successfully added: %s\\n\", task);","lastModifiedDate":"2024-03-04"},{"lineNumber":225,"author":{"gitId":"ZhouJunmin"},"content":"        showTaskCount(taskCount);","lastModifiedDate":"2024-02-27"},{"lineNumber":226,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":227,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":228,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":229,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":230,"author":{"gitId":"ZhouJunmin"},"content":"     * Show success in task deletion message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":231,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":232,"author":{"gitId":"ZhouJunmin"},"content":"     * @param task Task being deleted.","lastModifiedDate":"2024-03-04"},{"lineNumber":233,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskCount Integer representing the total number of tasks in the task list.","lastModifiedDate":"2024-03-04"},{"lineNumber":234,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":235,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showSuccessDeletingTask(String task, int taskCount) {","lastModifiedDate":"2024-03-04"},{"lineNumber":236,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    Sure! I have successfully deleted this task from your list:\\n        %s\\n\", task);","lastModifiedDate":"2024-03-04"},{"lineNumber":237,"author":{"gitId":"ZhouJunmin"},"content":"        showTaskCount(taskCount);","lastModifiedDate":"2024-02-27"},{"lineNumber":238,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":239,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":240,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":241,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":242,"author":{"gitId":"ZhouJunmin"},"content":"     * Show success in task marking message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":243,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":244,"author":{"gitId":"ZhouJunmin"},"content":"     * @param taskNumber Integer representing the index of the marked task.","lastModifiedDate":"2024-03-04"},{"lineNumber":245,"author":{"gitId":"ZhouJunmin"},"content":"     * @param isDone Done status of the marked task.","lastModifiedDate":"2024-03-04"},{"lineNumber":246,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":247,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showSuccessMarkingTask(int taskNumber, boolean isDone) {","lastModifiedDate":"2024-03-01"},{"lineNumber":248,"author":{"gitId":"ZhouJunmin"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":249,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"    Congrats! Task %d is done!\\n\\n\", taskNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":250,"author":{"gitId":"ZhouJunmin"},"content":"        } else {","lastModifiedDate":"2024-02-27"},{"lineNumber":251,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"    Task %d is marked as not done.\\n\\n\", taskNumber);","lastModifiedDate":"2024-02-27"},{"lineNumber":252,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":253,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":254,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":255,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":256,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":257,"author":{"gitId":"ZhouJunmin"},"content":"     * Show success in loading file message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":258,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":259,"author":{"gitId":"ZhouJunmin"},"content":"     * @param filePath String representing the file path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":260,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":261,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showSuccessLoadingFile(String filePath) {","lastModifiedDate":"2024-03-01"},{"lineNumber":262,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    File %s has been loaded.\\n\", filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":263,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":264,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":265,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":266,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":267,"author":{"gitId":"ZhouJunmin"},"content":"     * Show success in folder creation message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":268,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":269,"author":{"gitId":"ZhouJunmin"},"content":"     * @param folderPath String representing the folder path of the folder that stores the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":270,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":271,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showSuccessCreatingFolder(String folderPath) {","lastModifiedDate":"2024-03-01"},{"lineNumber":272,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    Folder %s is successfully created.\\n\", folderPath);","lastModifiedDate":"2024-02-27"},{"lineNumber":273,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":274,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":275,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":276,"author":{"gitId":"ZhouJunmin"},"content":"     * Show success in file creation message on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":277,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":278,"author":{"gitId":"ZhouJunmin"},"content":"     * @param filePath String representing the file path of the target file.","lastModifiedDate":"2024-03-04"},{"lineNumber":279,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":280,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showSuccessCreatingFile(String filePath) {","lastModifiedDate":"2024-03-01"},{"lineNumber":281,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    File %s is successfully created.\\n\", filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":282,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":283,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":284,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":285,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":286,"author":{"gitId":"ZhouJunmin"},"content":"     * List out all tasks and show the total number of tasks in the task list on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":287,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":288,"author":{"gitId":"ZhouJunmin"},"content":"     * @param tasks A task list containing all existing tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":289,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":290,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showTasks(TaskList tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":291,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.println(\"    Here is your to-do list of required tasks:\");","lastModifiedDate":"2024-03-01"},{"lineNumber":292,"author":{"gitId":"ZhouJunmin"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2024-02-27"},{"lineNumber":293,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"        %d.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2024-02-27"},{"lineNumber":294,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":295,"author":{"gitId":"ZhouJunmin"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2024-02-27"},{"lineNumber":296,"author":{"gitId":"ZhouJunmin"},"content":"        showTaskCount(taskCount);","lastModifiedDate":"2024-02-27"},{"lineNumber":297,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-02-27"},{"lineNumber":298,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":299,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":300,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":301,"author":{"gitId":"ZhouJunmin"},"content":"     * List out all matched events and show the total number of events in the event list on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":302,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":303,"author":{"gitId":"ZhouJunmin"},"content":"     * @param events An event list containing all matched events.","lastModifiedDate":"2024-03-04"},{"lineNumber":304,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":305,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showEvents(TaskList events) {","lastModifiedDate":"2024-03-01"},{"lineNumber":306,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.println(\"    Here is your event list that matches the given date:\");","lastModifiedDate":"2024-03-01"},{"lineNumber":307,"author":{"gitId":"ZhouJunmin"},"content":"        for(int i \u003d 0; i \u003c events.size(); i++){","lastModifiedDate":"2024-03-01"},{"lineNumber":308,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"        %d.%s\\n\", i + 1, events.get(i).toString());","lastModifiedDate":"2024-03-01"},{"lineNumber":309,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":310,"author":{"gitId":"ZhouJunmin"},"content":"        int matchCount \u003d events.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":311,"author":{"gitId":"ZhouJunmin"},"content":"        showMatchCount(matchCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":312,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":313,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":314,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":315,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":316,"author":{"gitId":"ZhouJunmin"},"content":"     * List out all matched deadlines and show the total number of deadlines in the deadline list on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":317,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":318,"author":{"gitId":"ZhouJunmin"},"content":"     * @param deadlines A deadline list containing all matched events.","lastModifiedDate":"2024-03-04"},{"lineNumber":319,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":320,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showDeadlines(TaskList deadlines) {","lastModifiedDate":"2024-03-01"},{"lineNumber":321,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.println(\"    Here is your deadline list before the given time:\");","lastModifiedDate":"2024-03-01"},{"lineNumber":322,"author":{"gitId":"ZhouJunmin"},"content":"        for(int i \u003d 0; i \u003c deadlines.size(); i++){","lastModifiedDate":"2024-03-01"},{"lineNumber":323,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"        %d.%s\\n\", i + 1, deadlines.get(i).toString());","lastModifiedDate":"2024-03-01"},{"lineNumber":324,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":325,"author":{"gitId":"ZhouJunmin"},"content":"        int matchCount \u003d deadlines.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":326,"author":{"gitId":"ZhouJunmin"},"content":"        showMatchCount(matchCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":327,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":328,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":329,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":330,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":331,"author":{"gitId":"ZhouJunmin"},"content":"     * List out all matched tasks and show the total number of matches in the task list on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":332,"author":{"gitId":"ZhouJunmin"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":333,"author":{"gitId":"ZhouJunmin"},"content":"     * @param matches A task list containing all matched events.","lastModifiedDate":"2024-03-04"},{"lineNumber":334,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":335,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showMatches(TaskList matches) {","lastModifiedDate":"2024-03-01"},{"lineNumber":336,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.println(\"    Here is your to-do list that matches the given keyword:\");","lastModifiedDate":"2024-03-01"},{"lineNumber":337,"author":{"gitId":"ZhouJunmin"},"content":"        for(int i \u003d 0; i \u003c matches.size(); i++){","lastModifiedDate":"2024-03-01"},{"lineNumber":338,"author":{"gitId":"ZhouJunmin"},"content":"            System.out.printf(\"        %d.%s\\n\", i + 1, matches.get(i).toString());","lastModifiedDate":"2024-03-01"},{"lineNumber":339,"author":{"gitId":"ZhouJunmin"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":340,"author":{"gitId":"ZhouJunmin"},"content":"        int matchCount \u003d matches.size();","lastModifiedDate":"2024-03-01"},{"lineNumber":341,"author":{"gitId":"ZhouJunmin"},"content":"        showMatchCount(matchCount);","lastModifiedDate":"2024-03-01"},{"lineNumber":342,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-01"},{"lineNumber":343,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":344,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":345,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":346,"author":{"gitId":"ZhouJunmin"},"content":"     * Show the status of loading file on the screen.","lastModifiedDate":"2024-03-04"},{"lineNumber":347,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":348,"author":{"gitId":"ZhouJunmin"},"content":"    public static void showLoadingFile(String filePath) {","lastModifiedDate":"2024-03-01"},{"lineNumber":349,"author":{"gitId":"ZhouJunmin"},"content":"        System.out.printf(\"    Loading file %s ...\\n\", filePath);","lastModifiedDate":"2024-02-27"},{"lineNumber":350,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":351,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":352,"author":{"gitId":"ZhouJunmin"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":353,"author":{"gitId":"ZhouJunmin"},"content":"     * Read a line of command from the user input.","lastModifiedDate":"2024-03-04"},{"lineNumber":354,"author":{"gitId":"ZhouJunmin"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":355,"author":{"gitId":"ZhouJunmin"},"content":"    public static String readCommand() {","lastModifiedDate":"2024-03-01"},{"lineNumber":356,"author":{"gitId":"ZhouJunmin"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-27"},{"lineNumber":357,"author":{"gitId":"ZhouJunmin"},"content":"        showDivider();","lastModifiedDate":"2024-03-04"},{"lineNumber":358,"author":{"gitId":"ZhouJunmin"},"content":"        return input.nextLine();","lastModifiedDate":"2024-02-27"},{"lineNumber":359,"author":{"gitId":"ZhouJunmin"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":360,"author":{"gitId":"ZhouJunmin"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":361,"author":{"gitId":"ZhouJunmin"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ZhouJunmin":361}}]
