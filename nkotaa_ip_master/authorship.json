[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"# Blue","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"Welcome to Blue: a chatbot that helps you manage your tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"3. After that, locate the `src/main/java/Blue.java` file, right-click it, and choose `Run Blue.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"   Greetings! I\u0027m Blue, a command line task assistant.","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":15,"nkotaa":4}},{"path":"src/main/java/Blue/Blue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":" * The Blue class constitutes the main logic of our chatbot application.","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":" * It takes a string from the standard input, parses it into a well-formed request and handles appropriately.","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":" *","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":" * @author nkotaa","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"public class Blue {","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Greetings! I\u0027m Blue, a command line task assistant.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Till we meet again.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    private static void run() {","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        new StorageHandler().restoreTasks();","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        Ui blueUi \u003d new Ui();","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"        blueUi.talk(WELCOME_MESSAGE);","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        for (Input userRequest \u003d blueUi.getRequest(); !userRequest.isExit();","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"                userRequest \u003d blueUi.getRequest()) {","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"            if (userRequest.isUndefined()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"                blueUi.warn(userRequest.getErrorMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"                continue;","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"            new TaskManager(userRequest).performRequest();","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"        blueUi.talk(GOODBYE_MESSAGE);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"     * The main method of our program","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        run();","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":36}},{"path":"src/main/java/Blue/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Represents a task that needs to be completed by a certain deadline.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"     * A constructor for new deadline object.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"     * @param description A description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"     * @param by When it needs to be completed by.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     * Returns the deadline of a Deadline task.","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"     * @return The deadline of a task in String format.","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"        return by;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    public String toSaveTextFormat() {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        String done \u003d (getStatusIcon().equals(\"X\") ? \"1\" : \"0\");","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        return \"D|\" + done + \"|\" + getDescription() + \"|\" + by + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"        return super.toString() + \" by: \" + by;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":39}},{"path":"src/main/java/Blue/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Represents an event that occurs within a certain time.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Event extends Deadline {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"     * A constructor for new Event object.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"     * @param description A description of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"     * @param from The start of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     * @param to The end of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        super(description, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    public String toSaveTextFormat() {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"        String done \u003d (getStatusIcon().equals(\"X\") ? \"1\" : \"0\");","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        return \"E|\" + done + \"|\" + this.getDescription() + \"|\" + this.getBy() + \"|\" + from + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        return this.getDescription() + \" from \" + from + \" to \" + this.getBy();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":31}},{"path":"src/main/java/Blue/IllegalInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class IllegalInput extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private static final String WARNING_MESSAGE \u003d \"I\u0027m sorry. I\u0027m afraid I can\u0027t do that.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    private InputCommand type;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    IllegalInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"        this(InputCommand.undefined);","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    IllegalInput(InputCommand type) {","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        switch (type) {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        case mark:","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"            return \"Please specify a task index\";","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"            return WARNING_MESSAGE;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":23}},{"path":"src/main/java/Blue/Input.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Defines an encapsulation of commands and command arguments well understood by Blue.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Input {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private InputCommand command;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    private String taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    private String errorMessage;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     * Class level constructor for ill-defined inputs.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"     * @param errorMessage Error message pertaining to how input is ill-defined.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    public Input(String errorMessage) {","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        command \u003d InputCommand.undefined;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     * Class level constructor for well-defined inputs.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"     * @param taskIndex Task index of task to handle.","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"     * @param taskToAdd Task to add.","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"     * @param taskQuery String query for task.","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"    public Input(InputCommand command, int taskIndex, Task taskToAdd, String taskQuery) {","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"        this.taskQuery \u003d taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"     * Class level getter of command.","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"     * @return command.","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"    public InputCommand getCommand() {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"        return command;","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"     * Class level getter of taskIndex.","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"     * @return taskIndex.","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"        return taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"     * Class level getter of taskToAdd.","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"     * @return taskToAdd.","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"    public Task getTaskToAdd() {","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"        return taskToAdd;","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"     * Class level getter of taskQuery.","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"     * @return taskQuery.","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"    public String getTaskQuery() {","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"        return taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"     * Class level getter of errorMessage.","lastModifiedDate":"2024-03-01"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"     * @return errorMessage.","lastModifiedDate":"2024-03-01"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"        return errorMessage;","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"     * Returns whether the input command is an exit request.","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"     * @return True if command is an enum bye, false otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"        return command \u003d\u003d InputCommand.bye;","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"     * Returns whether the input command is an ill-defined request.","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"     * @return True if command is an enum undefined, false otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"    public boolean isUndefined() {","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"        return command \u003d\u003d InputCommand.undefined;","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"nkotaa":100}},{"path":"src/main/java/Blue/InputCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Lists an enumeration of all acceptable input commands to Blue.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public enum InputCommand {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"   list, mark, delete, todo, find, ","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"        deadline, event, bye, undefined","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":9}},{"path":"src/main/java/Blue/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Encapsulates the logic and behaviour of a parser to Blue.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class InputParser {","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private Input parsedInput;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    public Input getParsedInput() {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"        return parsedInput;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     * Parses a well-formed input regardless of whether user input is well-formed.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    public void parse(String line) {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        InputCommand command \u003d InputCommand.undefined;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"            command \u003d parseRequest(line);","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"            int taskIndex \u003d parseIndex(line, command);","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"            Task taskToAdd \u003d parseTask(line, command);","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"            String taskQuery \u003d parseTaskQuery(line, command);","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"            parsedInput \u003d new Input(command, taskIndex, taskToAdd, taskQuery);","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"        } catch (IllegalInput e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.undefined;","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"            String errorMessage \u003d e.getMessage();","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"            parsedInput \u003d new Input(errorMessage);","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"     * Returns a request of type InputCommand understandable to Blue","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"     * @return An enum of InputCommand.","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalInput If parsed request does not match an enum of InputCommand.","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    private InputCommand parseRequest(String line) throws IllegalInput {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"        String parsedRequest \u003d line.trim().split(\" \")[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"        switch (parsedRequest) {","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"        case \"list\":","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.list;","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.mark;","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.delete;","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.todo;","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        case \"find\":","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.find;","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"        case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.event;","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.bye;","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalInput();","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"     * Returns the index of a task to handle, -1 if no task to handle.","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"     * @return Index of a task if command is appropriate, -1 otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalInput If parsed index is misformed i.e not an integer.","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"    private int parseIndex(String line, InputCommand command) throws IllegalInput {","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"        switch (command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"        case mark:","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"                int taskIndex \u003d Integer.parseInt(line.substring(4).trim()) - 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"                return taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"                throw new IllegalInput(InputCommand.mark);","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"        case delete:","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"                int taskIndex \u003d Integer.parseInt(line.substring(6).trim()) - 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"                return taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"                throw new IllegalInput(InputCommand.mark);","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"            return -1;","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"     * Returns a task with details provided by the user.","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"     * @return Task of appropriate type and details parsed from line.","lastModifiedDate":"2024-03-01"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalInput If task is misformed.","lastModifiedDate":"2024-03-01"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"nkotaa"},"content":"    private Task parseTask(String line, InputCommand command) throws IllegalInput {","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"nkotaa"},"content":"        String taskDescription;","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"nkotaa"},"content":"        String taskDeadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"nkotaa"},"content":"        String taskStart;","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"nkotaa"},"content":"        switch (command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"nkotaa"},"content":"        case todo:","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"nkotaa"},"content":"            taskDescription \u003d line.substring(4).trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"nkotaa"},"content":"            return new Task(taskDescription);","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"nkotaa"},"content":"        case deadline:","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"nkotaa"},"content":"            String[] TaskDetails \u003d line.substring(8).split(\"/by\");","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"nkotaa"},"content":"            taskDescription \u003d TaskDetails[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"nkotaa"},"content":"            taskDeadline \u003d TaskDetails[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"nkotaa"},"content":"            return new Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"nkotaa"},"content":"        case event:","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"nkotaa"},"content":"            String[] eventDetails \u003d line.substring(5).split(\"/from|/to\");","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"nkotaa"},"content":"            taskDescription \u003d eventDetails[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"nkotaa"},"content":"            taskStart \u003d eventDetails[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"nkotaa"},"content":"            taskDeadline \u003d eventDetails[2].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"nkotaa"},"content":"            return new Event(taskDescription, taskStart, taskDeadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"nkotaa"},"content":"            return new Task();","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":126,"author":{"gitId":"nkotaa"},"content":"     * Returns a string query to tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":127,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":128,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":129,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-01"},{"lineNumber":130,"author":{"gitId":"nkotaa"},"content":"     * @return A string matching the query parsed from line.","lastModifiedDate":"2024-03-01"},{"lineNumber":131,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":132,"author":{"gitId":"nkotaa"},"content":"    private String parseTaskQuery(String line, InputCommand command) {","lastModifiedDate":"2024-03-01"},{"lineNumber":133,"author":{"gitId":"nkotaa"},"content":"        String taskQuery \u003d \"\";","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"nkotaa"},"content":"        switch (command) {","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"nkotaa"},"content":"            case find:","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"nkotaa"},"content":"                taskQuery \u003d line.substring(4).trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"nkotaa"},"content":"                return taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"nkotaa"},"content":"            default:","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"nkotaa"},"content":"                return taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":142}},{"path":"src/main/java/Blue/StorageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"import java.io.File;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":" * The part of Blue that handles disk write and access.","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"public class StorageHandler {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    public static final String DATA_DIR_PATH \u003d \"data\";","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public static final String TASK_FILE_PATH \u003d DATA_DIR_PATH + \"/tasks.txt\";","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"     * Restores previously saved tasks from TASK_FILE_PATH if such a file exists, do nothing otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"     * Assumes text found in TASK_FILE_PATH is properly formatted.","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    public void restoreTasks() {","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"        File taskFile \u003d new File(TASK_FILE_PATH);","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"            Scanner s \u003d new Scanner(taskFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"            TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"                String[] savedTaskDetails \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"                Task savedTask \u003d restoreTask(savedTaskDetails);","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"                taskManager.addTask(savedTask, false);","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"            // No saved tasks found, start from scratch","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"     * Writes tasks in their text-parsable format to TASK_FILE_PATH.","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"     * @param tasks An array list of all tasks to save to disk.","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"     * @return True if tasks have been saved to TASK_FILE_PATH successfully, false otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"    public boolean hasSavedTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"        new File(DATA_DIR_PATH).mkdirs();","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"        File taskFile \u003d new File(TASK_FILE_PATH);","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"            return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        boolean isAppend \u003d false;","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"            try {","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"                writeTaskToFile(task, isAppend);","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"                return false;","lastModifiedDate":"2024-03-01"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"            isAppend \u003d true;","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"        return true;","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"    private Task restoreTask(String[] savedDetails) {","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"        Task restoredTask;","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"        switch (savedDetails[0]) {","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"        case \"T\":","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Task(savedDetails[2]);","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"        case \"D\":","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Deadline(savedDetails[2], savedDetails[3]);","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"        case \"E\":","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Event(savedDetails[2], savedDetails[4], savedDetails[3]);","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Task();","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"        if (savedDetails[1].equals(\"1\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"            restoredTask.setDone();","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"        return restoredTask;","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"    private void writeTaskToFile(Task task, boolean isAppend) throws IOException {","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"        FileWriter fw \u003d new FileWriter(TASK_FILE_PATH, isAppend);","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"        fw.write(task.toSaveTextFormat());","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"        fw.close();","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"nkotaa":89}},{"path":"src/main/java/Blue/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Represents a general task.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    public Task() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"        this(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     * Overloaded constructor that creates an undone task.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"     * @param description A description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"     * @return A string description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"     * Returns an \"X\" symbol if task is done, \" \" otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"     * @return A string symbol indicating the status of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"     * Marks task as completed.","lastModifiedDate":"2024-03-01"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"     * Returns a string representation of a task in text-parsable format.","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"     * @return A string of this task in text-parsable format.","lastModifiedDate":"2024-03-01"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"    public String toSaveTextFormat() {","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"        String done \u003d (getStatusIcon().equals(\"X\") ? \"1\" : \"0\");","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"        return \"T|\" + done + \"|\" + description + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        return this.getDescription() + \" [\" + this.getStatusIcon() + \"]\";","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nkotaa":61}},{"path":"src/main/java/Blue/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":" * A task manager that keeps track of all tasks.","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":" * Further, it directly acts on this list of tasks as requested by the user.","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"public class TaskManager {","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    private static int numTasks \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    private static Ui taskManagerUi;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    private Input request;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public TaskManager() {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"     * Instantiates a task manager to perform a request.","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     * @param request The request this particular instance of task manager is to perform.","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"    public TaskManager(Input request) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        this.request \u003d request;","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"     * Performs the request; saving the new task list to disk after doing so.","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    public void performRequest() {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        switch (request.getCommand()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        case list:","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"            listTasks();","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"        case mark:","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"            markTask(request.getTaskIndex());","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"        case delete:","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"            deleteTask(request.getTaskIndex());","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"        case find:","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"            listTasks(request.getTaskQuery());","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"        case todo:","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"        case deadline:","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"        case event:","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"            addTask(request.getTaskToAdd(), true);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        boolean isSaved \u003d new StorageHandler().hasSavedTasks(tasks);","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"        if (!isSaved) {","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.warn(\"Failed to save tasks.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"     * @param task Task to add.","lastModifiedDate":"2024-03-01"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"     * @param isNew Indicates whether this task is one newly received from the user, or restored from disk.","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"    public void addTask(Task task, boolean isNew) {","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"        numTasks +\u003d 1;","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"        if (isNew) {","lastModifiedDate":"2024-03-01"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(\"added: \" + task.getDescription());","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"    private void listTasks() {","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk((count + 1) + \". \" + task);","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"            count +\u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"    private void listTasks(String query) {","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"                taskManagerUi.talk((count + 1) + \". \" + task);","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"                count +\u003d 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(\"No tasks found.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"    private void markTask(int taskIndex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d numTasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(\"Task not found.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"        Task taskToMark \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"        taskToMark.setDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"        taskManagerUi.talk(\"Task \" + taskToMark.getDescription() + \" marked as done.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"nkotaa"},"content":"    private void deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"nkotaa"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d numTasks) {","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(\"Task not found.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"nkotaa"},"content":"        taskManagerUi.talk(\"Task \" + tasks.get(taskIndex).getDescription() + \" deleted.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"nkotaa"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"nkotaa"},"content":"        numTasks -\u003d 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":111}},{"path":"src/main/java/Blue/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":" * Responsible for interacting with the user through standard input/output.","lastModifiedDate":"2024-03-01"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"public class Ui {","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    private static InputParser parser \u003d new InputParser();","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"     * Prints some dialogue to standard output, acknowledging handling of user request.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     * ","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     * @param line The line of dialogue to print.","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    public static void talk(String line) {","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     * Prints some warning to standard output, informing user of a bad request.","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"     * ","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     * @param line The line of warning to print.","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"    public static void warn(String line) {","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"     * Returns a well-formed request parsed from user input.","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"     * @return A properly instantiated Input object containing some valid request.","lastModifiedDate":"2024-03-01"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    public static Input getRequest() {","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"        parser.parse(line);","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"        Input userInput \u003d parser.getParsedInput();","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"        return userInput;","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"nkotaa":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"todo forage for wood","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"deadline start a fire /by night","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"event the dance of the magpie frings /from dusk /to dawn","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"build a hut","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"todo build a hut","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"mark 1","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"mark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"mark not-a-number","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"find fire","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"delete 2","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"delete 2","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"find dance","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"list","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"java -classpath ..\\bin Blue \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"nkotaa":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"# delete any stored tasks","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"then","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    rm data/tasks.txt","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"fi","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Blue/Blue.java","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"java -cp ../bin Blue.Blue \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"nkotaa":8}}]
