[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"# Blue","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"Blue is a chatbot that helps you manage your tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"   - Click `Open`.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"   - Select the project directory, and click `OK`.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"   - If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"4. After that, locate the `src/main/java/blue/Blue.java` file, right-click it, and choose `Run Blue.main()`. If the setup is correct, you should see something like this:","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"   -------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    Welcome to Blue, a command line task assistant.","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"   -------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":10,"nkotaa":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"Blue is a command line application to manage and keep track of your tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"## Quick start","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"1. Ensure you have Java 11 or above installed.","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"2. Download the latest `blue.jar` from Releases.","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"3. Move the file to a folder where you want to store your tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"4. Open a terminal window and navigate to your previously chosen folder.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"5. Run `java -jar blue.jar`. \u003cbr\u003e Note that a folder `data` containing file `tasks.txt` will be created on first use.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"6. Refer to Features below on how to use the application.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"### Adding a general task: `todo`","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"Adds a general task to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"Example:","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"- `todo buy stationery` Adds a task to buy stationery.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"Adds a task with a deadline to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE`","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"Example:","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"- `deadline post letter /by Tuesday` Adds a deadline task to post a letter by Tuesday.","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"### Adding an event: `event`","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"Adds an event to the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"Format: `event EVENT_DESCRIPTION /from START_TIME /to END_TIME`","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"Example:","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"- `event SFA exhibition on 23 March /from 1700 /to 2000` Adds an event on 23 March.","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"Lists all tasks in the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"Example output:","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"```","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"-------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":" 1. buy stationery [ ]","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":" 2. post letter [ ] by: Tuesday","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":" 3. SFA exhibition on 23 March from 1700 to 2000","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"-------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"```","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"Marks a specified task as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"Format: `mark TASK_INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"Example:","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"- `mark 1` Marks the task with index 1 (following our above examples, buy stationery) as done.","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"### Finding a task by its description: `find`","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"Finds tasks with descriptions matching the provided query.","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"Format: `find QUERY`","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"Note that not specifying a query (i.e finding with a \"\" query) is no different from listing all tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"Example:","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"- `find letter` Finds tasks with the description query \"letter\".","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"Example output:","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"```","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"-------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":" 1. post letter [ ] by: Tuesday","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"-------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"```","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"Removes a specified task from the task list.","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"### Exiting the application: `bye`","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"Exits the application, saving the task list to disk.","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"Expected output:","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"-------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":" Till we meet again.","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"-------------------------------------------------------------","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":26,"nkotaa":71}},{"path":"src/main/java/blue/Blue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import blue.exception.BlueException;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"import blue.storage.StorageHandler;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"import blue.task.TaskManager;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"import blue.ui.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":" * The Blue class constitutes the main logic of our chatbot application.","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":" *","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":" * @author nkotaa","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"public class Blue {","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    private Ui blueUi;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    private TaskManager blueTaskManager;","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    private StorageHandler blueStorageHandler;","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"     * Constructor for Blue, initializing the subcomponents it needs to run.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    public Blue() {","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"        blueUi \u003d new Ui();","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"        blueTaskManager \u003d new TaskManager(blueUi);","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        blueStorageHandler \u003d new StorageHandler(blueTaskManager);","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"     * Broadly, takes some user request and passes to task manager to handle if well-formed, warning otherwise.","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    private void run() {","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        blueUi.greet();","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        blueStorageHandler.restoreState();","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"        while (blueUi.isUserActive()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"            try {","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"                blueUi.nextRequest();","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"                blueTaskManager.performRequest();","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"                blueStorageHandler.saveState();","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"            } catch (BlueException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"                blueUi.warn(e.getMessage());","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"        blueUi.farewell();","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"        new Blue().run();","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":48}},{"path":"src/main/java/blue/command/Input.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.command;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import blue.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":" * Defines an encapsulation of a command and command arguments to be understood by Blue.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"public class Input {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    private InputCommand command;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    private String taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     * Constructor for inputs without an argument.","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    public Input(InputCommand command) {","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     * Constructor for task index based inputs.","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-01"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"     * @param taskIndex Index of task to manage.","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"    public Input(InputCommand command, int taskIndex) {","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"        this(command);","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"     * Constructor for task query inputs.","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"     * @param taskQuery String query for task.","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    public Input(InputCommand command, String taskQuery) {","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"        this(command);","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"        this.taskQuery \u003d taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"     * Constructor for task adding inputs.","lastModifiedDate":"2024-03-04"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"     * @param taskToAdd Task to add.","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"    public Input(InputCommand command, Task taskToAdd) {","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"        this(command);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"    public InputCommand getCommand() {","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"        return command;","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"        return taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"    public Task getTaskToAdd() {","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"        return taskToAdd;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"    public String getTaskQuery() {","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"        return taskQuery;","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"     * Returns true if command is not an exit request, false otherwise","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"     * @return True if command is not the enum bye, false otherwise.","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"    public boolean isNotExit() {","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"        return command !\u003d InputCommand.bye;","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"nkotaa":80}},{"path":"src/main/java/blue/command/InputCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.command;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Lists an enumeration of all acceptable input commands to Blue.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public enum InputCommand {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"   list, mark, delete, todo, find, ","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"        deadline, event, bye","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":9}},{"path":"src/main/java/blue/exception/BlueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.exception;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class BlueException extends Exception {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"        return \"Looks like something went wrong.\";","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nkotaa":8}},{"path":"src/main/java/blue/exception/IllegalIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.exception;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class IllegalIndexException extends IllegalInputException {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        return \"Please specify a task index\";","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nkotaa":9}},{"path":"src/main/java/blue/exception/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.exception;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class IllegalInputException extends BlueException {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        return \"I\u0027m sorry. I\u0027m afraid I can\u0027t do that.\";","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nkotaa":9}},{"path":"src/main/java/blue/exception/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.exception;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class IllegalTaskException extends IllegalInputException {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private String message;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    public IllegalTaskException(String message) {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"        return message;","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nkotaa":14}},{"path":"src/main/java/blue/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.exception;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class StorageException extends BlueException {","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        return \"Failed to save tasks!\";","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"nkotaa":9}},{"path":"src/main/java/blue/storage/StorageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.storage;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import blue.task.TaskManager;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"import blue.task.Deadline;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"import blue.task.Event;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"import blue.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"import blue.exception.StorageException;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"import java.io.File;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":" * The part of Blue that handles disk write and access.","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"public class StorageHandler {","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    private static final String DATA_DIR_PATH \u003d \"data\";","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    private static final String TASK_FILE_PATH \u003d DATA_DIR_PATH + \"/tasks.txt\";","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"     * Public constructor for storage handler.","lastModifiedDate":"2024-03-04"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"     * Note that it need only be called once as it suffices to have one storage handler per program.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"     * @param taskManager The task manager of Blue.","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    public StorageHandler(TaskManager taskManager) {","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"     * Restores the state of the application from a previous run.","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"     * Simply restores tasks from disk for now.","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    public void restoreState() {","lastModifiedDate":"2024-03-04"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"        restoreTasks();","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"     * Saves the state of the application to disk.","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"     * Limited to writing tasks to disk for now.","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"    public void saveState() throws StorageException {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"            saveTasks();","lastModifiedDate":"2024-03-04"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"            throw e;","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"     * Restores saved tasks if TASK_FILE_PATH exists, does nothing otherwise.","lastModifiedDate":"2024-03-04"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"     * Assumes TASK_FILE_PATH is a properly formatted text file.","lastModifiedDate":"2024-03-04"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"    private void restoreTasks() {","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2024-03-04"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"        File taskFile \u003d new File(TASK_FILE_PATH);","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"            Scanner s \u003d new Scanner(taskFile);","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"                String[] savedTaskDetails \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"                Task savedTask \u003d restoreTask(savedTaskDetails);","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"                tasks.add(savedTask);","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"    private Task restoreTask(String[] savedDetails) {","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"        Task restoredTask;","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"        switch (savedDetails[0]) {","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"        case \"T\":","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Task(savedDetails[2]);","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"        case \"D\":","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Deadline(savedDetails[2], savedDetails[3]);","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"        case \"E\":","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"            restoredTask \u003d new Event(savedDetails[2], savedDetails[4], savedDetails[3]);","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"        if (savedDetails[1].equals(\"1\")) {","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"            restoredTask.setDone();","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"        return restoredTask;","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"     * Writes tasks in their text-parsable format to TASK_FILE_PATH.","lastModifiedDate":"2024-03-01"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"     * @throws StorageException If fails to write tasks to disk.","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"    private void saveTasks() throws StorageException {","lastModifiedDate":"2024-03-05"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskManager.getTasks();","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"        new File(DATA_DIR_PATH).mkdirs();","lastModifiedDate":"2024-03-01"},{"lineNumber":101,"author":{"gitId":"nkotaa"},"content":"        File taskFile \u003d new File(TASK_FILE_PATH);","lastModifiedDate":"2024-03-01"},{"lineNumber":102,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-03-01"},{"lineNumber":103,"author":{"gitId":"nkotaa"},"content":"            taskFile.createNewFile();","lastModifiedDate":"2024-03-01"},{"lineNumber":104,"author":{"gitId":"nkotaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":105,"author":{"gitId":"nkotaa"},"content":"            throw new StorageException();","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":107,"author":{"gitId":"nkotaa"},"content":"        boolean isAppend \u003d false;","lastModifiedDate":"2024-03-01"},{"lineNumber":108,"author":{"gitId":"nkotaa"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-01"},{"lineNumber":109,"author":{"gitId":"nkotaa"},"content":"            try {","lastModifiedDate":"2024-03-01"},{"lineNumber":110,"author":{"gitId":"nkotaa"},"content":"                writeTaskToFile(task, isAppend);","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"nkotaa"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-01"},{"lineNumber":112,"author":{"gitId":"nkotaa"},"content":"                throw new StorageException();","lastModifiedDate":"2024-03-05"},{"lineNumber":113,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"nkotaa"},"content":"            isAppend \u003d true;","lastModifiedDate":"2024-03-01"},{"lineNumber":115,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":117,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"nkotaa"},"content":"    private void writeTaskToFile(Task task, boolean isAppend) throws IOException {","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"nkotaa"},"content":"        FileWriter fw \u003d new FileWriter(TASK_FILE_PATH, isAppend);","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"nkotaa"},"content":"        fw.write(task.toSaveTextFormat());","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"nkotaa"},"content":"        fw.close();","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"nkotaa":123}},{"path":"src/main/java/blue/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Represents a task that needs to be completed by a certain deadline.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"     * A constructor for new deadline object.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"     * @param description A description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"     * @param by When it needs to be completed by.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     * Returns the deadline of a Deadline task.","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"     * @return The deadline of a task in String format.","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"        return by;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    public String toSaveTextFormat() {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        String done \u003d (getStatusIcon().equals(\"X\") ? \"1\" : \"0\");","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        return \"D|\" + done + \"|\" + getDescription() + \"|\" + by + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"        return super.toString() + \" by: \" + by;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":39}},{"path":"src/main/java/blue/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Represents an event that occurs within a certain time.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Event extends Deadline {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"     * A constructor for new Event object.","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"     * @param description A description of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"     * @param from The start of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     * @param to The end of the event.","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        super(description, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    public String toSaveTextFormat() {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"        String done \u003d (getStatusIcon().equals(\"X\") ? \"1\" : \"0\");","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        return \"E|\" + done + \"|\" + this.getDescription() + \"|\" + this.getBy() + \"|\" + from + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        return this.getDescription() + \" from \" + from + \" to \" + this.getBy();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":31}},{"path":"src/main/java/blue/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":" * Represents a general task.","lastModifiedDate":"2024-03-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"     * Constructor for an undone task.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"     * @param description A description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"     * @return A string description of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"     * Returns an \"X\" symbol if task is done, \" \" otherwise.","lastModifiedDate":"2024-03-01"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"     * @return A string symbol indicating the status of the task.","lastModifiedDate":"2024-03-01"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"     * Marks task as completed.","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"     * Returns a string representation of a task in text-parsable format.","lastModifiedDate":"2024-03-01"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"     * @return A string of this task in text-parsable format.","lastModifiedDate":"2024-03-01"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"    public String toSaveTextFormat() {","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"        String done \u003d (getStatusIcon().equals(\"X\") ? \"1\" : \"0\");","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        return \"T|\" + done + \"|\" + description + System.lineSeparator();","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"        return this.getDescription() + \" [\" + this.getStatusIcon() + \"]\";","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nkotaa":58}},{"path":"src/main/java/blue/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.task;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import blue.command.Input;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"import blue.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"import blue.ui.Ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":" * A task manager that keeps track of all tasks, modifying this list as directed by the user.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"public class TaskManager {","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    private static final String TASK_NOT_FOUND_MESSAGE \u003d \"Task not found.\";","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    private static Ui taskManagerUi;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"     * Public constructor for task manager.","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"     * Note that it need only be called once as it suffices to have one task manager per program.","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     * @param taskManagerUi The UI with which the task manager responds to requests.","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"    public TaskManager(Ui taskManagerUi) {","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"        this.taskManagerUi \u003d taskManagerUi;","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"     * Getter for tasks.","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        return tasks;","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"     * Performs the request contained in the Ui.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    public void performRequest() {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"        Input request \u003d taskManagerUi.getRequest();","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"        switch (request.getCommand()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"        case list:","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"        case find:","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"            listTasks(request.getTaskQuery());","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"        case mark:","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"            markTask(request.getTaskIndex());","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"        case delete:","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"            deleteTask(request.getTaskIndex());","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        case todo:","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"        case deadline:","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"        case event:","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"            addTask(request.getTaskToAdd());","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-03-01"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"     * @param task Task to add.","lastModifiedDate":"2024-03-01"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"        taskManagerUi.talk(\"added: \" + task.getDescription());","lastModifiedDate":"2024-03-01"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"     * Graphically lists all tasks that match a given query.","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"     * @param query The string query with which to match tasks. If empty string \"\", simply list all tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"    private void listTasks(String query) {","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"        String[] matchingTasks \u003d tasks.stream()","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"            .map(Object::toString)","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"            .filter((t) -\u003e t.contains(query))","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"            .toArray(String[]::new);","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"        if (matchingTasks.length \u003d\u003d 0) {","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"        taskManagerUi.talk(matchingTasks, true);","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"    private void markTask(int taskIndex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"        Task taskToMark \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"        taskToMark.setDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"        taskManagerUi.talk(\"Task \" + taskToMark.getDescription() + \" marked as done.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"    private void deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"            taskManagerUi.talk(TASK_NOT_FOUND_MESSAGE);","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"nkotaa"},"content":"        taskManagerUi.talk(\"Task \" + tasks.get(taskIndex).getDescription() + \" deleted.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"nkotaa"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":106}},{"path":"src/main/java/blue/ui/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import blue.command.Input;","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"import blue.command.InputCommand;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"import blue.exception.IllegalInputException;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"import blue.exception.IllegalIndexException;","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"import blue.exception.IllegalTaskException;","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"import blue.task.Deadline;","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"import blue.task.Event;","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"import blue.task.Task;","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":" * Encapsulates the logic and behaviour of a parser to Blue.","lastModifiedDate":"2024-03-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"public class InputParser {","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"     * Returns a valid request if user text is well-formed, throws an exception otherwise.","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of raw text to parse.","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"     * @return A valid request for Blue parsed from line.","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalInputException If input is not well-formed.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"    public Input parse(String line) throws IllegalInputException {","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"            InputCommand command \u003d parseRequest(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"            switch (command) {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"            case bye:","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"                return new Input(command);","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"            case list:","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"            case find:","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"                String taskQuery \u003d parseTaskQuery(line);","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"                return new Input(command, taskQuery);","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"            case mark:","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"            case delete:","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"                int taskIndex \u003d parseIndex(line, command);","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"                return new Input(command, taskIndex);","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"            case todo:","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"            case deadline:","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"            case event:","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"                Task taskToAdd \u003d parseTask(line, command);","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"                return new Input(command, taskToAdd);","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"            default:","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"                throw new IllegalInputException();","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"            throw e;","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"     * Returns a request of type InputCommand understandable to Blue","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"     * @return An enum of InputCommand.","lastModifiedDate":"2024-03-01"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalInputException If parsed request does not match an enum of InputCommand.","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"    private InputCommand parseRequest(String line) throws IllegalInputException {","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        String parsedRequest \u003d line.trim().split(\" \")[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"        switch (parsedRequest) {","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"        case \"list\":","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.list;","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.mark;","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.delete;","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.todo;","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"        case \"find\":","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.find;","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"        case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.event;","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"            return InputCommand.bye;","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"     * Returns the index of a task if found, throws an exception otherwise.","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"     * @param command User command.","lastModifiedDate":"2024-03-01"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"     * @return Index of a task if found.","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalIndexException If parsed index is not an integer or not found.","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"    private int parseIndex(String line, InputCommand command) throws IllegalIndexException {","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"            int taskIndex \u003d Integer.parseInt(line.substring(line.indexOf(\" \")).trim()) - 1;","lastModifiedDate":"2024-03-05"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"            return taskIndex;","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalIndexException();","lastModifiedDate":"2024-03-05"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"     * Returns a string query to tasks.","lastModifiedDate":"2024-03-05"},{"lineNumber":101,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-05"},{"lineNumber":103,"author":{"gitId":"nkotaa"},"content":"     * @return A string matching the query parsed from line.","lastModifiedDate":"2024-03-05"},{"lineNumber":104,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":105,"author":{"gitId":"nkotaa"},"content":"    private String parseTaskQuery(String line) {","lastModifiedDate":"2024-03-05"},{"lineNumber":106,"author":{"gitId":"nkotaa"},"content":"        String taskQuery \u003d line.substring(4);","lastModifiedDate":"2024-03-05"},{"lineNumber":107,"author":{"gitId":"nkotaa"},"content":"        return taskQuery;","lastModifiedDate":"2024-03-05"},{"lineNumber":108,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":109,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":110,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":111,"author":{"gitId":"nkotaa"},"content":"     * Returns a task if details provided by the user are well formed, throws an exception otherwise.","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":113,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"nkotaa"},"content":"     * @param command User command, in effect task type.","lastModifiedDate":"2024-03-05"},{"lineNumber":115,"author":{"gitId":"nkotaa"},"content":"     * @return Task of appropriate type and details parsed from line.","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalTaskException If task details are misformed.","lastModifiedDate":"2024-03-05"},{"lineNumber":117,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"nkotaa"},"content":"    private Task parseTask(String line, InputCommand command) throws IllegalTaskException {","lastModifiedDate":"2024-03-05"},{"lineNumber":119,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"nkotaa"},"content":"            String taskDescription \u003d parseTaskDescription(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":121,"author":{"gitId":"nkotaa"},"content":"            if (command \u003d\u003d InputCommand.todo) {","lastModifiedDate":"2024-03-05"},{"lineNumber":122,"author":{"gitId":"nkotaa"},"content":"                return new Task(taskDescription);","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":124,"author":{"gitId":"nkotaa"},"content":"            String taskEnd \u003d parseTaskEnd(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":125,"author":{"gitId":"nkotaa"},"content":"            if (command \u003d\u003d InputCommand.deadline) {","lastModifiedDate":"2024-03-05"},{"lineNumber":126,"author":{"gitId":"nkotaa"},"content":"                return new Deadline(taskDescription, taskEnd);","lastModifiedDate":"2024-03-05"},{"lineNumber":127,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":128,"author":{"gitId":"nkotaa"},"content":"            String taskStart \u003d parseTaskStart(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":129,"author":{"gitId":"nkotaa"},"content":"            return new Event(taskDescription, taskStart, taskEnd);","lastModifiedDate":"2024-03-05"},{"lineNumber":130,"author":{"gitId":"nkotaa"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":131,"author":{"gitId":"nkotaa"},"content":"            throw e;","lastModifiedDate":"2024-03-04"},{"lineNumber":132,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":133,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":134,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":135,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":136,"author":{"gitId":"nkotaa"},"content":"     * Returns the description of a task if non-empty, throws an exception otherwise.","lastModifiedDate":"2024-03-04"},{"lineNumber":137,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":138,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-04"},{"lineNumber":139,"author":{"gitId":"nkotaa"},"content":"     * @return String description of task.","lastModifiedDate":"2024-03-04"},{"lineNumber":140,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalTaskException If description is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":141,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":142,"author":{"gitId":"nkotaa"},"content":"    private String parseTaskDescription(String line) throws IllegalTaskException {","lastModifiedDate":"2024-03-05"},{"lineNumber":143,"author":{"gitId":"nkotaa"},"content":"        String taskDescription \u003d line.substring(line.indexOf(\" \"))","lastModifiedDate":"2024-03-04"},{"lineNumber":144,"author":{"gitId":"nkotaa"},"content":"            .split(\"/by|/from|/to\")[0]","lastModifiedDate":"2024-03-04"},{"lineNumber":145,"author":{"gitId":"nkotaa"},"content":"            .trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":146,"author":{"gitId":"nkotaa"},"content":"        if (taskDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-04"},{"lineNumber":147,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalTaskException(\"Description cannot be empty.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":148,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":149,"author":{"gitId":"nkotaa"},"content":"        return taskDescription;","lastModifiedDate":"2024-03-04"},{"lineNumber":150,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":151,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"nkotaa"},"content":"     * Returns the deadline or end time of a deadline or event respectively.","lastModifiedDate":"2024-03-04"},{"lineNumber":154,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":155,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"nkotaa"},"content":"     * @return String description of deadline or end time.","lastModifiedDate":"2024-03-04"},{"lineNumber":157,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalTaskException If description is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":158,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":159,"author":{"gitId":"nkotaa"},"content":"    private String parseTaskEnd(String line) throws IllegalTaskException {","lastModifiedDate":"2024-03-05"},{"lineNumber":160,"author":{"gitId":"nkotaa"},"content":"        String taskEnd \u003d line.split(\"/by|/to\")[1].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":161,"author":{"gitId":"nkotaa"},"content":"        if (taskEnd.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-04"},{"lineNumber":162,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalTaskException(\"No deadline/ end time specified.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":163,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":164,"author":{"gitId":"nkotaa"},"content":"        return taskEnd;","lastModifiedDate":"2024-03-04"},{"lineNumber":165,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":166,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":167,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":168,"author":{"gitId":"nkotaa"},"content":"     * Returns the start time of an event.","lastModifiedDate":"2024-03-04"},{"lineNumber":169,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-04"},{"lineNumber":170,"author":{"gitId":"nkotaa"},"content":"     * @param line The string of user input to parse.","lastModifiedDate":"2024-03-04"},{"lineNumber":171,"author":{"gitId":"nkotaa"},"content":"     * @return String description of start time.","lastModifiedDate":"2024-03-04"},{"lineNumber":172,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalTaskException If description is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":173,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":174,"author":{"gitId":"nkotaa"},"content":"    private String parseTaskStart(String line) throws IllegalTaskException {","lastModifiedDate":"2024-03-05"},{"lineNumber":175,"author":{"gitId":"nkotaa"},"content":"        String taskStart \u003d line.split(\"/from|/to\")[1].trim();","lastModifiedDate":"2024-03-04"},{"lineNumber":176,"author":{"gitId":"nkotaa"},"content":"        if (taskStart.length() \u003d\u003d 0) {","lastModifiedDate":"2024-03-04"},{"lineNumber":177,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalTaskException(\"No start time specified.\");","lastModifiedDate":"2024-03-05"},{"lineNumber":178,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"nkotaa"},"content":"        return taskStart;","lastModifiedDate":"2024-03-04"},{"lineNumber":180,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"nkotaa":181}},{"path":"src/main/java/blue/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package blue.ui;","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import blue.exception.IllegalInputException;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"import blue.command.Input;","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"/**","lastModifiedDate":"2024-03-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":" * Responsible for all user facing interactions through standard input/output.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":" */","lastModifiedDate":"2024-03-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"public class Ui {","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to Blue, a command line task assistant.\";","lastModifiedDate":"2024-03-04"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Till we meet again.\";","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    private static final String LINE_DIVIDER \u003d \"-------------------------------------------------------------\";","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    public static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    private static Scanner in;","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    private static InputParser parser;","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    private static Input request;","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    private static boolean isUserActive;","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"     * Note that it need only be called once as it suffices to have one UI per program.","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    public Ui() {","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"        parser \u003d new InputParser(); ","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        isUserActive \u003d true;","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"    public Input getRequest() {","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"        return request;","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"    public boolean isUserActive() {","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"        return isUserActive;","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"    public void greet() {","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"        talk(WELCOME_MESSAGE, ANSI_BLUE);","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"    public void farewell() {","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"        talk(GOODBYE_MESSAGE, ANSI_BLUE);","lastModifiedDate":"2024-03-04"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"     * Receives the next user request, parsing it into request if well formed and throwing an exception otherwise.","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"     *","lastModifiedDate":"2024-03-01"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"     * @throws IllegalInputException If user request is misformed in any way.","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"    public void nextRequest() throws IllegalInputException {","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"            request \u003d parser.parse(line);","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"            throw e;","lastModifiedDate":"2024-03-04"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"        isUserActive \u003d request.isNotExit();","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"     * Prints a single line of dialogue to standard output, usually acknowledging proper handling of request.","lastModifiedDate":"2024-03-04"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"     * ","lastModifiedDate":"2024-03-01"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"     * @param line The line of dialogue to print.","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"    public void talk(String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"        printDivider();","lastModifiedDate":"2024-03-04"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"        System.out.println(\" \" + line);","lastModifiedDate":"2024-03-04"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"        printDivider();","lastModifiedDate":"2024-03-04"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"     * Prints a single line of dialogue to standard output, usually acknowledging proper handling of request.","lastModifiedDate":"2024-03-04"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"     * ","lastModifiedDate":"2024-03-04"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"     * @param line The line of dialogue to print.","lastModifiedDate":"2024-03-04"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"     * @param colour What to colour this line of text.","lastModifiedDate":"2024-03-04"},{"lineNumber":81,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":82,"author":{"gitId":"nkotaa"},"content":"    public void talk(String line, String colour) {","lastModifiedDate":"2024-03-04"},{"lineNumber":83,"author":{"gitId":"nkotaa"},"content":"        talk(colour + line + ANSI_RESET);","lastModifiedDate":"2024-03-04"},{"lineNumber":84,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":85,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":86,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":87,"author":{"gitId":"nkotaa"},"content":"     * Prints the divider.","lastModifiedDate":"2024-03-04"},{"lineNumber":88,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":89,"author":{"gitId":"nkotaa"},"content":"    private void printDivider() {","lastModifiedDate":"2024-03-04"},{"lineNumber":90,"author":{"gitId":"nkotaa"},"content":"        System.out.println(LINE_DIVIDER);","lastModifiedDate":"2024-03-04"},{"lineNumber":91,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-04"},{"lineNumber":94,"author":{"gitId":"nkotaa"},"content":"     * Prints multiple lines of dialogue to standard output, usually as an explicit response to a request.","lastModifiedDate":"2024-03-04"},{"lineNumber":95,"author":{"gitId":"nkotaa"},"content":"     * ","lastModifiedDate":"2024-03-04"},{"lineNumber":96,"author":{"gitId":"nkotaa"},"content":"     * @param lines The lines of dialogue to print.","lastModifiedDate":"2024-03-05"},{"lineNumber":97,"author":{"gitId":"nkotaa"},"content":"     * @param isNumbered Whether to prefix each line with a line number.","lastModifiedDate":"2024-03-04"},{"lineNumber":98,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-04"},{"lineNumber":99,"author":{"gitId":"nkotaa"},"content":"    public void talk(String[] lines, boolean isNumbered) {","lastModifiedDate":"2024-03-04"},{"lineNumber":100,"author":{"gitId":"nkotaa"},"content":"        printDivider();","lastModifiedDate":"2024-03-04"},{"lineNumber":101,"author":{"gitId":"nkotaa"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":102,"author":{"gitId":"nkotaa"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-03-04"},{"lineNumber":103,"author":{"gitId":"nkotaa"},"content":"            if (isNumbered) {","lastModifiedDate":"2024-03-04"},{"lineNumber":104,"author":{"gitId":"nkotaa"},"content":"                System.out.println(\" \" + lineNumber + \". \" + line);","lastModifiedDate":"2024-03-04"},{"lineNumber":105,"author":{"gitId":"nkotaa"},"content":"                lineNumber +\u003d 1;","lastModifiedDate":"2024-03-04"},{"lineNumber":106,"author":{"gitId":"nkotaa"},"content":"            } else {","lastModifiedDate":"2024-03-04"},{"lineNumber":107,"author":{"gitId":"nkotaa"},"content":"                System.out.println(\" \" + line);","lastModifiedDate":"2024-03-04"},{"lineNumber":108,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-03-04"},{"lineNumber":109,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-03-04"},{"lineNumber":110,"author":{"gitId":"nkotaa"},"content":"        printDivider();","lastModifiedDate":"2024-03-04"},{"lineNumber":111,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-03-04"},{"lineNumber":112,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":113,"author":{"gitId":"nkotaa"},"content":"    /**","lastModifiedDate":"2024-03-01"},{"lineNumber":114,"author":{"gitId":"nkotaa"},"content":"     * Prints some warning to standard output, informing user of a bad request.","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"nkotaa"},"content":"     * ","lastModifiedDate":"2024-03-01"},{"lineNumber":116,"author":{"gitId":"nkotaa"},"content":"     * @param line The line of warning to print.","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"nkotaa"},"content":"     */","lastModifiedDate":"2024-03-01"},{"lineNumber":118,"author":{"gitId":"nkotaa"},"content":"    public void warn(String line) {","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"nkotaa"},"content":"        talk(line, ANSI_RED);","lastModifiedDate":"2024-03-04"},{"lineNumber":120,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"nkotaa":121}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"todo forage for wood","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"deadline start a fire /by night","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"event the dance of the magpie frings /from dusk /to dawn","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"build a hut","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"todo build a hut","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"mark 1","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"mark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"mark not-a-number","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"find fire","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"delete 2","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"delete 2","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"find dance","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"list","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"java -classpath ..\\bin blue \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"nkotaa":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"# delete any stored tasks","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"then","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    rm data/tasks.txt","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"fi","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/blue/Blue.java","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"java -cp ../bin blue.Blue \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"nkotaa":11}}]
