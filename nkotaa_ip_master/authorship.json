[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"# Blue project template","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"3. After that, locate the `src/main/java/Blue.java` file, right-click it, and choose `Run Blue.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"nkotaa":2}},{"path":"src/main/java/Blue/Blue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"public class Blue {","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Greetings! I\u0027m Blue, your personal chatbot assistant. How may I be of service?\";","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Till we meet again.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    // no fancy formatting for now","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    public static void talk(String line) {","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    private static void handleRequest(InputParser blueRequest) {","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"        TaskManager tmMaster \u003d new TaskManager();","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"        InputCommand request \u003d blueRequest.getCommand();","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        switch (request) {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        case list:","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"            tmMaster.listTasks();","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"        case mark:","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"            tmMaster.markTask(blueRequest.getTaskIndex());","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"        case todo:","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        case deadline:","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"        case event:","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"            tmMaster.addTask(blueRequest.getTaskToAdd());","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"        talk(WELCOME_MESSAGE);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        for (String line \u003d in.nextLine(); !line.trim().equals(\"bye\"); line \u003d in.nextLine()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"            InputParser blueRequest \u003d new InputParser(line);","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"            handleRequest(blueRequest);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"        talk(GOODBYE_MESSAGE);","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":40}},{"path":"src/main/java/Blue/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private String by;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        super(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"        return by;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        return super.toString() + \" by: \" + by;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":19}},{"path":"src/main/java/Blue/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class Event extends Deadline {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private String from;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    private String getFrom() {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        return from;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    private void setFrom(String from) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"        super(description, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"        return this.getDescription() + \" from \" + from + \" to \" + this.getBy();","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":23}},{"path":"src/main/java/Blue/IllegalInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class IllegalInput extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private static final String WARNING_MESSAGE \u003d \"I\u0027m sorry. I\u0027m afraid I can\u0027t do that.\";","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    private InputCommand type;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    IllegalInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"        this(InputCommand.undefined);","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    IllegalInput(InputCommand type) {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"        switch (type) {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"        case mark:","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"            return \"Please specify a task index\";","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"            return WARNING_MESSAGE;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":21}},{"path":"src/main/java/Blue/InputCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public enum InputCommand {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"   list, mark, todo, deadline, event, undefined","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":5}},{"path":"src/main/java/Blue/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class InputParser extends Blue {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private InputCommand command;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"    public InputCommand getCommand() {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"        return command;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"        return taskIndex;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    public Task getTaskToAdd() {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"        return taskToAdd;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    InputParser(String line) {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"            parseRequest(line);","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"            parseTask(line);","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"        } catch (IllegalInput e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"            talk(String.valueOf(e));","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.undefined;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    private void parseRequest(String line) throws IllegalInput {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        String parsedRequest \u003d line.trim().split(\" \")[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"        switch (parsedRequest) {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"        case \"list\":","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.list;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.mark;","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"                taskIndex \u003d Integer.parseInt(line.substring(4).trim()) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"                throw new IllegalInput(InputCommand.mark);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.todo;","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"nkotaa"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"nkotaa"},"content":"        case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"nkotaa"},"content":"            command \u003d InputCommand.event;","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"nkotaa"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"nkotaa"},"content":"            throw new IllegalInput();","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"nkotaa"},"content":"    private void parseTask(String line) throws IllegalInput {","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"nkotaa"},"content":"        String taskDescription;","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"nkotaa"},"content":"        String taskDeadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"nkotaa"},"content":"        String taskStart;","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"nkotaa"},"content":"        switch (command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"nkotaa"},"content":"        case todo:","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"nkotaa"},"content":"            taskDescription \u003d line.substring(4).trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"nkotaa"},"content":"            taskToAdd \u003d new Task(taskDescription);","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"nkotaa"},"content":"        case deadline:","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"nkotaa"},"content":"            String[] TaskDetails \u003d line.substring(8).split(\"/by\");","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"nkotaa"},"content":"            taskDescription \u003d TaskDetails[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"nkotaa"},"content":"            taskDeadline \u003d TaskDetails[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"nkotaa"},"content":"            taskToAdd \u003d new Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"nkotaa"},"content":"        case event:","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"nkotaa"},"content":"            String[] eventDetails \u003d line.substring(5).split(\"/from|/to\");","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"nkotaa"},"content":"            taskDescription \u003d eventDetails[0].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"nkotaa"},"content":"            taskStart \u003d eventDetails[1].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"nkotaa"},"content":"            taskDeadline \u003d eventDetails[2].trim();","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"nkotaa"},"content":"            taskToAdd \u003d new Event(taskDescription, taskStart, taskDeadline);","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"nkotaa"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"nkotaa":80}},{"path":"src/main/java/Blue/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    public Task() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"        this(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"        return this.getDescription() + \" [\" + this.getStatusIcon() + \"]\";","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"nkotaa":29}},{"path":"src/main/java/Blue/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"package Blue;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"public class TaskManager extends Blue {","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"    // assume no more than 100 tasks for now","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"    private static Task[] tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"    private static int numTasks \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nkotaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nkotaa"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nkotaa"},"content":"        for (int i \u003d 0; i \u003c numTasks; i +\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nkotaa"},"content":"            talk(Integer.toString(i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"nkotaa"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nkotaa"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d numTasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"            talk(\"Task not found.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"nkotaa"},"content":"            return;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"nkotaa"},"content":"        tasks[taskIndex].setDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nkotaa"},"content":"        talk(\"Task \" + tasks[taskIndex].getDescription() + \" marked as done.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nkotaa"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"        tasks[numTasks] \u003d task;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"nkotaa"},"content":"        numTasks +\u003d 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"nkotaa"},"content":"        talk(\"added: \" + task.getDescription());","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"nkotaa"},"content":"    public void addTask(String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nkotaa"},"content":"        tasks[numTasks] \u003d new Task(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nkotaa"},"content":"        numTasks +\u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nkotaa"},"content":"        talk(\"added: \" + description);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nkotaa"},"content":"    public void addTask(String description, String by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nkotaa"},"content":"        tasks[numTasks] \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nkotaa"},"content":"        numTasks +\u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nkotaa"},"content":"        talk(\"added: \" + description);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nkotaa"},"content":"    public void addTask(String description, String from, String to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nkotaa"},"content":"        tasks[numTasks] \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nkotaa"},"content":"        numTasks +\u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"nkotaa"},"content":"        talk(\"added: \" + description);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"nkotaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"nkotaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nkotaa"},"content":"todo forage for wood","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nkotaa"},"content":"deadline start a fire /by night","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nkotaa"},"content":"event the dance of the magpie frings /from dusk /to dawn","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nkotaa"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nkotaa"},"content":"build a hut","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nkotaa"},"content":"mark 2","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nkotaa"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nkotaa":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nkotaa"},"content":"java -classpath ..\\bin Blue \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"nkotaa":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nkotaa"},"content":"if ! javac -cp ../src/main/java/Blue -Xlint:none -d ../bin ../src/main/java/Blue/*.java","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nkotaa"},"content":"java -classpath ../bin Blue \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"nkotaa":2}}]
