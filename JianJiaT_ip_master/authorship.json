[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"# Dor User Guide","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"Dor is a CLI chatbot that helps users track their tasks.","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"1. Quick Start","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"2. Features","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"   - Add","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"   - List","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"   - Delete","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"   - Mark","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"   - Find","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"   - Save","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"   - Load","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"   - Quit","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"## Quick Start","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"2. Download the latest `Dor.jar` file from JianJiaT/ip/Releases on GitHub.","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"3. Open a command terminal and `cd` to the folder you put the JAR file in","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"4. Enter `java -jar Dor.jar` into the terminal to run the chatbot","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"5. Refer to the Features section below for details of each command","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"- Input is case-sensitive","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"- Words in UPPER_CASE are parameters","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"- Extraneous parameters are ignored","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"- Parameter order must follow that specified in the SYNOPSIS of the command","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"- Parameters in curly braces must match one of the options specified in the DESCRIPTION of the command","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"- Items in square brackets are to be included or omitted as specified in the DESCRIPTION of the command","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"### Adding tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"SYNOPSIS","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"   `{TASK_TYPE} [TASK_NAME] [/by DEADLINE_DUE_DATE_TIME] [/from EVENT_START_DATE_TIME] [/to EVENT_END_DATE_TIME]`","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"DESCRIPTION","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"   - Adds a task to be tracked by the chatbot","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"   - The added task is marked as not done","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"   - {TASK_TYPE} must match one of \"todo\", \"deadline\" or \"event\"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"   - [/by DEADLINE_DUE_DATE_TIME] is to be included if {TASK_TYPE} is \"deadline\" and refers to the due date/time of the task, omitted otherwise","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"   - [/from EVENT_START_DATE_TIME] is to be included if {TASK_TYPE} is \"event\" and refers to the start date/time of the event, omitted otherwise","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"   - [/to EVENT_END_DATE_TIME] is to be included if {TASK_TYPE} is \"event\" and refers to the end date/time of the event, omitted otherwise","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"EXAMPLES","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"   - `todo go shopping`","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"   - `deadline assignment 1 /by 15 may`","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"   - `event friend\u0027s birthday party /from 14 april 2pm /to 6pm`","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"### Listing tasks: list","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"SYNOPSIS","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"   `list`","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"DESCRIPTION","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"   - Lists all tasks tracked by the chatbot","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"### Deleting tasks: delete","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"SYNOPSIS","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"   `delete INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"DESCRIPTION","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"   - Deletes the task at INDEX","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"   - INDEX refers to the index number shown in the task list displayed by `list`","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"### Marking tasks","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"SYNOPSIS","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"   `{MARK_OR_UNMARK} INDEX`","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"DESCRIPTION","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"   - Marks the task at INDEX as done or not done, represented by \"X\" and \" \" respectively in the task list displayed by `list`","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"   - {MARK_OR_UNMARK} must match one of \"mark\" or \"unmark\"","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"   - INDEX refers to the index number shown in the task list displayed by `list`","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"JianJiaT"},"content":"### Finding tasks: find","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"JianJiaT"},"content":"SYNOPSIS","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"JianJiaT"},"content":"   `find KEYWORD`","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"JianJiaT"},"content":"DESCRIPTION","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"JianJiaT"},"content":"   - Lists all tasks containing KEYWORD in their name (case sensitive)","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"JianJiaT"},"content":"EXAMPLES","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"JianJiaT"},"content":"   - `find cook` lists \"todo cook meat\" and \"event cooking competition /from 6pm /to 8pm\"","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"JianJiaT"},"content":"   - `find dance` lists \"todo dance\" but not \"todo DANCE\"","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"JianJiaT"},"content":"### Saving data","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"JianJiaT"},"content":"Task data is automatically saved by the chatbot to the data file `./data/dor.txt` following any command that changes a task","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"JianJiaT"},"content":"### Loading data","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"JianJiaT"},"content":"Task data is automatically loaded by the chatbot from the data file `./data/dor.txt` on startup","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"JianJiaT"},"content":"### Quitting the chatbot: bye","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"JianJiaT"},"content":"SYNOPSIS","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"JianJiaT"},"content":"   `bye`","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"JianJiaT"},"content":"DESCRIPTION","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"JianJiaT"},"content":"   - Quits the chatbot","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"-":19,"JianJiaT":101}},{"path":"src/main/java/exceptions/DeadlineNoByDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when a Deadline-type task has no due date/time specified","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class DeadlineNoByDateTimeException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating the lack of due date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"    public DeadlineNoByDateTimeException() {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: \u0027Deadline\u0027-type task is missing due date!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"JianJiaT":14}},{"path":"src/main/java/exceptions/EventNoFromDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when an Event-type task has no start date/time specified","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class EventNoFromDateTimeException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating the lack of start date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"    public EventNoFromDateTimeException() {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: \u0027Event\u0027-type task is missing starting date/time!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"JianJiaT":14}},{"path":"src/main/java/exceptions/EventNoToDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when an \"Event\"-type task has no end date/time specified","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class EventNoToDateTimeException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating the lack of end date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"    public EventNoToDateTimeException() {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: \u0027Event\u0027-type task is missing ending date/time!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"JianJiaT":14}},{"path":"src/main/java/exceptions/EventToBeforeFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when the \"Event\"-date time is specified with end date/time preceding start date/time,","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" * thus violating the format","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"public class EventToBeforeFromException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating the formatting error of end date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"     * preceding start date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    public EventToBeforeFromException() {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: \u0027Event\u0027-type task has reversed start and end date/time!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"JianJiaT":16}},{"path":"src/main/java/exceptions/InputIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when an user-specified index is out-of-bounds, defined as an index less than 0","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" * or an index exceeding the current number of tasks tracked by Dor","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"public class InputIndexOutOfBoundsException extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating that the index is out of bounds","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"    public InputIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: Index out of bounds!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"JianJiaT":15}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when the user input does not match any of the available commands","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating that the input is invalid","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"    public InvalidInputException() {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: Invalid input!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"JianJiaT":14}},{"path":"src/main/java/exceptions/TaskNoNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Exception thrown when a task to be added has no name specified","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class TaskNoNameException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for this exception with an error message indicating the lack of name","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"    public TaskNoNameException() {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"        super(\"ERROR: Task not given a name!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"JianJiaT":14}},{"path":"src/main/java/logic/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package logic;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"import exceptions.DeadlineNoByDateTimeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"import exceptions.EventNoFromDateTimeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"import exceptions.EventNoToDateTimeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"import exceptions.EventToBeforeFromException;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"import exceptions.TaskNoNameException;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":" * Class used to parse user input","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"public abstract class Parser {","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"    public static final int TODO_LENGTH\u003d 5;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"    public static final int DEADLINE_LENGTH \u003d 9;","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"    public static final int EVENT_LENGTH \u003d 6;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"    public static final int BY_LENGTH \u003d 4;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"    public static final int FROM_LENGTH \u003d 6;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"    public static final int TO_LENGTH \u003d 4;","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"     * Checks if the task type is valid, defined as being one of \"todo\", \"deadline\" or \"event\"","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"     * @param taskType The task type specified by the user","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"     * @return True if the task type is valid, false otherwise","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"    public static boolean checkTaskTypeIsValid(String taskType) {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"        boolean toReturn \u003d false;","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"            toReturn \u003d true;","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"            toReturn \u003d true;","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"        if (taskType.equals(\"event\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"            toReturn \u003d true;","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"        return toReturn;","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"     * Returns the ToDo-type task specified in the user input. Determines the name of the task from the input","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"     * @param input The user input specifying the task","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"     * @return ToDo-type task","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"    public static ToDo processToDo(String input) {","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"        String taskName;","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"        taskName \u003d input.substring(TODO_LENGTH);","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"        return new ToDo(taskName);","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"     * Returns the Deadline-type task specified in the user input. Determines the name and due date/time of the","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"     * task from the input","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"     * @param input The user input specifying the task","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"     * @return Deadline-type task","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"     * @throws Exception If task lacks a name","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"    public static Deadline processDeadline(String input) throws Exception {","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"        if (!(input.contains(\"/by \"))) {","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"            throw new DeadlineNoByDateTimeException();","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"        String taskName;","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"        int firstBackslashIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"        if (firstBackslashIndex \u003d\u003d DEADLINE_LENGTH) {","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"            // occurs when task is not given a name","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"            throw new TaskNoNameException();","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"        taskName \u003d input.substring(DEADLINE_LENGTH, firstBackslashIndex - 1);","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"        int byWhenIndex \u003d firstBackslashIndex + BY_LENGTH;","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"        String byWhen \u003d input.substring(byWhenIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"        return new Deadline(taskName, byWhen);","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"     * Returns the Event-type task specified in the user input. Determines the name, start date/time and","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"     * end date/time of the task rom the input","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"     * @param input The user input specifying the task","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"     * @return Event-type task","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"     * @throws Exception If task lacks a name","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"JianJiaT"},"content":"    public static Event processEvent(String input) throws Exception {","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"        if (!(input.contains(\"/from \"))) {","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"JianJiaT"},"content":"            throw new EventNoFromDateTimeException();","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"JianJiaT"},"content":"        if (!(input.contains(\"/to \"))) {","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"JianJiaT"},"content":"            throw new EventNoToDateTimeException();","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"JianJiaT"},"content":"        if (input.indexOf(\"/to \") \u003c input.indexOf(\"/from \")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"JianJiaT"},"content":"            throw new EventToBeforeFromException();","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"JianJiaT"},"content":"        String taskName;","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"JianJiaT"},"content":"        int firstBackslashIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"JianJiaT"},"content":"        if (firstBackslashIndex \u003d\u003d EVENT_LENGTH) {","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"JianJiaT"},"content":"            // occurs when task is not given a name","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"JianJiaT"},"content":"            throw new TaskNoNameException();","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"JianJiaT"},"content":"        taskName \u003d input.substring(EVENT_LENGTH, firstBackslashIndex - 1);","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"JianJiaT"},"content":"        int fromWhenIndex \u003d firstBackslashIndex + FROM_LENGTH;","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"JianJiaT"},"content":"        int secondBackslashIndex \u003d input.indexOf(\"/\", fromWhenIndex + 1);","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"JianJiaT"},"content":"        int toWhenIndex \u003d secondBackslashIndex + TO_LENGTH;","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"JianJiaT"},"content":"        String fromWhen \u003d input.substring(fromWhenIndex, secondBackslashIndex - 1);","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"JianJiaT"},"content":"        String toWhen \u003d input.substring(toWhenIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"JianJiaT"},"content":"        return new Event(taskName, fromWhen, toWhen);","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"JianJiaT"},"content":"     * Returns the index specified in the user input for task marking and deletion","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"JianJiaT"},"content":"     * @param input The user input specifying the index","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"JianJiaT"},"content":"     * @return The task index specified by the user as an int","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"JianJiaT"},"content":"    public static int processIndex(String input) {","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"JianJiaT"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"JianJiaT":121}},{"path":"src/main/java/logic/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package logic;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"import java.io.File;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":" * Class used to load data from and save data to data file located in ./data/dor.txt","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"public class Storage {","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"    public static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"    public static final int TASK_DONE_STATUS_INDEX \u003d 3;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"    public static final int TASK_NAME_INDEX \u003d 6;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"    public static final int COMMA_AND_SPACE_LENGTH \u003d 2;","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"    private File dataFile;","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Storage. Finds the data folder and file if they exist or creates them if they do not.","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"     * Instantiates a task manager where data will be loaded to and saved from","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"     * @param filePath Path to the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"     * @throws IOException On failure to create or find the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"        if (new File(\"./data\").mkdir()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(\"data folder created\");","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(\"data folder found\");","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"            if (new File(filePath).createNewFile()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"                System.out.println(\"dor.txt created\");","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"            } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"                System.out.println(\"dor.txt found\");","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"            throw new IOException();","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"        this.dataFile \u003d new File(filePath);","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"     * Loads all data from the data file into the task manager. Determines the type and done status","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"     * of the task specified in each line, then loads them using the respective methods for each type","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"     * @return A TaskManager containing the data from the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"     * @throws FileNotFoundException On failure to access the data file using java.util.Scanner","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"    public TaskManager loadDataFromTextFile() throws FileNotFoundException {","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"        Scanner s \u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"            s \u003d new Scanner(dataFile);","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(\"ERROR: Could not load dor.txt!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"            String data \u003d s.nextLine();","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"            String taskType \u003d String.valueOf(data.charAt(TASK_TYPE_INDEX));","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"            boolean taskIsDone \u003d processTaskDoneStatus(data);","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"            case \"T\":","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"                loadToDo(data, taskIsDone);","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"                break;","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"            case \"D\":","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"                loadDeadline(data, taskIsDone);","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"                break;","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"            case \"E\":","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"                loadEvent(data, taskIsDone);","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"                break;","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Successfully loaded data!\");","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Current number of tasks: \" + taskManager.numOfTasks);","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"        return taskManager;","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"JianJiaT"},"content":"     * Determines whether the task specified in a line of data is marked done or not done","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"JianJiaT"},"content":"     * @param data The line of data","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"JianJiaT"},"content":"     * @return True if the task is marked done, false if the task is marked false","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"JianJiaT"},"content":"    private boolean processTaskDoneStatus(String data) {","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"JianJiaT"},"content":"        boolean taskDoneStatus;","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"JianJiaT"},"content":"        if (String.valueOf(data.charAt(TASK_DONE_STATUS_INDEX)).equals(\"1\")){","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"JianJiaT"},"content":"            taskDoneStatus \u003d true;","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"JianJiaT"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"JianJiaT"},"content":"            taskDoneStatus \u003d false;","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"JianJiaT"},"content":"        return taskDoneStatus;","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"JianJiaT"},"content":"     * Loads a ToDo-type task into the task manager. Determines the name of the task from the line of data","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"JianJiaT"},"content":"     * @param data The line of data specifying the task","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"JianJiaT"},"content":"     * @param taskIsDone Whether the task is marked as done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"JianJiaT"},"content":"    private void loadToDo(String data, boolean taskIsDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"JianJiaT"},"content":"        String taskName \u003d data.substring(TASK_NAME_INDEX);","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"JianJiaT"},"content":"        taskManager.tasks.add(new ToDo(taskName, taskIsDone));","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"JianJiaT"},"content":"        taskManager.numOfTasks++;","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"JianJiaT"},"content":"     * Loads a Deadline-type task into the task manager. Determines the name and due date/time of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"JianJiaT"},"content":"     * from the line of data","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"JianJiaT"},"content":"     * @param data The line of data specifying the task","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"JianJiaT"},"content":"     * @param taskIsDone Whether the task is marked as done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"JianJiaT"},"content":"    private void loadDeadline(String data, boolean taskIsDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"JianJiaT"},"content":"        int commaAfterTaskNameIndex \u003d data.indexOf(\u0027,\u0027, TASK_NAME_INDEX);","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"JianJiaT"},"content":"        String taskName \u003d data.substring(TASK_NAME_INDEX, commaAfterTaskNameIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"JianJiaT"},"content":"        String byWhen \u003d data.substring(commaAfterTaskNameIndex + COMMA_AND_SPACE_LENGTH);","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"JianJiaT"},"content":"        taskManager.tasks.add(new Deadline(taskName, taskIsDone, byWhen));","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"JianJiaT"},"content":"        taskManager.numOfTasks++;","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"JianJiaT"},"content":"     * Loads an Event-type task into the task manager. Determines the name, start date/time and end date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"JianJiaT"},"content":"     * of the task from the line of data","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"JianJiaT"},"content":"     * @param data The line of data specifying the task","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"JianJiaT"},"content":"     * @param taskIsDone Whether the task is marked as done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"JianJiaT"},"content":"    private void loadEvent(String data, boolean taskIsDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"JianJiaT"},"content":"        int commaAfterTaskNameIndex \u003d data.indexOf(\u0027,\u0027, TASK_NAME_INDEX);","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"JianJiaT"},"content":"        String taskName \u003d data.substring(TASK_NAME_INDEX, commaAfterTaskNameIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"JianJiaT"},"content":"        int commaAfterFromDateTimeIndex \u003d data.indexOf(\",\", commaAfterTaskNameIndex + COMMA_AND_SPACE_LENGTH);","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"JianJiaT"},"content":"        String fromWhen \u003d data.substring(commaAfterTaskNameIndex + COMMA_AND_SPACE_LENGTH, commaAfterFromDateTimeIndex);","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"JianJiaT"},"content":"        String toWhen \u003d data.substring(commaAfterFromDateTimeIndex + COMMA_AND_SPACE_LENGTH);","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"JianJiaT"},"content":"        taskManager.tasks.add(new Event(taskName, taskIsDone, fromWhen, toWhen));","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"JianJiaT"},"content":"        taskManager.numOfTasks++;","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"JianJiaT"},"content":"     * Saves all tasks in the task manager into the data file.","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"JianJiaT"},"content":"     * @throws IOException On failure to write to the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"JianJiaT"},"content":"    public void saveDataToTextFile() throws IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"JianJiaT"},"content":"        FileWriter fw \u003d new FileWriter(dataFile);","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"JianJiaT"},"content":"        for (int i \u003d 0; i \u003c taskManager.numOfTasks; i++) {","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"JianJiaT"},"content":"            Task currTask \u003d taskManager.tasks.get(i);","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"JianJiaT"},"content":"            String data \u003d processData(currTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"JianJiaT"},"content":"            fw.write(data + System.lineSeparator());","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"JianJiaT"},"content":"        fw.close();","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"JianJiaT"},"content":"     * Returns a String representation of a task to be saved","lastModifiedDate":"2024-02-27"},{"lineNumber":165,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"JianJiaT"},"content":"     * @param currTask The task to be represented as a String","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of a task in the format used by the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"JianJiaT"},"content":"    private String processData(Task currTask) {","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"JianJiaT"},"content":"        String data;","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"JianJiaT"},"content":"        String doneStatusOneAndZero;","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"JianJiaT"},"content":"        if (currTask.getDoneStatus().equals(\"X\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"JianJiaT"},"content":"            doneStatusOneAndZero \u003d \"1\";","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"JianJiaT"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":175,"author":{"gitId":"JianJiaT"},"content":"            doneStatusOneAndZero \u003d \"0\";","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"JianJiaT"},"content":"        data \u003d currTask.getType() + \", \" + doneStatusOneAndZero + \", \" + currTask.getName();","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"JianJiaT"},"content":"        if (currTask.getType().equals(\"D\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":179,"author":{"gitId":"JianJiaT"},"content":"            data \u003d data + \", \" + ((Deadline) currTask).getBy();","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"JianJiaT"},"content":"        } else if (currTask.getType().equals(\"E\")) {","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"JianJiaT"},"content":"            data \u003d data + \", \" + ((Event) currTask).getFrom() + \", \" + ((Event) currTask).getTo();","lastModifiedDate":"2024-02-27"},{"lineNumber":182,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"JianJiaT"},"content":"        return data;","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"JianJiaT":185}},{"path":"src/main/java/logic/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package logic;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"import exceptions.DeadlineNoByDateTimeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"import exceptions.EventNoFromDateTimeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"import exceptions.EventNoToDateTimeException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"import exceptions.EventToBeforeFromException;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"import exceptions.InputIndexOutOfBoundsException;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"import exceptions.InvalidInputException;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"import exceptions.TaskNoNameException;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":" * Class used to manage tasks. Stores tasks in an ArrayList. Performs task addition, marking, listing,","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":" * and deletion","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"public class TaskManager {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"    protected int numOfTasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for TaskManager. Initialises number of tasks stored to 0","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"    public TaskManager() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"        this.numOfTasks \u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"     * Adds a task to be tracked","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"     * @param input User input from which the task type and name is to be extracted","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"     * @throws TaskNoNameException If task lacks a name","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"     * @throws DeadlineNoByDateTimeException If Deadline-type task lacks due date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"     * @throws EventNoFromDateTimeException If Event-type task lacks start date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"     * @throws EventNoToDateTimeException If Event-type task lacks end date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"     * @throws EventToBeforeFromException If Event-type task has end date/time specified before","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"     * start date/time","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"     * @throws InvalidInputException If input is invalid","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"    public void addTask(String input) throws Exception {","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"        String[] inputAsArray \u003d input.split(\" \");","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"        String taskType \u003d inputAsArray[0];","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"        if (Parser.checkTaskTypeIsValid(taskType) \u003d\u003d false) {","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"        if (inputAsArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"            throw new TaskNoNameException();","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"            tasks.add(Parser.processToDo(input));","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"                tasks.add(Parser.processDeadline(input));","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"            } catch (DeadlineNoByDateTimeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"                throw new DeadlineNoByDateTimeException();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"        case \"event\":","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"                tasks.add(Parser.processEvent(input));","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"            } catch (EventNoFromDateTimeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"                throw new EventNoFromDateTimeException();","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"            } catch (EventNoToDateTimeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"                throw new EventNoToDateTimeException();","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"            } catch (EventToBeforeFromException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"                throw new EventToBeforeFromException();","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"        printAndIncrementAfterAddTask();","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"     * Updates number of tasks tracked by Dor and prints newly-added task and updated number of tasks","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"    private void printAndIncrementAfterAddTask() {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(tasks.get(numOfTasks));","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"        numOfTasks++;","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Now you have \" + numOfTasks + \" tasks in the list\");","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"JianJiaT"},"content":"     * Marks the task at specified index as done or not done","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"JianJiaT"},"content":"     * @param taskIndex Index of the task to be marked done or not done","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"JianJiaT"},"content":"     * @param isDone Task is marked as done if true, not done if false","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"JianJiaT"},"content":"     * @throws InputIndexOutOfBoundsException If user-specified index is out-of-bounds","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"JianJiaT"},"content":"    public void markTask(int taskIndex, boolean isDone) throws InputIndexOutOfBoundsException {","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"JianJiaT"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d numOfTasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"JianJiaT"},"content":"            throw new InputIndexOutOfBoundsException();","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"JianJiaT"},"content":"        Task targetTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"JianJiaT"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"JianJiaT"},"content":"            targetTask.markDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(\"Nice! I\u0027ve marked this Task as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(targetTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"JianJiaT"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"JianJiaT"},"content":"            targetTask.markNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(\"Ok, I\u0027ve marked this Task as not done yet:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(targetTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"JianJiaT"},"content":"     * Lists all tasks currently tracked","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"JianJiaT"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"JianJiaT"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"JianJiaT"},"content":"            System.out.println((i+1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"JianJiaT"},"content":"     * Deletes the task at specified index","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"JianJiaT"},"content":"     * @param deleteIndex Index of the task to be deleted","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"JianJiaT"},"content":"     * @throws InputIndexOutOfBoundsException If user-specified index is out-of-bounds","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"JianJiaT"},"content":"    public void deleteTask(int deleteIndex) throws InputIndexOutOfBoundsException {","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"JianJiaT"},"content":"        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d numOfTasks) {","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"JianJiaT"},"content":"            throw new InputIndexOutOfBoundsException();","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Okay. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(tasks.get(deleteIndex));","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"JianJiaT"},"content":"        tasks.remove(deleteIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"JianJiaT"},"content":"        numOfTasks--;","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Now you have \" + numOfTasks + \" tasks in the list\");","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"JianJiaT"},"content":"     * Finds and prints out all tasks that contain a keyword","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"JianJiaT"},"content":"     * @param keyword String that a task should contain to be found","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":142,"author":{"gitId":"JianJiaT"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"JianJiaT"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":144,"author":{"gitId":"JianJiaT"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"JianJiaT"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"JianJiaT"},"content":"            if (currTask.getName().contains(keyword)) {","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"JianJiaT"},"content":"                count++;","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"JianJiaT"},"content":"                if (count \u003d\u003d 1) {","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"JianJiaT"},"content":"                    System.out.println(\"Here are the tasks that contain the keyword: \");","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"JianJiaT"},"content":"                }","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"JianJiaT"},"content":"                System.out.println(count + \". \" + currTask);","lastModifiedDate":"2024-02-27"},{"lineNumber":152,"author":{"gitId":"JianJiaT"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":154,"author":{"gitId":"JianJiaT"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"JianJiaT"},"content":"            System.out.println(\"No matching tasks found\");","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":158,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JianJiaT":158}},{"path":"src/main/java/logic/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package logic;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":" * Class used to interact with the user","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"public class UserInterface {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"    public static final int MARK_LENGTH \u003d 5;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"    public static final int UNMARK_LENGTH \u003d 7;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"    public static final int DELETE_LENGTH \u003d 7;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"    private Scanner reader;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for UserInterface. Instantiates a Scanner with which to read user input","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"     * @param storage The Storage object containing the data file to save to","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"     * @param taskManager The TaskManager object within which tasks will be managed","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"    public UserInterface(Storage storage, TaskManager taskManager) {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"     * Reads user input and determines the command the user is giving","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"    public void processInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"        while (true) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"            String input \u003d reader.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"            if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"                int taskIndex \u003d Parser.processIndex(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"                try {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"                    taskManager.markTask(taskIndex, false);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"                    storage.saveDataToTextFile();","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"                    printError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"            } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"                int taskIndex \u003d Parser.processIndex(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"                try {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"                    taskManager.markTask(taskIndex, true);","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"                    storage.saveDataToTextFile();","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"                    printError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"                int deleteIndex \u003d Parser.processIndex(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"                try {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"                    taskManager.deleteTask(deleteIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"                    storage.saveDataToTextFile();","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"                    printError(e);","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"            } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"                taskManager.findTask(input.split(\" \")[1]);","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"                taskManager.listTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"            } else {","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"                try {","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"                    taskManager.addTask(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"                    storage.saveDataToTextFile();","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"                    printError(e);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"     * Prints exception message when an exception is caught","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"     * @param e The exception caught whose message is to be printed","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"    public static void printError(Exception e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JianJiaT":84}},{"path":"src/main/java/main/Dor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package main;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"import logic.UserInterface;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"import logic.TaskManager;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"import logic.Storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":" * Implementation of a chatbot that can track and manage user tasks named Dor","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"public class Dor {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"     * Main method that starts up the chatbot. Prints welcome message upon start-up and farewell message upon","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"     * exit. Quits the program upon failure to create or find the data file located at \"./data/dor.txt\"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"     * @param args Unused","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"        printWelcomeMessage();","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"            storage \u003d initialiseStorage();","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"            printErrorExitMessage();","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"            return;","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"        TaskManager taskManager \u003d initialiseTaskManager(storage);","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"        start(storage, taskManager);","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"        printByeMessage();","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"     * Makes the chatbot start reading user input after instantiating an UserInterface object","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"     * @param storage The Storage object containing the data file to save to","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"     * @param taskManager The TaskManager object within which tasks will be managed","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"    public static void start(Storage storage, TaskManager taskManager) {","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"        UserInterface UI \u003d new UserInterface(storage, taskManager);","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"        UI.processInput();","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"     * Returns a Storage object containing the data file located at \"./data/dor.txt\"","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"     * @return The Storage object containing the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"     * @throws IOException On failure to create or find the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"    private static Storage initialiseStorage() throws IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"            storage \u003d new Storage(\"./data/dor.txt\");","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"            throw new IOException();","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"        return storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"     * Returns a task manager containing the tasks loaded from the data file, or an empty task manager if the","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"     * data file cannot be loaded","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"     * @param storage The Storage object containing the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"     * @return A TaskManager object","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"    private static TaskManager initialiseTaskManager(Storage storage) {","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"        TaskManager taskManager;","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"            taskManager \u003d storage.loadDataFromTextFile();","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"            taskManager \u003d new TaskManager();","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"        return taskManager;","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"     * Prints welcome message","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Hello! I\u0027m Dor\");","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"     * Prints farewell message","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"JianJiaT"},"content":"    private static void printByeMessage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"JianJiaT"},"content":"     * Prints message prior to quitting the program due to failure to create or find the data file","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"JianJiaT"},"content":"    private static void printErrorExitMessage() {","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"ERROR: Could not create or find dor.txt!\");","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"JianJiaT"},"content":"        System.out.println(\"Now exiting Dor...\");","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"JianJiaT":101}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Represents a Deadline-type task to be tracked by Dor. Subclass of Task","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"    private String by;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Deadline when no task name or task done status is provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with no parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"     * @param by Date/time the task has to be done by","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"    public Deadline(String by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"        super();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Deadline when task name is provided but task done status is not.","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with one parameter","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"     * @param by Date/time the task has to be done by","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"        super(name);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Deadline when task name and task done status are provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with two parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"     * @param isDone Whether the task is done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"     * @param by Date/time the task has to be done by","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"    public Deadline(String name, boolean isDone, String by) {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"     * Returns the task-type \"Deadline\", represented by the String \"D\"","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the task being of \"Deadline\" type","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"    public String getType() {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"        return \"D\";","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"     * Returns the date/time the task has to be done by","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"     * @return Date/time the task has to be done by","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"        return by;","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"     * Returns a String representation of the task for printing","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"        return (\"[D]\" + super.toString() + \" (by: \" + this.by + \")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JianJiaT":73}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Represents an Event-type task to be tracked by Dor. Subclass of Task","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"    private String from;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    private String to;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Event when no task name or task done status is provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with no parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"     * @param from Date/time the event begins","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"     * @param to Date/time the event ends","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"    public Event(String from, String to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"        super();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Event when task name is provided but task done status is not.","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with one parameter","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the event","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"     * @param from Date/time the event begins","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"     * @param to Date/time the event ends","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"        super(name);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Event when task name and task done status are provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with two parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the event","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"     * @param isDone Whether the task is done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"     * @param from Date/time the event begins","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"     * @param to Date/time the event ends","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"    public Event(String name, boolean isDone, String from, String to) {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"     * Returns the task-type \"Event\", represented by the String \"E\"","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the task being of \"Event\" type","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"    public String getType() {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"        return \"E\";","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"     * Returns the date/time the event begins","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"     * @return Date/time the event begins","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"        return from;","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"     * Returns the date/time the event ends","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"     * @return Date/time the event ends","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"    public String getTo() {","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"        return to;","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"     * Returns a String representation of the event for printing","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the event","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"JianJiaT"},"content":"        return (\"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JianJiaT":89}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Represents a task to be tracked by Dor","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"    private String name;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Task when no task name or task done status is provided","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"    public Task() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"        this(\"placeholder\");","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Task when task name is provided but task done status is not","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for Task when task name and task done status are provided","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"     * @param isDone Whether the task is done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"     * Returns the name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"     * @return Task name","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"    public String getName() {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"        return name;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"     * Returns the done status of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"     * @return Task done status","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"            return \"X\";","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"JianJiaT"},"content":"        return \" \";","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"JianJiaT"},"content":"     * Marks a task as done","lastModifiedDate":"2024-02-27"},{"lineNumber":62,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":63,"author":{"gitId":"JianJiaT"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"JianJiaT"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"JianJiaT"},"content":"     * Marks a task as not done","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":70,"author":{"gitId":"JianJiaT"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"JianJiaT"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"JianJiaT"},"content":"     * Returns type of the task. Abstract method to be implemented by subclasses of Task","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"JianJiaT"},"content":"    public abstract String getType();","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"JianJiaT"},"content":"     * Returns a String representation of the task for printing","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"JianJiaT"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JianJiaT"},"content":"        return (\"[\" + getDoneStatus() + \"] \" + this.name);","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"JianJiaT":88}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"package tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":" * Represents a ToDo-type task to be tracked by Dor. Subclass of Task","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for ToDo when no task name or task done status is provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with no parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"JianJiaT"},"content":"    public ToDo() {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JianJiaT"},"content":"        super();","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for ToDo when task name is provided but task done status is not.","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with one parameter","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"JianJiaT"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JianJiaT"},"content":"        super(name);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"JianJiaT"},"content":"     * Constructor for ToDo when task name and task done status are provided.","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"JianJiaT"},"content":"     * Invokes the superclass constructor with two parameters","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"JianJiaT"},"content":"     * @param name Name of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"JianJiaT"},"content":"     * @param isDone Whether the task is done or not","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"JianJiaT"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"JianJiaT"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"JianJiaT"},"content":"     * Returns the task-type \"ToDo\", represented by the String \"T\"","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the task being of \"ToDo\" type","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"JianJiaT"},"content":"    public String getType() {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"JianJiaT"},"content":"        return \"T\";","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"JianJiaT"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"JianJiaT"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"JianJiaT"},"content":"     * Returns a String representation of the task for printing","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"JianJiaT"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"JianJiaT"},"content":"     * @return String representation of the task","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"JianJiaT"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"JianJiaT"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"JianJiaT"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"JianJiaT"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JianJiaT"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"JianJiaT"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JianJiaT":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JianJiaT"},"content":"todo read book","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"JianJiaT"},"content":"deadline assignment 1 /by feb 27","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"JianJiaT"},"content":"event party /from apr 5 2pm /to 5pm","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JianJiaT"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JianJiaT"},"content":"mark 1","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JianJiaT"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JianJiaT"},"content":"mark 3","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JianJiaT"},"content":"unmark 1","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JianJiaT"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JianJiaT":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JianJiaT"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\main\\Dor.java","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JianJiaT"},"content":"java -classpath ..\\bin Dor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"JianJiaT":2}}]
