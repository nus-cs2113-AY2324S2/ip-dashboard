[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"# Alice Chatbot User guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"Hello! Feel free to use this bot to track your tasks :D","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"## Features","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"- Add different types of tasks: `Todo`, `Deadline`, and `Event`.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"- Mark tasks as done or undone","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"- Delete tasks from your list","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"- Find tasks with a keyword search","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"- View all tasks in a neatly formatted list","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"- Save tasks persistently, so that they are not lost after the program ends","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"   - Click `Open`.","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"   - Select the project directory, and click `OK`.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"   - If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"4. After that, locate the `src/main/java/Alice.java` file, right-click it, and choose `Run Alice.main()`","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"5. If everything was set up correctly, you will be able to see this dialog:","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"yoo i\u0027m alice! ur virtual bestie here to keep track of ur vibes","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"what\u0027s poppin? u can tell me stuff to remember, or type \u0027bye\u0027 to dip","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"## Possible Commands","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"- `list`: Display a list of all the tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `list`","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"- `todo [description]`: Add a new \u0027Todo\u0027 task with the specified description.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `todo Read a book`","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"- `deadline [description] /by [date, time]`: Add a new \u0027Deadline\u0027 task with a specified due date and time.","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `deadline Return library books /by 2022-12-02 1800`","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"- `event [description] /from [start time] /to [end time]`: Add a new \u0027Event\u0027 task with a specified start and end time.","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `event Team meeting /from 2022-12-05 10:00 /to 2022-12-05 11:00`","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"- `mark [task number]`: Mark a task as completed.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `mark 3`","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"- `unmark [task number]`: Revert a task to an uncompleted status.","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `unmark 3`","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"- `delete [task number]`: Remove a task from the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `delete 4`","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"- `find [keyword]`: Search for tasks containing the specified keyword.","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `find book`","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"- `bye`: Exit the chatbot application.","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"   - **Example**: `bye`","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"Use these commands to manage your tasks with the chatbot. For each command, refer to the provided examples for guidance.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Dheekshitha2":53,"-":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"# Alice Chatbot User guide","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"Hello! Feel free to use this bot to track your tasks :D","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"- Add different types of tasks: `Todo`, `Deadline`, and `Event`.","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"- Mark tasks as done or undone","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"- Delete tasks from your list","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"- Find tasks with a keyword search","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"- View all tasks in a neatly formatted list","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"- Save tasks persistently, so that they are not lost after the program ends","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"## Setting up in Intellij","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"    - Click `Open`.","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"    - Select the project directory, and click `OK`.","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"    - If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-03-08"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2024-03-08"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"4. After that, locate the `src/main/java/Alice.java` file, right-click it, and choose `Run Alice.main()`","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"5. If everything was set up correctly, you will be able to see this dialog:","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"yoo i\u0027m alice! ur virtual bestie here to keep track of ur vibes","lastModifiedDate":"2024-03-08"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"what\u0027s poppin? u can tell me stuff to remember, or type \u0027bye\u0027 to dip","lastModifiedDate":"2024-03-08"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"## Possible Commands","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"- `list`: Display a list of all the tasks.","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `list`","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"- `todo [description]`: Add a new \u0027Todo\u0027 task with the specified description.","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `todo Read a book`","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"- `deadline [description] /by [date, time]`: Add a new \u0027Deadline\u0027 task with a specified due date and time.","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `deadline Return library books /by 2022-12-02 1800`","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"- `event [description] /from [start time] /to [end time]`: Add a new \u0027Event\u0027 task with a specified start and end time.","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `event Team meeting /from 2022-12-05 10:00 /to 2022-12-05 11:00`","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"- `mark [task number]`: Mark a task as completed.","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `mark 3`","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"- `unmark [task number]`: Revert a task to an uncompleted status.","lastModifiedDate":"2024-03-08"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `unmark 3`","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"- `delete [task number]`: Remove a task from the list.","lastModifiedDate":"2024-03-08"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `delete 4`","lastModifiedDate":"2024-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"- `find [keyword]`: Search for tasks containing the specified keyword.","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `find book`","lastModifiedDate":"2024-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"- `bye`: Exit the chatbot application.","lastModifiedDate":"2024-03-08"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"    - **Example**: `bye`","lastModifiedDate":"2024-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"Use these commands to manage your tasks with the chatbot. For each command, refer to the provided examples for guidance.","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"Dheekshitha2":43,"-":18}},{"path":"src/main/java/Alice.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":" *  This class is the main entry point of the Alice chatbot. It initialises the application","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":" *  and handles user input commands to perform various task management operations such as","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":" *  adding, deleting, marking/ unmarking tasks, and finding tasks by their keyword.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"public class Alice {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"    private Parser parser;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"     * Constructs an instance of Alice and initialises the user interface, parser and storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"     * It also attempts to load any saved tasks from storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"     * @param filePath The file path where the tasks are saved and loaded from.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"    public Alice(String filePath) {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"     * Starts the application and enters the command processing loop.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"    public void run() {","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showGreeting();","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"        while (true) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"                    handleExit();","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"                    handleDelete(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Dheekshitha2"},"content":"                    ui.showTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"                    handleTodo(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.startsWith(\"deadline \")){","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"                    handleDeadline(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.startsWith(\"event \")){","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Dheekshitha2"},"content":"                    handleEvent(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.startsWith(\"mark \") || input.startsWith(\"unmark \")){","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"                    handleMarkUnmark(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Dheekshitha2"},"content":"                } else if (input.equals(\"help\")){","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"                    ui.showHelp();","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Dheekshitha2"},"content":"                } else if(input.startsWith(\"find \")){","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"Dheekshitha2"},"content":"                    handleFind(input);","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"Dheekshitha2"},"content":"                }","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Dheekshitha2"},"content":"                else {","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Dheekshitha2"},"content":"                    ui.showInvalidInputMessage();","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Dheekshitha2"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"Dheekshitha2"},"content":"            } catch (AliceException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"Dheekshitha2"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Dheekshitha2"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"Dheekshitha2"},"content":"                ui.showError(\"An error occurred while saving/loading tasks.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleExit() throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showFarewell();","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Dheekshitha2"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Dheekshitha2"},"content":"        System.exit(0);","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleDelete(String input) throws AliceException, IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Dheekshitha2"},"content":"        int taskNumber \u003d parser.parseTaskNumber(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Dheekshitha2"},"content":"        Task removedTask \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showTaskDeleted(removedTask, tasks.size());","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Dheekshitha2"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleTodo(String input) throws AliceException, IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Dheekshitha2"},"content":"        String description \u003d parser.parseDescription(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Dheekshitha2"},"content":"        Todo newTask \u003d new Todo(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Dheekshitha2"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Dheekshitha2"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleMarkUnmark(String input) throws AliceException, IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Dheekshitha2"},"content":"        int taskIndex \u003d parser.parseTaskNumber(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Dheekshitha2"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Dheekshitha2"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Dheekshitha2"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"Dheekshitha2"},"content":"            ui.showMarkedTask(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Dheekshitha2"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"Dheekshitha2"},"content":"            task.markAsUndone();","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"Dheekshitha2"},"content":"            ui.showUnmarkedTask(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"Dheekshitha2"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleDeadline(String input) throws AliceException, IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Dheekshitha2"},"content":"        Parser.DeadlineData deadlineData \u003d parser.parseDeadline(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Dheekshitha2"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineData.description, deadlineData.by);","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Dheekshitha2"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showTaskAdded(newDeadline, tasks.size());","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Dheekshitha2"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleEvent(String input) throws AliceException, IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Dheekshitha2"},"content":"        Parser.EventData eventData \u003d parser.parseEvent(input);","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Dheekshitha2"},"content":"        Event newEvent \u003d new Event(eventData.description, eventData.start, eventData.end);","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Dheekshitha2"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showTaskAdded(newEvent, tasks.size());","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Dheekshitha2"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":127,"author":{"gitId":"Dheekshitha2"},"content":"    private void handleFind(String input) throws AliceException {","lastModifiedDate":"2024-03-07"},{"lineNumber":128,"author":{"gitId":"Dheekshitha2"},"content":"        String keyword \u003d input.substring(5).trim(); // Assuming input starts with \"find \"","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"Dheekshitha2"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"Keyword cannot be empty.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":133,"author":{"gitId":"Dheekshitha2"},"content":"        Map\u003cInteger, Task\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-03-07"},{"lineNumber":134,"author":{"gitId":"Dheekshitha2"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":137,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"Dheekshitha2"},"content":"     * Main method that serves as the entry point of the application.","lastModifiedDate":"2024-03-07"},{"lineNumber":139,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":140,"author":{"gitId":"Dheekshitha2"},"content":"     * @param args Command line arguments","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":142,"author":{"gitId":"Dheekshitha2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Dheekshitha2"},"content":"        new Alice(\"data/alice.txt\").run();","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Dheekshitha2":145}},{"path":"src/main/java/AliceException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"// Defined a class to represent exceptions specific to Alice","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"public class AliceException extends Exception{","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"    public AliceException(String message){","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"        super(message);","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Dheekshitha2":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":" * Represents deadline task with a specific due date and time","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"    private String byString;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"    // Define an array of formatters to support multiple date formats","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"    private static final DateTimeFormatter[] INPUT_FORMATTERS \u003d {","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"    };","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"        this.byDateTime \u003d parseDateTime(by); // Attempt to parse the date using the defined formatters","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"        this.byString \u003d (this.byDateTime \u003d\u003d null) ? by : null; // If parsing fails, treat by as a regular string","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"        for (DateTimeFormatter formatter : INPUT_FORMATTERS) {","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"                return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"                // If parsing fails, catch the exception and try the next formatter","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"        // If all formatters fail, return null","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"        return null;","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"        if (byDateTime !\u003d null) {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"            // If byDateTime is not null, format it using the outputFormatter","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"Dheekshitha2"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byDateTime.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"            // If byDateTime is null, byString contains the original string","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"Dheekshitha2"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"Dheekshitha2"},"content":"        if (byDateTime !\u003d null) {","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"            // For consistency, use the first formatter\u0027s pattern when saving to file","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"            return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + byDateTime.format(INPUT_FORMATTERS[0]);","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"Dheekshitha2"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"            return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + byString;","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Dheekshitha2":64}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"    protected String start;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"    protected String end;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Dheekshitha2":20}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.*;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":" * The Parser class is responsible for interpreting user commands and parsing strings into tasks and their attributes.","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"public class Parser {","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"    );","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"     * Parses the task number from the user input.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"     * @param input The command entered by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"     * @return The task number as an integer.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If the input does not contain a valid integer task number.","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"    public int parseTaskNumber(String input) throws AliceException {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"        try {","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"            return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"Please enter a valid task number.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"     * Extracts the description from a user input string.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"     * @param input The command entered by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"     * @return The description as a string.","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If the description is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"    public String parseDescription(String input) throws AliceException {","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"        String description \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"Description cannot be empty.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"        return description;","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Dheekshitha2"},"content":"    public static class DeadlineData {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"        String description;","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"        String by;","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"        // Constructor","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"        public DeadlineData(String description, String by) {","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"Dheekshitha2"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"Dheekshitha2"},"content":"     * Parses the given input to extract a deadline description and due date.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"Dheekshitha2"},"content":"     * @param input The input string to parse.","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"Dheekshitha2"},"content":"     * @return DeadlineData containing the description and the due date.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If the input format is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"Dheekshitha2"},"content":"    public DeadlineData parseDeadline(String input) throws AliceException {","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Dheekshitha2"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"Dheekshitha2"},"content":"        if (parts.length \u003c 2 || parts[1].isBlank()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"Invalid deadline format. Please include \u0027/by\u0027.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Dheekshitha2"},"content":"        // No need to parse LocalDateTime here. Just pass the string directly.","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"Dheekshitha2"},"content":"        String description \u003d parts[0].substring(parts[0].indexOf(\" \") + 1);","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"Dheekshitha2"},"content":"        String by \u003d parts[1]; // Pass the date string directly","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"Dheekshitha2"},"content":"        return new DeadlineData(description, by);","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Dheekshitha2"},"content":"    public static class EventData {","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Dheekshitha2"},"content":"        String description;","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Dheekshitha2"},"content":"        String start;","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Dheekshitha2"},"content":"        String end;","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Dheekshitha2"},"content":"        EventData(String description, String start, String end) {","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Dheekshitha2"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Dheekshitha2"},"content":"            this.start \u003d start;","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Dheekshitha2"},"content":"            this.end \u003d end;","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":90,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":91,"author":{"gitId":"Dheekshitha2"},"content":"     * Parses an event command input to create an EventData object.","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"Dheekshitha2"},"content":"     * @param input The command entered by the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"Dheekshitha2"},"content":"     * @return An EventData object containing the description, start, and end attributes.","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If the event command is formatted incorrectly.","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"Dheekshitha2"},"content":"    public EventData parseEvent(String input) throws AliceException {","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Dheekshitha2"},"content":"        if (!input.contains(\"/to\") || !input.contains(\"/from\")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"ayo event commands must include \u0027/from\u0027 and \u0027/to\u0027 so that i\u0027ll know when your event starts and ends yea?\");","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"Dheekshitha2"},"content":"        String[] parts \u003d input.split(\" /from \", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Dheekshitha2"},"content":"        if (!parts[1].contains(\" /to \")) {","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"ayo the event time must be specified with \u0027/from\u0027 followed by \u0027/to\u0027 yea?\");","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Dheekshitha2"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Dheekshitha2"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"ayo do specify both the start and end times for your event yea?\");","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"Dheekshitha2"},"content":"        String description \u003d parts[0].substring(parts[0].indexOf(\" \") + 1);","lastModifiedDate":"2024-03-06"},{"lineNumber":112,"author":{"gitId":"Dheekshitha2"},"content":"        String start \u003d timeParts[0];","lastModifiedDate":"2024-03-06"},{"lineNumber":113,"author":{"gitId":"Dheekshitha2"},"content":"        String end \u003d timeParts[1];","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Dheekshitha2"},"content":"        return new EventData(description, start, end);","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"Dheekshitha2"},"content":"     * Parses a line of text into a Task object.","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"Dheekshitha2"},"content":"     * @param line The line of text representing a task.","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"Dheekshitha2"},"content":"     * @return A Task object.","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If the task type is unknown or the line is formatted incorrectly.","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":124,"author":{"gitId":"Dheekshitha2"},"content":"    public static Task parseTask(String line) throws AliceException {","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Dheekshitha2"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Dheekshitha2"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"Dheekshitha2"},"content":"        Task task;","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"Dheekshitha2"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-03-06"},{"lineNumber":130,"author":{"gitId":"Dheekshitha2"},"content":"            case \"T\":","lastModifiedDate":"2024-03-06"},{"lineNumber":131,"author":{"gitId":"Dheekshitha2"},"content":"                task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-03-06"},{"lineNumber":132,"author":{"gitId":"Dheekshitha2"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"Dheekshitha2"},"content":"            case \"D\":","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"Dheekshitha2"},"content":"                String byString \u003d parts[3];","lastModifiedDate":"2024-03-07"},{"lineNumber":135,"author":{"gitId":"Dheekshitha2"},"content":"                task \u003d new Deadline(parts[2], byString);","lastModifiedDate":"2024-03-07"},{"lineNumber":136,"author":{"gitId":"Dheekshitha2"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":137,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":138,"author":{"gitId":"Dheekshitha2"},"content":"            case \"E\":","lastModifiedDate":"2024-03-06"},{"lineNumber":139,"author":{"gitId":"Dheekshitha2"},"content":"                task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-03-06"},{"lineNumber":140,"author":{"gitId":"Dheekshitha2"},"content":"                break;","lastModifiedDate":"2024-03-06"},{"lineNumber":141,"author":{"gitId":"Dheekshitha2"},"content":"            default:","lastModifiedDate":"2024-03-06"},{"lineNumber":142,"author":{"gitId":"Dheekshitha2"},"content":"                throw new AliceException(\"Unknown task type in the save file\");","lastModifiedDate":"2024-03-06"},{"lineNumber":143,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":144,"author":{"gitId":"Dheekshitha2"},"content":"        if (isDone) {","lastModifiedDate":"2024-03-06"},{"lineNumber":145,"author":{"gitId":"Dheekshitha2"},"content":"            task.markAsDone();","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":147,"author":{"gitId":"Dheekshitha2"},"content":"        return task;","lastModifiedDate":"2024-03-06"},{"lineNumber":148,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":149,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"Dheekshitha2"},"content":"     * Attempts to parse the given date-time string into a LocalDateTime object.","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"Dheekshitha2"},"content":"     * Tries multiple formatters based on different expected date formats.","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"Dheekshitha2"},"content":"     * @param dateTimeStr The date-time string to parse.","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"Dheekshitha2"},"content":"     * @return The LocalDateTime object if parsing is successful.","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If all formatters fail to parse the given string.","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"Dheekshitha2"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr) throws AliceException {","lastModifiedDate":"2024-03-07"},{"lineNumber":160,"author":{"gitId":"Dheekshitha2"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"Dheekshitha2"},"content":"            try {","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"Dheekshitha2"},"content":"                return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-03-07"},{"lineNumber":163,"author":{"gitId":"Dheekshitha2"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-03-07"},{"lineNumber":164,"author":{"gitId":"Dheekshitha2"},"content":"                // Try the next format","lastModifiedDate":"2024-03-07"},{"lineNumber":165,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"Dheekshitha2"},"content":"        throw new AliceException(\"Invalid date-time format for deadline task.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Dheekshitha2":169}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"import java.io.*;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"public class Storage {","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"    private String filePath;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"        try(PrintWriter writer \u003d new PrintWriter(file)){","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"            for(Task task:tasks){","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"                writer.println(task.toSaveFormat());","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"        if(!file.exists()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"            return tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))){","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"            String line;","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"            while ((line \u003d reader.readLine()) !\u003d null){","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"                Task task \u003d Parser.parseTask(line);","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"                tasks.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"        } catch (AliceException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"        return tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Dheekshitha2":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":" * Abstract class representing a generic task.","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"    protected String description;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"     * Constructor for creating a new Task with a description.","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"    /** Returns the description of the task. */","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"        return description;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"    /** Returns the status icon indicating whether the task is done. */","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"    /** Marks the task as done. */","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"    /** Marks the task as not done. */","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"    public void markAsUndone(){","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"    /** Returns the task in a format suitable for saving to a file. */","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"    /** Returns a string representation of the task. */","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"        return getStatusIcon() + \" \" + description; // Return status icon and description","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Dheekshitha2":47}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":" * Manages a list of tasks with operations to add, delete, and search tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"public class TaskList {","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"     * Constructor for creating a TaskList with an existing list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"    /** Constructor for creating an empty TaskList. */","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"    /** Adds a task to the list. */","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"     * @throws AliceException If the index is out of bounds.","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"    public Task deleteTask(int index) throws AliceException {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()){","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"            throw new AliceException(\"Task index out of bounds\");","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"    /** Returns the list of all tasks. */","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"        return tasks;","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"     * Gets a task by its index.","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"Dheekshitha2"},"content":"     * Finds and returns a map of tasks matching the given keyword.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"     *","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"Dheekshitha2"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"Dheekshitha2"},"content":"     * @return A map of matching tasks with their list indexes.","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"Dheekshitha2"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"Dheekshitha2"},"content":"    public Map\u003cInteger, Task\u003e findTasks(String keyword) {","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"Dheekshitha2"},"content":"        Map\u003cInteger, Task\u003e matchingTasks \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"Dheekshitha2"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"Dheekshitha2"},"content":"            if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"Dheekshitha2"},"content":"                matchingTasks.put(i + 1, tasks.get(i));","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":72,"author":{"gitId":"Dheekshitha2"},"content":"        return matchingTasks;","lastModifiedDate":"2024-03-07"},{"lineNumber":73,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":74,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"Dheekshitha2"},"content":"    /** Returns the number of tasks in the list. */","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"Dheekshitha2"},"content":"    public int size() {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Dheekshitha2"},"content":"        return tasks.size();","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Dheekshitha2":79}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Dheekshitha2":16}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":" * The Ui class is responsible for managing all user interactions.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"public class Ui {","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Dheekshitha2"},"content":"    private static final String GREETING_MESSAGE \u003d \"yoo i\u0027m alice! ur virtual bestie here to keep track of ur vibes\";","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Dheekshitha2"},"content":"    private static final String FAREWELL_MESSAGE \u003d \"bye bestie! catch ya later, and remember to stay hydrated \u003c3\";","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Dheekshitha2"},"content":"    private static final String INVALID_INPUT_MESSAGE \u003d \"ayo my bad i can\u0027t seem to understand ya, try saying smt valid, or type \u0027help\u0027\";","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Dheekshitha2"},"content":"    private static final String HELP_MESSAGE \u003d \"Feelin\u0027 lost? Just type \u0027help\u0027 and I\u0027ll be right here with the deets again!\";","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"Dheekshitha2"},"content":"    /** Prints greeting message to the user. */","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"Dheekshitha2"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"what\u0027s poppin? u can tell me stuff to remember, or type \u0027bye\u0027 to dip\");","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Dheekshitha2"},"content":"    /** Prints farewell message to the user. */","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"Dheekshitha2"},"content":"    public void showFarewell() {","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(FAREWELL_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Dheekshitha2"},"content":"    /** Shows the help message with available commands. */","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"Dheekshitha2"},"content":"    public void showHelp(){","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"okay bestie, here\u0027s what u can throw at me to help ya \u003c3 :\");","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027list\u0027: Peek at all that you gotta get done\");","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027todo [ description ]\u0027: Got something new to remember? I gotchu girlie!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027deadline [ description ] /by [ date, time (e.g. YYYY-MM-dd HHmm) ]\u0027: Racing against the clock? I\u0027ll keep ya accountable\");","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027event [ description ] /from [ start time ] /to [ end time ]\u0027: Got new plans? Lemme know so u don\u0027t miss out any of them\");","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027mark [ task number ]\u0027: Finshed a task? YAY good job bestie ill help mark it off for ya\");","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027unmark [ task number ]\u0027: Took a lil step back? No worries, we can get back to it later u got this!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027delete [ task number ]\u0027: Changed your mind about a task? Not to worry, ill make the task go poof!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027find [ keyword ]\u0027: Want to find a particular task but forgot the full name? No worries, lemme know the keyword and ill find it for u!\");","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  - \u0027bye\u0027: Need to head off somewhere? I\u0027ll catch ya later! Remember that ur amazing bestie :)\");","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(HELP_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Dheekshitha2"},"content":"    /** Displays an invalid input message to the user. */","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"Dheekshitha2"},"content":"    public void showInvalidInputMessage() {","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Dheekshitha2"},"content":"    /** Shows the list of tasks to the user. */","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"Dheekshitha2"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Dheekshitha2"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Dheekshitha2"},"content":"            System.out.println(\"this list is emptier than my motivation on a monday morning lol\");","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Dheekshitha2"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Dheekshitha2"},"content":"            System.out.println(\"aight here\u0027s what\u0027s up:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Dheekshitha2"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Dheekshitha2"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Dheekshitha2"},"content":"    /** Shows an error message to the user. */","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"Dheekshitha2"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Dheekshitha2"},"content":"    /** Informs the user that a task has been deleted. */","lastModifiedDate":"2024-03-07"},{"lineNumber":76,"author":{"gitId":"Dheekshitha2"},"content":"    public void showTaskDeleted(Task task, int listSize) {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"gotcha, ive made task \" + task + \" go poof!\");","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"now u got \" + listSize + \" tasks in ur list.\");","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Dheekshitha2"},"content":"    /** Informs the user that a task has been added. */","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"Dheekshitha2"},"content":"    public void showTaskAdded(Task task, int listSize) {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"aight i gotchu bestie, added this task:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list\");","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Dheekshitha2"},"content":"    /** Shows the task as marked done. */","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"Dheekshitha2"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"yas queen, marked it off! we are crushing it frfr:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":99,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"Dheekshitha2"},"content":"    /** Shows the task as unmarked. */","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"Dheekshitha2"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"aight, took a lil step back, unmarked this one:\");","lastModifiedDate":"2024-03-06"},{"lineNumber":104,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":106,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":108,"author":{"gitId":"Dheekshitha2"},"content":"    /** Displays the tasks that match the search keyword. */","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"Dheekshitha2"},"content":"    public void showMatchingTasks(Map\u003cInteger, Task\u003e matchingTasks) {","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"Dheekshitha2"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"Dheekshitha2"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"Dheekshitha2"},"content":"        } else {","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"Dheekshitha2"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"Dheekshitha2"},"content":"            for (Map.Entry\u003cInteger, Task\u003e entry : matchingTasks.entrySet()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"Dheekshitha2"},"content":"                System.out.println(entry.getKey() + \". \" + entry.getValue().toString());","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"Dheekshitha2"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"Dheekshitha2"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-07"},{"lineNumber":120,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":121,"author":{"gitId":"Dheekshitha2"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"Dheekshitha2"},"content":"    /** Informs the user of a problem loading tasks from file. */","lastModifiedDate":"2024-03-07"},{"lineNumber":123,"author":{"gitId":"Dheekshitha2"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":125,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(\"ayo i wasnt able to load the tasks, do ensure that the file exists and is accessible\");","lastModifiedDate":"2024-03-06"},{"lineNumber":126,"author":{"gitId":"Dheekshitha2"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-06"},{"lineNumber":127,"author":{"gitId":"Dheekshitha2"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":128,"author":{"gitId":"Dheekshitha2"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Dheekshitha2":128}},{"path":"src/main/java/data/alice.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Dheekshitha2"},"content":"E | 0 | sleep | 4pm | 6pm","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"Dheekshitha2"},"content":"T | 1 | go school","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Dheekshitha2"},"content":"E | 0 | partyyyy | 10:00pm | 1:00am","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Dheekshitha2"},"content":"D | 0 | return book | 2-12-2019 1800","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Dheekshitha2"},"content":"D | 0 | sleep | 1-02-2019 1804","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Dheekshitha2"},"content":"D | 0 | study for midterm | 4/3/2024","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Dheekshitha2"},"content":"D | 0 | study for midterm | 4/3/2024 1800","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"Dheekshitha2"},"content":"D | 0 | study for midterm | 2024-3-4 1800","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Dheekshitha2"},"content":"D | 0 | study for midterm | 4-03-2024 1800","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Dheekshitha2":9}}]
